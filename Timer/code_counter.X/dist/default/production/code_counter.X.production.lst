

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Mar 25 14:19:06 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    10                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.05
    21                           ; Generated 20/12/2018 GMT
    22                           ; 
    23                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F877A Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009C                     	;# 
   105  009D                     	;# 
   106  009E                     	;# 
   107  009F                     	;# 
   108  010C                     	;# 
   109  010D                     	;# 
   110  010E                     	;# 
   111  010F                     	;# 
   112  018C                     	;# 
   113  018D                     	;# 
   114  0000                     	;# 
   115  0001                     	;# 
   116  0002                     	;# 
   117  0003                     	;# 
   118  0004                     	;# 
   119  0005                     	;# 
   120  0006                     	;# 
   121  0007                     	;# 
   122  0008                     	;# 
   123  0009                     	;# 
   124  000A                     	;# 
   125  000B                     	;# 
   126  000C                     	;# 
   127  000D                     	;# 
   128  000E                     	;# 
   129  000E                     	;# 
   130  000F                     	;# 
   131  0010                     	;# 
   132  0011                     	;# 
   133  0012                     	;# 
   134  0013                     	;# 
   135  0014                     	;# 
   136  0015                     	;# 
   137  0015                     	;# 
   138  0016                     	;# 
   139  0017                     	;# 
   140  0018                     	;# 
   141  0019                     	;# 
   142  001A                     	;# 
   143  001B                     	;# 
   144  001B                     	;# 
   145  001C                     	;# 
   146  001D                     	;# 
   147  001E                     	;# 
   148  001F                     	;# 
   149  0081                     	;# 
   150  0085                     	;# 
   151  0086                     	;# 
   152  0087                     	;# 
   153  0088                     	;# 
   154  0089                     	;# 
   155  008C                     	;# 
   156  008D                     	;# 
   157  008E                     	;# 
   158  0091                     	;# 
   159  0092                     	;# 
   160  0093                     	;# 
   161  0094                     	;# 
   162  0098                     	;# 
   163  0099                     	;# 
   164  009C                     	;# 
   165  009D                     	;# 
   166  009E                     	;# 
   167  009F                     	;# 
   168  010C                     	;# 
   169  010D                     	;# 
   170  010E                     	;# 
   171  010F                     	;# 
   172  018C                     	;# 
   173  018D                     	;# 
   174  0000                     	;# 
   175  0001                     	;# 
   176  0002                     	;# 
   177  0003                     	;# 
   178  0004                     	;# 
   179  0005                     	;# 
   180  0006                     	;# 
   181  0007                     	;# 
   182  0008                     	;# 
   183  0009                     	;# 
   184  000A                     	;# 
   185  000B                     	;# 
   186  000C                     	;# 
   187  000D                     	;# 
   188  000E                     	;# 
   189  000E                     	;# 
   190  000F                     	;# 
   191  0010                     	;# 
   192  0011                     	;# 
   193  0012                     	;# 
   194  0013                     	;# 
   195  0014                     	;# 
   196  0015                     	;# 
   197  0015                     	;# 
   198  0016                     	;# 
   199  0017                     	;# 
   200  0018                     	;# 
   201  0019                     	;# 
   202  001A                     	;# 
   203  001B                     	;# 
   204  001B                     	;# 
   205  001C                     	;# 
   206  001D                     	;# 
   207  001E                     	;# 
   208  001F                     	;# 
   209  0081                     	;# 
   210  0085                     	;# 
   211  0086                     	;# 
   212  0087                     	;# 
   213  0088                     	;# 
   214  0089                     	;# 
   215  008C                     	;# 
   216  008D                     	;# 
   217  008E                     	;# 
   218  0091                     	;# 
   219  0092                     	;# 
   220  0093                     	;# 
   221  0094                     	;# 
   222  0098                     	;# 
   223  0099                     	;# 
   224  009C                     	;# 
   225  009D                     	;# 
   226  009E                     	;# 
   227  009F                     	;# 
   228  010C                     	;# 
   229  010D                     	;# 
   230  010E                     	;# 
   231  010F                     	;# 
   232  018C                     	;# 
   233  018D                     	;# 
   234  000E                     _TMR1L	set	14
   235  000F                     _TMR1H	set	15
   236  0041                     _RD1	set	65
   237  0040                     _RD0	set	64
   238  0045                     _RD5	set	69
   239  0044                     _RD4	set	68
   240  0043                     _RD3	set	67
   241  0042                     _RD2	set	66
   242  0080                     _TMR1ON	set	128
   243  0081                     _TMR1CS	set	129
   244  0082                     _T1SYNC	set	130
   245  0083                     _T1OSCEN	set	131
   246  0084                     _T1CKPS0	set	132
   247  0085                     _T1CKPS1	set	133
   248  0088                     _TRISD	set	136
   249  0438                     _TRISC0	set	1080
   250                           
   251                           	psect	strings
   252  0003                     __pstrings:	
   253  0003                     stringtab:	
   254  0003                     __stringtab:	
   255  0003                     stringcode:	
   256                           ;	String table - string pointers are 1 byte each
   257                           
   258  0003                     stringdir:	
   259  0003  3000               	movlw	high stringdir
   260  0004  008A               	movwf	10
   261  0005  0804               	movf	4,w
   262  0006  0A84               	incf	4,f
   263  0007  0782               	addwf	2,f
   264  0008                     __stringbase:	
   265  0008  3400               	retlw	0
   266  0009                     __end_of__stringtab:	
   267  0009                     STR_1:	
   268  0009  3447               	retlw	71	;'G'
   269  000A  3469               	retlw	105	;'i'
   270  000B  3461               	retlw	97	;'a'
   271  000C  3420               	retlw	32	;' '
   272  000D  3474               	retlw	116	;'t'
   273  000E  3472               	retlw	114	;'r'
   274  000F  3469               	retlw	105	;'i'
   275  0010  343A               	retlw	58	;':'
   276  0011  3420               	retlw	32	;' '
   277  0012  3400               	retlw	0
   278                           
   279                           ; #config settings
   280  0000                     
   281                           	psect	cinit
   282  07FC                     start_initialization:	
   283  07FC                     __initialization:	
   284  07FC                     end_of_initialization:	
   285                           ;End of C runtime variable initialization code
   286                           
   287  07FC                     __end_of__initialization:	
   288  07FC  0183               	clrf	3
   289  07FD  120A  118A  2F42   	ljmp	_main	;jump to C main() function
   290                           
   291                           	psect	cstackCOMMON
   292  0070                     __pcstackCOMMON:	
   293  0070                     ?_Counter_Init:	
   294  0070                     ??_Counter_Init:	
   295                           ; 1 bytes @ 0x0
   296                           
   297  0070                     ?_Lcd_Init:	
   298                           ; 1 bytes @ 0x0
   299                           
   300  0070                     ?_Lcd_Write_String:	
   301                           ; 1 bytes @ 0x0
   302                           
   303  0070                     ?_Lcd_Write_Char:	
   304                           ; 1 bytes @ 0x0
   305                           
   306  0070                     ?_main:	
   307                           ; 1 bytes @ 0x0
   308                           
   309  0070                     ?_Lcd_Port:	
   310                           ; 1 bytes @ 0x0
   311                           
   312  0070                     ??_Lcd_Port:	
   313                           ; 1 bytes @ 0x0
   314                           
   315  0070                     ?_Lcd_Cmd:	
   316                           ; 1 bytes @ 0x0
   317                           
   318  0070                     ?___lwmod:	
   319                           ; 1 bytes @ 0x0
   320                           
   321  0070                     Lcd_Port@a:	
   322                           ; 2 bytes @ 0x0
   323                           
   324  0070                     ___lwmod@divisor:	
   325                           ; 1 bytes @ 0x0
   326                           
   327                           
   328                           ; 2 bytes @ 0x0
   329  0070                     	ds	1
   330  0071                     ??_Lcd_Write_Char:	
   331  0071                     ??_Lcd_Cmd:	
   332                           ; 1 bytes @ 0x1
   333                           
   334                           
   335                           ; 1 bytes @ 0x1
   336  0071                     	ds	1
   337  0072                     Lcd_Write_Char@temp:	
   338  0072                     ___lwmod@dividend:	
   339                           ; 1 bytes @ 0x2
   340                           
   341                           
   342                           ; 2 bytes @ 0x2
   343  0072                     	ds	1
   344  0073                     Lcd_Cmd@a:	
   345  0073                     Lcd_Write_Char@y:	
   346                           ; 1 bytes @ 0x3
   347                           
   348                           
   349                           ; 1 bytes @ 0x3
   350  0073                     	ds	1
   351  0074                     ??_Lcd_Init:	
   352  0074                     ?_Lcd_Set_Cursor:	
   353                           ; 1 bytes @ 0x4
   354                           
   355  0074                     ??___lwmod:	
   356                           ; 1 bytes @ 0x4
   357                           
   358  0074                     Lcd_Set_Cursor@b:	
   359                           ; 1 bytes @ 0x4
   360                           
   361  0074                     Lcd_Write_Char@a:	
   362                           ; 1 bytes @ 0x4
   363                           
   364                           
   365                           ; 1 bytes @ 0x4
   366  0074                     	ds	1
   367  0075                     ??_Lcd_Write_String:	
   368  0075                     ??_Lcd_Set_Cursor:	
   369                           ; 1 bytes @ 0x5
   370                           
   371  0075                     ___lwmod@counter:	
   372                           ; 1 bytes @ 0x5
   373                           
   374  0075                     Lcd_Write_String@i:	
   375                           ; 1 bytes @ 0x5
   376                           
   377                           
   378                           ; 2 bytes @ 0x5
   379  0075                     	ds	1
   380  0076                     ?___lwdiv:	
   381  0076                     ___lwdiv@divisor:	
   382                           ; 2 bytes @ 0x6
   383                           
   384                           
   385                           ; 2 bytes @ 0x6
   386  0076                     	ds	1
   387  0077                     Lcd_Set_Cursor@a:	
   388  0077                     Lcd_Write_String@a:	
   389                           ; 1 bytes @ 0x7
   390                           
   391                           
   392                           ; 1 bytes @ 0x7
   393  0077                     	ds	1
   394  0078                     Lcd_Set_Cursor@z:	
   395  0078                     ___lwdiv@dividend:	
   396                           ; 1 bytes @ 0x8
   397                           
   398                           
   399                           ; 2 bytes @ 0x8
   400  0078                     	ds	1
   401  0079                     Lcd_Set_Cursor@y:	
   402                           
   403                           ; 1 bytes @ 0x9
   404  0079                     	ds	1
   405  007A                     ??___lwdiv:	
   406  007A                     Lcd_Set_Cursor@temp:	
   407                           ; 1 bytes @ 0xA
   408                           
   409                           
   410                           ; 1 bytes @ 0xA
   411  007A                     	ds	1
   412  007B                     ___lwdiv@quotient:	
   413                           
   414                           ; 2 bytes @ 0xB
   415  007B                     	ds	2
   416  007D                     ___lwdiv@counter:	
   417                           
   418                           ; 1 bytes @ 0xD
   419  007D                     	ds	1
   420                           
   421                           	psect	cstackBANK0
   422  0020                     __pcstackBANK0:	
   423  0020                     ??_main:	
   424                           
   425                           ; 1 bytes @ 0x0
   426  0020                     	ds	1
   427  0021                     main@x:	
   428                           
   429                           ; 2 bytes @ 0x1
   430  0021                     	ds	2
   431                           
   432                           	psect	maintext
   433  0742                     __pmaintext:	
   434 ;;
   435 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   436 ;;
   437 ;; *************** function _main *****************
   438 ;; Defined at:
   439 ;;		line 13 in file "counter.c"
   440 ;; Parameters:    Size  Location     Type
   441 ;;		None
   442 ;; Auto vars:     Size  Location     Type
   443 ;;  x               2    1[BANK0 ] unsigned int 
   444 ;; Return value:  Size  Location     Type
   445 ;;                  1    wreg      void 
   446 ;; Registers used:
   447 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   448 ;; Tracked objects:
   449 ;;		On entry : B00/0
   450 ;;		On exit  : 0/0
   451 ;;		Unchanged: 0/0
   452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   453 ;;      Params:         0       0       0       0       0
   454 ;;      Locals:         0       2       0       0       0
   455 ;;      Temps:          0       1       0       0       0
   456 ;;      Totals:         0       3       0       0       0
   457 ;;Total ram usage:        3 bytes
   458 ;; Hardware stack levels required when called:    3
   459 ;; This function calls:
   460 ;;		_Counter_Init
   461 ;;		_Lcd_Init
   462 ;;		_Lcd_Set_Cursor
   463 ;;		_Lcd_Write_Char
   464 ;;		_Lcd_Write_String
   465 ;;		___lwdiv
   466 ;;		___lwmod
   467 ;; This function is called by:
   468 ;;		Startup code after reset
   469 ;; This function uses a non-reentrant model
   470 ;;
   471                           
   472                           
   473                           ;psect for function _main
   474  0742                     _main:	
   475                           
   476                           ;counter.c: 18:     TRISC0 = 1;
   477                           
   478                           ;incstack = 0
   479                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   480  0742  1683               	bsf	3,5	;RP0=1, select bank1
   481  0743  1303               	bcf	3,6	;RP1=0, select bank1
   482  0744  1407               	bsf	7,0	;volatile
   483                           
   484                           ;counter.c: 19:     TRISD = 0x00;
   485  0745  0188               	clrf	8	;volatile
   486                           
   487                           ;counter.c: 21:     Counter_Init();
   488  0746  120A  118A  2594  120A  118A  	fcall	_Counter_Init
   489                           
   490                           ;counter.c: 22:     Lcd_Init();
   491  074B  120A  118A  26E6  120A  118A  	fcall	_Lcd_Init
   492                           
   493                           ;counter.c: 24:     Lcd_Write_String("Gia tri: ");
   494  0750  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   495  0751  120A  118A  25D3  120A  118A  	fcall	_Lcd_Write_String
   496  0756                     l1008:	
   497                           
   498                           ;counter.c: 26:     {;counter.c: 27:         x = (TMR1H<<8)+TMR1L;
   499  0756  1283               	bcf	3,5	;RP0=0, select bank0
   500  0757  1303               	bcf	3,6	;RP1=0, select bank0
   501  0758  080F               	movf	15,w	;volatile
   502  0759  00A2               	movwf	main@x+1
   503  075A  080E               	movf	14,w	;volatile
   504  075B  00A1               	movwf	main@x
   505                           
   506                           ;counter.c: 28:         Lcd_Set_Cursor(1,10);
   507  075C  300A               	movlw	10
   508  075D  00A0               	movwf	??_main
   509  075E  0820               	movf	??_main,w
   510  075F  00F4               	movwf	Lcd_Set_Cursor@b
   511  0760  3001               	movlw	1
   512  0761  120A  118A  269C  120A  118A  	fcall	_Lcd_Set_Cursor
   513                           
   514                           ;counter.c: 29:         Lcd_Write_Char(x/10000+48);
   515  0766  3010               	movlw	16
   516  0767  00F6               	movwf	___lwdiv@divisor
   517  0768  3027               	movlw	39
   518  0769  00F7               	movwf	___lwdiv@divisor+1
   519  076A  1283               	bcf	3,5	;RP0=0, select bank0
   520  076B  1303               	bcf	3,6	;RP1=0, select bank0
   521  076C  0822               	movf	main@x+1,w
   522  076D  00F9               	movwf	___lwdiv@dividend+1
   523  076E  0821               	movf	main@x,w
   524  076F  00F8               	movwf	___lwdiv@dividend
   525  0770  120A  118A  2660  120A  118A  	fcall	___lwdiv
   526  0775  0876               	movf	?___lwdiv,w
   527  0776  3E30               	addlw	48
   528  0777  120A  118A  2627  120A  118A  	fcall	_Lcd_Write_Char
   529                           
   530                           ;counter.c: 30:         Lcd_Write_Char((x%10000)/1000+48);
   531  077C  30E8               	movlw	232
   532  077D  00F6               	movwf	___lwdiv@divisor
   533  077E  3003               	movlw	3
   534  077F  00F7               	movwf	___lwdiv@divisor+1
   535  0780  1283               	bcf	3,5	;RP0=0, select bank0
   536  0781  1303               	bcf	3,6	;RP1=0, select bank0
   537  0782  0822               	movf	main@x+1,w
   538  0783  00F3               	movwf	___lwmod@dividend+1
   539  0784  0821               	movf	main@x,w
   540  0785  00F2               	movwf	___lwmod@dividend
   541  0786  3010               	movlw	16
   542  0787  00F0               	movwf	___lwmod@divisor
   543  0788  3027               	movlw	39
   544  0789  00F1               	movwf	___lwmod@divisor+1
   545  078A  120A  118A  25F5  120A  118A  	fcall	___lwmod
   546  078F  0871               	movf	?___lwmod+1,w
   547  0790  00F9               	movwf	___lwdiv@dividend+1
   548  0791  0870               	movf	?___lwmod,w
   549  0792  00F8               	movwf	___lwdiv@dividend
   550  0793  120A  118A  2660  120A  118A  	fcall	___lwdiv
   551  0798  0876               	movf	?___lwdiv,w
   552  0799  3E30               	addlw	48
   553  079A  120A  118A  2627  120A  118A  	fcall	_Lcd_Write_Char
   554                           
   555                           ;counter.c: 31:         Lcd_Write_Char((x%1000)/100+48);
   556  079F  3064               	movlw	100
   557  07A0  00F6               	movwf	___lwdiv@divisor
   558  07A1  3000               	movlw	0
   559  07A2  00F7               	movwf	___lwdiv@divisor+1
   560  07A3  1283               	bcf	3,5	;RP0=0, select bank0
   561  07A4  1303               	bcf	3,6	;RP1=0, select bank0
   562  07A5  0822               	movf	main@x+1,w
   563  07A6  00F3               	movwf	___lwmod@dividend+1
   564  07A7  0821               	movf	main@x,w
   565  07A8  00F2               	movwf	___lwmod@dividend
   566  07A9  30E8               	movlw	232
   567  07AA  00F0               	movwf	___lwmod@divisor
   568  07AB  3003               	movlw	3
   569  07AC  00F1               	movwf	___lwmod@divisor+1
   570  07AD  120A  118A  25F5  120A  118A  	fcall	___lwmod
   571  07B2  0871               	movf	?___lwmod+1,w
   572  07B3  00F9               	movwf	___lwdiv@dividend+1
   573  07B4  0870               	movf	?___lwmod,w
   574  07B5  00F8               	movwf	___lwdiv@dividend
   575  07B6  120A  118A  2660  120A  118A  	fcall	___lwdiv
   576  07BB  0876               	movf	?___lwdiv,w
   577  07BC  3E30               	addlw	48
   578  07BD  120A  118A  2627  120A  118A  	fcall	_Lcd_Write_Char
   579                           
   580                           ;counter.c: 32:         Lcd_Write_Char((x%100)/10+48);
   581  07C2  300A               	movlw	10
   582  07C3  00F6               	movwf	___lwdiv@divisor
   583  07C4  3000               	movlw	0
   584  07C5  00F7               	movwf	___lwdiv@divisor+1
   585  07C6  1283               	bcf	3,5	;RP0=0, select bank0
   586  07C7  1303               	bcf	3,6	;RP1=0, select bank0
   587  07C8  0822               	movf	main@x+1,w
   588  07C9  00F3               	movwf	___lwmod@dividend+1
   589  07CA  0821               	movf	main@x,w
   590  07CB  00F2               	movwf	___lwmod@dividend
   591  07CC  3064               	movlw	100
   592  07CD  00F0               	movwf	___lwmod@divisor
   593  07CE  3000               	movlw	0
   594  07CF  00F1               	movwf	___lwmod@divisor+1
   595  07D0  120A  118A  25F5  120A  118A  	fcall	___lwmod
   596  07D5  0871               	movf	?___lwmod+1,w
   597  07D6  00F9               	movwf	___lwdiv@dividend+1
   598  07D7  0870               	movf	?___lwmod,w
   599  07D8  00F8               	movwf	___lwdiv@dividend
   600  07D9  120A  118A  2660  120A  118A  	fcall	___lwdiv
   601  07DE  0876               	movf	?___lwdiv,w
   602  07DF  3E30               	addlw	48
   603  07E0  120A  118A  2627  120A  118A  	fcall	_Lcd_Write_Char
   604                           
   605                           ;counter.c: 33:         Lcd_Write_Char(x%10+48);
   606  07E5  300A               	movlw	10
   607  07E6  00F0               	movwf	___lwmod@divisor
   608  07E7  3000               	movlw	0
   609  07E8  00F1               	movwf	___lwmod@divisor+1
   610  07E9  1283               	bcf	3,5	;RP0=0, select bank0
   611  07EA  1303               	bcf	3,6	;RP1=0, select bank0
   612  07EB  0822               	movf	main@x+1,w
   613  07EC  00F3               	movwf	___lwmod@dividend+1
   614  07ED  0821               	movf	main@x,w
   615  07EE  00F2               	movwf	___lwmod@dividend
   616  07EF  120A  118A  25F5  120A  118A  	fcall	___lwmod
   617  07F4  0870               	movf	?___lwmod,w
   618  07F5  3E30               	addlw	48
   619  07F6  120A  118A  2627  120A  118A  	fcall	_Lcd_Write_Char
   620  07FB  2F56               	goto	l1008
   621  07FC                     __end_of_main:	
   622                           
   623                           	psect	text1
   624  05F5                     __ptext1:	
   625 ;; *************** function ___lwmod *****************
   626 ;; Defined at:
   627 ;;		line 5 in file "D:\Mplab X\xc8\pic\sources\c90\common\lwmod.c"
   628 ;; Parameters:    Size  Location     Type
   629 ;;  divisor         2    0[COMMON] unsigned int 
   630 ;;  dividend        2    2[COMMON] unsigned int 
   631 ;; Auto vars:     Size  Location     Type
   632 ;;  counter         1    5[COMMON] unsigned char 
   633 ;; Return value:  Size  Location     Type
   634 ;;                  2    0[COMMON] unsigned int 
   635 ;; Registers used:
   636 ;;		wreg, status,2, status,0
   637 ;; Tracked objects:
   638 ;;		On entry : 0/0
   639 ;;		On exit  : 0/0
   640 ;;		Unchanged: 0/0
   641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   642 ;;      Params:         4       0       0       0       0
   643 ;;      Locals:         1       0       0       0       0
   644 ;;      Temps:          1       0       0       0       0
   645 ;;      Totals:         6       0       0       0       0
   646 ;;Total ram usage:        6 bytes
   647 ;; Hardware stack levels used:    1
   648 ;; This function calls:
   649 ;;		Nothing
   650 ;; This function is called by:
   651 ;;		_main
   652 ;; This function uses a non-reentrant model
   653 ;;
   654                           
   655                           
   656                           ;psect for function ___lwmod
   657  05F5                     ___lwmod:	
   658                           
   659                           ;incstack = 0
   660                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
   661  05F5  0870               	movf	___lwmod@divisor,w
   662  05F6  0471               	iorwf	___lwmod@divisor+1,w
   663  05F7  1903               	btfsc	3,2
   664  05F8  2E22               	goto	l994
   665  05F9  01F5               	clrf	___lwmod@counter
   666  05FA  0AF5               	incf	___lwmod@counter,f
   667  05FB                     l984:	
   668  05FB  1BF1               	btfsc	___lwmod@divisor+1,7
   669  05FC  2E09               	goto	l986
   670  05FD  3001               	movlw	1
   671  05FE                     u425:	
   672  05FE  1003               	clrc
   673  05FF  0DF0               	rlf	___lwmod@divisor,f
   674  0600  0DF1               	rlf	___lwmod@divisor+1,f
   675  0601  3EFF               	addlw	-1
   676  0602  1D03               	skipz
   677  0603  2DFE               	goto	u425
   678  0604  3001               	movlw	1
   679  0605  00F4               	movwf	??___lwmod
   680  0606  0874               	movf	??___lwmod,w
   681  0607  07F5               	addwf	___lwmod@counter,f
   682  0608  2DFB               	goto	l984
   683  0609                     l986:	
   684  0609  0871               	movf	___lwmod@divisor+1,w
   685  060A  0273               	subwf	___lwmod@dividend+1,w
   686  060B  1D03               	skipz
   687  060C  2E0F               	goto	u445
   688  060D  0870               	movf	___lwmod@divisor,w
   689  060E  0272               	subwf	___lwmod@dividend,w
   690  060F                     u445:	
   691  060F  1C03               	skipc
   692  0610  2E17               	goto	l990
   693  0611  0870               	movf	___lwmod@divisor,w
   694  0612  02F2               	subwf	___lwmod@dividend,f
   695  0613  0871               	movf	___lwmod@divisor+1,w
   696  0614  1C03               	skipc
   697  0615  03F3               	decf	___lwmod@dividend+1,f
   698  0616  02F3               	subwf	___lwmod@dividend+1,f
   699  0617                     l990:	
   700  0617  3001               	movlw	1
   701  0618                     u455:	
   702  0618  1003               	clrc
   703  0619  0CF1               	rrf	___lwmod@divisor+1,f
   704  061A  0CF0               	rrf	___lwmod@divisor,f
   705  061B  3EFF               	addlw	-1
   706  061C  1D03               	skipz
   707  061D  2E18               	goto	u455
   708  061E  3001               	movlw	1
   709  061F  02F5               	subwf	___lwmod@counter,f
   710  0620  1D03               	btfss	3,2
   711  0621  2E09               	goto	l986
   712  0622                     l994:	
   713  0622  0873               	movf	___lwmod@dividend+1,w
   714  0623  00F1               	movwf	?___lwmod+1
   715  0624  0872               	movf	___lwmod@dividend,w
   716  0625  00F0               	movwf	?___lwmod
   717  0626  0008               	return
   718  0627                     __end_of___lwmod:	
   719                           
   720                           	psect	text2
   721  0660                     __ptext2:	
   722 ;; *************** function ___lwdiv *****************
   723 ;; Defined at:
   724 ;;		line 5 in file "D:\Mplab X\xc8\pic\sources\c90\common\lwdiv.c"
   725 ;; Parameters:    Size  Location     Type
   726 ;;  divisor         2    6[COMMON] unsigned int 
   727 ;;  dividend        2    8[COMMON] unsigned int 
   728 ;; Auto vars:     Size  Location     Type
   729 ;;  quotient        2   11[COMMON] unsigned int 
   730 ;;  counter         1   13[COMMON] unsigned char 
   731 ;; Return value:  Size  Location     Type
   732 ;;                  2    6[COMMON] unsigned int 
   733 ;; Registers used:
   734 ;;		wreg, status,2, status,0
   735 ;; Tracked objects:
   736 ;;		On entry : 0/0
   737 ;;		On exit  : 0/0
   738 ;;		Unchanged: 0/0
   739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   740 ;;      Params:         4       0       0       0       0
   741 ;;      Locals:         3       0       0       0       0
   742 ;;      Temps:          1       0       0       0       0
   743 ;;      Totals:         8       0       0       0       0
   744 ;;Total ram usage:        8 bytes
   745 ;; Hardware stack levels used:    1
   746 ;; This function calls:
   747 ;;		Nothing
   748 ;; This function is called by:
   749 ;;		_main
   750 ;; This function uses a non-reentrant model
   751 ;;
   752                           
   753                           
   754                           ;psect for function ___lwdiv
   755  0660                     ___lwdiv:	
   756                           
   757                           ;incstack = 0
   758                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
   759  0660  01FB               	clrf	___lwdiv@quotient
   760  0661  01FC               	clrf	___lwdiv@quotient+1
   761  0662  0876               	movf	___lwdiv@divisor,w
   762  0663  0477               	iorwf	___lwdiv@divisor+1,w
   763  0664  1903               	btfsc	3,2
   764  0665  2E97               	goto	l972
   765  0666  01FD               	clrf	___lwdiv@counter
   766  0667  0AFD               	incf	___lwdiv@counter,f
   767  0668                     l960:	
   768  0668  1BF7               	btfsc	___lwdiv@divisor+1,7
   769  0669  2E76               	goto	l962
   770  066A  3001               	movlw	1
   771  066B                     u355:	
   772  066B  1003               	clrc
   773  066C  0DF6               	rlf	___lwdiv@divisor,f
   774  066D  0DF7               	rlf	___lwdiv@divisor+1,f
   775  066E  3EFF               	addlw	-1
   776  066F  1D03               	skipz
   777  0670  2E6B               	goto	u355
   778  0671  3001               	movlw	1
   779  0672  00FA               	movwf	??___lwdiv
   780  0673  087A               	movf	??___lwdiv,w
   781  0674  07FD               	addwf	___lwdiv@counter,f
   782  0675  2E68               	goto	l960
   783  0676                     l962:	
   784  0676  3001               	movlw	1
   785  0677                     u375:	
   786  0677  1003               	clrc
   787  0678  0DFB               	rlf	___lwdiv@quotient,f
   788  0679  0DFC               	rlf	___lwdiv@quotient+1,f
   789  067A  3EFF               	addlw	-1
   790  067B  1D03               	skipz
   791  067C  2E77               	goto	u375
   792  067D  0877               	movf	___lwdiv@divisor+1,w
   793  067E  0279               	subwf	___lwdiv@dividend+1,w
   794  067F  1D03               	skipz
   795  0680  2E83               	goto	u385
   796  0681  0876               	movf	___lwdiv@divisor,w
   797  0682  0278               	subwf	___lwdiv@dividend,w
   798  0683                     u385:	
   799  0683  1C03               	skipc
   800  0684  2E8C               	goto	l968
   801  0685  0876               	movf	___lwdiv@divisor,w
   802  0686  02F8               	subwf	___lwdiv@dividend,f
   803  0687  0877               	movf	___lwdiv@divisor+1,w
   804  0688  1C03               	skipc
   805  0689  03F9               	decf	___lwdiv@dividend+1,f
   806  068A  02F9               	subwf	___lwdiv@dividend+1,f
   807  068B  147B               	bsf	___lwdiv@quotient,0
   808  068C                     l968:	
   809  068C  3001               	movlw	1
   810  068D                     u395:	
   811  068D  1003               	clrc
   812  068E  0CF7               	rrf	___lwdiv@divisor+1,f
   813  068F  0CF6               	rrf	___lwdiv@divisor,f
   814  0690  3EFF               	addlw	-1
   815  0691  1D03               	skipz
   816  0692  2E8D               	goto	u395
   817  0693  3001               	movlw	1
   818  0694  02FD               	subwf	___lwdiv@counter,f
   819  0695  1D03               	btfss	3,2
   820  0696  2E76               	goto	l962
   821  0697                     l972:	
   822  0697  087C               	movf	___lwdiv@quotient+1,w
   823  0698  00F7               	movwf	?___lwdiv+1
   824  0699  087B               	movf	___lwdiv@quotient,w
   825  069A  00F6               	movwf	?___lwdiv
   826  069B  0008               	return
   827  069C                     __end_of___lwdiv:	
   828                           
   829                           	psect	text3
   830  05D3                     __ptext3:	
   831 ;; *************** function _Lcd_Write_String *****************
   832 ;; Defined at:
   833 ;;		line 98 in file "../code_timer1.X/lcd4.c"
   834 ;; Parameters:    Size  Location     Type
   835 ;;  a               1    wreg     PTR unsigned char 
   836 ;;		 -> STR_1(10), 
   837 ;; Auto vars:     Size  Location     Type
   838 ;;  a               1    7[COMMON] PTR unsigned char 
   839 ;;		 -> STR_1(10), 
   840 ;;  i               2    5[COMMON] int 
   841 ;; Return value:  Size  Location     Type
   842 ;;                  1    wreg      void 
   843 ;; Registers used:
   844 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   845 ;; Tracked objects:
   846 ;;		On entry : 0/0
   847 ;;		On exit  : 0/0
   848 ;;		Unchanged: 0/0
   849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   850 ;;      Params:         0       0       0       0       0
   851 ;;      Locals:         3       0       0       0       0
   852 ;;      Temps:          0       0       0       0       0
   853 ;;      Totals:         3       0       0       0       0
   854 ;;Total ram usage:        3 bytes
   855 ;; Hardware stack levels used:    1
   856 ;; Hardware stack levels required when called:    2
   857 ;; This function calls:
   858 ;;		_Lcd_Write_Char
   859 ;; This function is called by:
   860 ;;		_main
   861 ;; This function uses a non-reentrant model
   862 ;;
   863                           
   864                           
   865                           ;psect for function _Lcd_Write_String
   866  05D3                     _Lcd_Write_String:	
   867                           
   868                           ;incstack = 0
   869                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   870                           ;Lcd_Write_String@a stored from wreg
   871  05D3  00F7               	movwf	Lcd_Write_String@a
   872                           
   873                           ;../code_timer1.X/lcd4.c: 98: void Lcd_Write_String(char *a);../code_timer1.X/lcd4.c: 99
      +                          : {;../code_timer1.X/lcd4.c: 100:  int i;;../code_timer1.X/lcd4.c: 101:  for(i=0;a[i]!='
      +                          \0';i++)
   874  05D4  01F5               	clrf	Lcd_Write_String@i
   875  05D5  01F6               	clrf	Lcd_Write_String@i+1
   876  05D6                     l928:	
   877  05D6  0875               	movf	Lcd_Write_String@i,w
   878  05D7  0777               	addwf	Lcd_Write_String@a,w
   879  05D8  0084               	movwf	4
   880  05D9  120A  118A  2003  120A  118A  	fcall	stringdir
   881  05DE  3A00               	xorlw	0
   882  05DF  1903               	btfsc	3,2
   883  05E0  0008               	return
   884                           
   885                           ;../code_timer1.X/lcd4.c: 102:     Lcd_Write_Char(a[i]);
   886  05E1  0875               	movf	Lcd_Write_String@i,w
   887  05E2  0777               	addwf	Lcd_Write_String@a,w
   888  05E3  0084               	movwf	4
   889  05E4  120A  118A  2003  120A  118A  	fcall	stringdir
   890  05E9  120A  118A  2627  120A  118A  	fcall	_Lcd_Write_Char
   891  05EE  3001               	movlw	1
   892  05EF  07F5               	addwf	Lcd_Write_String@i,f
   893  05F0  1803               	skipnc
   894  05F1  0AF6               	incf	Lcd_Write_String@i+1,f
   895  05F2  3000               	movlw	0
   896  05F3  07F6               	addwf	Lcd_Write_String@i+1,f
   897  05F4  2DD6               	goto	l928
   898  05F5                     __end_of_Lcd_Write_String:	
   899                           
   900                           	psect	text4
   901  0627                     __ptext4:	
   902 ;; *************** function _Lcd_Write_Char *****************
   903 ;; Defined at:
   904 ;;		line 82 in file "../code_timer1.X/lcd4.c"
   905 ;; Parameters:    Size  Location     Type
   906 ;;  a               1    wreg     unsigned char 
   907 ;; Auto vars:     Size  Location     Type
   908 ;;  a               1    4[COMMON] unsigned char 
   909 ;;  y               1    3[COMMON] unsigned char 
   910 ;;  temp            1    2[COMMON] unsigned char 
   911 ;; Return value:  Size  Location     Type
   912 ;;                  1    wreg      void 
   913 ;; Registers used:
   914 ;;		wreg, status,2, status,0, pclath, cstack
   915 ;; Tracked objects:
   916 ;;		On entry : 0/0
   917 ;;		On exit  : 0/0
   918 ;;		Unchanged: 0/0
   919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   920 ;;      Params:         0       0       0       0       0
   921 ;;      Locals:         3       0       0       0       0
   922 ;;      Temps:          1       0       0       0       0
   923 ;;      Totals:         4       0       0       0       0
   924 ;;Total ram usage:        4 bytes
   925 ;; Hardware stack levels used:    1
   926 ;; Hardware stack levels required when called:    1
   927 ;; This function calls:
   928 ;;		_Lcd_Port
   929 ;; This function is called by:
   930 ;;		_main
   931 ;;		_Lcd_Write_String
   932 ;; This function uses a non-reentrant model
   933 ;;
   934                           
   935                           
   936                           ;psect for function _Lcd_Write_Char
   937  0627                     _Lcd_Write_Char:	
   938                           
   939                           ;incstack = 0
   940                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
   941                           ;Lcd_Write_Char@a stored from wreg
   942  0627  00F4               	movwf	Lcd_Write_Char@a
   943                           
   944                           ;../code_timer1.X/lcd4.c: 82: void Lcd_Write_Char(char a);../code_timer1.X/lcd4.c: 83: {
      +                          ;../code_timer1.X/lcd4.c: 84:    char temp,y;;../code_timer1.X/lcd4.c: 85:    temp = a&0
      +                          x0F;
   945  0628  0874               	movf	Lcd_Write_Char@a,w
   946  0629  390F               	andlw	15
   947  062A  00F1               	movwf	??_Lcd_Write_Char
   948  062B  0871               	movf	??_Lcd_Write_Char,w
   949  062C  00F2               	movwf	Lcd_Write_Char@temp
   950                           
   951                           ;../code_timer1.X/lcd4.c: 86:    y = a&0xF0;
   952  062D  0874               	movf	Lcd_Write_Char@a,w
   953  062E  39F0               	andlw	240
   954  062F  00F1               	movwf	??_Lcd_Write_Char
   955  0630  0871               	movf	??_Lcd_Write_Char,w
   956  0631  00F3               	movwf	Lcd_Write_Char@y
   957                           
   958                           ;../code_timer1.X/lcd4.c: 87:    RD0 = 1;
   959  0632  1283               	bcf	3,5	;RP0=0, select bank0
   960  0633  1303               	bcf	3,6	;RP1=0, select bank0
   961  0634  1408               	bsf	8,0	;volatile
   962                           
   963                           ;../code_timer1.X/lcd4.c: 88:    Lcd_Port(y>>4);
   964  0635  0873               	movf	Lcd_Write_Char@y,w
   965  0636  00F1               	movwf	??_Lcd_Write_Char
   966  0637  3004               	movlw	4
   967  0638                     u285:	
   968  0638  1003               	clrc
   969  0639  0CF1               	rrf	??_Lcd_Write_Char,f
   970  063A  3EFF               	addlw	-1
   971  063B  1D03               	skipz
   972  063C  2E38               	goto	u285
   973  063D  0871               	movf	??_Lcd_Write_Char,w
   974  063E  120A  118A  259F  120A  118A  	fcall	_Lcd_Port
   975                           
   976                           ;../code_timer1.X/lcd4.c: 89:    RD1 = 1;
   977  0643  1283               	bcf	3,5	;RP0=0, select bank0
   978  0644  1303               	bcf	3,6	;RP1=0, select bank0
   979  0645  1488               	bsf	8,1	;volatile
   980                           
   981                           ;../code_timer1.X/lcd4.c: 90:    _delay((unsigned long)((40)*(20000000/4000000.0)));
   982  0646  3042               	movlw	66
   983  0647  00F1               	movwf	??_Lcd_Write_Char
   984  0648                     u477:	
   985  0648  0BF1               	decfsz	??_Lcd_Write_Char,f
   986  0649  2E48               	goto	u477
   987  064A  0000               	nop
   988                           
   989                           ;../code_timer1.X/lcd4.c: 91:    RD1 = 0;
   990  064B  1283               	bcf	3,5	;RP0=0, select bank0
   991  064C  1303               	bcf	3,6	;RP1=0, select bank0
   992  064D  1088               	bcf	8,1	;volatile
   993                           
   994                           ;../code_timer1.X/lcd4.c: 92:    Lcd_Port(temp);
   995  064E  0872               	movf	Lcd_Write_Char@temp,w
   996  064F  120A  118A  259F  120A  118A  	fcall	_Lcd_Port
   997                           
   998                           ;../code_timer1.X/lcd4.c: 93:    RD1 = 1;
   999  0654  1283               	bcf	3,5	;RP0=0, select bank0
  1000  0655  1303               	bcf	3,6	;RP1=0, select bank0
  1001  0656  1488               	bsf	8,1	;volatile
  1002                           
  1003                           ;../code_timer1.X/lcd4.c: 94:    _delay((unsigned long)((40)*(20000000/4000000.0)));
  1004  0657  3042               	movlw	66
  1005  0658  00F1               	movwf	??_Lcd_Write_Char
  1006  0659                     u487:	
  1007  0659  0BF1               	decfsz	??_Lcd_Write_Char,f
  1008  065A  2E59               	goto	u487
  1009  065B  0000               	nop
  1010                           
  1011                           ;../code_timer1.X/lcd4.c: 95:    RD1 = 0;
  1012  065C  1283               	bcf	3,5	;RP0=0, select bank0
  1013  065D  1303               	bcf	3,6	;RP1=0, select bank0
  1014  065E  1088               	bcf	8,1	;volatile
  1015  065F  0008               	return
  1016  0660                     __end_of_Lcd_Write_Char:	
  1017                           
  1018                           	psect	text5
  1019  069C                     __ptext5:	
  1020 ;; *************** function _Lcd_Set_Cursor *****************
  1021 ;; Defined at:
  1022 ;;		line 42 in file "../code_timer1.X/lcd4.c"
  1023 ;; Parameters:    Size  Location     Type
  1024 ;;  a               1    wreg     unsigned char 
  1025 ;;  b               1    4[COMMON] unsigned char 
  1026 ;; Auto vars:     Size  Location     Type
  1027 ;;  a               1    7[COMMON] unsigned char 
  1028 ;;  temp            1   10[COMMON] unsigned char 
  1029 ;;  y               1    9[COMMON] unsigned char 
  1030 ;;  z               1    8[COMMON] unsigned char 
  1031 ;; Return value:  Size  Location     Type
  1032 ;;                  1    wreg      void 
  1033 ;; Registers used:
  1034 ;;		wreg, status,2, status,0, pclath, cstack
  1035 ;; Tracked objects:
  1036 ;;		On entry : 0/0
  1037 ;;		On exit  : 0/0
  1038 ;;		Unchanged: 0/0
  1039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1040 ;;      Params:         1       0       0       0       0
  1041 ;;      Locals:         4       0       0       0       0
  1042 ;;      Temps:          2       0       0       0       0
  1043 ;;      Totals:         7       0       0       0       0
  1044 ;;Total ram usage:        7 bytes
  1045 ;; Hardware stack levels used:    1
  1046 ;; Hardware stack levels required when called:    2
  1047 ;; This function calls:
  1048 ;;		_Lcd_Cmd
  1049 ;; This function is called by:
  1050 ;;		_main
  1051 ;; This function uses a non-reentrant model
  1052 ;;
  1053                           
  1054                           
  1055                           ;psect for function _Lcd_Set_Cursor
  1056  069C                     _Lcd_Set_Cursor:	
  1057                           
  1058                           ;incstack = 0
  1059                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1060                           ;Lcd_Set_Cursor@a stored from wreg
  1061  069C  00F7               	movwf	Lcd_Set_Cursor@a
  1062                           
  1063                           ;../code_timer1.X/lcd4.c: 42: void Lcd_Set_Cursor(char a, char b);../code_timer1.X/lcd4.
      +                          c: 43: {;../code_timer1.X/lcd4.c: 44:  char temp,z,y;;../code_timer1.X/lcd4.c: 45:  if(a
      +                           == 1)
  1064  069D  0377               	decf	Lcd_Set_Cursor@a,w
  1065  069E  1D03               	btfss	3,2
  1066  069F  2EC1               	goto	l940
  1067                           
  1068                           ;../code_timer1.X/lcd4.c: 46:  {;../code_timer1.X/lcd4.c: 47:    temp = 0x80 + b - 1;
  1069  06A0  0874               	movf	Lcd_Set_Cursor@b,w
  1070  06A1  3E7F               	addlw	127
  1071  06A2  00F5               	movwf	??_Lcd_Set_Cursor
  1072  06A3  0875               	movf	??_Lcd_Set_Cursor,w
  1073  06A4  00FA               	movwf	Lcd_Set_Cursor@temp
  1074                           
  1075                           ;../code_timer1.X/lcd4.c: 48:   z = temp>>4;
  1076  06A5  087A               	movf	Lcd_Set_Cursor@temp,w
  1077  06A6  00F5               	movwf	??_Lcd_Set_Cursor
  1078  06A7  3004               	movlw	4
  1079  06A8                     u315:	
  1080  06A8  1003               	clrc
  1081  06A9  0CF5               	rrf	??_Lcd_Set_Cursor,f
  1082  06AA  3EFF               	addlw	-1
  1083  06AB  1D03               	skipz
  1084  06AC  2EA8               	goto	u315
  1085  06AD  0875               	movf	??_Lcd_Set_Cursor,w
  1086  06AE  00F6               	movwf	??_Lcd_Set_Cursor+1
  1087  06AF  0876               	movf	??_Lcd_Set_Cursor+1,w
  1088  06B0  00F8               	movwf	Lcd_Set_Cursor@z
  1089                           
  1090                           ;../code_timer1.X/lcd4.c: 49:   y = temp & 0x0F;
  1091  06B1  087A               	movf	Lcd_Set_Cursor@temp,w
  1092  06B2  390F               	andlw	15
  1093  06B3  00F5               	movwf	??_Lcd_Set_Cursor
  1094  06B4  0875               	movf	??_Lcd_Set_Cursor,w
  1095  06B5  00F9               	movwf	Lcd_Set_Cursor@y
  1096                           
  1097                           ;../code_timer1.X/lcd4.c: 50:   Lcd_Cmd(z);
  1098  06B6  0878               	movf	Lcd_Set_Cursor@z,w
  1099  06B7  120A  118A  25B9  120A  118A  	fcall	_Lcd_Cmd
  1100                           
  1101                           ;../code_timer1.X/lcd4.c: 51:   Lcd_Cmd(y);
  1102  06BC  0879               	movf	Lcd_Set_Cursor@y,w
  1103  06BD  120A  118A  25B9   	fcall	_Lcd_Cmd
  1104                           
  1105                           ;../code_timer1.X/lcd4.c: 52:  }
  1106  06C0  0008               	return
  1107  06C1                     l940:	
  1108  06C1  3002               	movlw	2
  1109  06C2  0677               	xorwf	Lcd_Set_Cursor@a,w
  1110  06C3  1D03               	btfss	3,2
  1111  06C4  0008               	return
  1112                           
  1113                           ;../code_timer1.X/lcd4.c: 54:  {;../code_timer1.X/lcd4.c: 55:   temp = 0xC0 + b - 1;
  1114  06C5  0874               	movf	Lcd_Set_Cursor@b,w
  1115  06C6  3EBF               	addlw	191
  1116  06C7  00F5               	movwf	??_Lcd_Set_Cursor
  1117  06C8  0875               	movf	??_Lcd_Set_Cursor,w
  1118  06C9  00FA               	movwf	Lcd_Set_Cursor@temp
  1119                           
  1120                           ;../code_timer1.X/lcd4.c: 56:   z = temp>>4;
  1121  06CA  087A               	movf	Lcd_Set_Cursor@temp,w
  1122  06CB  00F5               	movwf	??_Lcd_Set_Cursor
  1123  06CC  3004               	movlw	4
  1124  06CD                     u335:	
  1125  06CD  1003               	clrc
  1126  06CE  0CF5               	rrf	??_Lcd_Set_Cursor,f
  1127  06CF  3EFF               	addlw	-1
  1128  06D0  1D03               	skipz
  1129  06D1  2ECD               	goto	u335
  1130  06D2  0875               	movf	??_Lcd_Set_Cursor,w
  1131  06D3  00F6               	movwf	??_Lcd_Set_Cursor+1
  1132  06D4  0876               	movf	??_Lcd_Set_Cursor+1,w
  1133  06D5  00F8               	movwf	Lcd_Set_Cursor@z
  1134                           
  1135                           ;../code_timer1.X/lcd4.c: 57:   y = temp & 0x0F;
  1136  06D6  087A               	movf	Lcd_Set_Cursor@temp,w
  1137  06D7  390F               	andlw	15
  1138  06D8  00F5               	movwf	??_Lcd_Set_Cursor
  1139  06D9  0875               	movf	??_Lcd_Set_Cursor,w
  1140  06DA  00F9               	movwf	Lcd_Set_Cursor@y
  1141                           
  1142                           ;../code_timer1.X/lcd4.c: 58:   Lcd_Cmd(z);
  1143  06DB  0878               	movf	Lcd_Set_Cursor@z,w
  1144  06DC  120A  118A  25B9  120A  118A  	fcall	_Lcd_Cmd
  1145                           
  1146                           ;../code_timer1.X/lcd4.c: 59:   Lcd_Cmd(y);
  1147  06E1  0879               	movf	Lcd_Set_Cursor@y,w
  1148  06E2  120A  118A  25B9   	fcall	_Lcd_Cmd
  1149  06E5  0008               	return
  1150  06E6                     __end_of_Lcd_Set_Cursor:	
  1151                           
  1152                           	psect	text6
  1153  06E6                     __ptext6:	
  1154 ;; *************** function _Lcd_Init *****************
  1155 ;; Defined at:
  1156 ;;		line 63 in file "../code_timer1.X/lcd4.c"
  1157 ;; Parameters:    Size  Location     Type
  1158 ;;		None
  1159 ;; Auto vars:     Size  Location     Type
  1160 ;;		None
  1161 ;; Return value:  Size  Location     Type
  1162 ;;                  1    wreg      void 
  1163 ;; Registers used:
  1164 ;;		wreg, status,2, status,0, pclath, cstack
  1165 ;; Tracked objects:
  1166 ;;		On entry : 0/0
  1167 ;;		On exit  : 0/0
  1168 ;;		Unchanged: 0/0
  1169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1170 ;;      Params:         0       0       0       0       0
  1171 ;;      Locals:         0       0       0       0       0
  1172 ;;      Temps:          2       0       0       0       0
  1173 ;;      Totals:         2       0       0       0       0
  1174 ;;Total ram usage:        2 bytes
  1175 ;; Hardware stack levels used:    1
  1176 ;; Hardware stack levels required when called:    2
  1177 ;; This function calls:
  1178 ;;		_Lcd_Cmd
  1179 ;;		_Lcd_Port
  1180 ;; This function is called by:
  1181 ;;		_main
  1182 ;; This function uses a non-reentrant model
  1183 ;;
  1184                           
  1185                           
  1186                           ;psect for function _Lcd_Init
  1187  06E6                     _Lcd_Init:	
  1188                           
  1189                           ;../code_timer1.X/lcd4.c: 65:   Lcd_Port(0x00);
  1190                           
  1191                           ;incstack = 0
  1192                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1193  06E6  3000               	movlw	0
  1194  06E7  120A  118A  259F  120A  118A  	fcall	_Lcd_Port
  1195                           
  1196                           ;../code_timer1.X/lcd4.c: 66:    _delay((unsigned long)((20)*(20000000/4000.0)));
  1197  06EC  3082               	movlw	130
  1198  06ED  00F5               	movwf	??_Lcd_Init+1
  1199  06EE  30DD               	movlw	221
  1200  06EF  00F4               	movwf	??_Lcd_Init
  1201  06F0                     u497:	
  1202  06F0  0BF4               	decfsz	??_Lcd_Init,f
  1203  06F1  2EF0               	goto	u497
  1204  06F2  0BF5               	decfsz	??_Lcd_Init+1,f
  1205  06F3  2EF0               	goto	u497
  1206  06F4  2EF5               	nop2
  1207                           
  1208                           ;../code_timer1.X/lcd4.c: 67:   Lcd_Cmd(0x03);
  1209  06F5  3003               	movlw	3
  1210  06F6  120A  118A  25B9  120A  118A  	fcall	_Lcd_Cmd
  1211                           
  1212                           ;../code_timer1.X/lcd4.c: 68:  _delay((unsigned long)((5)*(20000000/4000.0)));
  1213  06FB  3021               	movlw	33
  1214  06FC  00F5               	movwf	??_Lcd_Init+1
  1215  06FD  3076               	movlw	118
  1216  06FE  00F4               	movwf	??_Lcd_Init
  1217  06FF                     u507:	
  1218  06FF  0BF4               	decfsz	??_Lcd_Init,f
  1219  0700  2EFF               	goto	u507
  1220  0701  0BF5               	decfsz	??_Lcd_Init+1,f
  1221  0702  2EFF               	goto	u507
  1222  0703  0000               	nop
  1223                           
  1224                           ;../code_timer1.X/lcd4.c: 69:   Lcd_Cmd(0x03);
  1225  0704  3003               	movlw	3
  1226  0705  120A  118A  25B9  120A  118A  	fcall	_Lcd_Cmd
  1227                           
  1228                           ;../code_timer1.X/lcd4.c: 70:  _delay((unsigned long)((11)*(20000000/4000.0)));
  1229  070A  3048               	movlw	72
  1230  070B  00F5               	movwf	??_Lcd_Init+1
  1231  070C  306C               	movlw	108
  1232  070D  00F4               	movwf	??_Lcd_Init
  1233  070E                     u517:	
  1234  070E  0BF4               	decfsz	??_Lcd_Init,f
  1235  070F  2F0E               	goto	u517
  1236  0710  0BF5               	decfsz	??_Lcd_Init+1,f
  1237  0711  2F0E               	goto	u517
  1238  0712  0000               	nop
  1239                           
  1240                           ;../code_timer1.X/lcd4.c: 71:   Lcd_Cmd(0x03);
  1241  0713  3003               	movlw	3
  1242  0714  120A  118A  25B9  120A  118A  	fcall	_Lcd_Cmd
  1243                           
  1244                           ;../code_timer1.X/lcd4.c: 73:   Lcd_Cmd(0x02);
  1245  0719  3002               	movlw	2
  1246  071A  120A  118A  25B9  120A  118A  	fcall	_Lcd_Cmd
  1247                           
  1248                           ;../code_timer1.X/lcd4.c: 74:   Lcd_Cmd(0x02);
  1249  071F  3002               	movlw	2
  1250  0720  120A  118A  25B9  120A  118A  	fcall	_Lcd_Cmd
  1251                           
  1252                           ;../code_timer1.X/lcd4.c: 75:   Lcd_Cmd(0x08);
  1253  0725  3008               	movlw	8
  1254  0726  120A  118A  25B9  120A  118A  	fcall	_Lcd_Cmd
  1255                           
  1256                           ;../code_timer1.X/lcd4.c: 76:   Lcd_Cmd(0x00);
  1257  072B  3000               	movlw	0
  1258  072C  120A  118A  25B9  120A  118A  	fcall	_Lcd_Cmd
  1259                           
  1260                           ;../code_timer1.X/lcd4.c: 77:   Lcd_Cmd(0x0C);
  1261  0731  300C               	movlw	12
  1262  0732  120A  118A  25B9  120A  118A  	fcall	_Lcd_Cmd
  1263                           
  1264                           ;../code_timer1.X/lcd4.c: 78:   Lcd_Cmd(0x00);
  1265  0737  3000               	movlw	0
  1266  0738  120A  118A  25B9  120A  118A  	fcall	_Lcd_Cmd
  1267                           
  1268                           ;../code_timer1.X/lcd4.c: 79:   Lcd_Cmd(0x06);
  1269  073D  3006               	movlw	6
  1270  073E  120A  118A  25B9   	fcall	_Lcd_Cmd
  1271  0741  0008               	return
  1272  0742                     __end_of_Lcd_Init:	
  1273                           
  1274                           	psect	text7
  1275  05B9                     __ptext7:	
  1276 ;; *************** function _Lcd_Cmd *****************
  1277 ;; Defined at:
  1278 ;;		line 27 in file "../code_timer1.X/lcd4.c"
  1279 ;; Parameters:    Size  Location     Type
  1280 ;;  a               1    wreg     unsigned char 
  1281 ;; Auto vars:     Size  Location     Type
  1282 ;;  a               1    3[COMMON] unsigned char 
  1283 ;; Return value:  Size  Location     Type
  1284 ;;                  1    wreg      void 
  1285 ;; Registers used:
  1286 ;;		wreg, status,2, status,0, pclath, cstack
  1287 ;; Tracked objects:
  1288 ;;		On entry : 0/0
  1289 ;;		On exit  : 0/0
  1290 ;;		Unchanged: 0/0
  1291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1292 ;;      Params:         0       0       0       0       0
  1293 ;;      Locals:         1       0       0       0       0
  1294 ;;      Temps:          2       0       0       0       0
  1295 ;;      Totals:         3       0       0       0       0
  1296 ;;Total ram usage:        3 bytes
  1297 ;; Hardware stack levels used:    1
  1298 ;; Hardware stack levels required when called:    1
  1299 ;; This function calls:
  1300 ;;		_Lcd_Port
  1301 ;; This function is called by:
  1302 ;;		_Lcd_Set_Cursor
  1303 ;;		_Lcd_Init
  1304 ;;		_Lcd_Clear
  1305 ;;		_Lcd_Shift_Right
  1306 ;;		_Lcd_Shift_Left
  1307 ;; This function uses a non-reentrant model
  1308 ;;
  1309                           
  1310                           
  1311                           ;psect for function _Lcd_Cmd
  1312  05B9                     _Lcd_Cmd:	
  1313                           
  1314                           ;incstack = 0
  1315                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1316                           ;Lcd_Cmd@a stored from wreg
  1317  05B9  00F3               	movwf	Lcd_Cmd@a
  1318                           
  1319                           ;../code_timer1.X/lcd4.c: 27: void Lcd_Cmd(char a);../code_timer1.X/lcd4.c: 28: {;../cod
      +                          e_timer1.X/lcd4.c: 29:  RD0 = 0;
  1320  05BA  1283               	bcf	3,5	;RP0=0, select bank0
  1321  05BB  1303               	bcf	3,6	;RP1=0, select bank0
  1322  05BC  1008               	bcf	8,0	;volatile
  1323                           
  1324                           ;../code_timer1.X/lcd4.c: 30:  Lcd_Port(a);
  1325  05BD  0873               	movf	Lcd_Cmd@a,w
  1326  05BE  120A  118A  259F  120A  118A  	fcall	_Lcd_Port
  1327                           
  1328                           ;../code_timer1.X/lcd4.c: 31:  RD1 = 1;
  1329  05C3  1283               	bcf	3,5	;RP0=0, select bank0
  1330  05C4  1303               	bcf	3,6	;RP1=0, select bank0
  1331  05C5  1488               	bsf	8,1	;volatile
  1332                           
  1333                           ;../code_timer1.X/lcd4.c: 32:         _delay((unsigned long)((4)*(20000000/4000.0)));
  1334  05C6  301A               	movlw	26
  1335  05C7  00F2               	movwf	??_Lcd_Cmd+1
  1336  05C8  30F8               	movlw	248
  1337  05C9  00F1               	movwf	??_Lcd_Cmd
  1338  05CA                     u527:	
  1339  05CA  0BF1               	decfsz	??_Lcd_Cmd,f
  1340  05CB  2DCA               	goto	u527
  1341  05CC  0BF2               	decfsz	??_Lcd_Cmd+1,f
  1342  05CD  2DCA               	goto	u527
  1343  05CE  0000               	nop
  1344                           
  1345                           ;../code_timer1.X/lcd4.c: 33:         RD1 = 0;
  1346  05CF  1283               	bcf	3,5	;RP0=0, select bank0
  1347  05D0  1303               	bcf	3,6	;RP1=0, select bank0
  1348  05D1  1088               	bcf	8,1	;volatile
  1349  05D2  0008               	return
  1350  05D3                     __end_of_Lcd_Cmd:	
  1351                           
  1352                           	psect	text8
  1353  059F                     __ptext8:	
  1354 ;; *************** function _Lcd_Port *****************
  1355 ;; Defined at:
  1356 ;;		line 5 in file "../code_timer1.X/lcd4.c"
  1357 ;; Parameters:    Size  Location     Type
  1358 ;;  a               1    wreg     unsigned char 
  1359 ;; Auto vars:     Size  Location     Type
  1360 ;;  a               1    0[COMMON] unsigned char 
  1361 ;; Return value:  Size  Location     Type
  1362 ;;                  1    wreg      void 
  1363 ;; Registers used:
  1364 ;;		wreg
  1365 ;; Tracked objects:
  1366 ;;		On entry : 0/0
  1367 ;;		On exit  : 0/0
  1368 ;;		Unchanged: 0/0
  1369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1370 ;;      Params:         0       0       0       0       0
  1371 ;;      Locals:         1       0       0       0       0
  1372 ;;      Temps:          0       0       0       0       0
  1373 ;;      Totals:         1       0       0       0       0
  1374 ;;Total ram usage:        1 bytes
  1375 ;; Hardware stack levels used:    1
  1376 ;; This function calls:
  1377 ;;		Nothing
  1378 ;; This function is called by:
  1379 ;;		_Lcd_Cmd
  1380 ;;		_Lcd_Init
  1381 ;;		_Lcd_Write_Char
  1382 ;; This function uses a non-reentrant model
  1383 ;;
  1384                           
  1385                           
  1386                           ;psect for function _Lcd_Port
  1387  059F                     _Lcd_Port:	
  1388                           
  1389                           ;incstack = 0
  1390                           ; Regs used in _Lcd_Port: [wreg]
  1391                           ;Lcd_Port@a stored from wreg
  1392  059F  00F0               	movwf	Lcd_Port@a
  1393                           
  1394                           ;../code_timer1.X/lcd4.c: 5: void Lcd_Port(char a);../code_timer1.X/lcd4.c: 6: {;../code
      +                          _timer1.X/lcd4.c: 7:  if(a & 1)
  1395  05A0  1C70               	btfss	Lcd_Port@a,0
  1396  05A1  2DA6               	goto	l58
  1397                           
  1398                           ;../code_timer1.X/lcd4.c: 8:   RD2 = 1;
  1399  05A2  1283               	bcf	3,5	;RP0=0, select bank0
  1400  05A3  1303               	bcf	3,6	;RP1=0, select bank0
  1401  05A4  1508               	bsf	8,2	;volatile
  1402  05A5  2DA9               	goto	l59
  1403  05A6                     l58:	
  1404                           ;../code_timer1.X/lcd4.c: 9:  else
  1405                           
  1406                           
  1407                           ;../code_timer1.X/lcd4.c: 10:   RD2 = 0;
  1408  05A6  1283               	bcf	3,5	;RP0=0, select bank0
  1409  05A7  1303               	bcf	3,6	;RP1=0, select bank0
  1410  05A8  1108               	bcf	8,2	;volatile
  1411  05A9                     l59:	
  1412                           
  1413                           ;../code_timer1.X/lcd4.c: 12:  if(a & 2)
  1414  05A9  1CF0               	btfss	Lcd_Port@a,1
  1415  05AA  2DAD               	goto	l60
  1416                           
  1417                           ;../code_timer1.X/lcd4.c: 13:   RD3 = 1;
  1418  05AB  1588               	bsf	8,3	;volatile
  1419  05AC  2DAE               	goto	l61
  1420  05AD                     l60:	
  1421                           ;../code_timer1.X/lcd4.c: 14:  else
  1422                           
  1423                           
  1424                           ;../code_timer1.X/lcd4.c: 15:   RD3 = 0;
  1425  05AD  1188               	bcf	8,3	;volatile
  1426  05AE                     l61:	
  1427                           
  1428                           ;../code_timer1.X/lcd4.c: 17:  if(a & 4)
  1429  05AE  1D70               	btfss	Lcd_Port@a,2
  1430  05AF  2DB2               	goto	l62
  1431                           
  1432                           ;../code_timer1.X/lcd4.c: 18:   RD4 = 1;
  1433  05B0  1608               	bsf	8,4	;volatile
  1434  05B1  2DB3               	goto	l63
  1435  05B2                     l62:	
  1436                           ;../code_timer1.X/lcd4.c: 19:  else
  1437                           
  1438                           
  1439                           ;../code_timer1.X/lcd4.c: 20:   RD4 = 0;
  1440  05B2  1208               	bcf	8,4	;volatile
  1441  05B3                     l63:	
  1442                           
  1443                           ;../code_timer1.X/lcd4.c: 22:  if(a & 8)
  1444  05B3  1DF0               	btfss	Lcd_Port@a,3
  1445  05B4  2DB7               	goto	l64
  1446                           
  1447                           ;../code_timer1.X/lcd4.c: 23:   RD5 = 1;
  1448  05B5  1688               	bsf	8,5	;volatile
  1449  05B6  0008               	return
  1450  05B7                     l64:	
  1451                           ;../code_timer1.X/lcd4.c: 24:  else
  1452                           
  1453                           
  1454                           ;../code_timer1.X/lcd4.c: 25:   RD5 = 0;
  1455  05B7  1288               	bcf	8,5	;volatile
  1456  05B8  0008               	return
  1457  05B9                     __end_of_Lcd_Port:	
  1458                           
  1459                           	psect	text9
  1460  0594                     __ptext9:	
  1461 ;; *************** function _Counter_Init *****************
  1462 ;; Defined at:
  1463 ;;		line 37 in file "counter.c"
  1464 ;; Parameters:    Size  Location     Type
  1465 ;;		None
  1466 ;; Auto vars:     Size  Location     Type
  1467 ;;		None
  1468 ;; Return value:  Size  Location     Type
  1469 ;;                  1    wreg      void 
  1470 ;; Registers used:
  1471 ;;		status,2
  1472 ;; Tracked objects:
  1473 ;;		On entry : 0/0
  1474 ;;		On exit  : 0/0
  1475 ;;		Unchanged: 0/0
  1476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1477 ;;      Params:         0       0       0       0       0
  1478 ;;      Locals:         0       0       0       0       0
  1479 ;;      Temps:          0       0       0       0       0
  1480 ;;      Totals:         0       0       0       0       0
  1481 ;;Total ram usage:        0 bytes
  1482 ;; Hardware stack levels used:    1
  1483 ;; This function calls:
  1484 ;;		Nothing
  1485 ;; This function is called by:
  1486 ;;		_main
  1487 ;; This function uses a non-reentrant model
  1488 ;;
  1489                           
  1490                           
  1491                           ;psect for function _Counter_Init
  1492  0594                     _Counter_Init:	
  1493                           
  1494                           ;counter.c: 39:     TMR1H=0;
  1495                           
  1496                           ;incstack = 0
  1497                           ; Regs used in _Counter_Init: [status,2]
  1498  0594  1283               	bcf	3,5	;RP0=0, select bank0
  1499  0595  1303               	bcf	3,6	;RP1=0, select bank0
  1500  0596  018F               	clrf	15	;volatile
  1501                           
  1502                           ;counter.c: 40:     TMR1L=0;
  1503  0597  018E               	clrf	14	;volatile
  1504                           
  1505                           ;counter.c: 42:     T1CKPS1 = 0;
  1506  0598  1290               	bcf	16,5	;volatile
  1507                           
  1508                           ;counter.c: 43:     T1CKPS0 = 0;
  1509  0599  1210               	bcf	16,4	;volatile
  1510                           
  1511                           ;counter.c: 44:     T1OSCEN = 1;
  1512  059A  1590               	bsf	16,3	;volatile
  1513                           
  1514                           ;counter.c: 45:     T1SYNC = 1;
  1515  059B  1510               	bsf	16,2	;volatile
  1516                           
  1517                           ;counter.c: 46:     TMR1CS = 1;
  1518  059C  1490               	bsf	16,1	;volatile
  1519                           
  1520                           ;counter.c: 47:     TMR1ON = 1;
  1521  059D  1410               	bsf	16,0	;volatile
  1522  059E  0008               	return
  1523  059F                     __end_of_Counter_Init:	
  1524  007E                     btemp	set	126	;btemp
  1525  007E                     wtemp0	set	126


Data Sizes:
    Strings     10
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      3       3
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 10
		 -> STR_1(CODE[10]), 


Critical Paths under _main in COMMON

    _main->___lwdiv
    ___lwdiv->___lwmod
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    2782
                                              0 BANK0      3     3      0
                       _Counter_Init
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              6     2      4     767
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              8     4      4     770
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     301
                                              5 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     456
                                              4 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Counter_Init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Counter_Init
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   ___lwdiv
     ___lwmod (ARG)
   ___lwmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      3       3       5        3.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Mar 25 14:19:06 2019

                        pc 0002                __CFG_CP$OFF 0000                         l60 05AD  
                       l61 05AE                         l62 05B2                         l63 05B3  
                       l64 05B7                         l58 05A6                         l59 05A9  
                       fsr 0004                        l940 06C1                        l928 05D6  
                      l960 0668                        l962 0676                        l972 0697  
                      l990 0617                        l968 068C                        l984 05FB  
                      l986 0609                        l994 0622                        _RD0 0040  
                      _RD1 0041                        _RD2 0042                        _RD3 0043  
                      _RD4 0044                        _RD5 0045                        u315 06A8  
                      u335 06CD                        u425 05FE               __CFG_CPD$OFF 0000  
                      u507 06FF                        u355 066B                        u517 070E  
                      u285 0638                        u445 060F                        u527 05CA  
                      u375 0677                        u455 0618                        u385 0683  
                      u395 068D                        u477 0648                        u487 0659  
                      u497 06F0                        fsr0 0004              ?_Counter_Init 0070  
             __CFG_FOSC$HS 0000               __CFG_LVP$OFF 0000                       l1008 0756  
                     STR_1 0009               __CFG_WRT$OFF 0000          ?_Lcd_Write_String 0070  
                     _main 0742                       btemp 007E                       start 0000  
       ??_Lcd_Write_String 0075            __end_of_Lcd_Cmd 05D3                      ?_main 0070  
            __CFG_WDTE$OFF 0000            __end_of___lwdiv 069C            __end_of___lwmod 0627  
           ??_Counter_Init 0070                      _TMR1H 000F                      _TMR1L 000E  
  __size_of_Lcd_Set_Cursor 004A                      _TRISD 0088                      main@x 0021  
           __CFG_BOREN$OFF 0000                      pclath 000A                      status 0003  
                    wtemp0 007E           __end_of_Lcd_Init 0742           __end_of_Lcd_Port 05B9  
          __initialization 07FC               __end_of_main 07FC                     ??_main 0020  
                   _T1SYNC 0082                  ??_Lcd_Cmd 0071                     _TMR1CS 0081  
                   _TMR1ON 0080    __size_of_Lcd_Write_Char 0039                     _TRISC0 0438  
           __CFG_PWRTE$OFF 0000                  ??___lwdiv 007A                  ??___lwmod 0074  
          Lcd_Set_Cursor@a 0077            Lcd_Set_Cursor@b 0074            Lcd_Set_Cursor@y 0079  
          Lcd_Set_Cursor@z 0078    __end_of__initialization 07FC       __end_of_Counter_Init 059F  
           __pcstackCOMMON 0070             _Lcd_Set_Cursor 069C                  ?_Lcd_Init 0070  
                ?_Lcd_Port 0070                 __pmaintext 0742  __size_of_Lcd_Write_String 0022  
   __end_of_Lcd_Set_Cursor 06E6                    _T1CKPS0 0084                    _T1CKPS1 0085  
                  _T1OSCEN 0083                 ??_Lcd_Init 0074                 ??_Lcd_Port 0070  
               __stringtab 0003             _Lcd_Write_Char 0627                    _Lcd_Cmd 05B9  
                  ___lwdiv 0660                    ___lwmod 05F5            ?_Lcd_Set_Cursor 0074  
                  __ptext1 05F5                    __ptext2 0660                    __ptext3 05D3  
                  __ptext4 0627                    __ptext5 069C                    __ptext6 06E6  
                  __ptext7 05B9                    __ptext8 059F                    __ptext9 0594  
   __end_of_Lcd_Write_Char 0660       end_of_initialization 07FC      __size_of_Counter_Init 000B  
                Lcd_Port@a 0070               _Counter_Init 0594            ?_Lcd_Write_Char 0070  
        Lcd_Write_String@a 0077          Lcd_Write_String@i 0075           _Lcd_Write_String 05D3  
      start_initialization 07FC          __size_of_Lcd_Init 005C          __size_of_Lcd_Port 001A  
          Lcd_Write_Char@a 0074            Lcd_Write_Char@y 0073                  ___latbits 0002  
            __pcstackBANK0 0020                   ?_Lcd_Cmd 0070           ___lwdiv@dividend 0078  
         ??_Lcd_Set_Cursor 0075                   ?___lwdiv 0076                   ?___lwmod 0070  
                __pstrings 0003           ___lwdiv@quotient 007B                   Lcd_Cmd@a 0073  
              __stringbase 0008           ??_Lcd_Write_Char 0071                   _Lcd_Init 06E6  
                 _Lcd_Port 059F   __end_of_Lcd_Write_String 05F5           __size_of_Lcd_Cmd 001A  
         __size_of___lwdiv 003C           __size_of___lwmod 0032         __end_of__stringtab 0009  
          ___lwdiv@divisor 0076            ___lwdiv@counter 007D              __size_of_main 00BA  
       Lcd_Write_Char@temp 0072           ___lwmod@dividend 0072                  stringcode 0003  
       Lcd_Set_Cursor@temp 007A            ___lwmod@divisor 0070            ___lwmod@counter 0075  
                 stringdir 0003                   stringtab 0003  
