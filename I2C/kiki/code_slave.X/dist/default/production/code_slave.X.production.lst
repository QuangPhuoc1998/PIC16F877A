

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Jul 27 23:17:38 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.05
    22                           ; Generated 20/12/2018 GMT
    23                           ; 
    24                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F877A Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009C                     	;# 
   106  009D                     	;# 
   107  009E                     	;# 
   108  009F                     	;# 
   109  010C                     	;# 
   110  010D                     	;# 
   111  010E                     	;# 
   112  010F                     	;# 
   113  018C                     	;# 
   114  018D                     	;# 
   115  0000                     	;# 
   116  0001                     	;# 
   117  0002                     	;# 
   118  0003                     	;# 
   119  0004                     	;# 
   120  0005                     	;# 
   121  0006                     	;# 
   122  0007                     	;# 
   123  0008                     	;# 
   124  0009                     	;# 
   125  000A                     	;# 
   126  000B                     	;# 
   127  000C                     	;# 
   128  000D                     	;# 
   129  000E                     	;# 
   130  000E                     	;# 
   131  000F                     	;# 
   132  0010                     	;# 
   133  0011                     	;# 
   134  0012                     	;# 
   135  0013                     	;# 
   136  0014                     	;# 
   137  0015                     	;# 
   138  0015                     	;# 
   139  0016                     	;# 
   140  0017                     	;# 
   141  0018                     	;# 
   142  0019                     	;# 
   143  001A                     	;# 
   144  001B                     	;# 
   145  001B                     	;# 
   146  001C                     	;# 
   147  001D                     	;# 
   148  001E                     	;# 
   149  001F                     	;# 
   150  0081                     	;# 
   151  0085                     	;# 
   152  0086                     	;# 
   153  0087                     	;# 
   154  0088                     	;# 
   155  0089                     	;# 
   156  008C                     	;# 
   157  008D                     	;# 
   158  008E                     	;# 
   159  0091                     	;# 
   160  0092                     	;# 
   161  0093                     	;# 
   162  0094                     	;# 
   163  0098                     	;# 
   164  0099                     	;# 
   165  009C                     	;# 
   166  009D                     	;# 
   167  009E                     	;# 
   168  009F                     	;# 
   169  010C                     	;# 
   170  010D                     	;# 
   171  010E                     	;# 
   172  010F                     	;# 
   173  018C                     	;# 
   174  018D                     	;# 
   175  0000                     	;# 
   176  0001                     	;# 
   177  0002                     	;# 
   178  0003                     	;# 
   179  0004                     	;# 
   180  0005                     	;# 
   181  0006                     	;# 
   182  0007                     	;# 
   183  0008                     	;# 
   184  0009                     	;# 
   185  000A                     	;# 
   186  000B                     	;# 
   187  000C                     	;# 
   188  000D                     	;# 
   189  000E                     	;# 
   190  000E                     	;# 
   191  000F                     	;# 
   192  0010                     	;# 
   193  0011                     	;# 
   194  0012                     	;# 
   195  0013                     	;# 
   196  0014                     	;# 
   197  0015                     	;# 
   198  0015                     	;# 
   199  0016                     	;# 
   200  0017                     	;# 
   201  0018                     	;# 
   202  0019                     	;# 
   203  001A                     	;# 
   204  001B                     	;# 
   205  001B                     	;# 
   206  001C                     	;# 
   207  001D                     	;# 
   208  001E                     	;# 
   209  001F                     	;# 
   210  0081                     	;# 
   211  0085                     	;# 
   212  0086                     	;# 
   213  0087                     	;# 
   214  0088                     	;# 
   215  0089                     	;# 
   216  008C                     	;# 
   217  008D                     	;# 
   218  008E                     	;# 
   219  0091                     	;# 
   220  0092                     	;# 
   221  0093                     	;# 
   222  0094                     	;# 
   223  0098                     	;# 
   224  0099                     	;# 
   225  009C                     	;# 
   226  009D                     	;# 
   227  009E                     	;# 
   228  009F                     	;# 
   229  010C                     	;# 
   230  010D                     	;# 
   231  010E                     	;# 
   232  010F                     	;# 
   233  018C                     	;# 
   234  018D                     	;# 
   235                           
   236                           	psect	idataBANK0
   237  01FE                     __pidataBANK0:	
   238                           
   239                           ;initializer for _code7seg
   240  01FE  34C0               	retlw	192
   241  01FF  34F9               	retlw	249
   242  0200  34A4               	retlw	164
   243  0201  34B0               	retlw	176
   244  0202  3499               	retlw	153
   245  0203  3492               	retlw	146
   246  0204  3482               	retlw	130
   247  0205  34F8               	retlw	248
   248  0206  3480               	retlw	128
   249  0207  3490               	retlw	144
   250  0006                     _PORTB	set	6
   251  0008                     _PORTD	set	8
   252  0013                     _SSPBUF	set	19
   253  0014                     _SSPCON	set	20
   254  00A7                     _WCOL	set	167
   255  00A6                     _SSPOV	set	166
   256  00A4                     _CKP	set	164
   257  0030                     _RB0	set	48
   258  0031                     _RB1	set	49
   259  0063                     _SSPIF	set	99
   260  005E                     _PEIE	set	94
   261  005F                     _GIE	set	95
   262  0088                     _TRISD	set	136
   263  0094                     _SSPSTAT	set	148
   264  0093                     _SSPADD	set	147
   265  0091                     _SSPCON2	set	145
   266  04A0                     _BF	set	1184
   267  04A2                     _R_nW	set	1186
   268  04A5                     _D_nA	set	1189
   269  0431                     _TRISB1	set	1073
   270  0430                     _TRISB0	set	1072
   271  0463                     _SSPIE	set	1123
   272  048C                     _ACKEN	set	1164
   273  048D                     _ACKDT	set	1165
   274  048B                     _RCEN	set	1163
   275  048A                     _PEN	set	1162
   276  0489                     _RSEN	set	1161
   277  0488                     _SEN	set	1160
   278  043C                     _TRISC4	set	1084
   279  043B                     _TRISC3	set	1083
   280                           
   281                           ; #config settings
   282  0000                     
   283                           	psect	cinit
   284  000F                     start_initialization:	
   285  000F                     __initialization:	
   286                           
   287                           ; Initialize objects allocated to BANK0
   288  000F  1383               	bcf	3,7	;select IRP bank0
   289  0010  3035               	movlw	low (__pdataBANK0+10)
   290  0011  00FD               	movwf	btemp+-1
   291  0012  3001               	movlw	high __pidataBANK0
   292  0013  00FE               	movwf	btemp
   293  0014  30FE               	movlw	low __pidataBANK0
   294  0015  00FF               	movwf	btemp+1
   295  0016  302B               	movlw	low __pdataBANK0
   296  0017  0084               	movwf	4
   297  0018  120A  118A  21F1   	fcall	init_ram0
   298                           
   299                           ; Clear objects allocated to BANK0
   300  001B  01B5               	clrf	__pbssBANK0& (0+127)
   301                           
   302                           ; Clear objects allocated to COMMON
   303  001C  01FA               	clrf	__pbssCOMMON& (0+127)
   304  001D                     end_of_initialization:	
   305                           ;End of C runtime variable initialization code
   306                           
   307  001D                     __end_of__initialization:	
   308  001D  0183               	clrf	3
   309  001E  120A  118A  2821   	ljmp	_main	;jump to C main() function
   310                           
   311                           	psect	bssCOMMON
   312  007A                     __pbssCOMMON:	
   313  007A                     _data:	
   314  007A                     	ds	1
   315                           
   316                           	psect	bssBANK0
   317  0035                     __pbssBANK0:	
   318  0035                     _key:	
   319  0035                     	ds	1
   320                           
   321                           	psect	dataBANK0
   322  002B                     __pdataBANK0:	
   323  002B                     _code7seg:	
   324  002B                     	ds	10
   325                           
   326                           	psect	inittext
   327  01ED                     init_fetch0:	
   328                           ;	Called with low address in FSR and high address in W
   329                           
   330  01ED  087E               	movf	126,w
   331  01EE  008A               	movwf	10
   332  01EF  087F               	movf	127,w
   333  01F0  0082               	movwf	2
   334  01F1                     init_ram0:	
   335                           ;Called with:
   336                           ;	high address of idata address in btemp 
   337                           ;	low address of idata address in btemp+1 
   338                           ;	low address of data in FSR
   339                           ;	high address + 1 of data in btemp-1
   340                           
   341  01F1  21ED  120A  118A   	fcall	init_fetch0
   342  01F4  0080               	movwf	0
   343  01F5  0A84               	incf	4,f
   344  01F6  0804               	movf	4,w
   345  01F7  067D               	xorwf	125,w
   346  01F8  1903               	btfsc	3,2
   347  01F9  3400               	retlw	0
   348  01FA  0AFF               	incf	127,f
   349  01FB  1903               	btfsc	3,2
   350  01FC  0AFE               	incf	126,f
   351  01FD  29F1               	goto	init_ram0
   352                           
   353                           	psect	cstackCOMMON
   354  0070                     __pcstackCOMMON:	
   355  0070                     ?_Led7_display:	
   356  0070                     ?_main:	
   357                           ; 1 bytes @ 0x0
   358                           
   359  0070                     ?_i2c_slave_read:	
   360                           ; 1 bytes @ 0x0
   361                           
   362  0070                     ??_i2c_slave_read:	
   363                           ; 1 bytes @ 0x0
   364                           
   365                           
   366                           ; 1 bytes @ 0x0
   367  0070                     	ds	3
   368  0073                     ?_I2C_Slave_Init:	
   369  0073                     ?___awdiv:	
   370                           ; 1 bytes @ 0x3
   371                           
   372  0073                     ?___awmod:	
   373                           ; 2 bytes @ 0x3
   374                           
   375  0073                     I2C_Slave_Init@address:	
   376                           ; 2 bytes @ 0x3
   377                           
   378  0073                     ___awdiv@divisor:	
   379                           ; 2 bytes @ 0x3
   380                           
   381  0073                     ___awmod@divisor:	
   382                           ; 2 bytes @ 0x3
   383                           
   384                           
   385                           ; 2 bytes @ 0x3
   386  0073                     	ds	2
   387  0075                     ??_I2C_Slave_Init:	
   388  0075                     ___awdiv@dividend:	
   389                           ; 1 bytes @ 0x5
   390                           
   391  0075                     ___awmod@dividend:	
   392                           ; 2 bytes @ 0x5
   393                           
   394                           
   395                           ; 2 bytes @ 0x5
   396  0075                     	ds	2
   397  0077                     ??___awdiv:	
   398  0077                     ??___awmod:	
   399                           ; 1 bytes @ 0x7
   400                           
   401                           
   402                           ; 1 bytes @ 0x7
   403  0077                     	ds	1
   404  0078                     ___awmod@counter:	
   405                           
   406                           ; 1 bytes @ 0x8
   407  0078                     	ds	1
   408  0079                     ___awmod@sign:	
   409                           
   410                           ; 1 bytes @ 0x9
   411  0079                     	ds	1
   412                           
   413                           	psect	cstackBANK0
   414  0020                     __pcstackBANK0:	
   415  0020                     ___awdiv@counter:	
   416                           
   417                           ; 1 bytes @ 0x0
   418  0020                     	ds	1
   419  0021                     ___awdiv@sign:	
   420                           
   421                           ; 1 bytes @ 0x1
   422  0021                     	ds	1
   423  0022                     ___awdiv@quotient:	
   424                           
   425                           ; 2 bytes @ 0x2
   426  0022                     	ds	2
   427  0024                     ??_Led7_display:	
   428                           
   429                           ; 1 bytes @ 0x4
   430  0024                     	ds	2
   431  0026                     Led7_display@number:	
   432                           
   433                           ; 1 bytes @ 0x6
   434  0026                     	ds	1
   435  0027                     ??_main:	
   436                           
   437                           ; 1 bytes @ 0x7
   438  0027                     	ds	2
   439  0029                     main@i:	
   440                           
   441                           ; 1 bytes @ 0x9
   442  0029                     	ds	1
   443  002A                     main@number:	
   444                           
   445                           ; 1 bytes @ 0xA
   446  002A                     	ds	1
   447                           
   448                           	psect	maintext
   449  0021                     __pmaintext:	
   450 ;;
   451 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   452 ;;
   453 ;; *************** function _main *****************
   454 ;; Defined at:
   455 ;;		line 16 in file "main_slaves.c"
   456 ;; Parameters:    Size  Location     Type
   457 ;;		None
   458 ;; Auto vars:     Size  Location     Type
   459 ;;  number          1   10[BANK0 ] unsigned char 
   460 ;;  i               1    9[BANK0 ] unsigned char 
   461 ;; Return value:  Size  Location     Type
   462 ;;                  1    wreg      void 
   463 ;; Registers used:
   464 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   465 ;; Tracked objects:
   466 ;;		On entry : B00/0
   467 ;;		On exit  : 0/0
   468 ;;		Unchanged: 0/0
   469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   470 ;;      Params:         0       0       0       0       0
   471 ;;      Locals:         0       2       0       0       0
   472 ;;      Temps:          0       2       0       0       0
   473 ;;      Totals:         0       4       0       0       0
   474 ;;Total ram usage:        4 bytes
   475 ;; Hardware stack levels required when called:    3
   476 ;; This function calls:
   477 ;;		_I2C_Slave_Init
   478 ;;		_Led7_display
   479 ;; This function is called by:
   480 ;;		Startup code after reset
   481 ;; This function uses a non-reentrant model
   482 ;;
   483                           
   484                           
   485                           ;psect for function _main
   486  0021                     _main:	
   487                           
   488                           ;main_slaves.c: 18:     unsigned char number,i;;main_slaves.c: 20:     TRISB0 = 0;
   489                           
   490                           ;incstack = 0
   491                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   492  0021  1683               	bsf	3,5	;RP0=1, select bank1
   493  0022  1303               	bcf	3,6	;RP1=0, select bank1
   494  0023  1006               	bcf	6,0	;volatile
   495                           
   496                           ;main_slaves.c: 21:     TRISB1 = 0;
   497  0024  1086               	bcf	6,1	;volatile
   498                           
   499                           ;main_slaves.c: 22:     TRISD = 0x00;
   500  0025  0188               	clrf	8	;volatile
   501                           
   502                           ;main_slaves.c: 24:     PORTD = 0xFF;
   503  0026  30FF               	movlw	255
   504  0027  1283               	bcf	3,5	;RP0=0, select bank0
   505  0028  1303               	bcf	3,6	;RP1=0, select bank0
   506  0029  0088               	movwf	8	;volatile
   507                           
   508                           ;main_slaves.c: 26:     I2C_Slave_Init(0x30);
   509  002A  3030               	movlw	48
   510  002B  00F3               	movwf	I2C_Slave_Init@address
   511  002C  3000               	movlw	0
   512  002D  00F4               	movwf	I2C_Slave_Init@address+1
   513  002E  120A  118A  21D4  120A  118A  	fcall	_I2C_Slave_Init
   514  0033                     l1304:	
   515                           
   516                           ;main_slaves.c: 30:         if(key == 1)
   517  0033  1283               	bcf	3,5	;RP0=0, select bank0
   518  0034  1303               	bcf	3,6	;RP1=0, select bank0
   519  0035  0335               	decf	_key,w
   520  0036  1D03               	btfss	3,2
   521  0037  2868               	goto	l1342
   522                           
   523                           ;main_slaves.c: 31:         {;main_slaves.c: 32:             key = 0;
   524  0038  01B5               	clrf	_key
   525  0039                     l1308:	
   526  0039  301E               	movlw	30
   527  003A  022A               	subwf	main@number,w
   528  003B  1803               	btfsc	3,0
   529  003C  2868               	goto	l1342
   530                           
   531                           ;main_slaves.c: 34:             {;main_slaves.c: 35:                 for(i=0;i<50;i++)
   532  003D  01A9               	clrf	main@i
   533  003E                     l1318:	
   534                           
   535                           ;main_slaves.c: 36:                 {;main_slaves.c: 37:                     Led7_displa
      +                          y(number);
   536  003E  082A               	movf	main@number,w
   537  003F  120A  118A  2137  120A  118A  	fcall	_Led7_display
   538                           
   539                           ;main_slaves.c: 38:                     if(key == 2)
   540  0044  3002               	movlw	2
   541  0045  1283               	bcf	3,5	;RP0=0, select bank0
   542  0046  1303               	bcf	3,6	;RP1=0, select bank0
   543  0047  0635               	xorwf	_key,w
   544  0048  1903               	btfsc	3,2
   545  0049  2833               	goto	l1304
   546                           
   547                           ;main_slaves.c: 43:                     if(key == 3)
   548  004A  3003               	movlw	3
   549  004B  0635               	xorwf	_key,w
   550  004C  1903               	btfsc	3,2
   551  004D  2833               	goto	l1304
   552                           
   553                           ;main_slaves.c: 49:                     _delay((unsigned long)((10)*(20000000/4000.0)));
   554  004E  3041               	movlw	65
   555  004F  1283               	bcf	3,5	;RP0=0, select bank0
   556  0050  1303               	bcf	3,6	;RP1=0, select bank0
   557  0051  00A8               	movwf	??_main+1
   558  0052  30ED               	movlw	237
   559  0053  00A7               	movwf	??_main
   560  0054                     u1087:	
   561  0054  0BA7               	decfsz	??_main,f
   562  0055  2854               	goto	u1087
   563  0056  0BA8               	decfsz	??_main+1,f
   564  0057  2854               	goto	u1087
   565  0058  2859               	nop2
   566                           
   567                           ;main_slaves.c: 50:                 }
   568  0059  3001               	movlw	1
   569  005A  1283               	bcf	3,5	;RP0=0, select bank0
   570  005B  1303               	bcf	3,6	;RP1=0, select bank0
   571  005C  00A7               	movwf	??_main
   572  005D  0827               	movf	??_main,w
   573  005E  07A9               	addwf	main@i,f
   574  005F  3032               	movlw	50
   575  0060  0229               	subwf	main@i,w
   576  0061  1C03               	skipc
   577  0062  283E               	goto	l1318
   578                           
   579                           ;main_slaves.c: 51:             }
   580  0063  3001               	movlw	1
   581  0064  00A7               	movwf	??_main
   582  0065  0827               	movf	??_main,w
   583  0066  07AA               	addwf	main@number,f
   584  0067  2839               	goto	l1308
   585  0068                     l1342:	
   586                           
   587                           ;main_slaves.c: 53:         Led7_display(number);
   588  0068  082A               	movf	main@number,w
   589  0069  120A  118A  2137  120A  118A  	fcall	_Led7_display
   590                           
   591                           ;main_slaves.c: 54:         if(number == 30 || key == 3)
   592  006E  301E               	movlw	30
   593  006F  1283               	bcf	3,5	;RP0=0, select bank0
   594  0070  1303               	bcf	3,6	;RP1=0, select bank0
   595  0071  062A               	xorwf	main@number,w
   596  0072  1903               	btfsc	3,2
   597  0073  2878               	goto	l1348
   598  0074  3003               	movlw	3
   599  0075  0635               	xorwf	_key,w
   600  0076  1D03               	btfss	3,2
   601  0077  287A               	goto	l1350
   602  0078                     l1348:	
   603                           
   604                           ;main_slaves.c: 55:         {;main_slaves.c: 56:             number = 0;
   605  0078  01AA               	clrf	main@number
   606                           
   607                           ;main_slaves.c: 57:             key = 0;
   608  0079  01B5               	clrf	_key
   609  007A                     l1350:	
   610                           
   611                           ;main_slaves.c: 59:          _delay((unsigned long)((10)*(20000000/4000.0)));
   612  007A  3041               	movlw	65
   613  007B  1283               	bcf	3,5	;RP0=0, select bank0
   614  007C  1303               	bcf	3,6	;RP1=0, select bank0
   615  007D  00A8               	movwf	??_main+1
   616  007E  30ED               	movlw	237
   617  007F  00A7               	movwf	??_main
   618  0080                     u1097:	
   619  0080  0BA7               	decfsz	??_main,f
   620  0081  2880               	goto	u1097
   621  0082  0BA8               	decfsz	??_main+1,f
   622  0083  2880               	goto	u1097
   623  0084  2885               	nop2
   624  0085  2833               	goto	l1304
   625  0086                     __end_of_main:	
   626                           
   627                           	psect	text1
   628  0137                     __ptext1:	
   629 ;; *************** function _Led7_display *****************
   630 ;; Defined at:
   631 ;;		line 63 in file "main_slaves.c"
   632 ;; Parameters:    Size  Location     Type
   633 ;;  number          1    wreg     unsigned char 
   634 ;; Auto vars:     Size  Location     Type
   635 ;;  number          1    6[BANK0 ] unsigned char 
   636 ;; Return value:  Size  Location     Type
   637 ;;                  1    wreg      void 
   638 ;; Registers used:
   639 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   640 ;; Tracked objects:
   641 ;;		On entry : 0/0
   642 ;;		On exit  : 0/0
   643 ;;		Unchanged: 0/0
   644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   645 ;;      Params:         0       0       0       0       0
   646 ;;      Locals:         0       1       0       0       0
   647 ;;      Temps:          0       2       0       0       0
   648 ;;      Totals:         0       3       0       0       0
   649 ;;Total ram usage:        3 bytes
   650 ;; Hardware stack levels used:    1
   651 ;; Hardware stack levels required when called:    2
   652 ;; This function calls:
   653 ;;		___awdiv
   654 ;;		___awmod
   655 ;; This function is called by:
   656 ;;		_main
   657 ;; This function uses a non-reentrant model
   658 ;;
   659                           
   660                           
   661                           ;psect for function _Led7_display
   662  0137                     _Led7_display:	
   663                           
   664                           ;incstack = 0
   665                           ; Regs used in _Led7_display: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   666                           ;Led7_display@number stored from wreg
   667  0137  1283               	bcf	3,5	;RP0=0, select bank0
   668  0138  1303               	bcf	3,6	;RP1=0, select bank0
   669  0139  00A6               	movwf	Led7_display@number
   670                           
   671                           ;main_slaves.c: 63: void Led7_display(unsigned char number);main_slaves.c: 64: {;main_sl
      +                          aves.c: 65:     RB1 = 0;
   672  013A  1086               	bcf	6,1	;volatile
   673                           
   674                           ;main_slaves.c: 66:     PORTD = code7seg[number/10];
   675  013B  300A               	movlw	10
   676  013C  00F3               	movwf	___awdiv@divisor
   677  013D  3000               	movlw	0
   678  013E  00F4               	movwf	___awdiv@divisor+1
   679  013F  0826               	movf	Led7_display@number,w
   680  0140  00A4               	movwf	??_Led7_display
   681  0141  01A5               	clrf	??_Led7_display+1
   682  0142  0824               	movf	??_Led7_display,w
   683  0143  00F5               	movwf	___awdiv@dividend
   684  0144  0825               	movf	??_Led7_display+1,w
   685  0145  00F6               	movwf	___awdiv@dividend+1
   686  0146  120A  118A  2086  120A  118A  	fcall	___awdiv
   687  014B  0873               	movf	?___awdiv,w
   688  014C  3E2B               	addlw	(low (_code7seg| 0))& (0+255)
   689  014D  0084               	movwf	4
   690  014E  1383               	bcf	3,7	;select IRP bank0
   691  014F  0800               	movf	0,w
   692  0150  1283               	bcf	3,5	;RP0=0, select bank0
   693  0151  1303               	bcf	3,6	;RP1=0, select bank0
   694  0152  0088               	movwf	8	;volatile
   695                           
   696                           ;main_slaves.c: 67:     _delay((unsigned long)((5)*(20000000/4000.0)));
   697  0153  3021               	movlw	33
   698  0154  1283               	bcf	3,5	;RP0=0, select bank0
   699  0155  1303               	bcf	3,6	;RP1=0, select bank0
   700  0156  00A5               	movwf	??_Led7_display+1
   701  0157  3075               	movlw	117
   702  0158  00A4               	movwf	??_Led7_display
   703  0159                     u1107:	
   704  0159  0BA4               	decfsz	??_Led7_display,f
   705  015A  2959               	goto	u1107
   706  015B  0BA5               	decfsz	??_Led7_display+1,f
   707  015C  2959               	goto	u1107
   708  015D  295E               	nop2
   709                           
   710                           ;main_slaves.c: 68:     RB1 = 1;
   711  015E  1283               	bcf	3,5	;RP0=0, select bank0
   712  015F  1303               	bcf	3,6	;RP1=0, select bank0
   713  0160  1486               	bsf	6,1	;volatile
   714                           
   715                           ;main_slaves.c: 70:     RB0 = 0;
   716  0161  1006               	bcf	6,0	;volatile
   717                           
   718                           ;main_slaves.c: 71:     PORTD = code7seg[number%10];
   719  0162  300A               	movlw	10
   720  0163  00F3               	movwf	___awmod@divisor
   721  0164  3000               	movlw	0
   722  0165  00F4               	movwf	___awmod@divisor+1
   723  0166  0826               	movf	Led7_display@number,w
   724  0167  00A4               	movwf	??_Led7_display
   725  0168  01A5               	clrf	??_Led7_display+1
   726  0169  0824               	movf	??_Led7_display,w
   727  016A  00F5               	movwf	___awmod@dividend
   728  016B  0825               	movf	??_Led7_display+1,w
   729  016C  00F6               	movwf	___awmod@dividend+1
   730  016D  120A  118A  2189  120A  118A  	fcall	___awmod
   731  0172  0873               	movf	?___awmod,w
   732  0173  3E2B               	addlw	(low (_code7seg| 0))& (0+255)
   733  0174  0084               	movwf	4
   734  0175  1383               	bcf	3,7	;select IRP bank0
   735  0176  0800               	movf	0,w
   736  0177  1283               	bcf	3,5	;RP0=0, select bank0
   737  0178  1303               	bcf	3,6	;RP1=0, select bank0
   738  0179  0088               	movwf	8	;volatile
   739                           
   740                           ;main_slaves.c: 72:     _delay((unsigned long)((5)*(20000000/4000.0)));
   741  017A  3021               	movlw	33
   742  017B  1283               	bcf	3,5	;RP0=0, select bank0
   743  017C  1303               	bcf	3,6	;RP1=0, select bank0
   744  017D  00A5               	movwf	??_Led7_display+1
   745  017E  3075               	movlw	117
   746  017F  00A4               	movwf	??_Led7_display
   747  0180                     u1117:	
   748  0180  0BA4               	decfsz	??_Led7_display,f
   749  0181  2980               	goto	u1117
   750  0182  0BA5               	decfsz	??_Led7_display+1,f
   751  0183  2980               	goto	u1117
   752  0184  2985               	nop2
   753                           
   754                           ;main_slaves.c: 73:     RB0 = 1;
   755  0185  1283               	bcf	3,5	;RP0=0, select bank0
   756  0186  1303               	bcf	3,6	;RP1=0, select bank0
   757  0187  1406               	bsf	6,0	;volatile
   758  0188  0008               	return
   759  0189                     __end_of_Led7_display:	
   760                           
   761                           	psect	text2
   762  0189                     __ptext2:	
   763 ;; *************** function ___awmod *****************
   764 ;; Defined at:
   765 ;;		line 5 in file "D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\awmod.c"
   766 ;; Parameters:    Size  Location     Type
   767 ;;  divisor         2    3[COMMON] int 
   768 ;;  dividend        2    5[COMMON] int 
   769 ;; Auto vars:     Size  Location     Type
   770 ;;  sign            1    9[COMMON] unsigned char 
   771 ;;  counter         1    8[COMMON] unsigned char 
   772 ;; Return value:  Size  Location     Type
   773 ;;                  2    3[COMMON] int 
   774 ;; Registers used:
   775 ;;		wreg, status,2, status,0
   776 ;; Tracked objects:
   777 ;;		On entry : 0/0
   778 ;;		On exit  : 0/0
   779 ;;		Unchanged: 0/0
   780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   781 ;;      Params:         4       0       0       0       0
   782 ;;      Locals:         2       0       0       0       0
   783 ;;      Temps:          1       0       0       0       0
   784 ;;      Totals:         7       0       0       0       0
   785 ;;Total ram usage:        7 bytes
   786 ;; Hardware stack levels used:    1
   787 ;; Hardware stack levels required when called:    1
   788 ;; This function calls:
   789 ;;		Nothing
   790 ;; This function is called by:
   791 ;;		_Led7_display
   792 ;; This function uses a non-reentrant model
   793 ;;
   794                           
   795                           
   796                           ;psect for function ___awmod
   797  0189                     ___awmod:	
   798                           
   799                           ;incstack = 0
   800                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   801  0189  01F9               	clrf	___awmod@sign
   802  018A  1FF6               	btfss	___awmod@dividend+1,7
   803  018B  2993               	goto	l1252
   804  018C  09F5               	comf	___awmod@dividend,f
   805  018D  09F6               	comf	___awmod@dividend+1,f
   806  018E  0AF5               	incf	___awmod@dividend,f
   807  018F  1903               	skipnz
   808  0190  0AF6               	incf	___awmod@dividend+1,f
   809  0191  01F9               	clrf	___awmod@sign
   810  0192  0AF9               	incf	___awmod@sign,f
   811  0193                     l1252:	
   812  0193  1FF4               	btfss	___awmod@divisor+1,7
   813  0194  299A               	goto	l1256
   814  0195  09F3               	comf	___awmod@divisor,f
   815  0196  09F4               	comf	___awmod@divisor+1,f
   816  0197  0AF3               	incf	___awmod@divisor,f
   817  0198  1903               	skipnz
   818  0199  0AF4               	incf	___awmod@divisor+1,f
   819  019A                     l1256:	
   820  019A  0873               	movf	___awmod@divisor,w
   821  019B  0474               	iorwf	___awmod@divisor+1,w
   822  019C  1903               	btfsc	3,2
   823  019D  29C7               	goto	l1274
   824  019E  01F8               	clrf	___awmod@counter
   825  019F  0AF8               	incf	___awmod@counter,f
   826  01A0                     l1264:	
   827  01A0  1BF4               	btfsc	___awmod@divisor+1,7
   828  01A1  29AE               	goto	l1266
   829  01A2  3001               	movlw	1
   830  01A3                     u955:	
   831  01A3  1003               	clrc
   832  01A4  0DF3               	rlf	___awmod@divisor,f
   833  01A5  0DF4               	rlf	___awmod@divisor+1,f
   834  01A6  3EFF               	addlw	-1
   835  01A7  1D03               	skipz
   836  01A8  29A3               	goto	u955
   837  01A9  3001               	movlw	1
   838  01AA  00F7               	movwf	??___awmod
   839  01AB  0877               	movf	??___awmod,w
   840  01AC  07F8               	addwf	___awmod@counter,f
   841  01AD  29A0               	goto	l1264
   842  01AE                     l1266:	
   843  01AE  0874               	movf	___awmod@divisor+1,w
   844  01AF  0276               	subwf	___awmod@dividend+1,w
   845  01B0  1D03               	skipz
   846  01B1  29B4               	goto	u975
   847  01B2  0873               	movf	___awmod@divisor,w
   848  01B3  0275               	subwf	___awmod@dividend,w
   849  01B4                     u975:	
   850  01B4  1C03               	skipc
   851  01B5  29BC               	goto	l1270
   852  01B6  0873               	movf	___awmod@divisor,w
   853  01B7  02F5               	subwf	___awmod@dividend,f
   854  01B8  0874               	movf	___awmod@divisor+1,w
   855  01B9  1C03               	skipc
   856  01BA  03F6               	decf	___awmod@dividend+1,f
   857  01BB  02F6               	subwf	___awmod@dividend+1,f
   858  01BC                     l1270:	
   859  01BC  3001               	movlw	1
   860  01BD                     u985:	
   861  01BD  1003               	clrc
   862  01BE  0CF4               	rrf	___awmod@divisor+1,f
   863  01BF  0CF3               	rrf	___awmod@divisor,f
   864  01C0  3EFF               	addlw	-1
   865  01C1  1D03               	skipz
   866  01C2  29BD               	goto	u985
   867  01C3  3001               	movlw	1
   868  01C4  02F8               	subwf	___awmod@counter,f
   869  01C5  1D03               	btfss	3,2
   870  01C6  29AE               	goto	l1266
   871  01C7                     l1274:	
   872  01C7  0879               	movf	___awmod@sign,w
   873  01C8  1903               	btfsc	3,2
   874  01C9  29CF               	goto	l1278
   875  01CA  09F5               	comf	___awmod@dividend,f
   876  01CB  09F6               	comf	___awmod@dividend+1,f
   877  01CC  0AF5               	incf	___awmod@dividend,f
   878  01CD  1903               	skipnz
   879  01CE  0AF6               	incf	___awmod@dividend+1,f
   880  01CF                     l1278:	
   881  01CF  0876               	movf	___awmod@dividend+1,w
   882  01D0  00F4               	movwf	?___awmod+1
   883  01D1  0875               	movf	___awmod@dividend,w
   884  01D2  00F3               	movwf	?___awmod
   885  01D3  0008               	return
   886  01D4                     __end_of___awmod:	
   887                           
   888                           	psect	text3
   889  0086                     __ptext3:	
   890 ;; *************** function ___awdiv *****************
   891 ;; Defined at:
   892 ;;		line 5 in file "D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\awdiv.c"
   893 ;; Parameters:    Size  Location     Type
   894 ;;  divisor         2    3[COMMON] int 
   895 ;;  dividend        2    5[COMMON] int 
   896 ;; Auto vars:     Size  Location     Type
   897 ;;  quotient        2    2[BANK0 ] int 
   898 ;;  sign            1    1[BANK0 ] unsigned char 
   899 ;;  counter         1    0[BANK0 ] unsigned char 
   900 ;; Return value:  Size  Location     Type
   901 ;;                  2    3[COMMON] int 
   902 ;; Registers used:
   903 ;;		wreg, status,2, status,0
   904 ;; Tracked objects:
   905 ;;		On entry : 0/0
   906 ;;		On exit  : 0/0
   907 ;;		Unchanged: 0/0
   908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   909 ;;      Params:         4       0       0       0       0
   910 ;;      Locals:         0       4       0       0       0
   911 ;;      Temps:          1       0       0       0       0
   912 ;;      Totals:         5       4       0       0       0
   913 ;;Total ram usage:        9 bytes
   914 ;; Hardware stack levels used:    1
   915 ;; Hardware stack levels required when called:    1
   916 ;; This function calls:
   917 ;;		Nothing
   918 ;; This function is called by:
   919 ;;		_Led7_display
   920 ;; This function uses a non-reentrant model
   921 ;;
   922                           
   923                           
   924                           ;psect for function ___awdiv
   925  0086                     ___awdiv:	
   926                           
   927                           ;incstack = 0
   928                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   929  0086  1283               	bcf	3,5	;RP0=0, select bank0
   930  0087  1303               	bcf	3,6	;RP1=0, select bank0
   931  0088  01A1               	clrf	___awdiv@sign
   932  0089  1FF4               	btfss	___awdiv@divisor+1,7
   933  008A  2892               	goto	l1208
   934  008B  09F3               	comf	___awdiv@divisor,f
   935  008C  09F4               	comf	___awdiv@divisor+1,f
   936  008D  0AF3               	incf	___awdiv@divisor,f
   937  008E  1903               	skipnz
   938  008F  0AF4               	incf	___awdiv@divisor+1,f
   939  0090  01A1               	clrf	___awdiv@sign
   940  0091  0AA1               	incf	___awdiv@sign,f
   941  0092                     l1208:	
   942  0092  1FF6               	btfss	___awdiv@dividend+1,7
   943  0093  289D               	goto	l1214
   944  0094  09F5               	comf	___awdiv@dividend,f
   945  0095  09F6               	comf	___awdiv@dividend+1,f
   946  0096  0AF5               	incf	___awdiv@dividend,f
   947  0097  1903               	skipnz
   948  0098  0AF6               	incf	___awdiv@dividend+1,f
   949  0099  3001               	movlw	1
   950  009A  00F7               	movwf	??___awdiv
   951  009B  0877               	movf	??___awdiv,w
   952  009C  06A1               	xorwf	___awdiv@sign,f
   953  009D                     l1214:	
   954  009D  01A2               	clrf	___awdiv@quotient
   955  009E  01A3               	clrf	___awdiv@quotient+1
   956  009F  0873               	movf	___awdiv@divisor,w
   957  00A0  0474               	iorwf	___awdiv@divisor+1,w
   958  00A1  1903               	btfsc	3,2
   959  00A2  28D4               	goto	l1236
   960  00A3  01A0               	clrf	___awdiv@counter
   961  00A4  0AA0               	incf	___awdiv@counter,f
   962  00A5                     l1224:	
   963  00A5  1BF4               	btfsc	___awdiv@divisor+1,7
   964  00A6  28B3               	goto	l1226
   965  00A7  3001               	movlw	1
   966  00A8                     u855:	
   967  00A8  1003               	clrc
   968  00A9  0DF3               	rlf	___awdiv@divisor,f
   969  00AA  0DF4               	rlf	___awdiv@divisor+1,f
   970  00AB  3EFF               	addlw	-1
   971  00AC  1D03               	skipz
   972  00AD  28A8               	goto	u855
   973  00AE  3001               	movlw	1
   974  00AF  00F7               	movwf	??___awdiv
   975  00B0  0877               	movf	??___awdiv,w
   976  00B1  07A0               	addwf	___awdiv@counter,f
   977  00B2  28A5               	goto	l1224
   978  00B3                     l1226:	
   979  00B3  3001               	movlw	1
   980  00B4                     u875:	
   981  00B4  1003               	clrc
   982  00B5  0DA2               	rlf	___awdiv@quotient,f
   983  00B6  0DA3               	rlf	___awdiv@quotient+1,f
   984  00B7  3EFF               	addlw	-1
   985  00B8  1D03               	skipz
   986  00B9  28B4               	goto	u875
   987  00BA  0874               	movf	___awdiv@divisor+1,w
   988  00BB  0276               	subwf	___awdiv@dividend+1,w
   989  00BC  1D03               	skipz
   990  00BD  28C0               	goto	u885
   991  00BE  0873               	movf	___awdiv@divisor,w
   992  00BF  0275               	subwf	___awdiv@dividend,w
   993  00C0                     u885:	
   994  00C0  1C03               	skipc
   995  00C1  28C9               	goto	l1232
   996  00C2  0873               	movf	___awdiv@divisor,w
   997  00C3  02F5               	subwf	___awdiv@dividend,f
   998  00C4  0874               	movf	___awdiv@divisor+1,w
   999  00C5  1C03               	skipc
  1000  00C6  03F6               	decf	___awdiv@dividend+1,f
  1001  00C7  02F6               	subwf	___awdiv@dividend+1,f
  1002  00C8  1422               	bsf	___awdiv@quotient,0
  1003  00C9                     l1232:	
  1004  00C9  3001               	movlw	1
  1005  00CA                     u895:	
  1006  00CA  1003               	clrc
  1007  00CB  0CF4               	rrf	___awdiv@divisor+1,f
  1008  00CC  0CF3               	rrf	___awdiv@divisor,f
  1009  00CD  3EFF               	addlw	-1
  1010  00CE  1D03               	skipz
  1011  00CF  28CA               	goto	u895
  1012  00D0  3001               	movlw	1
  1013  00D1  02A0               	subwf	___awdiv@counter,f
  1014  00D2  1D03               	btfss	3,2
  1015  00D3  28B3               	goto	l1226
  1016  00D4                     l1236:	
  1017  00D4  0821               	movf	___awdiv@sign,w
  1018  00D5  1903               	btfsc	3,2
  1019  00D6  28DC               	goto	l1240
  1020  00D7  09A2               	comf	___awdiv@quotient,f
  1021  00D8  09A3               	comf	___awdiv@quotient+1,f
  1022  00D9  0AA2               	incf	___awdiv@quotient,f
  1023  00DA  1903               	skipnz
  1024  00DB  0AA3               	incf	___awdiv@quotient+1,f
  1025  00DC                     l1240:	
  1026  00DC  0823               	movf	___awdiv@quotient+1,w
  1027  00DD  00F4               	movwf	?___awdiv+1
  1028  00DE  0822               	movf	___awdiv@quotient,w
  1029  00DF  00F3               	movwf	?___awdiv
  1030  00E0  0008               	return
  1031  00E1                     __end_of___awdiv:	
  1032                           
  1033                           	psect	text4
  1034  01D4                     __ptext4:	
  1035 ;; *************** function _I2C_Slave_Init *****************
  1036 ;; Defined at:
  1037 ;;		line 50 in file "../code_master.X/I2C_lib.c"
  1038 ;; Parameters:    Size  Location     Type
  1039 ;;  address         2    3[COMMON] short 
  1040 ;; Auto vars:     Size  Location     Type
  1041 ;;		None
  1042 ;; Return value:  Size  Location     Type
  1043 ;;                  1    wreg      void 
  1044 ;; Registers used:
  1045 ;;		wreg
  1046 ;; Tracked objects:
  1047 ;;		On entry : 0/0
  1048 ;;		On exit  : 0/0
  1049 ;;		Unchanged: 0/0
  1050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1051 ;;      Params:         2       0       0       0       0
  1052 ;;      Locals:         0       0       0       0       0
  1053 ;;      Temps:          0       0       0       0       0
  1054 ;;      Totals:         2       0       0       0       0
  1055 ;;Total ram usage:        2 bytes
  1056 ;; Hardware stack levels used:    1
  1057 ;; Hardware stack levels required when called:    1
  1058 ;; This function calls:
  1059 ;;		Nothing
  1060 ;; This function is called by:
  1061 ;;		_main
  1062 ;; This function uses a non-reentrant model
  1063 ;;
  1064                           
  1065                           
  1066                           ;psect for function _I2C_Slave_Init
  1067  01D4                     _I2C_Slave_Init:	
  1068                           
  1069                           ;../code_master.X/I2C_lib.c: 50: void I2C_Slave_Init(short address);../code_master.X/I2C
      +                          _lib.c: 51: {;../code_master.X/I2C_lib.c: 52:   SSPSTAT = 0x80;
  1070                           
  1071                           ;incstack = 0
  1072                           ; Regs used in _I2C_Slave_Init: [wreg]
  1073  01D4  3080               	movlw	128
  1074  01D5  1683               	bsf	3,5	;RP0=1, select bank1
  1075  01D6  1303               	bcf	3,6	;RP1=0, select bank1
  1076  01D7  0094               	movwf	20	;volatile
  1077                           
  1078                           ;../code_master.X/I2C_lib.c: 53:   SSPADD = address;
  1079  01D8  0873               	movf	I2C_Slave_Init@address,w
  1080  01D9  0093               	movwf	19	;volatile
  1081                           
  1082                           ;../code_master.X/I2C_lib.c: 54:   SSPCON = 0x36;
  1083  01DA  3036               	movlw	54
  1084  01DB  1283               	bcf	3,5	;RP0=0, select bank0
  1085  01DC  1303               	bcf	3,6	;RP1=0, select bank0
  1086  01DD  0094               	movwf	20	;volatile
  1087                           
  1088                           ;../code_master.X/I2C_lib.c: 55:   SSPCON2 = 0x01;
  1089  01DE  3001               	movlw	1
  1090  01DF  1683               	bsf	3,5	;RP0=1, select bank1
  1091  01E0  1303               	bcf	3,6	;RP1=0, select bank1
  1092  01E1  0091               	movwf	17	;volatile
  1093                           
  1094                           ;../code_master.X/I2C_lib.c: 56:   TRISC3 = 1;
  1095  01E2  1587               	bsf	7,3	;volatile
  1096                           
  1097                           ;../code_master.X/I2C_lib.c: 57:   TRISC4 = 1;
  1098  01E3  1607               	bsf	7,4	;volatile
  1099                           
  1100                           ;../code_master.X/I2C_lib.c: 58:   GIE = 1;
  1101  01E4  178B               	bsf	11,7	;volatile
  1102                           
  1103                           ;../code_master.X/I2C_lib.c: 59:   PEIE = 1;
  1104  01E5  170B               	bsf	11,6	;volatile
  1105                           
  1106                           ;../code_master.X/I2C_lib.c: 60:   SSPIF = 0;
  1107  01E6  1283               	bcf	3,5	;RP0=0, select bank0
  1108  01E7  1303               	bcf	3,6	;RP1=0, select bank0
  1109  01E8  118C               	bcf	12,3	;volatile
  1110                           
  1111                           ;../code_master.X/I2C_lib.c: 61:   SSPIE = 1;
  1112  01E9  1683               	bsf	3,5	;RP0=1, select bank1
  1113  01EA  1303               	bcf	3,6	;RP1=0, select bank1
  1114  01EB  158C               	bsf	12,3	;volatile
  1115  01EC  0008               	return
  1116  01ED                     __end_of_I2C_Slave_Init:	
  1117                           
  1118                           	psect	text5
  1119  00E1                     __ptext5:	
  1120 ;; *************** function _i2c_slave_read *****************
  1121 ;; Defined at:
  1122 ;;		line 75 in file "main_slaves.c"
  1123 ;; Parameters:    Size  Location     Type
  1124 ;;		None
  1125 ;; Auto vars:     Size  Location     Type
  1126 ;;		None
  1127 ;; Return value:  Size  Location     Type
  1128 ;;                  1    wreg      void 
  1129 ;; Registers used:
  1130 ;;		wreg, status,2, status,0
  1131 ;; Tracked objects:
  1132 ;;		On entry : 0/0
  1133 ;;		On exit  : 0/0
  1134 ;;		Unchanged: 0/0
  1135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1136 ;;      Params:         0       0       0       0       0
  1137 ;;      Locals:         0       0       0       0       0
  1138 ;;      Temps:          3       0       0       0       0
  1139 ;;      Totals:         3       0       0       0       0
  1140 ;;Total ram usage:        3 bytes
  1141 ;; Hardware stack levels used:    1
  1142 ;; This function calls:
  1143 ;;		Nothing
  1144 ;; This function is called by:
  1145 ;;		Interrupt level 1
  1146 ;; This function uses a non-reentrant model
  1147 ;;
  1148                           
  1149                           
  1150                           ;psect for function _i2c_slave_read
  1151  00E1                     _i2c_slave_read:	
  1152                           
  1153                           ;main_slaves.c: 77:   if(SSPIF == 1)
  1154  00E1  1283               	bcf	3,5	;RP0=0, select bank0
  1155  00E2  1303               	bcf	3,6	;RP1=0, select bank0
  1156  00E3  1D8C               	btfss	12,3	;volatile
  1157  00E4  28F1               	goto	i1l1172
  1158                           
  1159                           ;main_slaves.c: 78:   {;main_slaves.c: 79:     CKP = 0;
  1160  00E5  1214               	bcf	20,4	;volatile
  1161                           
  1162                           ;main_slaves.c: 81:     if ((SSPOV) || (WCOL))
  1163  00E6  1B14               	btfsc	20,6	;volatile
  1164  00E7  28EA               	goto	i1l1164
  1165  00E8  1F94               	btfss	20,7	;volatile
  1166  00E9  28F1               	goto	i1l1172
  1167  00EA                     i1l1164:	
  1168                           
  1169                           ;main_slaves.c: 82:     {;main_slaves.c: 83:       data = SSPBUF;
  1170  00EA  0813               	movf	19,w	;volatile
  1171  00EB  00F0               	movwf	??_i2c_slave_read
  1172  00EC  0870               	movf	??_i2c_slave_read,w
  1173  00ED  00FA               	movwf	_data
  1174                           
  1175                           ;main_slaves.c: 84:       SSPOV = 0;
  1176  00EE  1314               	bcf	20,6	;volatile
  1177                           
  1178                           ;main_slaves.c: 85:       WCOL = 0;
  1179  00EF  1394               	bcf	20,7	;volatile
  1180                           
  1181                           ;main_slaves.c: 86:       CKP = 1;
  1182  00F0  1614               	bsf	20,4	;volatile
  1183  00F1                     i1l1172:	
  1184                           
  1185                           ;main_slaves.c: 90:   if(!D_nA && !R_nW)
  1186  00F1  1683               	bsf	3,5	;RP0=1, select bank1
  1187  00F2  1303               	bcf	3,6	;RP1=0, select bank1
  1188  00F3  1E94               	btfss	20,5	;volatile
  1189  00F4  1914               	btfsc	20,2	;volatile
  1190  00F5  2919               	goto	i1l134
  1191                           
  1192                           ;main_slaves.c: 91:   {;main_slaves.c: 92:     data = SSPBUF;
  1193  00F6  1283               	bcf	3,5	;RP0=0, select bank0
  1194  00F7  1303               	bcf	3,6	;RP1=0, select bank0
  1195  00F8  0813               	movf	19,w	;volatile
  1196  00F9  00F0               	movwf	??_i2c_slave_read
  1197  00FA  0870               	movf	??_i2c_slave_read,w
  1198  00FB  00FA               	movwf	_data
  1199  00FC                     i1l135:	
  1200                           ;main_slaves.c: 93:     while(!BF);
  1201                           
  1202  00FC  1683               	bsf	3,5	;RP0=1, select bank1
  1203  00FD  1303               	bcf	3,6	;RP1=0, select bank1
  1204  00FE  1C14               	btfss	20,0	;volatile
  1205  00FF  28FC               	goto	i1l135
  1206                           
  1207                           ;main_slaves.c: 94:     if(SSPBUF == 0x01) key = 1;
  1208  0100  1283               	bcf	3,5	;RP0=0, select bank0
  1209  0101  1303               	bcf	3,6	;RP1=0, select bank0
  1210  0102  0313               	decf	19,w	;volatile
  1211  0103  1D03               	btfss	3,2
  1212  0104  2907               	goto	i1l1182
  1213  0105  01B5               	clrf	_key
  1214  0106  0AB5               	incf	_key,f
  1215  0107                     i1l1182:	
  1216                           
  1217                           ;main_slaves.c: 95:     if(SSPBUF == 0x02) key = 2;
  1218  0107  3002               	movlw	2
  1219  0108  0613               	xorwf	19,w	;volatile
  1220  0109  1D03               	btfss	3,2
  1221  010A  290F               	goto	i1l1186
  1222  010B  3002               	movlw	2
  1223  010C  00F0               	movwf	??_i2c_slave_read
  1224  010D  0870               	movf	??_i2c_slave_read,w
  1225  010E  00B5               	movwf	_key
  1226  010F                     i1l1186:	
  1227                           
  1228                           ;main_slaves.c: 96:     if(SSPBUF == 0x03) key = 3;
  1229  010F  3003               	movlw	3
  1230  0110  0613               	xorwf	19,w	;volatile
  1231  0111  1D03               	btfss	3,2
  1232  0112  2917               	goto	i1l1190
  1233  0113  3003               	movlw	3
  1234  0114  00F0               	movwf	??_i2c_slave_read
  1235  0115  0870               	movf	??_i2c_slave_read,w
  1236  0116  00B5               	movwf	_key
  1237  0117                     i1l1190:	
  1238                           
  1239                           ;main_slaves.c: 97:     CKP = 1;
  1240  0117  1614               	bsf	20,4	;volatile
  1241                           
  1242                           ;main_slaves.c: 98:   }
  1243  0118  292E               	goto	i1l141
  1244  0119                     i1l134:	
  1245                           ;main_slaves.c: 99:   else if(!D_nA && R_nW)
  1246                           
  1247  0119  1E94               	btfss	20,5	;volatile
  1248  011A  1D14               	btfss	20,2	;volatile
  1249  011B  292E               	goto	i1l141
  1250                           
  1251                           ;main_slaves.c: 100:   {;main_slaves.c: 101:     data = SSPBUF;
  1252  011C  1283               	bcf	3,5	;RP0=0, select bank0
  1253  011D  1303               	bcf	3,6	;RP1=0, select bank0
  1254  011E  0813               	movf	19,w	;volatile
  1255  011F  00F0               	movwf	??_i2c_slave_read
  1256  0120  0870               	movf	??_i2c_slave_read,w
  1257  0121  00FA               	movwf	_data
  1258                           
  1259                           ;main_slaves.c: 102:     BF = 0;
  1260  0122  1683               	bsf	3,5	;RP0=1, select bank1
  1261  0123  1303               	bcf	3,6	;RP1=0, select bank1
  1262  0124  1014               	bcf	20,0	;volatile
  1263                           
  1264                           ;main_slaves.c: 103:     SSPBUF = PORTB ;
  1265  0125  1283               	bcf	3,5	;RP0=0, select bank0
  1266  0126  1303               	bcf	3,6	;RP1=0, select bank0
  1267  0127  0806               	movf	6,w	;volatile
  1268  0128  0093               	movwf	19	;volatile
  1269                           
  1270                           ;main_slaves.c: 104:     CKP = 1;
  1271  0129  1614               	bsf	20,4	;volatile
  1272  012A                     i1l143:	
  1273                           ;main_slaves.c: 105:     while(BF);
  1274                           
  1275  012A  1683               	bsf	3,5	;RP0=1, select bank1
  1276  012B  1303               	bcf	3,6	;RP1=0, select bank1
  1277  012C  1814               	btfsc	20,0	;volatile
  1278  012D  292A               	goto	i1l143
  1279  012E                     i1l141:	
  1280                           
  1281                           ;main_slaves.c: 108:   SSPIF = 0;
  1282  012E  1283               	bcf	3,5	;RP0=0, select bank0
  1283  012F  118C               	bcf	12,3	;volatile
  1284  0130  0872               	movf	??_i2c_slave_read+2,w
  1285  0131  008A               	movwf	10
  1286  0132  0E71               	swapf	(??_i2c_slave_read+1)^(0+4294967168),w
  1287  0133  0083               	movwf	3
  1288  0134  0EFE               	swapf	126,f
  1289  0135  0E7E               	swapf	126,w
  1290  0136  0009               	retfie
  1291  0137                     __end_of_i2c_slave_read:	
  1292  007E                     btemp	set	126	;btemp
  1293  007E                     wtemp0	set	126
  1294                           
  1295                           	psect	intentry
  1296  0004                     __pintentry:	
  1297                           ;incstack = 0
  1298                           ; Regs used in _i2c_slave_read: [wreg+status,2+status,0]
  1299                           
  1300  0004                     interrupt_function:	
  1301  007E                     saved_w	set	btemp
  1302  0004  00FE               	movwf	btemp
  1303  0005  0E03               	swapf	3,w
  1304  0006  00F1               	movwf	??_i2c_slave_read+1
  1305  0007  080A               	movf	10,w
  1306  0008  00F2               	movwf	??_i2c_slave_read+2
  1307  0009  120A  118A  28E1   	ljmp	_i2c_slave_read


Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      11
    BANK0            80     11      22
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _Led7_display->___awmod

Critical Paths under _i2c_slave_read in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_Led7_display
    _Led7_display->___awdiv

Critical Paths under _i2c_slave_read in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _i2c_slave_read in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _i2c_slave_read in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _i2c_slave_read in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    1630
                                              7 BANK0      4     4      0
                     _I2C_Slave_Init
                       _Led7_display
 ---------------------------------------------------------------------------------
 (1) _Led7_display                                         3     3      0    1300
                                              4 BANK0      3     3      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     613
                                              3 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     625
                                              3 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Slave_Init                                       2     0      2      98
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _i2c_slave_read                                       3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Slave_Init
   _Led7_display
     ___awdiv
     ___awmod

 _i2c_slave_read (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      B      16       5       27.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      21      12        0.0%
ABS                  0      0      21       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Jul 27 23:17:38 2019

                      pc 0002              __CFG_CP$OFF 0000                       _BF 04A0  
           ___awdiv@sign 0021                       fsr 0004                      _CKP 00A4  
                    _GIE 005F                      _RB0 0030                      _RB1 0031  
                    _PEN 048A             __CFG_CPD$OFF 0000                      _SEN 0488  
                    u855 00A8                      u875 00B4                      u955 01A3  
                    u885 00C0                      u895 00CA                      u975 01B4  
                    u985 01BD                      _key 0035                      fsr0 0004  
                    indf 0000             ___awmod@sign 0079             __CFG_FOSC$HS 0000  
           __CFG_LVP$OFF 0000                     l1214 009D                     l1240 00DC  
                   l1232 00C9                     l1224 00A5                     l1208 0092  
                   l1304 0033                     l1226 00B3                     l1236 00D4  
                   l1252 0193                     l1308 0039                     l1270 01BC  
                   l1350 007A                     l1318 003E                     l1342 0068  
                   l1264 01A0                     l1256 019A                     l1266 01AE  
                   l1274 01C7                     l1348 0078                     l1278 01CF  
                   u1107 0159                     u1117 0180                     u1087 0054  
                   u1097 0080                     _PEIE 005E                     _RCEN 048B  
                   _WCOL 00A7                     _RSEN 0489                     _D_nA 04A5  
                   _R_nW 04A2             __CFG_WRT$OFF 0000                     _data 007A  
                   _main 0021                     btemp 007E                     start 000C  
                  ?_main 0070                    _ACKEN 048C                    _ACKDT 048D  
        __end_of___awdiv 00E1            __CFG_WDTE$OFF 0000          __end_of___awmod 01D4  
        ___awdiv@divisor 0073                    i1l141 012E                    i1l134 0119  
                  i1l143 012A                    i1l135 00FC          ___awdiv@counter 0020  
                  _PORTB 0006                    _PORTD 0008                    _TRISD 0088  
                  _SSPIE 0463                    _SSPIF 0063                    _SSPOV 00A6  
                  main@i 0029           __CFG_BOREN$OFF 0000                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 0086                   ??_main 0027           _i2c_slave_read 00E1  
  __size_of_Led7_display 0052         ___awdiv@dividend 0075                   i1l1164 00EA  
                 i1l1172 00F1                   i1l1190 0117                   i1l1182 0107  
                 i1l1186 010F                   _SSPADD 0093                   _TRISB0 0430  
                 _TRISB1 0431                   _TRISC3 043B                   _TRISC4 043C  
                 _SSPCON 0014                   _SSPBUF 0013           __CFG_PWRTE$OFF 0000  
              ??___awdiv 0077                ??___awmod 0077         ___awdiv@quotient 0022  
        ___awmod@divisor 0073             _Led7_display 0137          ___awmod@counter 0078  
 __end_of_i2c_slave_read 0137                   saved_w 007E       Led7_display@number 0026  
__end_of__initialization 001D           __pcstackCOMMON 0070             __pidataBANK0 01FE  
__size_of_I2C_Slave_Init 0019          ?_i2c_slave_read 0070    I2C_Slave_Init@address 0073  
             __pbssBANK0 0035               __pmaintext 0021               __pintentry 0004  
                _SSPCON2 0091                  _SSPSTAT 0094                  ___awdiv 0086  
                ___awmod 0189                  __ptext1 0137                  __ptext2 0189  
                __ptext3 0086                  __ptext4 01D4                  __ptext5 00E1  
       ___awmod@dividend 0075     end_of_initialization 001D           _I2C_Slave_Init 01D4  
             main@number 002A   __end_of_I2C_Slave_Init 01ED         ??_i2c_slave_read 0070  
    start_initialization 000F          ?_I2C_Slave_Init 0073               init_fetch0 01ED  
            __pdataBANK0 002B              __pbssCOMMON 007A                ___latbits 0002  
          __pcstackBANK0 0020                 ?___awdiv 0073                 ?___awmod 0073  
      interrupt_function 0004            ?_Led7_display 0070           ??_Led7_display 0024  
       __size_of___awdiv 005B         __size_of___awmod 004B                 _code7seg 002B  
       ??_I2C_Slave_Init 0075            __size_of_main 0065                 init_ram0 01F1  
               intlevel1 0000  __size_of_i2c_slave_read 0056     __end_of_Led7_display 0189  
