Microchip MPLAB XC8 Compiler V2.05 ()

Linker command line:

-W-3 --edf=D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\dat\en_msgs.txt -cs \
  -h+dist/default/production\code_DHT11.X.production.sym \
  --cmf=dist/default/production\code_DHT11.X.production.cmf -z -Q16F877A \
  -oC:\Users\Admin\AppData\Local\Temp\s5e4.2 --defsym=__MPLAB_BUILD=1 \
  -Mdist/default/production/code_DHT11.X.production.map -E1 -ver=XC8 \
  --acfsm=1493 -ASTACK=0110h-016Fh -pstack=STACK -ACODE=00h-07FFhx4 \
  -ASTRCODE=00h-01FFFh -ASTRING=00h-0FFhx32 -ACONST=00h-0FFhx32 \
  -AENTRY=00h-0FFhx32 -ACOMMON=070h-07Fh -ABANK0=020h-06Fh \
  -ABANK1=0A0h-0EFh -ABANK2=0110h-016Fh -ABANK3=0190h-01EFh \
  -ARAM=020h-06Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh \
  -AABS1=020h-07Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh -ASFR0=00h-01Fh \
  -ASFR1=080h-09Fh -ASFR2=0100h-010Fh -ASFR3=0180h-018Fh \
  -preset_vec=00h,intentry,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=ENTRY -ACONFIG=02007h-02007h -pconfig=CONFIG -DCONFIG=2 \
  -AIDLOC=02000h-02003h -pidloc=IDLOC -DIDLOC=2 -AEEDATA=00h-0FFh/02100h \
  -peeprom_data=EEDATA -DEEDATA=2 -DCODE=2 -DSTRCODE=2 -DSTRING=2 -DCONST=2 \
  -DENTRY=2 -k C:\Users\Admin\AppData\Local\Temp\s5e4.o \
  dist/default/production\code_DHT11.X.production.o 

Object code version is 3.11

Machine type is 16F877A



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\Admin\AppData\Local\Temp\s5e4.o
                end_init                              0        0        3        0       0
                config                             2007     2007        1     400E       0
dist/default/production\code_DHT11.X.production.o
                cinit                               7FC      7FC        4      FF8       0
                text13                              3D5      3D5       1A      7AA       0
                text12                              3EF      3EF       1A      7DE       0
                text11                              58E      58E       85      B1C       0
                text10                              544      544       4A      A88       0
                text9                               409      409       29      812       0
                text8                               492      492       39      924       0
                text7                               507      507       3D      A0E       0
                text6                               432      432       2E      864       0
                text5                               3C2      3C2       13      784       0
                text4                               3B7      3B7        B      76E       0
                text3                               4CB      4CB       3C      996       0
                text2                               460      460       32      8C0       0
                text1                               613      613       D8      C26       0
                maintext                            6EB      6EB      111      DD6       0
                cstackBANK0                          20       20       1D       20       1
                cstackCOMMON                         70       70        E       70       1
                strings                               3        3       36        6       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                              0        0        3         0
                cinit                               7FC      7FC        4         0
                text13                              3D5      3D5       1A         0
                text12                              3EF      3EF       1A         0
                text11                              58E      58E       85         0
                text10                              544      544       4A         0
                text9                               409      409       29         0
                text8                               492      492       39         0
                text7                               507      507       3D         0
                text6                               432      432       2E         0
                text5                               3C2      3C2       13         0
                text4                               3B7      3B7        B         0
                text3                               4CB      4CB       3C         0
                text2                               460      460       32         0
                text1                               613      613       D8         0
                maintext                            6EB      6EB      111         0

        CLASS   STRCODE        

        CLASS   STRING         
                strings                               3        3       36         0

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         70       70        E         1

        CLASS   BANK0          
                cstackBANK0                          20       20       1D         1

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         
                config                             2007     2007        1         0

        CLASS   IDLOC          

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000003  000003         0       0  CODE        2
                strings                        000003  000036  000039         6       0  STRING      2
                cstackBANK0                    000020  00001D  00003D        20       1  BANK0       1
                cstackCOMMON                   000070  00000E  00007E        70       1  COMMON      1
                text4                          0003B7  00000B  0003C2       76E       0  CODE        2
                text5                          0003C2  000013  0003D5       784       0  CODE        2
                text13                         0003D5  00001A  0003EF       7AA       0  CODE        2
                text12                         0003EF  00001A  000409       7DE       0  CODE        2
                text9                          000409  000029  000432       812       0  CODE        2
                text6                          000432  00002E  000460       864       0  CODE        2
                text2                          000460  000032  000492       8C0       0  CODE        2
                text8                          000492  000039  0004CB       924       0  CODE        2
                text3                          0004CB  00003C  000507       996       0  CODE        2
                text7                          000507  00003D  000544       A0E       0  CODE        2
                text10                         000544  00004A  00058E       A88       0  CODE        2
                text11                         00058E  000085  000613       B1C       0  CODE        2
                text1                          000613  0000D8  0006EB       C26       0  CODE        2
                maintext                       0006EB  000111  0007FC       DD6       0  CODE        2
                cinit                          0007FC  000004  000800       FF8       0  CODE        2
                config                         002007  000001  002008      400E       0  CONFIG      2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            003D-006F             33           1
        BANK1            00A0-00EF             50           1
        BANK2            0110-016F             60           1
        BANK3            0190-01EF             60           1
        CODE             0039-03B6            37E           2
                         0800-1FFF            800
        CONST            0039-03B6            100           2
                         0800-1FFF            100
        EEDATA           2100-21FF            100           2
        ENTRY            0039-03B6            100           2
                         0800-1FFF            100
        IDLOC            2000-2003              4           2
        RAM              003D-006F             33           1
                         00A0-00EF             50
                         0110-016F             60
                         0190-01EF             60
        SFR0             0000-001F             20           1
        SFR1             0080-009F             20           1
        SFR2             0100-010F             10           1
        SFR3             0180-018F             10           1
        STACK            0110-016F             60           1
        STRCODE          0039-03B6            37E           2
                         0800-1FFF           1800
        STRING           0039-03B6            100           2
                         0800-1FFF            100

                                  Symbol Table

?___lwdiv                  cstackCOMMON 0070
?___lwmod                  cstackCOMMON 0078
?_sprintf                  cstackBANK0  0020
Lcd_Cmd@a                  cstackCOMMON 0073
Lcd_Port@a                 cstackCOMMON 0070
Lcd_Set_Cursor@a           cstackCOMMON 0077
Lcd_Set_Cursor@b           cstackCOMMON 0074
Lcd_Set_Cursor@temp        cstackCOMMON 007A
Lcd_Set_Cursor@y           cstackCOMMON 0079
Lcd_Set_Cursor@z           cstackCOMMON 0078
Lcd_Set_Port@a             cstackCOMMON 0072
Lcd_Write_Char@a           cstackCOMMON 0074
Lcd_Write_Char@temp        cstackCOMMON 0072
Lcd_Write_Char@y           cstackCOMMON 0073
Lcd_Write_String@a         cstackCOMMON 0075
Lcd_Write_String@i         cstackCOMMON 007A
Receive_data@c             cstackCOMMON 0074
Receive_data@q             cstackCOMMON 0072
_Lcd_Cmd                   text12       03EF
_Lcd_Init                  text11       058E
_Lcd_Port                  text13       03D5
_Lcd_Set_Cursor            text10       0544
_Lcd_Set_Port              text9        0409
_Lcd_Write_Char            text8        0492
_Lcd_Write_String          text7        0507
_RB0                       (abs)        0030
_RD0                       (abs)        0040
_RD1                       (abs)        0041
_RD2                       (abs)        0042
_RD3                       (abs)        0043
_RD4                       (abs)        0044
_RD5                       (abs)        0045
_Receive_data              text6        0432
_Request                   text5        03C2
_Response                  text4        03B7
_TRISA                     (abs)        0085
_TRISB                     (abs)        0086
_TRISB0                    (abs)        0430
_TRISC                     (abs)        0087
_TRISD                     (abs)        0088
__CFG_BOREN$OFF            (abs)        0000
__CFG_CP$OFF               (abs)        0000
__CFG_CPD$OFF              (abs)        0000
__CFG_FOSC$HS              (abs)        0000
__CFG_LVP$OFF              (abs)        0000
__CFG_PWRTE$OFF            (abs)        0000
__CFG_WDTE$OFF             (abs)        0000
__CFG_WRT$OFF              (abs)        0000
__Habs1                    abs1         0000
__Hbank0                   bank0        0000
__Hbank1                   bank1        0000
__Hbank2                   bank2        0000
__Hbank3                   bank3        0000
__Hcinit                   cinit        0800
__Hclrtext                 clrtext      0000
__Hcode                    code         0000
__Hcommon                  common       0000
__Hconfig                  config       2008
__HcstackBANK0             cstackBANK0  0000
__HcstackCOMMON            cstackCOMMON 0000
__Heeprom_data             eeprom_data  0000
__Hend_init                end_init     0003
__Hfunctab                 functab      0000
__Hidloc                   idloc        0000
__Hinit                    init         0000
__Hintentry                intentry     0000
__Hmaintext                maintext     0000
__Hpowerup                 powerup      0000
__Hram                     ram          0000
__Hreset_vec               reset_vec    0000
__Hsfr0                    sfr0         0000
__Hsfr1                    sfr1         0000
__Hsfr2                    sfr2         0000
__Hsfr3                    sfr3         0000
__Hspace_0                 (abs)        2008
__Hspace_1                 (abs)        007E
__Hspace_2                 (abs)        0000
__Hspace_3                 (abs)        0000
__Hstack                   stack        0000
__Hstrings                 strings      0000
__Htext                    text         0000
__Labs1                    abs1         0000
__Lbank0                   bank0        0000
__Lbank1                   bank1        0000
__Lbank2                   bank2        0000
__Lbank3                   bank3        0000
__Lcinit                   cinit        07FC
__Lclrtext                 clrtext      0000
__Lcode                    code         0000
__Lcommon                  common       0000
__Lconfig                  config       2007
__LcstackBANK0             cstackBANK0  0000
__LcstackCOMMON            cstackCOMMON 0000
__Leeprom_data             eeprom_data  0000
__Lend_init                end_init     0000
__Lfunctab                 functab      0000
__Lidloc                   idloc        0000
__Linit                    init         0000
__Lintentry                intentry     0000
__Lmaintext                maintext     0000
__Lpowerup                 powerup      0000
__Lram                     ram          0000
__Lreset_vec               reset_vec    0000
__Lsfr0                    sfr0         0000
__Lsfr1                    sfr1         0000
__Lsfr2                    sfr2         0000
__Lsfr3                    sfr3         0000
__Lspace_0                 (abs)        0000
__Lspace_1                 (abs)        0000
__Lspace_2                 (abs)        0000
__Lspace_3                 (abs)        0000
__Lstack                   stack        0000
__Lstrings                 strings      0000
__Ltext                    text         0000
__S0                       (abs)        2008
__S1                       (abs)        007E
__S2                       (abs)        0000
__S3                       (abs)        0000
___int_sp                  stack        0000
___latbits                 (abs)        0002
___lwdiv                   text3        04CB
___lwdiv@counter           cstackCOMMON 0077
___lwdiv@dividend          cstackCOMMON 0072
___lwdiv@divisor           cstackCOMMON 0070
___lwdiv@quotient          cstackCOMMON 0075
___lwmod                   text2        0460
___lwmod@counter           cstackCOMMON 007D
___lwmod@dividend          cstackCOMMON 007A
___lwmod@divisor           cstackCOMMON 0078
___sp                      stack        0000
___stackhi                 (abs)        0000
___stacklo                 (abs)        0000
__end_of_Lcd_Cmd           text12       0409
__end_of_Lcd_Init          text11       0613
__end_of_Lcd_Port          text13       03EF
__end_of_Lcd_Set_Cursor    text10       058E
__end_of_Lcd_Set_Port      text9        0432
__end_of_Lcd_Write_Char    text8        04CB
__end_of_Lcd_Write_String  text7        0544
__end_of_Receive_data      text6        0460
__end_of_Request           text5        03D5
__end_of_Response          text4        03C2
__end_of___lwdiv           text3        0507
__end_of___lwmod           text2        0492
__end_of__initialization   cinit        07FC
__end_of__stringtab        strings      0013
__end_of_dpowers           strings      001D
__end_of_main              maintext     07FC
__end_of_sprintf           text1        06EB
__initialization           cinit        07FC
__pcstackBANK0             cstackBANK0  0020
__pcstackCOMMON            cstackCOMMON 0070
__pmaintext                maintext     06EB
__pstrings                 strings      0003
__ptext1                   text1        0613
__ptext10                  text10       0544
__ptext11                  text11       058E
__ptext12                  text12       03EF
__ptext13                  text13       03D5
__ptext2                   text2        0460
__ptext3                   text3        04CB
__ptext4                   text4        03B7
__ptext5                   text5        03C2
__ptext6                   text6        0432
__ptext7                   text7        0507
__ptext8                   text8        0492
__ptext9                   text9        0409
__size_of_Lcd_Cmd          (abs)        0000
__size_of_Lcd_Init         (abs)        0000
__size_of_Lcd_Port         (abs)        0000
__size_of_Lcd_Set_Cursor   (abs)        0000
__size_of_Lcd_Set_Port     (abs)        0000
__size_of_Lcd_Write_Char   (abs)        0000
__size_of_Lcd_Write_String (abs)        0000
__size_of_Receive_data     (abs)        0000
__size_of_Request          (abs)        0000
__size_of_Response         (abs)        0000
__size_of___lwdiv          (abs)        0000
__size_of___lwmod          (abs)        0000
__size_of_main             (abs)        0000
__size_of_sprintf          (abs)        0000
__stringbase               strings      0012
__stringtab                strings      0003
_dpowers                   strings      0013
_main                      maintext     06EB
_sprintf                   text1        0613
btemp                      (abs)        007E
end_of_initialization      cinit        07FC
intlevel0                  functab      0000
intlevel1                  functab      0000
intlevel2                  functab      0000
intlevel3                  functab      0000
intlevel4                  functab      0000
intlevel5                  functab      0000
main@CheckSum              cstackBANK0  0033
main@D_RH                  cstackBANK0  003A
main@D_Temp                cstackBANK0  003C
main@I_RH                  cstackBANK0  0039
main@I_Temp                cstackBANK0  003B
main@data                  cstackBANK0  0034
reset_vec                  reset_vec    0000
sprintf@ap                 cstackBANK0  0026
sprintf@c                  cstackBANK0  002C
sprintf@f                  cstackBANK0  0020
sprintf@flag               cstackBANK0  0027
sprintf@prec               cstackBANK0  0028
sprintf@sp                 cstackBANK0  002B
sprintf@val                cstackBANK0  0029
start                      init         0000
start_initialization       cinit        07FC
wtemp0                     (abs)        007E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 38 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  data            5   20[BANK0 ] unsigned char [5]
  D_Temp          1   28[BANK0 ] unsigned char 
  I_Temp          1   27[BANK0 ] unsigned char 
  D_RH            1   26[BANK0 ] unsigned char 
  I_RH            1   25[BANK0 ] unsigned char 
  CheckSum        1   19[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0      10       0       0       0
      Temps:          0       6       0       0       0
      Totals:         0      16       0       0       0
Total ram usage:       16 bytes
 Hardware stack levels required when called:    3
 This function calls:
		_Lcd_Init
		_Lcd_Set_Cursor
		_Lcd_Set_Port
		_Lcd_Write_Char
		_Lcd_Write_String
		_Receive_data
		_Request
		_Response
		_sprintf
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _sprintf *****************
 Defined at:
		line 500 in file "D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c"
 Parameters:    Size  Location     Type
  sp              1    wreg     PTR unsigned char 
		 -> main@data(5), 
  f               1    0[BANK0 ] PTR const unsigned char 
		 -> STR_7(3), STR_6(3), STR_5(3), STR_4(3), 
 Auto vars:     Size  Location     Type
  sp              1   11[BANK0 ] PTR unsigned char 
		 -> main@data(5), 
  tmpval          4    0        struct .
  val             2    9[BANK0 ] unsigned int 
  cp              2    0        PTR const unsigned char 
  len             2    0        unsigned int 
  c               1   12[BANK0 ] unsigned char 
  prec            1    8[BANK0 ] char 
  flag            1    7[BANK0 ] unsigned char 
  ap              1    6[BANK0 ] PTR void [1]
		 -> ?_sprintf(2), 
 Return value:  Size  Location     Type
                  2    0[BANK0 ] int 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       3       0       0       0
      Locals:         0       7       0       0       0
      Temps:          0       3       0       0       0
      Totals:         0      13       0       0       0
Total ram usage:       13 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		___lwdiv
		___lwmod
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function ___lwmod *****************
 Defined at:
		line 5 in file "D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\lwmod.c"
 Parameters:    Size  Location     Type
  divisor         2    8[COMMON] unsigned int 
  dividend        2   10[COMMON] unsigned int 
 Auto vars:     Size  Location     Type
  counter         1   13[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  2    8[COMMON] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         4       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         6       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_sprintf
 This function uses a non-reentrant model


 *************** function ___lwdiv *****************
 Defined at:
		line 5 in file "D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\lwdiv.c"
 Parameters:    Size  Location     Type
  divisor         2    0[COMMON] unsigned int 
  dividend        2    2[COMMON] unsigned int 
 Auto vars:     Size  Location     Type
  quotient        2    5[COMMON] unsigned int 
  counter         1    7[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  2    0[COMMON] unsigned int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         4       0       0       0       0
      Locals:         3       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         8       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_sprintf
 This function uses a non-reentrant model


 *************** function _Response *****************
 Defined at:
		line 16 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Request *****************
 Defined at:
		line 9 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Receive_data *****************
 Defined at:
		line 23 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  q               2    2[COMMON] int 
  c               1    4[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0, btemp+1
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         3       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         5       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd_Write_String *****************
 Defined at:
		line 104 in file "lcd4.c"
 Parameters:    Size  Location     Type
  a               2    5[COMMON] PTR unsigned char 
		 -> main@data(5), STR_3(6), STR_2(8), STR_1(11), 
 Auto vars:     Size  Location     Type
  i               2   10[COMMON] int 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         2       0       0       0       0
      Locals:         2       0       0       0       0
      Temps:          3       0       0       0       0
      Totals:         7       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_Lcd_Write_Char
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd_Write_Char *****************
 Defined at:
		line 88 in file "lcd4.c"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  a               1    4[COMMON] unsigned char 
  y               1    3[COMMON] unsigned char 
  temp            1    2[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         3       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         4       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_Lcd_Port
 This function is called by:
		_Lcd_Write_String
		_main
 This function uses a non-reentrant model


 *************** function _Lcd_Set_Port *****************
 Defined at:
		line 122 in file "lcd4.c"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  a               1    2[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd_Set_Cursor *****************
 Defined at:
		line 43 in file "lcd4.c"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
  b               1    4[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  a               1    7[COMMON] unsigned char 
  temp            1   10[COMMON] unsigned char 
  y               1    9[COMMON] unsigned char 
  z               1    8[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         1       0       0       0       0
      Locals:         4       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         7       0       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_Lcd_Cmd
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd_Init *****************
 Defined at:
		line 64 in file "lcd4.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_Lcd_Cmd
		_Lcd_Port
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _Lcd_Cmd *****************
 Defined at:
		line 27 in file "lcd4.c"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  a               1    3[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_Lcd_Port
 This function is called by:
		_Lcd_Set_Cursor
		_Lcd_Init
		_Lcd_Clear
		_Lcd_Shift_Right
		_Lcd_Shift_Left
 This function uses a non-reentrant model


 *************** function _Lcd_Port *****************
 Defined at:
		line 5 in file "lcd4.c"
 Parameters:    Size  Location     Type
  a               1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  a               1    0[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         1       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_Lcd_Cmd
		_Lcd_Init
		_Lcd_Write_Char
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
lcd4.c
		_Lcd_Write_String		CODE           	0507	0000	62
		_Lcd_Init      		CODE           	058E	0000	134
		_Lcd_Write_Char		CODE           	0492	0000	58
		_Lcd_Cmd       		CODE           	03EF	0000	27
		_Lcd_Set_Port  		CODE           	0409	0000	42
		_Lcd_Set_Cursor		CODE           	0544	0000	75
		_Lcd_Port      		CODE           	03D5	0000	27

lcd4.c estimated size: 425

D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\lwmod.c
		___lwmod       		CODE           	0460	0000	51

D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\lwmod.c estimated size: 51

shared
		__stringtab    		STRING         	0003	0000	17
		_dpowers       		STRING         	0013	0000	11
		__initialization		CODE           	07FC	0000	1

shared estimated size: 29

D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c
		_sprintf       		CODE           	0613	0000	217

D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c estimated size: 217

D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\lwdiv.c
		___lwdiv       		CODE           	04CB	0000	61

D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\lwdiv.c estimated size: 61

main.c
		_Receive_data  		CODE           	0432	0000	47
		_main          		CODE           	06EB	0000	274
		_Response      		CODE           	03B7	0000	12
		_Request       		CODE           	03C2	0000	20

main.c estimated size: 353

