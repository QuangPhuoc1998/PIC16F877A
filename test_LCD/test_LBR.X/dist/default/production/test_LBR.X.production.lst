

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Mar 05 22:53:12 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.05
    16                           ; Generated 20/12/2018 GMT
    17                           ; 
    18                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0094                     	;# 
    97  0098                     	;# 
    98  0099                     	;# 
    99  009C                     	;# 
   100  009D                     	;# 
   101  009E                     	;# 
   102  009F                     	;# 
   103  010C                     	;# 
   104  010D                     	;# 
   105  010E                     	;# 
   106  010F                     	;# 
   107  018C                     	;# 
   108  018D                     	;# 
   109  0000                     	;# 
   110  0001                     	;# 
   111  0002                     	;# 
   112  0003                     	;# 
   113  0004                     	;# 
   114  0005                     	;# 
   115  0006                     	;# 
   116  0007                     	;# 
   117  0008                     	;# 
   118  0009                     	;# 
   119  000A                     	;# 
   120  000B                     	;# 
   121  000C                     	;# 
   122  000D                     	;# 
   123  000E                     	;# 
   124  000E                     	;# 
   125  000F                     	;# 
   126  0010                     	;# 
   127  0011                     	;# 
   128  0012                     	;# 
   129  0013                     	;# 
   130  0014                     	;# 
   131  0015                     	;# 
   132  0015                     	;# 
   133  0016                     	;# 
   134  0017                     	;# 
   135  0018                     	;# 
   136  0019                     	;# 
   137  001A                     	;# 
   138  001B                     	;# 
   139  001B                     	;# 
   140  001C                     	;# 
   141  001D                     	;# 
   142  001E                     	;# 
   143  001F                     	;# 
   144  0081                     	;# 
   145  0085                     	;# 
   146  0086                     	;# 
   147  0087                     	;# 
   148  0088                     	;# 
   149  0089                     	;# 
   150  008C                     	;# 
   151  008D                     	;# 
   152  008E                     	;# 
   153  0091                     	;# 
   154  0092                     	;# 
   155  0093                     	;# 
   156  0094                     	;# 
   157  0098                     	;# 
   158  0099                     	;# 
   159  009C                     	;# 
   160  009D                     	;# 
   161  009E                     	;# 
   162  009F                     	;# 
   163  010C                     	;# 
   164  010D                     	;# 
   165  010E                     	;# 
   166  010F                     	;# 
   167  018C                     	;# 
   168  018D                     	;# 
   169  0000                     	;# 
   170  0001                     	;# 
   171  0002                     	;# 
   172  0003                     	;# 
   173  0004                     	;# 
   174  0005                     	;# 
   175  0006                     	;# 
   176  0007                     	;# 
   177  0008                     	;# 
   178  0009                     	;# 
   179  000A                     	;# 
   180  000B                     	;# 
   181  000C                     	;# 
   182  000D                     	;# 
   183  000E                     	;# 
   184  000E                     	;# 
   185  000F                     	;# 
   186  0010                     	;# 
   187  0011                     	;# 
   188  0012                     	;# 
   189  0013                     	;# 
   190  0014                     	;# 
   191  0015                     	;# 
   192  0015                     	;# 
   193  0016                     	;# 
   194  0017                     	;# 
   195  0018                     	;# 
   196  0019                     	;# 
   197  001A                     	;# 
   198  001B                     	;# 
   199  001B                     	;# 
   200  001C                     	;# 
   201  001D                     	;# 
   202  001E                     	;# 
   203  001F                     	;# 
   204  0081                     	;# 
   205  0085                     	;# 
   206  0086                     	;# 
   207  0087                     	;# 
   208  0088                     	;# 
   209  0089                     	;# 
   210  008C                     	;# 
   211  008D                     	;# 
   212  008E                     	;# 
   213  0091                     	;# 
   214  0092                     	;# 
   215  0093                     	;# 
   216  0094                     	;# 
   217  0098                     	;# 
   218  0099                     	;# 
   219  009C                     	;# 
   220  009D                     	;# 
   221  009E                     	;# 
   222  009F                     	;# 
   223  010C                     	;# 
   224  010D                     	;# 
   225  010E                     	;# 
   226  010F                     	;# 
   227  018C                     	;# 
   228  018D                     	;# 
   229  0041                     _RD1	set	65
   230  0040                     _RD0	set	64
   231  0045                     _RD5	set	69
   232  0044                     _RD4	set	68
   233  0043                     _RD3	set	67
   234  0042                     _RD2	set	66
   235  0088                     _TRISD	set	136
   236                           
   237                           	psect	strings
   238  0003                     __pstrings:	
   239  0003                     stringtab:	
   240  0003                     __stringtab:	
   241  0003                     stringcode:	
   242                           ;	String table - string pointers are 1 byte each
   243                           
   244  0003                     stringdir:	
   245  0003  3000               	movlw	high stringdir
   246  0004  008A               	movwf	10
   247  0005  0804               	movf	4,w
   248  0006  0A84               	incf	4,f
   249  0007  0782               	addwf	2,f
   250  0008                     __stringbase:	
   251  0008  3400               	retlw	0
   252  0009                     __end_of__stringtab:	
   253  0009                     STR_1:	
   254  0009  3450               	retlw	80	;'P'
   255  000A  3468               	retlw	104	;'h'
   256  000B  3461               	retlw	97	;'a'
   257  000C  346D               	retlw	109	;'m'
   258  000D  3420               	retlw	32	;' '
   259  000E  3451               	retlw	81	;'Q'
   260  000F  3475               	retlw	117	;'u'
   261  0010  3461               	retlw	97	;'a'
   262  0011  346E               	retlw	110	;'n'
   263  0012  3467               	retlw	103	;'g'
   264  0013  3420               	retlw	32	;' '
   265  0014  3450               	retlw	80	;'P'
   266  0015  3468               	retlw	104	;'h'
   267  0016  3475               	retlw	117	;'u'
   268  0017  346F               	retlw	111	;'o'
   269  0018  3463               	retlw	99	;'c'
   270  0019  3400               	retlw	0
   271                           
   272                           ; #config settings
   273  0000                     
   274                           	psect	cinit
   275  07FC                     start_initialization:	
   276  07FC                     __initialization:	
   277  07FC                     end_of_initialization:	
   278                           ;End of C runtime variable initialization code
   279                           
   280  07FC                     __end_of__initialization:	
   281  07FC  0183               	clrf	3
   282  07FD  120A  118A  2F29   	ljmp	_main	;jump to C main() function
   283                           
   284                           	psect	cstackCOMMON
   285  0070                     __pcstackCOMMON:	
   286  0070                     ?_Lcd_Init:	
   287  0070                     ?_Lcd_Write_String:	
   288                           ; 1 bytes @ 0x0
   289                           
   290  0070                     ?_main:	
   291                           ; 1 bytes @ 0x0
   292                           
   293  0070                     ?_Lcd_Port:	
   294                           ; 1 bytes @ 0x0
   295                           
   296  0070                     ??_Lcd_Port:	
   297                           ; 1 bytes @ 0x0
   298                           
   299  0070                     ?_Lcd_Cmd:	
   300                           ; 1 bytes @ 0x0
   301                           
   302  0070                     ?_Lcd_Write_Char:	
   303                           ; 1 bytes @ 0x0
   304                           
   305  0070                     Lcd_Port@a:	
   306                           ; 1 bytes @ 0x0
   307                           
   308                           
   309                           ; 1 bytes @ 0x0
   310  0070                     	ds	1
   311  0071                     ??_Lcd_Cmd:	
   312  0071                     ??_Lcd_Write_Char:	
   313                           ; 1 bytes @ 0x1
   314                           
   315                           
   316                           ; 1 bytes @ 0x1
   317  0071                     	ds	1
   318  0072                     Lcd_Write_Char@temp:	
   319                           
   320                           ; 1 bytes @ 0x2
   321  0072                     	ds	1
   322  0073                     Lcd_Cmd@a:	
   323  0073                     Lcd_Write_Char@y:	
   324                           ; 1 bytes @ 0x3
   325                           
   326                           
   327                           ; 1 bytes @ 0x3
   328  0073                     	ds	1
   329  0074                     ??_Lcd_Init:	
   330  0074                     Lcd_Write_Char@a:	
   331                           ; 1 bytes @ 0x4
   332                           
   333                           
   334                           ; 1 bytes @ 0x4
   335  0074                     	ds	1
   336  0075                     ??_Lcd_Write_String:	
   337  0075                     Lcd_Write_String@i:	
   338                           ; 1 bytes @ 0x5
   339                           
   340                           
   341                           ; 2 bytes @ 0x5
   342  0075                     	ds	2
   343  0077                     Lcd_Write_String@a:	
   344                           
   345                           ; 1 bytes @ 0x7
   346  0077                     	ds	1
   347  0078                     ??_main:	
   348                           
   349                           ; 1 bytes @ 0x8
   350  0078                     	ds	3
   351                           
   352                           	psect	maintext
   353  0729                     __pmaintext:	
   354 ;;
   355 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   356 ;;
   357 ;; *************** function _main *****************
   358 ;; Defined at:
   359 ;;		line 12 in file "main.c"
   360 ;; Parameters:    Size  Location     Type
   361 ;;		None
   362 ;; Auto vars:     Size  Location     Type
   363 ;;		None
   364 ;; Return value:  Size  Location     Type
   365 ;;                  1    wreg      void 
   366 ;; Registers used:
   367 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   368 ;; Tracked objects:
   369 ;;		On entry : B00/0
   370 ;;		On exit  : 0/0
   371 ;;		Unchanged: 0/0
   372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   373 ;;      Params:         0       0       0       0       0
   374 ;;      Locals:         0       0       0       0       0
   375 ;;      Temps:          3       0       0       0       0
   376 ;;      Totals:         3       0       0       0       0
   377 ;;Total ram usage:        3 bytes
   378 ;; Hardware stack levels required when called:    3
   379 ;; This function calls:
   380 ;;		_Lcd_Init
   381 ;;		_Lcd_Write_String
   382 ;; This function is called by:
   383 ;;		Startup code after reset
   384 ;; This function uses a non-reentrant model
   385 ;;
   386                           
   387                           
   388                           ;psect for function _main
   389  0729                     _main:	
   390                           
   391                           ;main.c: 14:     TRISD = 0x00;
   392                           
   393                           ;incstack = 0
   394                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   395  0729  1683               	bsf	3,5	;RP0=1, select bank1
   396  072A  1303               	bcf	3,6	;RP1=0, select bank1
   397  072B  0188               	clrf	8	;volatile
   398                           
   399                           ;main.c: 15:     Lcd_Init();
   400  072C  120A  118A  27A0  120A  118A  	fcall	_Lcd_Init
   401                           
   402                           ;main.c: 16:     Lcd_Write_String("Pham Quang Phuoc");
   403  0731  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   404  0732  120A  118A  2745  120A  118A  	fcall	_Lcd_Write_String
   405  0737                     l769:	
   406                           
   407                           ;main.c: 18:     {;main.c: 19:         _delay((unsigned long)((1000)*(20000000/4000.0)))
      +                          ;
   408  0737  301A               	movlw	26
   409  0738  00FA               	movwf	??_main+2
   410  0739  305E               	movlw	94
   411  073A  00F9               	movwf	??_main+1
   412  073B  306E               	movlw	110
   413  073C  00F8               	movwf	??_main
   414  073D                     u127:	
   415  073D  0BF8               	decfsz	??_main,f
   416  073E  2F3D               	goto	u127
   417  073F  0BF9               	decfsz	??_main+1,f
   418  0740  2F3D               	goto	u127
   419  0741  0BFA               	decfsz	??_main+2,f
   420  0742  2F3D               	goto	u127
   421  0743  0000               	nop
   422  0744  2F37               	goto	l769
   423  0745                     __end_of_main:	
   424                           
   425                           	psect	text1
   426  0745                     __ptext1:	
   427 ;; *************** function _Lcd_Write_String *****************
   428 ;; Defined at:
   429 ;;		line 98 in file "lcd4.c"
   430 ;; Parameters:    Size  Location     Type
   431 ;;  a               1    wreg     PTR unsigned char 
   432 ;;		 -> STR_1(17), 
   433 ;; Auto vars:     Size  Location     Type
   434 ;;  a               1    7[COMMON] PTR unsigned char 
   435 ;;		 -> STR_1(17), 
   436 ;;  i               2    5[COMMON] int 
   437 ;; Return value:  Size  Location     Type
   438 ;;                  1    wreg      void 
   439 ;; Registers used:
   440 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   441 ;; Tracked objects:
   442 ;;		On entry : 0/0
   443 ;;		On exit  : 0/0
   444 ;;		Unchanged: 0/0
   445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   446 ;;      Params:         0       0       0       0       0
   447 ;;      Locals:         3       0       0       0       0
   448 ;;      Temps:          0       0       0       0       0
   449 ;;      Totals:         3       0       0       0       0
   450 ;;Total ram usage:        3 bytes
   451 ;; Hardware stack levels used:    1
   452 ;; Hardware stack levels required when called:    2
   453 ;; This function calls:
   454 ;;		_Lcd_Write_Char
   455 ;; This function is called by:
   456 ;;		_main
   457 ;; This function uses a non-reentrant model
   458 ;;
   459                           
   460                           
   461                           ;psect for function _Lcd_Write_String
   462  0745                     _Lcd_Write_String:	
   463                           
   464                           ;incstack = 0
   465                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   466                           ;Lcd_Write_String@a stored from wreg
   467  0745  00F7               	movwf	Lcd_Write_String@a
   468                           
   469                           ;lcd4.c: 98: void Lcd_Write_String(char *a);lcd4.c: 99: {;lcd4.c: 100:  int i;;lcd4.c: 1
      +                          01:  for(i=0;a[i]!='\0';i++)
   470  0746  01F5               	clrf	Lcd_Write_String@i
   471  0747  01F6               	clrf	Lcd_Write_String@i+1
   472  0748                     l761:	
   473  0748  0875               	movf	Lcd_Write_String@i,w
   474  0749  0777               	addwf	Lcd_Write_String@a,w
   475  074A  0084               	movwf	4
   476  074B  120A  118A  2003  120A  118A  	fcall	stringdir
   477  0750  3A00               	xorlw	0
   478  0751  1903               	btfsc	3,2
   479  0752  0008               	return
   480                           
   481                           ;lcd4.c: 102:     Lcd_Write_Char(a[i]);
   482  0753  0875               	movf	Lcd_Write_String@i,w
   483  0754  0777               	addwf	Lcd_Write_String@a,w
   484  0755  0084               	movwf	4
   485  0756  120A  118A  2003  120A  118A  	fcall	stringdir
   486  075B  120A  118A  2767  120A  118A  	fcall	_Lcd_Write_Char
   487  0760  3001               	movlw	1
   488  0761  07F5               	addwf	Lcd_Write_String@i,f
   489  0762  1803               	skipnc
   490  0763  0AF6               	incf	Lcd_Write_String@i+1,f
   491  0764  3000               	movlw	0
   492  0765  07F6               	addwf	Lcd_Write_String@i+1,f
   493  0766  2F48               	goto	l761
   494  0767                     __end_of_Lcd_Write_String:	
   495                           
   496                           	psect	text2
   497  0767                     __ptext2:	
   498 ;; *************** function _Lcd_Write_Char *****************
   499 ;; Defined at:
   500 ;;		line 82 in file "lcd4.c"
   501 ;; Parameters:    Size  Location     Type
   502 ;;  a               1    wreg     unsigned char 
   503 ;; Auto vars:     Size  Location     Type
   504 ;;  a               1    4[COMMON] unsigned char 
   505 ;;  y               1    3[COMMON] unsigned char 
   506 ;;  temp            1    2[COMMON] unsigned char 
   507 ;; Return value:  Size  Location     Type
   508 ;;                  1    wreg      void 
   509 ;; Registers used:
   510 ;;		wreg, status,2, status,0, pclath, cstack
   511 ;; Tracked objects:
   512 ;;		On entry : 0/0
   513 ;;		On exit  : 0/0
   514 ;;		Unchanged: 0/0
   515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   516 ;;      Params:         0       0       0       0       0
   517 ;;      Locals:         3       0       0       0       0
   518 ;;      Temps:          1       0       0       0       0
   519 ;;      Totals:         4       0       0       0       0
   520 ;;Total ram usage:        4 bytes
   521 ;; Hardware stack levels used:    1
   522 ;; Hardware stack levels required when called:    1
   523 ;; This function calls:
   524 ;;		_Lcd_Port
   525 ;; This function is called by:
   526 ;;		_Lcd_Write_String
   527 ;; This function uses a non-reentrant model
   528 ;;
   529                           
   530                           
   531                           ;psect for function _Lcd_Write_Char
   532  0767                     _Lcd_Write_Char:	
   533                           
   534                           ;incstack = 0
   535                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
   536                           ;Lcd_Write_Char@a stored from wreg
   537  0767  00F4               	movwf	Lcd_Write_Char@a
   538                           
   539                           ;lcd4.c: 82: void Lcd_Write_Char(char a);lcd4.c: 83: {;lcd4.c: 84:    char temp,y;;lcd4.
      +                          c: 85:    temp = a&0x0F;
   540  0768  0874               	movf	Lcd_Write_Char@a,w
   541  0769  390F               	andlw	15
   542  076A  00F1               	movwf	??_Lcd_Write_Char
   543  076B  0871               	movf	??_Lcd_Write_Char,w
   544  076C  00F2               	movwf	Lcd_Write_Char@temp
   545                           
   546                           ;lcd4.c: 86:    y = a&0xF0;
   547  076D  0874               	movf	Lcd_Write_Char@a,w
   548  076E  39F0               	andlw	240
   549  076F  00F1               	movwf	??_Lcd_Write_Char
   550  0770  0871               	movf	??_Lcd_Write_Char,w
   551  0771  00F3               	movwf	Lcd_Write_Char@y
   552                           
   553                           ;lcd4.c: 87:    RD0 = 1;
   554  0772  1283               	bcf	3,5	;RP0=0, select bank0
   555  0773  1303               	bcf	3,6	;RP1=0, select bank0
   556  0774  1408               	bsf	8,0	;volatile
   557                           
   558                           ;lcd4.c: 88:    Lcd_Port(y>>4);
   559  0775  0873               	movf	Lcd_Write_Char@y,w
   560  0776  00F1               	movwf	??_Lcd_Write_Char
   561  0777  3004               	movlw	4
   562  0778                     u55:	
   563  0778  1003               	clrc
   564  0779  0CF1               	rrf	??_Lcd_Write_Char,f
   565  077A  3EFF               	addlw	-1
   566  077B  1D03               	skipz
   567  077C  2F78               	goto	u55
   568  077D  0871               	movf	??_Lcd_Write_Char,w
   569  077E  120A  118A  26F5  120A  118A  	fcall	_Lcd_Port
   570                           
   571                           ;lcd4.c: 89:    RD1 = 1;
   572  0783  1283               	bcf	3,5	;RP0=0, select bank0
   573  0784  1303               	bcf	3,6	;RP1=0, select bank0
   574  0785  1488               	bsf	8,1	;volatile
   575                           
   576                           ;lcd4.c: 90:    _delay((unsigned long)((40)*(20000000/4000000.0)));
   577  0786  3042               	movlw	66
   578  0787  00F1               	movwf	??_Lcd_Write_Char
   579  0788                     u137:	
   580  0788  0BF1               	decfsz	??_Lcd_Write_Char,f
   581  0789  2F88               	goto	u137
   582  078A  0000               	nop
   583                           
   584                           ;lcd4.c: 91:    RD1 = 0;
   585  078B  1283               	bcf	3,5	;RP0=0, select bank0
   586  078C  1303               	bcf	3,6	;RP1=0, select bank0
   587  078D  1088               	bcf	8,1	;volatile
   588                           
   589                           ;lcd4.c: 92:    Lcd_Port(temp);
   590  078E  0872               	movf	Lcd_Write_Char@temp,w
   591  078F  120A  118A  26F5  120A  118A  	fcall	_Lcd_Port
   592                           
   593                           ;lcd4.c: 93:    RD1 = 1;
   594  0794  1283               	bcf	3,5	;RP0=0, select bank0
   595  0795  1303               	bcf	3,6	;RP1=0, select bank0
   596  0796  1488               	bsf	8,1	;volatile
   597                           
   598                           ;lcd4.c: 94:    _delay((unsigned long)((40)*(20000000/4000000.0)));
   599  0797  3042               	movlw	66
   600  0798  00F1               	movwf	??_Lcd_Write_Char
   601  0799                     u147:	
   602  0799  0BF1               	decfsz	??_Lcd_Write_Char,f
   603  079A  2F99               	goto	u147
   604  079B  0000               	nop
   605                           
   606                           ;lcd4.c: 95:    RD1 = 0;
   607  079C  1283               	bcf	3,5	;RP0=0, select bank0
   608  079D  1303               	bcf	3,6	;RP1=0, select bank0
   609  079E  1088               	bcf	8,1	;volatile
   610  079F  0008               	return
   611  07A0                     __end_of_Lcd_Write_Char:	
   612                           
   613                           	psect	text3
   614  07A0                     __ptext3:	
   615 ;; *************** function _Lcd_Init *****************
   616 ;; Defined at:
   617 ;;		line 63 in file "lcd4.c"
   618 ;; Parameters:    Size  Location     Type
   619 ;;		None
   620 ;; Auto vars:     Size  Location     Type
   621 ;;		None
   622 ;; Return value:  Size  Location     Type
   623 ;;                  1    wreg      void 
   624 ;; Registers used:
   625 ;;		wreg, status,2, status,0, pclath, cstack
   626 ;; Tracked objects:
   627 ;;		On entry : 0/0
   628 ;;		On exit  : 0/0
   629 ;;		Unchanged: 0/0
   630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   631 ;;      Params:         0       0       0       0       0
   632 ;;      Locals:         0       0       0       0       0
   633 ;;      Temps:          2       0       0       0       0
   634 ;;      Totals:         2       0       0       0       0
   635 ;;Total ram usage:        2 bytes
   636 ;; Hardware stack levels used:    1
   637 ;; Hardware stack levels required when called:    2
   638 ;; This function calls:
   639 ;;		_Lcd_Cmd
   640 ;;		_Lcd_Port
   641 ;; This function is called by:
   642 ;;		_main
   643 ;; This function uses a non-reentrant model
   644 ;;
   645                           
   646                           
   647                           ;psect for function _Lcd_Init
   648  07A0                     _Lcd_Init:	
   649                           
   650                           ;lcd4.c: 65:   Lcd_Port(0x00);
   651                           
   652                           ;incstack = 0
   653                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
   654  07A0  3000               	movlw	0
   655  07A1  120A  118A  26F5  120A  118A  	fcall	_Lcd_Port
   656                           
   657                           ;lcd4.c: 66:    _delay((unsigned long)((20)*(20000000/4000.0)));
   658  07A6  3082               	movlw	130
   659  07A7  00F5               	movwf	??_Lcd_Init+1
   660  07A8  30DD               	movlw	221
   661  07A9  00F4               	movwf	??_Lcd_Init
   662  07AA                     u157:	
   663  07AA  0BF4               	decfsz	??_Lcd_Init,f
   664  07AB  2FAA               	goto	u157
   665  07AC  0BF5               	decfsz	??_Lcd_Init+1,f
   666  07AD  2FAA               	goto	u157
   667  07AE  2FAF               	nop2
   668                           
   669                           ;lcd4.c: 67:   Lcd_Cmd(0x03);
   670  07AF  3003               	movlw	3
   671  07B0  120A  118A  270F  120A  118A  	fcall	_Lcd_Cmd
   672                           
   673                           ;lcd4.c: 68:  _delay((unsigned long)((5)*(20000000/4000.0)));
   674  07B5  3021               	movlw	33
   675  07B6  00F5               	movwf	??_Lcd_Init+1
   676  07B7  3076               	movlw	118
   677  07B8  00F4               	movwf	??_Lcd_Init
   678  07B9                     u167:	
   679  07B9  0BF4               	decfsz	??_Lcd_Init,f
   680  07BA  2FB9               	goto	u167
   681  07BB  0BF5               	decfsz	??_Lcd_Init+1,f
   682  07BC  2FB9               	goto	u167
   683  07BD  0000               	nop
   684                           
   685                           ;lcd4.c: 69:   Lcd_Cmd(0x03);
   686  07BE  3003               	movlw	3
   687  07BF  120A  118A  270F  120A  118A  	fcall	_Lcd_Cmd
   688                           
   689                           ;lcd4.c: 70:  _delay((unsigned long)((11)*(20000000/4000.0)));
   690  07C4  3048               	movlw	72
   691  07C5  00F5               	movwf	??_Lcd_Init+1
   692  07C6  306C               	movlw	108
   693  07C7  00F4               	movwf	??_Lcd_Init
   694  07C8                     u177:	
   695  07C8  0BF4               	decfsz	??_Lcd_Init,f
   696  07C9  2FC8               	goto	u177
   697  07CA  0BF5               	decfsz	??_Lcd_Init+1,f
   698  07CB  2FC8               	goto	u177
   699  07CC  0000               	nop
   700                           
   701                           ;lcd4.c: 71:   Lcd_Cmd(0x03);
   702  07CD  3003               	movlw	3
   703  07CE  120A  118A  270F  120A  118A  	fcall	_Lcd_Cmd
   704                           
   705                           ;lcd4.c: 73:   Lcd_Cmd(0x02);
   706  07D3  3002               	movlw	2
   707  07D4  120A  118A  270F  120A  118A  	fcall	_Lcd_Cmd
   708                           
   709                           ;lcd4.c: 74:   Lcd_Cmd(0x02);
   710  07D9  3002               	movlw	2
   711  07DA  120A  118A  270F  120A  118A  	fcall	_Lcd_Cmd
   712                           
   713                           ;lcd4.c: 75:   Lcd_Cmd(0x08);
   714  07DF  3008               	movlw	8
   715  07E0  120A  118A  270F  120A  118A  	fcall	_Lcd_Cmd
   716                           
   717                           ;lcd4.c: 76:   Lcd_Cmd(0x00);
   718  07E5  3000               	movlw	0
   719  07E6  120A  118A  270F  120A  118A  	fcall	_Lcd_Cmd
   720                           
   721                           ;lcd4.c: 77:   Lcd_Cmd(0x0C);
   722  07EB  300C               	movlw	12
   723  07EC  120A  118A  270F  120A  118A  	fcall	_Lcd_Cmd
   724                           
   725                           ;lcd4.c: 78:   Lcd_Cmd(0x00);
   726  07F1  3000               	movlw	0
   727  07F2  120A  118A  270F  120A  118A  	fcall	_Lcd_Cmd
   728                           
   729                           ;lcd4.c: 79:   Lcd_Cmd(0x06);
   730  07F7  3006               	movlw	6
   731  07F8  120A  118A  270F   	fcall	_Lcd_Cmd
   732  07FB  0008               	return
   733  07FC                     __end_of_Lcd_Init:	
   734                           
   735                           	psect	text4
   736  070F                     __ptext4:	
   737 ;; *************** function _Lcd_Cmd *****************
   738 ;; Defined at:
   739 ;;		line 27 in file "lcd4.c"
   740 ;; Parameters:    Size  Location     Type
   741 ;;  a               1    wreg     unsigned char 
   742 ;; Auto vars:     Size  Location     Type
   743 ;;  a               1    3[COMMON] unsigned char 
   744 ;; Return value:  Size  Location     Type
   745 ;;                  1    wreg      void 
   746 ;; Registers used:
   747 ;;		wreg, status,2, status,0, pclath, cstack
   748 ;; Tracked objects:
   749 ;;		On entry : 0/0
   750 ;;		On exit  : 0/0
   751 ;;		Unchanged: 0/0
   752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   753 ;;      Params:         0       0       0       0       0
   754 ;;      Locals:         1       0       0       0       0
   755 ;;      Temps:          2       0       0       0       0
   756 ;;      Totals:         3       0       0       0       0
   757 ;;Total ram usage:        3 bytes
   758 ;; Hardware stack levels used:    1
   759 ;; Hardware stack levels required when called:    1
   760 ;; This function calls:
   761 ;;		_Lcd_Port
   762 ;; This function is called by:
   763 ;;		_Lcd_Init
   764 ;;		_Lcd_Clear
   765 ;;		_Lcd_Set_Cursor
   766 ;;		_Lcd_Shift_Right
   767 ;;		_Lcd_Shift_Left
   768 ;; This function uses a non-reentrant model
   769 ;;
   770                           
   771                           
   772                           ;psect for function _Lcd_Cmd
   773  070F                     _Lcd_Cmd:	
   774                           
   775                           ;incstack = 0
   776                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
   777                           ;Lcd_Cmd@a stored from wreg
   778  070F  00F3               	movwf	Lcd_Cmd@a
   779                           
   780                           ;lcd4.c: 27: void Lcd_Cmd(char a);lcd4.c: 28: {;lcd4.c: 29:  RD0 = 0;
   781  0710  1283               	bcf	3,5	;RP0=0, select bank0
   782  0711  1303               	bcf	3,6	;RP1=0, select bank0
   783  0712  1008               	bcf	8,0	;volatile
   784                           
   785                           ;lcd4.c: 30:  Lcd_Port(a);
   786  0713  0873               	movf	Lcd_Cmd@a,w
   787  0714  120A  118A  26F5  120A  118A  	fcall	_Lcd_Port
   788                           
   789                           ;lcd4.c: 31:  RD1 = 1;
   790  0719  1283               	bcf	3,5	;RP0=0, select bank0
   791  071A  1303               	bcf	3,6	;RP1=0, select bank0
   792  071B  1488               	bsf	8,1	;volatile
   793                           
   794                           ;lcd4.c: 32:         _delay((unsigned long)((4)*(20000000/4000.0)));
   795  071C  301A               	movlw	26
   796  071D  00F2               	movwf	??_Lcd_Cmd+1
   797  071E  30F8               	movlw	248
   798  071F  00F1               	movwf	??_Lcd_Cmd
   799  0720                     u187:	
   800  0720  0BF1               	decfsz	??_Lcd_Cmd,f
   801  0721  2F20               	goto	u187
   802  0722  0BF2               	decfsz	??_Lcd_Cmd+1,f
   803  0723  2F20               	goto	u187
   804  0724  0000               	nop
   805                           
   806                           ;lcd4.c: 33:         RD1 = 0;
   807  0725  1283               	bcf	3,5	;RP0=0, select bank0
   808  0726  1303               	bcf	3,6	;RP1=0, select bank0
   809  0727  1088               	bcf	8,1	;volatile
   810  0728  0008               	return
   811  0729                     __end_of_Lcd_Cmd:	
   812                           
   813                           	psect	text5
   814  06F5                     __ptext5:	
   815 ;; *************** function _Lcd_Port *****************
   816 ;; Defined at:
   817 ;;		line 5 in file "lcd4.c"
   818 ;; Parameters:    Size  Location     Type
   819 ;;  a               1    wreg     unsigned char 
   820 ;; Auto vars:     Size  Location     Type
   821 ;;  a               1    0[COMMON] unsigned char 
   822 ;; Return value:  Size  Location     Type
   823 ;;                  1    wreg      void 
   824 ;; Registers used:
   825 ;;		wreg
   826 ;; Tracked objects:
   827 ;;		On entry : 0/0
   828 ;;		On exit  : 0/0
   829 ;;		Unchanged: 0/0
   830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   831 ;;      Params:         0       0       0       0       0
   832 ;;      Locals:         1       0       0       0       0
   833 ;;      Temps:          0       0       0       0       0
   834 ;;      Totals:         1       0       0       0       0
   835 ;;Total ram usage:        1 bytes
   836 ;; Hardware stack levels used:    1
   837 ;; This function calls:
   838 ;;		Nothing
   839 ;; This function is called by:
   840 ;;		_Lcd_Cmd
   841 ;;		_Lcd_Init
   842 ;;		_Lcd_Write_Char
   843 ;; This function uses a non-reentrant model
   844 ;;
   845                           
   846                           
   847                           ;psect for function _Lcd_Port
   848  06F5                     _Lcd_Port:	
   849                           
   850                           ;incstack = 0
   851                           ; Regs used in _Lcd_Port: [wreg]
   852                           ;Lcd_Port@a stored from wreg
   853  06F5  00F0               	movwf	Lcd_Port@a
   854                           
   855                           ;lcd4.c: 5: void Lcd_Port(char a);lcd4.c: 6: {;lcd4.c: 7:  if(a & 1)
   856  06F6  1C70               	btfss	Lcd_Port@a,0
   857  06F7  2EFC               	goto	l33
   858                           
   859                           ;lcd4.c: 8:   RD2 = 1;
   860  06F8  1283               	bcf	3,5	;RP0=0, select bank0
   861  06F9  1303               	bcf	3,6	;RP1=0, select bank0
   862  06FA  1508               	bsf	8,2	;volatile
   863  06FB  2EFF               	goto	l34
   864  06FC                     l33:	
   865                           ;lcd4.c: 9:  else
   866                           
   867                           
   868                           ;lcd4.c: 10:   RD2 = 0;
   869  06FC  1283               	bcf	3,5	;RP0=0, select bank0
   870  06FD  1303               	bcf	3,6	;RP1=0, select bank0
   871  06FE  1108               	bcf	8,2	;volatile
   872  06FF                     l34:	
   873                           
   874                           ;lcd4.c: 12:  if(a & 2)
   875  06FF  1CF0               	btfss	Lcd_Port@a,1
   876  0700  2F03               	goto	l35
   877                           
   878                           ;lcd4.c: 13:   RD3 = 1;
   879  0701  1588               	bsf	8,3	;volatile
   880  0702  2F04               	goto	l36
   881  0703                     l35:	
   882                           ;lcd4.c: 14:  else
   883                           
   884                           
   885                           ;lcd4.c: 15:   RD3 = 0;
   886  0703  1188               	bcf	8,3	;volatile
   887  0704                     l36:	
   888                           
   889                           ;lcd4.c: 17:  if(a & 4)
   890  0704  1D70               	btfss	Lcd_Port@a,2
   891  0705  2F08               	goto	l37
   892                           
   893                           ;lcd4.c: 18:   RD4 = 1;
   894  0706  1608               	bsf	8,4	;volatile
   895  0707  2F09               	goto	l38
   896  0708                     l37:	
   897                           ;lcd4.c: 19:  else
   898                           
   899                           
   900                           ;lcd4.c: 20:   RD4 = 0;
   901  0708  1208               	bcf	8,4	;volatile
   902  0709                     l38:	
   903                           
   904                           ;lcd4.c: 22:  if(a & 8)
   905  0709  1DF0               	btfss	Lcd_Port@a,3
   906  070A  2F0D               	goto	l39
   907                           
   908                           ;lcd4.c: 23:   RD5 = 1;
   909  070B  1688               	bsf	8,5	;volatile
   910  070C  0008               	return
   911  070D                     l39:	
   912                           ;lcd4.c: 24:  else
   913                           
   914                           
   915                           ;lcd4.c: 25:   RD5 = 0;
   916  070D  1288               	bcf	8,5	;volatile
   917  070E  0008               	return
   918  070F                     __end_of_Lcd_Port:	
   919  007E                     btemp	set	126	;btemp
   920  007E                     wtemp0	set	126


Data Sizes:
    Strings     17
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Write_String
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     378
                                              8 COMMON     3     3      0
                           _Lcd_Init
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     243
                                              5 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     120
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     135
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      75
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      60
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Mar 05 22:53:12 2019

                        pc 0002                __CFG_CP$OFF 0000                         l33 06FC  
                       l34 06FF                         l35 0703                         l36 0704  
                       l37 0708                         l38 0709                         l39 070D  
                       u55 0778                         fsr 0004                        l761 0748  
                      l769 0737                        _RD0 0040                        _RD1 0041  
                      _RD2 0042                        _RD3 0043                        _RD4 0044  
                      _RD5 0045                        u127 073D                        u137 0788  
                      u147 0799                        u157 07AA                        u167 07B9  
                      u177 07C8               __CFG_CPD$OFF 0000                        u187 0720  
                      fsr0 0004               __CFG_FOSC$HS 0000               __CFG_LVP$OFF 0000  
                     STR_1 0009               __CFG_WRT$OFF 0000          ?_Lcd_Write_String 0070  
                     _main 0729                       btemp 007E              __CFG_BOREN$ON 0000  
                     start 0000         ??_Lcd_Write_String 0075            __end_of_Lcd_Cmd 0729  
                    ?_main 0070              __CFG_WDTE$OFF 0000                      _TRISD 0088  
                    pclath 000A                      status 0003                      wtemp0 007E  
         __end_of_Lcd_Init 07FC           __end_of_Lcd_Port 070F            __initialization 07FC  
             __end_of_main 0745                     ??_main 0078                  ??_Lcd_Cmd 0071  
  __size_of_Lcd_Write_Char 0039             __CFG_PWRTE$OFF 0000    __end_of__initialization 07FC  
           __pcstackCOMMON 0070                  ?_Lcd_Init 0070                  ?_Lcd_Port 0070  
               __pmaintext 0729  __size_of_Lcd_Write_String 0022                 ??_Lcd_Init 0074  
               ??_Lcd_Port 0070                 __stringtab 0003             _Lcd_Write_Char 0767  
                  _Lcd_Cmd 070F                    __ptext1 0745                    __ptext2 0767  
                  __ptext3 07A0                    __ptext4 070F                    __ptext5 06F5  
   __end_of_Lcd_Write_Char 07A0       end_of_initialization 07FC                  Lcd_Port@a 0070  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0077          Lcd_Write_String@i 0075  
         _Lcd_Write_String 0745        start_initialization 07FC          __size_of_Lcd_Init 005C  
        __size_of_Lcd_Port 001A            Lcd_Write_Char@a 0074            Lcd_Write_Char@y 0073  
                ___latbits 0002                   ?_Lcd_Cmd 0070                  __pstrings 0003  
                 Lcd_Cmd@a 0073                __stringbase 0008           ??_Lcd_Write_Char 0071  
                 _Lcd_Init 07A0                   _Lcd_Port 06F5   __end_of_Lcd_Write_String 0767  
         __size_of_Lcd_Cmd 001A         __end_of__stringtab 0009              __size_of_main 001C  
       Lcd_Write_Char@temp 0072                  stringcode 0003                   stringdir 0003  
                 stringtab 0003  
