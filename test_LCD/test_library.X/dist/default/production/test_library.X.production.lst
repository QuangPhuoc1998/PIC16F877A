

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Apr 09 18:51:17 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.05
    16                           ; Generated 20/12/2018 GMT
    17                           ; 
    18                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0094                     	;# 
    97  0098                     	;# 
    98  0099                     	;# 
    99  009C                     	;# 
   100  009D                     	;# 
   101  009E                     	;# 
   102  009F                     	;# 
   103  010C                     	;# 
   104  010D                     	;# 
   105  010E                     	;# 
   106  010F                     	;# 
   107  018C                     	;# 
   108  018D                     	;# 
   109  0000                     	;# 
   110  0001                     	;# 
   111  0002                     	;# 
   112  0003                     	;# 
   113  0004                     	;# 
   114  0005                     	;# 
   115  0006                     	;# 
   116  0007                     	;# 
   117  0008                     	;# 
   118  0009                     	;# 
   119  000A                     	;# 
   120  000B                     	;# 
   121  000C                     	;# 
   122  000D                     	;# 
   123  000E                     	;# 
   124  000E                     	;# 
   125  000F                     	;# 
   126  0010                     	;# 
   127  0011                     	;# 
   128  0012                     	;# 
   129  0013                     	;# 
   130  0014                     	;# 
   131  0015                     	;# 
   132  0015                     	;# 
   133  0016                     	;# 
   134  0017                     	;# 
   135  0018                     	;# 
   136  0019                     	;# 
   137  001A                     	;# 
   138  001B                     	;# 
   139  001B                     	;# 
   140  001C                     	;# 
   141  001D                     	;# 
   142  001E                     	;# 
   143  001F                     	;# 
   144  0081                     	;# 
   145  0085                     	;# 
   146  0086                     	;# 
   147  0087                     	;# 
   148  0088                     	;# 
   149  0089                     	;# 
   150  008C                     	;# 
   151  008D                     	;# 
   152  008E                     	;# 
   153  0091                     	;# 
   154  0092                     	;# 
   155  0093                     	;# 
   156  0094                     	;# 
   157  0098                     	;# 
   158  0099                     	;# 
   159  009C                     	;# 
   160  009D                     	;# 
   161  009E                     	;# 
   162  009F                     	;# 
   163  010C                     	;# 
   164  010D                     	;# 
   165  010E                     	;# 
   166  010F                     	;# 
   167  018C                     	;# 
   168  018D                     	;# 
   169  0000                     	;# 
   170  0001                     	;# 
   171  0002                     	;# 
   172  0003                     	;# 
   173  0004                     	;# 
   174  0005                     	;# 
   175  0006                     	;# 
   176  0007                     	;# 
   177  0008                     	;# 
   178  0009                     	;# 
   179  000A                     	;# 
   180  000B                     	;# 
   181  000C                     	;# 
   182  000D                     	;# 
   183  000E                     	;# 
   184  000E                     	;# 
   185  000F                     	;# 
   186  0010                     	;# 
   187  0011                     	;# 
   188  0012                     	;# 
   189  0013                     	;# 
   190  0014                     	;# 
   191  0015                     	;# 
   192  0015                     	;# 
   193  0016                     	;# 
   194  0017                     	;# 
   195  0018                     	;# 
   196  0019                     	;# 
   197  001A                     	;# 
   198  001B                     	;# 
   199  001B                     	;# 
   200  001C                     	;# 
   201  001D                     	;# 
   202  001E                     	;# 
   203  001F                     	;# 
   204  0081                     	;# 
   205  0085                     	;# 
   206  0086                     	;# 
   207  0087                     	;# 
   208  0088                     	;# 
   209  0089                     	;# 
   210  008C                     	;# 
   211  008D                     	;# 
   212  008E                     	;# 
   213  0091                     	;# 
   214  0092                     	;# 
   215  0093                     	;# 
   216  0094                     	;# 
   217  0098                     	;# 
   218  0099                     	;# 
   219  009C                     	;# 
   220  009D                     	;# 
   221  009E                     	;# 
   222  009F                     	;# 
   223  010C                     	;# 
   224  010D                     	;# 
   225  010E                     	;# 
   226  010F                     	;# 
   227  018C                     	;# 
   228  018D                     	;# 
   229  0041                     _RD1	set	65
   230  0040                     _RD0	set	64
   231  0045                     _RD5	set	69
   232  0044                     _RD4	set	68
   233  0043                     _RD3	set	67
   234  0042                     _RD2	set	66
   235  0088                     _TRISD	set	136
   236                           
   237                           	psect	strings
   238  0003                     __pstrings:	
   239  0003                     stringtab:	
   240  0003                     __stringtab:	
   241  0003                     stringcode:	
   242                           ;	String table - string pointers are 1 byte each
   243                           
   244  0003                     stringdir:	
   245  0003  3000               	movlw	high stringdir
   246  0004  008A               	movwf	10
   247  0005  0804               	movf	4,w
   248  0006  0A84               	incf	4,f
   249  0007  0782               	addwf	2,f
   250  0008                     __stringbase:	
   251  0008  3400               	retlw	0
   252  0009                     __end_of__stringtab:	
   253  0009                     STR_1:	
   254  0009  3468               	retlw	104	;'h'
   255  000A  3465               	retlw	101	;'e'
   256  000B  346C               	retlw	108	;'l'
   257  000C  346C               	retlw	108	;'l'
   258  000D  346F               	retlw	111	;'o'
   259  000E  3400               	retlw	0
   260                           
   261                           ; #config settings
   262  0000                     
   263                           	psect	cinit
   264  07FC                     start_initialization:	
   265  07FC                     __initialization:	
   266  07FC                     end_of_initialization:	
   267                           ;End of C runtime variable initialization code
   268                           
   269  07FC                     __end_of__initialization:	
   270  07FC  0183               	clrf	3
   271  07FD  120A  118A  2F29   	ljmp	_main	;jump to C main() function
   272                           
   273                           	psect	cstackCOMMON
   274  0070                     __pcstackCOMMON:	
   275  0070                     ?_Lcd_Init:	
   276  0070                     ?_Lcd_Write_String:	
   277                           ; 1 bytes @ 0x0
   278                           
   279  0070                     ?_main:	
   280                           ; 1 bytes @ 0x0
   281                           
   282  0070                     ?_Lcd_Port:	
   283                           ; 1 bytes @ 0x0
   284                           
   285  0070                     ??_Lcd_Port:	
   286                           ; 1 bytes @ 0x0
   287                           
   288  0070                     ?_Lcd_Cmd:	
   289                           ; 1 bytes @ 0x0
   290                           
   291  0070                     ?_Lcd_Write_Char:	
   292                           ; 1 bytes @ 0x0
   293                           
   294  0070                     Lcd_Port@a:	
   295                           ; 1 bytes @ 0x0
   296                           
   297                           
   298                           ; 1 bytes @ 0x0
   299  0070                     	ds	1
   300  0071                     ??_Lcd_Cmd:	
   301  0071                     ??_Lcd_Write_Char:	
   302                           ; 1 bytes @ 0x1
   303                           
   304                           
   305                           ; 1 bytes @ 0x1
   306  0071                     	ds	1
   307  0072                     Lcd_Write_Char@temp:	
   308                           
   309                           ; 1 bytes @ 0x2
   310  0072                     	ds	1
   311  0073                     Lcd_Cmd@a:	
   312  0073                     Lcd_Write_Char@y:	
   313                           ; 1 bytes @ 0x3
   314                           
   315                           
   316                           ; 1 bytes @ 0x3
   317  0073                     	ds	1
   318  0074                     ??_Lcd_Init:	
   319  0074                     Lcd_Write_Char@a:	
   320                           ; 1 bytes @ 0x4
   321                           
   322                           
   323                           ; 1 bytes @ 0x4
   324  0074                     	ds	1
   325  0075                     ??_Lcd_Write_String:	
   326  0075                     Lcd_Write_String@i:	
   327                           ; 1 bytes @ 0x5
   328                           
   329                           
   330                           ; 2 bytes @ 0x5
   331  0075                     	ds	2
   332  0077                     Lcd_Write_String@a:	
   333                           
   334                           ; 1 bytes @ 0x7
   335  0077                     	ds	1
   336  0078                     ??_main:	
   337                           
   338                           ; 1 bytes @ 0x8
   339  0078                     	ds	3
   340                           
   341                           	psect	maintext
   342  0729                     __pmaintext:	
   343 ;;
   344 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   345 ;;
   346 ;; *************** function _main *****************
   347 ;; Defined at:
   348 ;;		line 5 in file "main.c"
   349 ;; Parameters:    Size  Location     Type
   350 ;;		None
   351 ;; Auto vars:     Size  Location     Type
   352 ;;		None
   353 ;; Return value:  Size  Location     Type
   354 ;;                  1    wreg      void 
   355 ;; Registers used:
   356 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   357 ;; Tracked objects:
   358 ;;		On entry : B00/0
   359 ;;		On exit  : 0/0
   360 ;;		Unchanged: 0/0
   361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   362 ;;      Params:         0       0       0       0       0
   363 ;;      Locals:         0       0       0       0       0
   364 ;;      Temps:          3       0       0       0       0
   365 ;;      Totals:         3       0       0       0       0
   366 ;;Total ram usage:        3 bytes
   367 ;; Hardware stack levels required when called:    3
   368 ;; This function calls:
   369 ;;		_Lcd_Init
   370 ;;		_Lcd_Write_String
   371 ;; This function is called by:
   372 ;;		Startup code after reset
   373 ;; This function uses a non-reentrant model
   374 ;;
   375                           
   376                           
   377                           ;psect for function _main
   378  0729                     _main:	
   379                           
   380                           ;main.c: 7:     TRISD = 0x00;
   381                           
   382                           ;incstack = 0
   383                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   384  0729  1683               	bsf	3,5	;RP0=1, select bank1
   385  072A  1303               	bcf	3,6	;RP1=0, select bank1
   386  072B  0188               	clrf	8	;volatile
   387                           
   388                           ;main.c: 8:     Lcd_Init();
   389  072C  120A  118A  27A0  120A  118A  	fcall	_Lcd_Init
   390                           
   391                           ;main.c: 9:     Lcd_Write_String("hello");
   392  0731  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   393  0732  120A  118A  2745  120A  118A  	fcall	_Lcd_Write_String
   394  0737                     l769:	
   395                           
   396                           ;main.c: 11:     {;main.c: 12:         _delay((unsigned long)((100)*(20000000/4000.0)));
   397  0737  3003               	movlw	3
   398  0738  00FA               	movwf	??_main+2
   399  0739  308A               	movlw	138
   400  073A  00F9               	movwf	??_main+1
   401  073B  3055               	movlw	85
   402  073C  00F8               	movwf	??_main
   403  073D                     u127:	
   404  073D  0BF8               	decfsz	??_main,f
   405  073E  2F3D               	goto	u127
   406  073F  0BF9               	decfsz	??_main+1,f
   407  0740  2F3D               	goto	u127
   408  0741  0BFA               	decfsz	??_main+2,f
   409  0742  2F3D               	goto	u127
   410  0743  2F44               	nop2
   411  0744  2F37               	goto	l769
   412  0745                     __end_of_main:	
   413                           
   414                           	psect	text1
   415  0745                     __ptext1:	
   416 ;; *************** function _Lcd_Write_String *****************
   417 ;; Defined at:
   418 ;;		line 98 in file "lcd4.c"
   419 ;; Parameters:    Size  Location     Type
   420 ;;  a               1    wreg     PTR unsigned char 
   421 ;;		 -> STR_1(6), 
   422 ;; Auto vars:     Size  Location     Type
   423 ;;  a               1    7[COMMON] PTR unsigned char 
   424 ;;		 -> STR_1(6), 
   425 ;;  i               2    5[COMMON] int 
   426 ;; Return value:  Size  Location     Type
   427 ;;                  1    wreg      void 
   428 ;; Registers used:
   429 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   430 ;; Tracked objects:
   431 ;;		On entry : 0/0
   432 ;;		On exit  : 0/0
   433 ;;		Unchanged: 0/0
   434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   435 ;;      Params:         0       0       0       0       0
   436 ;;      Locals:         3       0       0       0       0
   437 ;;      Temps:          0       0       0       0       0
   438 ;;      Totals:         3       0       0       0       0
   439 ;;Total ram usage:        3 bytes
   440 ;; Hardware stack levels used:    1
   441 ;; Hardware stack levels required when called:    2
   442 ;; This function calls:
   443 ;;		_Lcd_Write_Char
   444 ;; This function is called by:
   445 ;;		_main
   446 ;; This function uses a non-reentrant model
   447 ;;
   448                           
   449                           
   450                           ;psect for function _Lcd_Write_String
   451  0745                     _Lcd_Write_String:	
   452                           
   453                           ;incstack = 0
   454                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   455                           ;Lcd_Write_String@a stored from wreg
   456  0745  00F7               	movwf	Lcd_Write_String@a
   457                           
   458                           ;lcd4.c: 98: void Lcd_Write_String(char *a);lcd4.c: 99: {;lcd4.c: 100:  int i;;lcd4.c: 1
      +                          01:  for(i=0;a[i]!='\0';i++)
   459  0746  01F5               	clrf	Lcd_Write_String@i
   460  0747  01F6               	clrf	Lcd_Write_String@i+1
   461  0748                     l761:	
   462  0748  0875               	movf	Lcd_Write_String@i,w
   463  0749  0777               	addwf	Lcd_Write_String@a,w
   464  074A  0084               	movwf	4
   465  074B  120A  118A  2003  120A  118A  	fcall	stringdir
   466  0750  3A00               	xorlw	0
   467  0751  1903               	btfsc	3,2
   468  0752  0008               	return
   469                           
   470                           ;lcd4.c: 102:     Lcd_Write_Char(a[i]);
   471  0753  0875               	movf	Lcd_Write_String@i,w
   472  0754  0777               	addwf	Lcd_Write_String@a,w
   473  0755  0084               	movwf	4
   474  0756  120A  118A  2003  120A  118A  	fcall	stringdir
   475  075B  120A  118A  2767  120A  118A  	fcall	_Lcd_Write_Char
   476  0760  3001               	movlw	1
   477  0761  07F5               	addwf	Lcd_Write_String@i,f
   478  0762  1803               	skipnc
   479  0763  0AF6               	incf	Lcd_Write_String@i+1,f
   480  0764  3000               	movlw	0
   481  0765  07F6               	addwf	Lcd_Write_String@i+1,f
   482  0766  2F48               	goto	l761
   483  0767                     __end_of_Lcd_Write_String:	
   484                           
   485                           	psect	text2
   486  0767                     __ptext2:	
   487 ;; *************** function _Lcd_Write_Char *****************
   488 ;; Defined at:
   489 ;;		line 82 in file "lcd4.c"
   490 ;; Parameters:    Size  Location     Type
   491 ;;  a               1    wreg     unsigned char 
   492 ;; Auto vars:     Size  Location     Type
   493 ;;  a               1    4[COMMON] unsigned char 
   494 ;;  y               1    3[COMMON] unsigned char 
   495 ;;  temp            1    2[COMMON] unsigned char 
   496 ;; Return value:  Size  Location     Type
   497 ;;                  1    wreg      void 
   498 ;; Registers used:
   499 ;;		wreg, status,2, status,0, pclath, cstack
   500 ;; Tracked objects:
   501 ;;		On entry : 0/0
   502 ;;		On exit  : 0/0
   503 ;;		Unchanged: 0/0
   504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   505 ;;      Params:         0       0       0       0       0
   506 ;;      Locals:         3       0       0       0       0
   507 ;;      Temps:          1       0       0       0       0
   508 ;;      Totals:         4       0       0       0       0
   509 ;;Total ram usage:        4 bytes
   510 ;; Hardware stack levels used:    1
   511 ;; Hardware stack levels required when called:    1
   512 ;; This function calls:
   513 ;;		_Lcd_Port
   514 ;; This function is called by:
   515 ;;		_Lcd_Write_String
   516 ;; This function uses a non-reentrant model
   517 ;;
   518                           
   519                           
   520                           ;psect for function _Lcd_Write_Char
   521  0767                     _Lcd_Write_Char:	
   522                           
   523                           ;incstack = 0
   524                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
   525                           ;Lcd_Write_Char@a stored from wreg
   526  0767  00F4               	movwf	Lcd_Write_Char@a
   527                           
   528                           ;lcd4.c: 82: void Lcd_Write_Char(char a);lcd4.c: 83: {;lcd4.c: 84:    char temp,y;;lcd4.
      +                          c: 85:    temp = a&0x0F;
   529  0768  0874               	movf	Lcd_Write_Char@a,w
   530  0769  390F               	andlw	15
   531  076A  00F1               	movwf	??_Lcd_Write_Char
   532  076B  0871               	movf	??_Lcd_Write_Char,w
   533  076C  00F2               	movwf	Lcd_Write_Char@temp
   534                           
   535                           ;lcd4.c: 86:    y = a&0xF0;
   536  076D  0874               	movf	Lcd_Write_Char@a,w
   537  076E  39F0               	andlw	240
   538  076F  00F1               	movwf	??_Lcd_Write_Char
   539  0770  0871               	movf	??_Lcd_Write_Char,w
   540  0771  00F3               	movwf	Lcd_Write_Char@y
   541                           
   542                           ;lcd4.c: 87:    RD0 = 1;
   543  0772  1283               	bcf	3,5	;RP0=0, select bank0
   544  0773  1303               	bcf	3,6	;RP1=0, select bank0
   545  0774  1408               	bsf	8,0	;volatile
   546                           
   547                           ;lcd4.c: 88:    Lcd_Port(y>>4);
   548  0775  0873               	movf	Lcd_Write_Char@y,w
   549  0776  00F1               	movwf	??_Lcd_Write_Char
   550  0777  3004               	movlw	4
   551  0778                     u55:	
   552  0778  1003               	clrc
   553  0779  0CF1               	rrf	??_Lcd_Write_Char,f
   554  077A  3EFF               	addlw	-1
   555  077B  1D03               	skipz
   556  077C  2F78               	goto	u55
   557  077D  0871               	movf	??_Lcd_Write_Char,w
   558  077E  120A  118A  26F5  120A  118A  	fcall	_Lcd_Port
   559                           
   560                           ;lcd4.c: 89:    RD1 = 1;
   561  0783  1283               	bcf	3,5	;RP0=0, select bank0
   562  0784  1303               	bcf	3,6	;RP1=0, select bank0
   563  0785  1488               	bsf	8,1	;volatile
   564                           
   565                           ;lcd4.c: 90:    _delay((unsigned long)((40)*(20000000/4000000.0)));
   566  0786  3042               	movlw	66
   567  0787  00F1               	movwf	??_Lcd_Write_Char
   568  0788                     u137:	
   569  0788  0BF1               	decfsz	??_Lcd_Write_Char,f
   570  0789  2F88               	goto	u137
   571  078A  0000               	nop
   572                           
   573                           ;lcd4.c: 91:    RD1 = 0;
   574  078B  1283               	bcf	3,5	;RP0=0, select bank0
   575  078C  1303               	bcf	3,6	;RP1=0, select bank0
   576  078D  1088               	bcf	8,1	;volatile
   577                           
   578                           ;lcd4.c: 92:    Lcd_Port(temp);
   579  078E  0872               	movf	Lcd_Write_Char@temp,w
   580  078F  120A  118A  26F5  120A  118A  	fcall	_Lcd_Port
   581                           
   582                           ;lcd4.c: 93:    RD1 = 1;
   583  0794  1283               	bcf	3,5	;RP0=0, select bank0
   584  0795  1303               	bcf	3,6	;RP1=0, select bank0
   585  0796  1488               	bsf	8,1	;volatile
   586                           
   587                           ;lcd4.c: 94:    _delay((unsigned long)((40)*(20000000/4000000.0)));
   588  0797  3042               	movlw	66
   589  0798  00F1               	movwf	??_Lcd_Write_Char
   590  0799                     u147:	
   591  0799  0BF1               	decfsz	??_Lcd_Write_Char,f
   592  079A  2F99               	goto	u147
   593  079B  0000               	nop
   594                           
   595                           ;lcd4.c: 95:    RD1 = 0;
   596  079C  1283               	bcf	3,5	;RP0=0, select bank0
   597  079D  1303               	bcf	3,6	;RP1=0, select bank0
   598  079E  1088               	bcf	8,1	;volatile
   599  079F  0008               	return
   600  07A0                     __end_of_Lcd_Write_Char:	
   601                           
   602                           	psect	text3
   603  07A0                     __ptext3:	
   604 ;; *************** function _Lcd_Init *****************
   605 ;; Defined at:
   606 ;;		line 63 in file "lcd4.c"
   607 ;; Parameters:    Size  Location     Type
   608 ;;		None
   609 ;; Auto vars:     Size  Location     Type
   610 ;;		None
   611 ;; Return value:  Size  Location     Type
   612 ;;                  1    wreg      void 
   613 ;; Registers used:
   614 ;;		wreg, status,2, status,0, pclath, cstack
   615 ;; Tracked objects:
   616 ;;		On entry : 0/0
   617 ;;		On exit  : 0/0
   618 ;;		Unchanged: 0/0
   619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   620 ;;      Params:         0       0       0       0       0
   621 ;;      Locals:         0       0       0       0       0
   622 ;;      Temps:          2       0       0       0       0
   623 ;;      Totals:         2       0       0       0       0
   624 ;;Total ram usage:        2 bytes
   625 ;; Hardware stack levels used:    1
   626 ;; Hardware stack levels required when called:    2
   627 ;; This function calls:
   628 ;;		_Lcd_Cmd
   629 ;;		_Lcd_Port
   630 ;; This function is called by:
   631 ;;		_main
   632 ;; This function uses a non-reentrant model
   633 ;;
   634                           
   635                           
   636                           ;psect for function _Lcd_Init
   637  07A0                     _Lcd_Init:	
   638                           
   639                           ;lcd4.c: 65:   Lcd_Port(0x00);
   640                           
   641                           ;incstack = 0
   642                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
   643  07A0  3000               	movlw	0
   644  07A1  120A  118A  26F5  120A  118A  	fcall	_Lcd_Port
   645                           
   646                           ;lcd4.c: 66:    _delay((unsigned long)((20)*(20000000/4000.0)));
   647  07A6  3082               	movlw	130
   648  07A7  00F5               	movwf	??_Lcd_Init+1
   649  07A8  30DD               	movlw	221
   650  07A9  00F4               	movwf	??_Lcd_Init
   651  07AA                     u157:	
   652  07AA  0BF4               	decfsz	??_Lcd_Init,f
   653  07AB  2FAA               	goto	u157
   654  07AC  0BF5               	decfsz	??_Lcd_Init+1,f
   655  07AD  2FAA               	goto	u157
   656  07AE  2FAF               	nop2
   657                           
   658                           ;lcd4.c: 67:   Lcd_Cmd(0x03);
   659  07AF  3003               	movlw	3
   660  07B0  120A  118A  270F  120A  118A  	fcall	_Lcd_Cmd
   661                           
   662                           ;lcd4.c: 68:  _delay((unsigned long)((5)*(20000000/4000.0)));
   663  07B5  3021               	movlw	33
   664  07B6  00F5               	movwf	??_Lcd_Init+1
   665  07B7  3076               	movlw	118
   666  07B8  00F4               	movwf	??_Lcd_Init
   667  07B9                     u167:	
   668  07B9  0BF4               	decfsz	??_Lcd_Init,f
   669  07BA  2FB9               	goto	u167
   670  07BB  0BF5               	decfsz	??_Lcd_Init+1,f
   671  07BC  2FB9               	goto	u167
   672  07BD  0000               	nop
   673                           
   674                           ;lcd4.c: 69:   Lcd_Cmd(0x03);
   675  07BE  3003               	movlw	3
   676  07BF  120A  118A  270F  120A  118A  	fcall	_Lcd_Cmd
   677                           
   678                           ;lcd4.c: 70:  _delay((unsigned long)((11)*(20000000/4000.0)));
   679  07C4  3048               	movlw	72
   680  07C5  00F5               	movwf	??_Lcd_Init+1
   681  07C6  306C               	movlw	108
   682  07C7  00F4               	movwf	??_Lcd_Init
   683  07C8                     u177:	
   684  07C8  0BF4               	decfsz	??_Lcd_Init,f
   685  07C9  2FC8               	goto	u177
   686  07CA  0BF5               	decfsz	??_Lcd_Init+1,f
   687  07CB  2FC8               	goto	u177
   688  07CC  0000               	nop
   689                           
   690                           ;lcd4.c: 71:   Lcd_Cmd(0x03);
   691  07CD  3003               	movlw	3
   692  07CE  120A  118A  270F  120A  118A  	fcall	_Lcd_Cmd
   693                           
   694                           ;lcd4.c: 73:   Lcd_Cmd(0x02);
   695  07D3  3002               	movlw	2
   696  07D4  120A  118A  270F  120A  118A  	fcall	_Lcd_Cmd
   697                           
   698                           ;lcd4.c: 74:   Lcd_Cmd(0x02);
   699  07D9  3002               	movlw	2
   700  07DA  120A  118A  270F  120A  118A  	fcall	_Lcd_Cmd
   701                           
   702                           ;lcd4.c: 75:   Lcd_Cmd(0x08);
   703  07DF  3008               	movlw	8
   704  07E0  120A  118A  270F  120A  118A  	fcall	_Lcd_Cmd
   705                           
   706                           ;lcd4.c: 76:   Lcd_Cmd(0x00);
   707  07E5  3000               	movlw	0
   708  07E6  120A  118A  270F  120A  118A  	fcall	_Lcd_Cmd
   709                           
   710                           ;lcd4.c: 77:   Lcd_Cmd(0x0C);
   711  07EB  300C               	movlw	12
   712  07EC  120A  118A  270F  120A  118A  	fcall	_Lcd_Cmd
   713                           
   714                           ;lcd4.c: 78:   Lcd_Cmd(0x00);
   715  07F1  3000               	movlw	0
   716  07F2  120A  118A  270F  120A  118A  	fcall	_Lcd_Cmd
   717                           
   718                           ;lcd4.c: 79:   Lcd_Cmd(0x06);
   719  07F7  3006               	movlw	6
   720  07F8  120A  118A  270F   	fcall	_Lcd_Cmd
   721  07FB  0008               	return
   722  07FC                     __end_of_Lcd_Init:	
   723                           
   724                           	psect	text4
   725  070F                     __ptext4:	
   726 ;; *************** function _Lcd_Cmd *****************
   727 ;; Defined at:
   728 ;;		line 27 in file "lcd4.c"
   729 ;; Parameters:    Size  Location     Type
   730 ;;  a               1    wreg     unsigned char 
   731 ;; Auto vars:     Size  Location     Type
   732 ;;  a               1    3[COMMON] unsigned char 
   733 ;; Return value:  Size  Location     Type
   734 ;;                  1    wreg      void 
   735 ;; Registers used:
   736 ;;		wreg, status,2, status,0, pclath, cstack
   737 ;; Tracked objects:
   738 ;;		On entry : 0/0
   739 ;;		On exit  : 0/0
   740 ;;		Unchanged: 0/0
   741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   742 ;;      Params:         0       0       0       0       0
   743 ;;      Locals:         1       0       0       0       0
   744 ;;      Temps:          2       0       0       0       0
   745 ;;      Totals:         3       0       0       0       0
   746 ;;Total ram usage:        3 bytes
   747 ;; Hardware stack levels used:    1
   748 ;; Hardware stack levels required when called:    1
   749 ;; This function calls:
   750 ;;		_Lcd_Port
   751 ;; This function is called by:
   752 ;;		_Lcd_Init
   753 ;;		_Lcd_Clear
   754 ;;		_Lcd_Set_Cursor
   755 ;;		_Lcd_Shift_Right
   756 ;;		_Lcd_Shift_Left
   757 ;; This function uses a non-reentrant model
   758 ;;
   759                           
   760                           
   761                           ;psect for function _Lcd_Cmd
   762  070F                     _Lcd_Cmd:	
   763                           
   764                           ;incstack = 0
   765                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
   766                           ;Lcd_Cmd@a stored from wreg
   767  070F  00F3               	movwf	Lcd_Cmd@a
   768                           
   769                           ;lcd4.c: 27: void Lcd_Cmd(char a);lcd4.c: 28: {;lcd4.c: 29:  RD0 = 0;
   770  0710  1283               	bcf	3,5	;RP0=0, select bank0
   771  0711  1303               	bcf	3,6	;RP1=0, select bank0
   772  0712  1008               	bcf	8,0	;volatile
   773                           
   774                           ;lcd4.c: 30:  Lcd_Port(a);
   775  0713  0873               	movf	Lcd_Cmd@a,w
   776  0714  120A  118A  26F5  120A  118A  	fcall	_Lcd_Port
   777                           
   778                           ;lcd4.c: 31:  RD1 = 1;
   779  0719  1283               	bcf	3,5	;RP0=0, select bank0
   780  071A  1303               	bcf	3,6	;RP1=0, select bank0
   781  071B  1488               	bsf	8,1	;volatile
   782                           
   783                           ;lcd4.c: 32:         _delay((unsigned long)((4)*(20000000/4000.0)));
   784  071C  301A               	movlw	26
   785  071D  00F2               	movwf	??_Lcd_Cmd+1
   786  071E  30F8               	movlw	248
   787  071F  00F1               	movwf	??_Lcd_Cmd
   788  0720                     u187:	
   789  0720  0BF1               	decfsz	??_Lcd_Cmd,f
   790  0721  2F20               	goto	u187
   791  0722  0BF2               	decfsz	??_Lcd_Cmd+1,f
   792  0723  2F20               	goto	u187
   793  0724  0000               	nop
   794                           
   795                           ;lcd4.c: 33:         RD1 = 0;
   796  0725  1283               	bcf	3,5	;RP0=0, select bank0
   797  0726  1303               	bcf	3,6	;RP1=0, select bank0
   798  0727  1088               	bcf	8,1	;volatile
   799  0728  0008               	return
   800  0729                     __end_of_Lcd_Cmd:	
   801                           
   802                           	psect	text5
   803  06F5                     __ptext5:	
   804 ;; *************** function _Lcd_Port *****************
   805 ;; Defined at:
   806 ;;		line 5 in file "lcd4.c"
   807 ;; Parameters:    Size  Location     Type
   808 ;;  a               1    wreg     unsigned char 
   809 ;; Auto vars:     Size  Location     Type
   810 ;;  a               1    0[COMMON] unsigned char 
   811 ;; Return value:  Size  Location     Type
   812 ;;                  1    wreg      void 
   813 ;; Registers used:
   814 ;;		wreg
   815 ;; Tracked objects:
   816 ;;		On entry : 0/0
   817 ;;		On exit  : 0/0
   818 ;;		Unchanged: 0/0
   819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   820 ;;      Params:         0       0       0       0       0
   821 ;;      Locals:         1       0       0       0       0
   822 ;;      Temps:          0       0       0       0       0
   823 ;;      Totals:         1       0       0       0       0
   824 ;;Total ram usage:        1 bytes
   825 ;; Hardware stack levels used:    1
   826 ;; This function calls:
   827 ;;		Nothing
   828 ;; This function is called by:
   829 ;;		_Lcd_Cmd
   830 ;;		_Lcd_Init
   831 ;;		_Lcd_Write_Char
   832 ;; This function uses a non-reentrant model
   833 ;;
   834                           
   835                           
   836                           ;psect for function _Lcd_Port
   837  06F5                     _Lcd_Port:	
   838                           
   839                           ;incstack = 0
   840                           ; Regs used in _Lcd_Port: [wreg]
   841                           ;Lcd_Port@a stored from wreg
   842  06F5  00F0               	movwf	Lcd_Port@a
   843                           
   844                           ;lcd4.c: 5: void Lcd_Port(char a);lcd4.c: 6: {;lcd4.c: 7:  if(a & 1)
   845  06F6  1C70               	btfss	Lcd_Port@a,0
   846  06F7  2EFC               	goto	l33
   847                           
   848                           ;lcd4.c: 8:   RD2 = 1;
   849  06F8  1283               	bcf	3,5	;RP0=0, select bank0
   850  06F9  1303               	bcf	3,6	;RP1=0, select bank0
   851  06FA  1508               	bsf	8,2	;volatile
   852  06FB  2EFF               	goto	l34
   853  06FC                     l33:	
   854                           ;lcd4.c: 9:  else
   855                           
   856                           
   857                           ;lcd4.c: 10:   RD2 = 0;
   858  06FC  1283               	bcf	3,5	;RP0=0, select bank0
   859  06FD  1303               	bcf	3,6	;RP1=0, select bank0
   860  06FE  1108               	bcf	8,2	;volatile
   861  06FF                     l34:	
   862                           
   863                           ;lcd4.c: 12:  if(a & 2)
   864  06FF  1CF0               	btfss	Lcd_Port@a,1
   865  0700  2F03               	goto	l35
   866                           
   867                           ;lcd4.c: 13:   RD3 = 1;
   868  0701  1588               	bsf	8,3	;volatile
   869  0702  2F04               	goto	l36
   870  0703                     l35:	
   871                           ;lcd4.c: 14:  else
   872                           
   873                           
   874                           ;lcd4.c: 15:   RD3 = 0;
   875  0703  1188               	bcf	8,3	;volatile
   876  0704                     l36:	
   877                           
   878                           ;lcd4.c: 17:  if(a & 4)
   879  0704  1D70               	btfss	Lcd_Port@a,2
   880  0705  2F08               	goto	l37
   881                           
   882                           ;lcd4.c: 18:   RD4 = 1;
   883  0706  1608               	bsf	8,4	;volatile
   884  0707  2F09               	goto	l38
   885  0708                     l37:	
   886                           ;lcd4.c: 19:  else
   887                           
   888                           
   889                           ;lcd4.c: 20:   RD4 = 0;
   890  0708  1208               	bcf	8,4	;volatile
   891  0709                     l38:	
   892                           
   893                           ;lcd4.c: 22:  if(a & 8)
   894  0709  1DF0               	btfss	Lcd_Port@a,3
   895  070A  2F0D               	goto	l39
   896                           
   897                           ;lcd4.c: 23:   RD5 = 1;
   898  070B  1688               	bsf	8,5	;volatile
   899  070C  0008               	return
   900  070D                     l39:	
   901                           ;lcd4.c: 24:  else
   902                           
   903                           
   904                           ;lcd4.c: 25:   RD5 = 0;
   905  070D  1288               	bcf	8,5	;volatile
   906  070E  0008               	return
   907  070F                     __end_of_Lcd_Port:	
   908  007E                     btemp	set	126	;btemp
   909  007E                     wtemp0	set	126


Data Sizes:
    Strings     6
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 6
		 -> STR_1(CODE[6]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Write_String
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     378
                                              8 COMMON     3     3      0
                           _Lcd_Init
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     243
                                              5 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     120
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     135
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      75
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      60
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Apr 09 18:51:17 2019

                        pc 0002                __CFG_CP$OFF 0000                         l33 06FC  
                       l34 06FF                         l35 0703                         l36 0704  
                       l37 0708                         l38 0709                         l39 070D  
                       u55 0778                         fsr 0004                        l761 0748  
                      l769 0737                        _RD0 0040                        _RD1 0041  
                      _RD2 0042                        _RD3 0043                        _RD4 0044  
                      _RD5 0045                        u127 073D                        u137 0788  
                      u147 0799                        u157 07AA                        u167 07B9  
                      u177 07C8               __CFG_CPD$OFF 0000                        u187 0720  
                      fsr0 0004               __CFG_FOSC$HS 0000               __CFG_LVP$OFF 0000  
                     STR_1 0009               __CFG_WRT$OFF 0000          ?_Lcd_Write_String 0070  
                     _main 0729                       btemp 007E              __CFG_BOREN$ON 0000  
                     start 0000         ??_Lcd_Write_String 0075            __end_of_Lcd_Cmd 0729  
                    ?_main 0070              __CFG_WDTE$OFF 0000                      _TRISD 0088  
                    pclath 000A                      status 0003                      wtemp0 007E  
         __end_of_Lcd_Init 07FC           __end_of_Lcd_Port 070F            __initialization 07FC  
             __end_of_main 0745                     ??_main 0078                  ??_Lcd_Cmd 0071  
  __size_of_Lcd_Write_Char 0039             __CFG_PWRTE$OFF 0000    __end_of__initialization 07FC  
           __pcstackCOMMON 0070                  ?_Lcd_Init 0070                  ?_Lcd_Port 0070  
               __pmaintext 0729  __size_of_Lcd_Write_String 0022                 ??_Lcd_Init 0074  
               ??_Lcd_Port 0070                 __stringtab 0003             _Lcd_Write_Char 0767  
                  _Lcd_Cmd 070F                    __ptext1 0745                    __ptext2 0767  
                  __ptext3 07A0                    __ptext4 070F                    __ptext5 06F5  
   __end_of_Lcd_Write_Char 07A0       end_of_initialization 07FC                  Lcd_Port@a 0070  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0077          Lcd_Write_String@i 0075  
         _Lcd_Write_String 0745        start_initialization 07FC          __size_of_Lcd_Init 005C  
        __size_of_Lcd_Port 001A            Lcd_Write_Char@a 0074            Lcd_Write_Char@y 0073  
                ___latbits 0002                   ?_Lcd_Cmd 0070                  __pstrings 0003  
                 Lcd_Cmd@a 0073                __stringbase 0008           ??_Lcd_Write_Char 0071  
                 _Lcd_Init 07A0                   _Lcd_Port 06F5   __end_of_Lcd_Write_String 0767  
         __size_of_Lcd_Cmd 001A         __end_of__stringtab 0009              __size_of_main 001C  
       Lcd_Write_Char@temp 0072                  stringcode 0003                   stringdir 0003  
                 stringtab 0003  
