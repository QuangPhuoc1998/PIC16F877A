Version 4.0 HI-TECH Software Intermediate Code
"2944 D:\Mplab X\xc8\pic\include\pic16f877a.h
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2944: extern volatile __bit TRISB3 __attribute__((address(0x433)));
[v _TRISB3 `Vb ~T0 @X0 0 e@1075 ]
"2938
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2938: extern volatile __bit TRISB1 __attribute__((address(0x431)));
[v _TRISB1 `Vb ~T0 @X0 0 e@1073 ]
"2941
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2941: extern volatile __bit TRISB2 __attribute__((address(0x432)));
[v _TRISB2 `Vb ~T0 @X0 0 e@1074 ]
"3004
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 3004: extern volatile __bit TRISD7 __attribute__((address(0x447)));
[v _TRISD7 `Vb ~T0 @X0 0 e@1095 ]
"3001
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 3001: extern volatile __bit TRISD6 __attribute__((address(0x446)));
[v _TRISD6 `Vb ~T0 @X0 0 e@1094 ]
"2998
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2998: extern volatile __bit TRISD5 __attribute__((address(0x445)));
[v _TRISD5 `Vb ~T0 @X0 0 e@1093 ]
"2995
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2995: extern volatile __bit TRISD4 __attribute__((address(0x444)));
[v _TRISD4 `Vb ~T0 @X0 0 e@1092 ]
"2992
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2992: extern volatile __bit TRISD3 __attribute__((address(0x443)));
[v _TRISD3 `Vb ~T0 @X0 0 e@1091 ]
"2989
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2989: extern volatile __bit TRISD2 __attribute__((address(0x442)));
[v _TRISD2 `Vb ~T0 @X0 0 e@1090 ]
"2986
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2986: extern volatile __bit TRISD1 __attribute__((address(0x441)));
[v _TRISD1 `Vb ~T0 @X0 0 e@1089 ]
"2983
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2983: extern volatile __bit TRISD0 __attribute__((address(0x440)));
[v _TRISD0 `Vb ~T0 @X0 0 e@1088 ]
"2770
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2770: extern volatile __bit RD7 __attribute__((address(0x47)));
[v _RD7 `Vb ~T0 @X0 0 e@71 ]
"2767
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2767: extern volatile __bit RD6 __attribute__((address(0x46)));
[v _RD6 `Vb ~T0 @X0 0 e@70 ]
"2764
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2764: extern volatile __bit RD5 __attribute__((address(0x45)));
[v _RD5 `Vb ~T0 @X0 0 e@69 ]
"2761
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2761: extern volatile __bit RD4 __attribute__((address(0x44)));
[v _RD4 `Vb ~T0 @X0 0 e@68 ]
"2758
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2758: extern volatile __bit RD3 __attribute__((address(0x43)));
[v _RD3 `Vb ~T0 @X0 0 e@67 ]
"2755
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2755: extern volatile __bit RD2 __attribute__((address(0x42)));
[v _RD2 `Vb ~T0 @X0 0 e@66 ]
"2752
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2752: extern volatile __bit RD1 __attribute__((address(0x41)));
[v _RD1 `Vb ~T0 @X0 0 e@65 ]
"2749
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2749: extern volatile __bit RD0 __attribute__((address(0x40)));
[v _RD0 `Vb ~T0 @X0 0 e@64 ]
"2683
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2683: extern volatile __bit RB3 __attribute__((address(0x33)));
[v _RB3 `Vb ~T0 @X0 0 e@51 ]
"2677
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2677: extern volatile __bit RB1 __attribute__((address(0x31)));
[v _RB1 `Vb ~T0 @X0 0 e@49 ]
"2680
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2680: extern volatile __bit RB2 __attribute__((address(0x32)));
[v _RB2 `Vb ~T0 @X0 0 e@50 ]
[v F842 `(v ~T0 @X0 1 tf1`ul ]
"92 D:\Mplab X\xc8\pic\include\pic.h
[v __delay `JF842 ~T0 @X0 0 e ]
[p i __delay ]
"56 D:\Mplab X\xc8\pic\include\c90\string.h
[; ;D:\Mplab X\xc8\pic\include\c90\string.h: 56: extern size_t strlen(const char *);
[v _strlen `(ui ~T0 @X0 0 ef1`*Cuc ]
"45 D:\Mplab X\xc8\pic\include\c90\math.h
[; ;D:\Mplab X\xc8\pic\include\c90\math.h: 45: extern double pow(double, double) ;
[v _pow `(d ~T0 @X0 0 ef2`d`d ]
"31
[; ;D:\Mplab X\xc8\pic\include\c90\math.h: 31: extern double floor(double);
[v _floor `(d ~T0 @X0 0 ef1`d ]
"39 ./lcd4.h
[; ;./lcd4.h: 39: unsigned char LCD_IsBusy();
[v _LCD_IsBusy `(uc ~T0 @X0 0 e? ]
"54 D:\Mplab X\xc8\pic\include\pic16f877a.h
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 54: __asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
"61
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 61: __asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
"68
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 68: __asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
"75
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 75: __asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
"161
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 161: __asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
"168
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 168: __asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
"218
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 218: __asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
"280
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 280: __asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
"342
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 342: __asm("PORTD equ 08h");
[; <" PORTD equ 08h ;# ">
"404
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 404: __asm("PORTE equ 09h");
[; <" PORTE equ 09h ;# ">
"436
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 436: __asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
"456
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 456: __asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
"534
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 534: __asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
"596
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 596: __asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
"636
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 636: __asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
"643
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 643: __asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
"650
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 650: __asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
"657
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 657: __asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
"732
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 732: __asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
"739
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 739: __asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
"810
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 810: __asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
"817
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 817: __asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
"887
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 887: __asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
"894
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 894: __asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
"901
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 901: __asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
"908
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 908: __asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
"966
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 966: __asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
"1061
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 1061: __asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
"1068
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 1068: __asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
"1075
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 1075: __asm("CCPR2 equ 01Bh");
[; <" CCPR2 equ 01Bh ;# ">
"1082
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 1082: __asm("CCPR2L equ 01Bh");
[; <" CCPR2L equ 01Bh ;# ">
"1089
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 1089: __asm("CCPR2H equ 01Ch");
[; <" CCPR2H equ 01Ch ;# ">
"1096
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 1096: __asm("CCP2CON equ 01Dh");
[; <" CCP2CON equ 01Dh ;# ">
"1154
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 1154: __asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
"1161
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 1161: __asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
"1257
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 1257: __asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
"1327
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 1327: __asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
"1377
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 1377: __asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
"1439
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 1439: __asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
"1501
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 1501: __asm("TRISD equ 088h");
[; <" TRISD equ 088h ;# ">
"1563
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 1563: __asm("TRISE equ 089h");
[; <" TRISE equ 089h ;# ">
"1620
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 1620: __asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
"1682
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 1682: __asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
"1722
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 1722: __asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
"1756
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 1756: __asm("SSPCON2 equ 091h");
[; <" SSPCON2 equ 091h ;# ">
"1818
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 1818: __asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
"1825
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 1825: __asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
"1832
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 1832: __asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
"2001
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2001: __asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
"2082
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2082: __asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
"2089
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2089: __asm("CMCON equ 09Ch");
[; <" CMCON equ 09Ch ;# ">
"2159
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2159: __asm("CVRCON equ 09Dh");
[; <" CVRCON equ 09Dh ;# ">
"2224
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2224: __asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
"2231
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2231: __asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
"2290
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2290: __asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
"2297
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2297: __asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
"2304
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2304: __asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
"2311
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2311: __asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
"2318
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2318: __asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
"2363
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2363: __asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
"3 ./main.h
[p x FOSC = HS ]
"4
[p x WDTE = OFF ]
"5
[p x PWRTE = OFF ]
"6
[p x BOREN = OFF ]
"7
[p x LVP = OFF ]
"8
[p x CPD = OFF ]
"9
[p x WRT = OFF ]
"10
[p x CP = OFF ]
"6 lcd4.c
[; ;lcd4.c: 6: char max[]="MAX";
[v _max `uc ~T0 @X0 -> 4 `i e ]
[i _max
:U ..
-> 77 `c
-> 65 `c
-> 88 `c
-> 0 `c
..
]
"8
[; ;lcd4.c: 8: void LCD_Cmd(char select, char cmd) {
[v _LCD_Cmd `(v ~T0 @X0 1 ef2`uc`uc ]
{
[e :U _LCD_Cmd ]
[v _select `uc ~T0 @X0 1 r1 ]
[v _cmd `uc ~T0 @X0 1 r2 ]
[f ]
"9
[; ;lcd4.c: 9:     TRISB3 = 0;
[e = _TRISB3 -> -> 0 `i `b ]
"10
[; ;lcd4.c: 10:     TRISB1 = 0;
[e = _TRISB1 -> -> 0 `i `b ]
"11
[; ;lcd4.c: 11:     TRISB2 = 0;
[e = _TRISB2 -> -> 0 `i `b ]
"13
[; ;lcd4.c: 13:     TRISD7 = 0;
[e = _TRISD7 -> -> 0 `i `b ]
"14
[; ;lcd4.c: 14:     TRISD6 = 0;
[e = _TRISD6 -> -> 0 `i `b ]
"15
[; ;lcd4.c: 15:     TRISD5 = 0;
[e = _TRISD5 -> -> 0 `i `b ]
"16
[; ;lcd4.c: 16:     TRISD4 = 0;
[e = _TRISD4 -> -> 0 `i `b ]
"17
[; ;lcd4.c: 17:     TRISD3 = 0;
[e = _TRISD3 -> -> 0 `i `b ]
"18
[; ;lcd4.c: 18:     TRISD2 = 0;
[e = _TRISD2 -> -> 0 `i `b ]
"19
[; ;lcd4.c: 19:     TRISD1 = 0;
[e = _TRISD1 -> -> 0 `i `b ]
"20
[; ;lcd4.c: 20:     TRISD0 = 0;
[e = _TRISD0 -> -> 0 `i `b ]
"22
[; ;lcd4.c: 22:     RD7 = 0;
[e = _RD7 -> -> 0 `i `b ]
"23
[; ;lcd4.c: 23:     RD6 = 0;
[e = _RD6 -> -> 0 `i `b ]
"24
[; ;lcd4.c: 24:     RD5 = 0;
[e = _RD5 -> -> 0 `i `b ]
"25
[; ;lcd4.c: 25:     RD4 = 0;
[e = _RD4 -> -> 0 `i `b ]
"26
[; ;lcd4.c: 26:     RD3 = 0;
[e = _RD3 -> -> 0 `i `b ]
"27
[; ;lcd4.c: 27:     RD2 = 0;
[e = _RD2 -> -> 0 `i `b ]
"28
[; ;lcd4.c: 28:     RD1 = 0;
[e = _RD1 -> -> 0 `i `b ]
"29
[; ;lcd4.c: 29:     RD0 = 0;
[e = _RD0 -> -> 0 `i `b ]
"31
[; ;lcd4.c: 31:     RB3 = select;
[e = _RB3 -> _select `b ]
"32
[; ;lcd4.c: 32:     RB1 = 0;
[e = _RB1 -> -> 0 `i `b ]
"34
[; ;lcd4.c: 34:     char cmd1 = (cmd & 0xF0) >> 4;
[v _cmd1 `uc ~T0 @X0 1 a ]
[e = _cmd1 -> >> & -> _cmd `i -> 240 `i -> 4 `i `uc ]
"36
[; ;lcd4.c: 36:     RD4 = (cmd1 >> 0) & 0x01;
[e = _RD4 -> & >> -> _cmd1 `i -> 0 `i -> 1 `i `b ]
"37
[; ;lcd4.c: 37:     RD5 = (cmd1 >> 1) & 0x01;
[e = _RD5 -> & >> -> _cmd1 `i -> 1 `i -> 1 `i `b ]
"38
[; ;lcd4.c: 38:     RD6 = (cmd1 >> 2) & 0x01;
[e = _RD6 -> & >> -> _cmd1 `i -> 2 `i -> 1 `i `b ]
"39
[; ;lcd4.c: 39:     RD7 = (cmd1 >> 3) & 0x01;
[e = _RD7 -> & >> -> _cmd1 `i -> 3 `i -> 1 `i `b ]
"41
[; ;lcd4.c: 41:     RB2 = 1;
[e = _RB2 -> -> 1 `i `b ]
"42
[; ;lcd4.c: 42:     _delay((unsigned long)((5)*(20000000/4000000.0)));
[e ( __delay (1 -> * -> -> 5 `i `d / -> -> 20000000 `l `d .4000000.0 `ul ]
"43
[; ;lcd4.c: 43:     RB2 = 0;
[e = _RB2 -> -> 0 `i `b ]
"45
[; ;lcd4.c: 45:     cmd1 = (cmd & 0x0F);
[e = _cmd1 -> & -> _cmd `i -> 15 `i `uc ]
"47
[; ;lcd4.c: 47:     RD4 = (cmd1 >> 0) & 0x01;
[e = _RD4 -> & >> -> _cmd1 `i -> 0 `i -> 1 `i `b ]
"48
[; ;lcd4.c: 48:     RD5 = (cmd1 >> 1) & 0x01;
[e = _RD5 -> & >> -> _cmd1 `i -> 1 `i -> 1 `i `b ]
"49
[; ;lcd4.c: 49:     RD6 = (cmd1 >> 2) & 0x01;
[e = _RD6 -> & >> -> _cmd1 `i -> 2 `i -> 1 `i `b ]
"50
[; ;lcd4.c: 50:     RD7 = (cmd1 >> 3) & 0x01;
[e = _RD7 -> & >> -> _cmd1 `i -> 3 `i -> 1 `i `b ]
"52
[; ;lcd4.c: 52:     RB2 = 1;
[e = _RB2 -> -> 1 `i `b ]
"53
[; ;lcd4.c: 53:     _delay((unsigned long)((5)*(20000000/4000000.0)));
[e ( __delay (1 -> * -> -> 5 `i `d / -> -> 20000000 `l `d .4000000.0 `ul ]
"54
[; ;lcd4.c: 54:     RB2 = 0;
[e = _RB2 -> -> 0 `i `b ]
"56
[; ;lcd4.c: 56:     _delay((unsigned long)((10)*(20000000/4000.0)));
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
"57
[; ;lcd4.c: 57: }
[e :UE 99 ]
}
"59
[; ;lcd4.c: 59: void LCD_8_Cmd(char select, char cmd) {
[v _LCD_8_Cmd `(v ~T0 @X0 1 ef2`uc`uc ]
{
[e :U _LCD_8_Cmd ]
[v _select `uc ~T0 @X0 1 r1 ]
[v _cmd `uc ~T0 @X0 1 r2 ]
[f ]
"60
[; ;lcd4.c: 60:     TRISB3 = 0;
[e = _TRISB3 -> -> 0 `i `b ]
"61
[; ;lcd4.c: 61:     TRISB1 = 0;
[e = _TRISB1 -> -> 0 `i `b ]
"62
[; ;lcd4.c: 62:     TRISB2 = 0;
[e = _TRISB2 -> -> 0 `i `b ]
"64
[; ;lcd4.c: 64:     TRISD7 = 0;
[e = _TRISD7 -> -> 0 `i `b ]
"65
[; ;lcd4.c: 65:     TRISD6 = 0;
[e = _TRISD6 -> -> 0 `i `b ]
"66
[; ;lcd4.c: 66:     TRISD5 = 0;
[e = _TRISD5 -> -> 0 `i `b ]
"67
[; ;lcd4.c: 67:     TRISD4 = 0;
[e = _TRISD4 -> -> 0 `i `b ]
"68
[; ;lcd4.c: 68:     TRISD3 = 0;
[e = _TRISD3 -> -> 0 `i `b ]
"69
[; ;lcd4.c: 69:     TRISD2 = 0;
[e = _TRISD2 -> -> 0 `i `b ]
"70
[; ;lcd4.c: 70:     TRISD1 = 0;
[e = _TRISD1 -> -> 0 `i `b ]
"71
[; ;lcd4.c: 71:     TRISD0 = 0;
[e = _TRISD0 -> -> 0 `i `b ]
"73
[; ;lcd4.c: 73:     RD7 = 0;
[e = _RD7 -> -> 0 `i `b ]
"74
[; ;lcd4.c: 74:     RD6 = 0;
[e = _RD6 -> -> 0 `i `b ]
"75
[; ;lcd4.c: 75:     RD5 = 0;
[e = _RD5 -> -> 0 `i `b ]
"76
[; ;lcd4.c: 76:     RD4 = 0;
[e = _RD4 -> -> 0 `i `b ]
"77
[; ;lcd4.c: 77:     RD3 = 0;
[e = _RD3 -> -> 0 `i `b ]
"78
[; ;lcd4.c: 78:     RD2 = 0;
[e = _RD2 -> -> 0 `i `b ]
"79
[; ;lcd4.c: 79:     RD1 = 0;
[e = _RD1 -> -> 0 `i `b ]
"80
[; ;lcd4.c: 80:     RD0 = 0;
[e = _RD0 -> -> 0 `i `b ]
"82
[; ;lcd4.c: 82:     RB3 = select;
[e = _RB3 -> _select `b ]
"83
[; ;lcd4.c: 83:     RB1 = 0;
[e = _RB1 -> -> 0 `i `b ]
"85
[; ;lcd4.c: 85:     RD0 = (cmd >> 0) & 0x01;
[e = _RD0 -> & >> -> _cmd `i -> 0 `i -> 1 `i `b ]
"86
[; ;lcd4.c: 86:     RD1 = (cmd >> 1) & 0x01;
[e = _RD1 -> & >> -> _cmd `i -> 1 `i -> 1 `i `b ]
"87
[; ;lcd4.c: 87:     RD2 = (cmd >> 2) & 0x01;
[e = _RD2 -> & >> -> _cmd `i -> 2 `i -> 1 `i `b ]
"88
[; ;lcd4.c: 88:     RD3 = (cmd >> 3) & 0x01;
[e = _RD3 -> & >> -> _cmd `i -> 3 `i -> 1 `i `b ]
"89
[; ;lcd4.c: 89:     RD4 = (cmd >> 4) & 0x01;
[e = _RD4 -> & >> -> _cmd `i -> 4 `i -> 1 `i `b ]
"90
[; ;lcd4.c: 90:     RD5 = (cmd >> 5) & 0x01;
[e = _RD5 -> & >> -> _cmd `i -> 5 `i -> 1 `i `b ]
"91
[; ;lcd4.c: 91:     RD6 = (cmd >> 6) & 0x01;
[e = _RD6 -> & >> -> _cmd `i -> 6 `i -> 1 `i `b ]
"92
[; ;lcd4.c: 92:     RD7 = (cmd >> 7) & 0x01;
[e = _RD7 -> & >> -> _cmd `i -> 7 `i -> 1 `i `b ]
"94
[; ;lcd4.c: 94:     RB2 = 1;
[e = _RB2 -> -> 1 `i `b ]
"95
[; ;lcd4.c: 95:     _delay((unsigned long)((5)*(20000000/4000000.0)));
[e ( __delay (1 -> * -> -> 5 `i `d / -> -> 20000000 `l `d .4000000.0 `ul ]
"96
[; ;lcd4.c: 96:     RB2 = 0;
[e = _RB2 -> -> 0 `i `b ]
"97
[; ;lcd4.c: 97:     _delay((unsigned long)((10)*(20000000/4000.0)));
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
"98
[; ;lcd4.c: 98: }
[e :UE 100 ]
}
"100
[; ;lcd4.c: 100: void LCD_8_Init() {
[v _LCD_8_Init `(v ~T0 @X0 1 ef ]
{
[e :U _LCD_8_Init ]
[f ]
"101
[; ;lcd4.c: 101:     LCD_8_Cmd(0, 0x38);
[e ( _LCD_8_Cmd (2 , -> -> 0 `i `uc -> -> 56 `i `uc ]
"102
[; ;lcd4.c: 102:     LCD_Cmd(0, 0x0C);
[e ( _LCD_Cmd (2 , -> -> 0 `i `uc -> -> 12 `i `uc ]
"103
[; ;lcd4.c: 103:     LCD_Cmd(0, 0x06);
[e ( _LCD_Cmd (2 , -> -> 0 `i `uc -> -> 6 `i `uc ]
"104
[; ;lcd4.c: 104:     LCD_Cmd(0, 0x01);
[e ( _LCD_Cmd (2 , -> -> 0 `i `uc -> -> 1 `i `uc ]
"105
[; ;lcd4.c: 105: }
[e :UE 101 ]
}
"107
[; ;lcd4.c: 107: void LCD_Init() {
[v _LCD_Init `(v ~T0 @X0 1 ef ]
{
[e :U _LCD_Init ]
[f ]
"108
[; ;lcd4.c: 108:     LCD_8_Cmd(0, 0x20);
[e ( _LCD_8_Cmd (2 , -> -> 0 `i `uc -> -> 32 `i `uc ]
"109
[; ;lcd4.c: 109:     LCD_Cmd(0, 0x28);
[e ( _LCD_Cmd (2 , -> -> 0 `i `uc -> -> 40 `i `uc ]
"110
[; ;lcd4.c: 110:     LCD_Cmd(0, 0x0C);
[e ( _LCD_Cmd (2 , -> -> 0 `i `uc -> -> 12 `i `uc ]
"111
[; ;lcd4.c: 111:     LCD_Cmd(0, 0x06);
[e ( _LCD_Cmd (2 , -> -> 0 `i `uc -> -> 6 `i `uc ]
"112
[; ;lcd4.c: 112:     LCD_Cmd(0, 0x01);
[e ( _LCD_Cmd (2 , -> -> 0 `i `uc -> -> 1 `i `uc ]
"113
[; ;lcd4.c: 113:     LCD_Cmd(0,0x02);
[e ( _LCD_Cmd (2 , -> -> 0 `i `uc -> -> 2 `i `uc ]
"114
[; ;lcd4.c: 114: }
[e :UE 102 ]
}
"116
[; ;lcd4.c: 116: void LCD_Out_Str(char str[]) {
[v _LCD_Out_Str `(v ~T0 @X0 1 ef1`*uc ]
{
[e :U _LCD_Out_Str ]
[v _str `*uc ~T0 @X0 1 r1 ]
[f ]
"117
[; ;lcd4.c: 117:     for (int i = 0; i < strlen(str); i++) {
{
[v _i `i ~T0 @X0 1 a ]
[e = _i -> 0 `i ]
[e $U 107  ]
[e :U 104 ]
{
"118
[; ;lcd4.c: 118:         if (i == 15) {
[e $ ! == _i -> 15 `i 108  ]
{
"119
[; ;lcd4.c: 119:             LCD_Cmd(0, 0xC0);
[e ( _LCD_Cmd (2 , -> -> 0 `i `uc -> -> 192 `i `uc ]
"120
[; ;lcd4.c: 120:         }
}
[e :U 108 ]
"121
[; ;lcd4.c: 121:         LCD_Cmd(1, str[i]);
[e ( _LCD_Cmd (2 , -> -> 1 `i `uc *U + _str * -> _i `x -> -> # *U _str `i `x ]
"122
[; ;lcd4.c: 122:     }
}
[e ++ _i -> 1 `i ]
[e :U 107 ]
[e $ < -> _i `ui ( _strlen (1 -> _str `*Cuc 104  ]
[e :U 105 ]
}
"123
[; ;lcd4.c: 123: }
[e :UE 103 ]
}
"125
[; ;lcd4.c: 125: void LCD_Out_Int(signed int value) {
[v _LCD_Out_Int `(v ~T0 @X0 1 ef1`i ]
{
[e :U _LCD_Out_Int ]
[v _value `i ~T0 @X0 1 r1 ]
[f ]
"126
[; ;lcd4.c: 126:     int doDai = 0, t1, t2, i;
[v _doDai `i ~T0 @X0 1 a ]
[e = _doDai -> 0 `i ]
[v _t1 `i ~T0 @X0 1 a ]
[v _t2 `i ~T0 @X0 1 a ]
[v _i `i ~T0 @X0 1 a ]
"127
[; ;lcd4.c: 127:     if (value < 0) {
[e $ ! < _value -> 0 `i 110  ]
{
"128
[; ;lcd4.c: 128:         LCD_Cmd(1, ' ');
[e ( _LCD_Cmd (2 , -> -> 1 `i `uc -> -> 32 `ui `uc ]
"129
[; ;lcd4.c: 129:         LCD_Cmd(1, '<');
[e ( _LCD_Cmd (2 , -> -> 1 `i `uc -> -> 60 `ui `uc ]
"130
[; ;lcd4.c: 130:         LCD_Cmd(1, (char) (0 + 48));
[e ( _LCD_Cmd (2 , -> -> 1 `i `uc -> + -> 0 `i -> 48 `i `uc ]
"131
[; ;lcd4.c: 131:         return;
[e $UE 109  ]
"132
[; ;lcd4.c: 132:     } else if (value >= 0 && value < 10) {
}
[e $U 111  ]
[e :U 110 ]
[e $ ! && >= _value -> 0 `i < _value -> 10 `i 112  ]
{
"133
[; ;lcd4.c: 133:         LCD_Cmd(1, ' ');
[e ( _LCD_Cmd (2 , -> -> 1 `i `uc -> -> 32 `ui `uc ]
"134
[; ;lcd4.c: 134:         LCD_Cmd(1, ' ');
[e ( _LCD_Cmd (2 , -> -> 1 `i `uc -> -> 32 `ui `uc ]
"135
[; ;lcd4.c: 135:         LCD_Cmd(1, (char) (value + 48));
[e ( _LCD_Cmd (2 , -> -> 1 `i `uc -> + _value -> 48 `i `uc ]
"136
[; ;lcd4.c: 136:         return;
[e $UE 109  ]
"137
[; ;lcd4.c: 137:     } else if (value >= 10 && value < 100) {
}
[e $U 113  ]
[e :U 112 ]
[e $ ! && >= _value -> 10 `i < _value -> 100 `i 114  ]
{
"138
[; ;lcd4.c: 138:         doDai = 2;
[e = _doDai -> 2 `i ]
"139
[; ;lcd4.c: 139:     } else if (value >= 100 && value < 1000) {
}
[e $U 115  ]
[e :U 114 ]
[e $ ! && >= _value -> 100 `i < _value -> 1000 `i 116  ]
{
"140
[; ;lcd4.c: 140:         doDai = 3;
[e = _doDai -> 3 `i ]
"141
[; ;lcd4.c: 141:     }
}
[e $U 117  ]
"149
[; ;lcd4.c: 149:     else if (value >= 1000) {
[e :U 116 ]
[e $ ! >= _value -> 1000 `i 118  ]
{
"150
[; ;lcd4.c: 150:         LCD_Out_Str(max);
[e ( _LCD_Out_Str (1 &U _max ]
"151
[; ;lcd4.c: 151:         return;
[e $UE 109  ]
"152
[; ;lcd4.c: 152:     }
}
[e :U 118 ]
[e :U 117 ]
[e :U 115 ]
[e :U 113 ]
[e :U 111 ]
"153
[; ;lcd4.c: 153:     for (i = 0; i < 3 - doDai; i++) {
{
[e = _i -> 0 `i ]
[e $U 122  ]
[e :U 119 ]
{
"154
[; ;lcd4.c: 154:         LCD_Cmd(1, ' ');
[e ( _LCD_Cmd (2 , -> -> 1 `i `uc -> -> 32 `ui `uc ]
"155
[; ;lcd4.c: 155:     }
}
[e ++ _i -> 1 `i ]
[e :U 122 ]
[e $ < _i - -> 3 `i _doDai 119  ]
[e :U 120 ]
}
"156
[; ;lcd4.c: 156:     if (doDai >= 2) {
[e $ ! >= _doDai -> 2 `i 123  ]
{
"157
[; ;lcd4.c: 157:         do {
[e :U 126 ]
{
"158
[; ;lcd4.c: 158:             t1 = pow((double) 10, (double) (doDai - 1));
[e = _t1 -> ( _pow (2 , -> -> 10 `i `d -> - _doDai -> 1 `i `d `i ]
"159
[; ;lcd4.c: 159:             t2 = value / t1;
[e = _t2 / _value _t1 ]
"160
[; ;lcd4.c: 160:             LCD_Cmd(1, (char) (t2 + 48));
[e ( _LCD_Cmd (2 , -> -> 1 `i `uc -> + _t2 -> 48 `i `uc ]
"161
[; ;lcd4.c: 161:             value %= t1;
[e =% _value _t1 ]
"162
[; ;lcd4.c: 162:             doDai--;
[e -- _doDai -> 1 `i ]
"163
[; ;lcd4.c: 163:         } while (doDai != 0);
}
[e $ != _doDai -> 0 `i 126  ]
[e :U 125 ]
"164
[; ;lcd4.c: 164:     }
}
[e :U 123 ]
"165
[; ;lcd4.c: 165: }
[e :UE 109 ]
}
"167
[; ;lcd4.c: 167: void LCD_Out_Double(double value) {
[v _LCD_Out_Double `(v ~T0 @X0 1 ef1`d ]
{
[e :U _LCD_Out_Double ]
[v _value `d ~T0 @X0 1 r1 ]
[f ]
"168
[; ;lcd4.c: 168:     int t1, t2;
[v _t1 `i ~T0 @X0 1 a ]
[v _t2 `i ~T0 @X0 1 a ]
"169
[; ;lcd4.c: 169:     t1 = floor(value);
[e = _t1 -> ( _floor (1 _value `i ]
"170
[; ;lcd4.c: 170:     t2 = (int) ((value - t1)*1000);
[e = _t2 -> * - _value -> _t1 `d -> -> 1000 `i `d `i ]
"171
[; ;lcd4.c: 171:     LCD_Out_Int(t1);
[e ( _LCD_Out_Int (1 _t1 ]
"172
[; ;lcd4.c: 172:     LCD_Cmd(1, '.');
[e ( _LCD_Cmd (2 , -> -> 1 `i `uc -> -> 46 `ui `uc ]
"173
[; ;lcd4.c: 173:     LCD_Out_Int(t2);
[e ( _LCD_Out_Int (1 _t2 ]
"174
[; ;lcd4.c: 174: }
[e :UE 127 ]
}
"176
[; ;lcd4.c: 176: void LCD_GotoXy(unsigned char col, unsigned char row) {
[v _LCD_GotoXy `(v ~T0 @X0 1 ef2`uc`uc ]
{
[e :U _LCD_GotoXy ]
[v _col `uc ~T0 @X0 1 r1 ]
[v _row `uc ~T0 @X0 1 r2 ]
[f ]
"178
[; ;lcd4.c: 178:     unsigned char address;
[v _address `uc ~T0 @X0 1 a ]
"181
[; ;lcd4.c: 181:     if (row != 0)
[e $ ! != -> _row `i -> 0 `i 129  ]
"182
[; ;lcd4.c: 182:         address = 0x40;
[e = _address -> -> 64 `i `uc ]
[e $U 130  ]
"183
[; ;lcd4.c: 183:     else
[e :U 129 ]
"184
[; ;lcd4.c: 184:         address = 0x00;
[e = _address -> -> 0 `i `uc ]
[e :U 130 ]
"186
[; ;lcd4.c: 186:     address += col;
[e =+ _address -> _col `uc ]
"188
[; ;lcd4.c: 188:     LCD_Cmd(0, 0x80 | address);
[e ( _LCD_Cmd (2 , -> -> 0 `i `uc -> | -> 128 `i -> _address `i `uc ]
"190
[; ;lcd4.c: 190:     while (LCD_IsBusy());
[e $U 131  ]
[e :U 132 ]
[e :U 131 ]
[e $ != -> ( _LCD_IsBusy ..  `i -> 0 `i 132  ]
[e :U 133 ]
"191
[; ;lcd4.c: 191: }
[e :UE 128 ]
}
"193
[; ;lcd4.c: 193: unsigned char LCD_IsBusy() {
[v _LCD_IsBusy `(uc ~T0 @X0 1 ef ]
{
[e :U _LCD_IsBusy ]
[f ]
"195
[; ;lcd4.c: 195:     unsigned char busy;
[v _busy `uc ~T0 @X0 1 a ]
"198
[; ;lcd4.c: 198:     TRISD4 = 1;
[e = _TRISD4 -> -> 1 `i `b ]
"199
[; ;lcd4.c: 199:     TRISD5 = 1;
[e = _TRISD5 -> -> 1 `i `b ]
"200
[; ;lcd4.c: 200:     TRISD5 = 1;
[e = _TRISD5 -> -> 1 `i `b ]
"201
[; ;lcd4.c: 201:     TRISD7 = 1;
[e = _TRISD7 -> -> 1 `i `b ]
"203
[; ;lcd4.c: 203:     RB1 = 1;
[e = _RB1 -> -> 1 `i `b ]
"204
[; ;lcd4.c: 204:     RB3 = 0;
[e = _RB3 -> -> 0 `i `b ]
"205
[; ;lcd4.c: 205:     _delay((unsigned long)((20)*(20000000/4000000.0)));
[e ( __delay (1 -> * -> -> 20 `i `d / -> -> 20000000 `l `d .4000000.0 `ul ]
"206
[; ;lcd4.c: 206:     RB2 = 1;
[e = _RB2 -> -> 1 `i `b ]
"207
[; ;lcd4.c: 207:     _delay((unsigned long)((20)*(20000000/4000000.0)));
[e ( __delay (1 -> * -> -> 20 `i `d / -> -> 20000000 `l `d .4000000.0 `ul ]
"209
[; ;lcd4.c: 209:     busy = RD7;
[e = _busy -> _RD7 `uc ]
"211
[; ;lcd4.c: 211:     RB2 = 0;
[e = _RB2 -> -> 0 `i `b ]
"212
[; ;lcd4.c: 212:     _delay((unsigned long)((20)*(20000000/4000000.0)));
[e ( __delay (1 -> * -> -> 20 `i `d / -> -> 20000000 `l `d .4000000.0 `ul ]
"213
[; ;lcd4.c: 213:     RB2 = 1;
[e = _RB2 -> -> 1 `i `b ]
"214
[; ;lcd4.c: 214:     _delay((unsigned long)((20)*(20000000/4000000.0)));
[e ( __delay (1 -> * -> -> 20 `i `d / -> -> 20000000 `l `d .4000000.0 `ul ]
"215
[; ;lcd4.c: 215:     RB2 = 0;
[e = _RB2 -> -> 0 `i `b ]
"217
[; ;lcd4.c: 217:     return busy;
[e ) _busy ]
[e $UE 134  ]
"218
[; ;lcd4.c: 218: }
[e :UE 134 ]
}
