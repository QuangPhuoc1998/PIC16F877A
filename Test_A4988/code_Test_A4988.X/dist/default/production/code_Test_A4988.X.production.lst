

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Dec 25 14:51:06 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2
    38                           	psect	intentry,global,class=CODE,delta=2
    39                           	dabs	1,0x7E,2
    40  0000                     
    41                           ; Version 2.05
    42                           ; Generated 20/12/2018 GMT
    43                           ; 
    44                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC16F877A Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     	;# 
    76  0001                     	;# 
    77  0002                     	;# 
    78  0003                     	;# 
    79  0004                     	;# 
    80  0005                     	;# 
    81  0006                     	;# 
    82  0007                     	;# 
    83  0008                     	;# 
    84  0009                     	;# 
    85  000A                     	;# 
    86  000B                     	;# 
    87  000C                     	;# 
    88  000D                     	;# 
    89  000E                     	;# 
    90  000E                     	;# 
    91  000F                     	;# 
    92  0010                     	;# 
    93  0011                     	;# 
    94  0012                     	;# 
    95  0013                     	;# 
    96  0014                     	;# 
    97  0015                     	;# 
    98  0015                     	;# 
    99  0016                     	;# 
   100  0017                     	;# 
   101  0018                     	;# 
   102  0019                     	;# 
   103  001A                     	;# 
   104  001B                     	;# 
   105  001B                     	;# 
   106  001C                     	;# 
   107  001D                     	;# 
   108  001E                     	;# 
   109  001F                     	;# 
   110  0081                     	;# 
   111  0085                     	;# 
   112  0086                     	;# 
   113  0087                     	;# 
   114  0088                     	;# 
   115  0089                     	;# 
   116  008C                     	;# 
   117  008D                     	;# 
   118  008E                     	;# 
   119  0091                     	;# 
   120  0092                     	;# 
   121  0093                     	;# 
   122  0094                     	;# 
   123  0098                     	;# 
   124  0099                     	;# 
   125  009C                     	;# 
   126  009D                     	;# 
   127  009E                     	;# 
   128  009F                     	;# 
   129  010C                     	;# 
   130  010D                     	;# 
   131  010E                     	;# 
   132  010F                     	;# 
   133  018C                     	;# 
   134  018D                     	;# 
   135  0000                     	;# 
   136  0001                     	;# 
   137  0002                     	;# 
   138  0003                     	;# 
   139  0004                     	;# 
   140  0005                     	;# 
   141  0006                     	;# 
   142  0007                     	;# 
   143  0008                     	;# 
   144  0009                     	;# 
   145  000A                     	;# 
   146  000B                     	;# 
   147  000C                     	;# 
   148  000D                     	;# 
   149  000E                     	;# 
   150  000E                     	;# 
   151  000F                     	;# 
   152  0010                     	;# 
   153  0011                     	;# 
   154  0012                     	;# 
   155  0013                     	;# 
   156  0014                     	;# 
   157  0015                     	;# 
   158  0015                     	;# 
   159  0016                     	;# 
   160  0017                     	;# 
   161  0018                     	;# 
   162  0019                     	;# 
   163  001A                     	;# 
   164  001B                     	;# 
   165  001B                     	;# 
   166  001C                     	;# 
   167  001D                     	;# 
   168  001E                     	;# 
   169  001F                     	;# 
   170  0081                     	;# 
   171  0085                     	;# 
   172  0086                     	;# 
   173  0087                     	;# 
   174  0088                     	;# 
   175  0089                     	;# 
   176  008C                     	;# 
   177  008D                     	;# 
   178  008E                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0094                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009C                     	;# 
   186  009D                     	;# 
   187  009E                     	;# 
   188  009F                     	;# 
   189  010C                     	;# 
   190  010D                     	;# 
   191  010E                     	;# 
   192  010F                     	;# 
   193  018C                     	;# 
   194  018D                     	;# 
   195  0000                     	;# 
   196  0001                     	;# 
   197  0002                     	;# 
   198  0003                     	;# 
   199  0004                     	;# 
   200  0005                     	;# 
   201  0006                     	;# 
   202  0007                     	;# 
   203  0008                     	;# 
   204  0009                     	;# 
   205  000A                     	;# 
   206  000B                     	;# 
   207  000C                     	;# 
   208  000D                     	;# 
   209  000E                     	;# 
   210  000E                     	;# 
   211  000F                     	;# 
   212  0010                     	;# 
   213  0011                     	;# 
   214  0012                     	;# 
   215  0013                     	;# 
   216  0014                     	;# 
   217  0015                     	;# 
   218  0015                     	;# 
   219  0016                     	;# 
   220  0017                     	;# 
   221  0018                     	;# 
   222  0019                     	;# 
   223  001A                     	;# 
   224  001B                     	;# 
   225  001B                     	;# 
   226  001C                     	;# 
   227  001D                     	;# 
   228  001E                     	;# 
   229  001F                     	;# 
   230  0081                     	;# 
   231  0085                     	;# 
   232  0086                     	;# 
   233  0087                     	;# 
   234  0088                     	;# 
   235  0089                     	;# 
   236  008C                     	;# 
   237  008D                     	;# 
   238  008E                     	;# 
   239  0091                     	;# 
   240  0092                     	;# 
   241  0093                     	;# 
   242  0094                     	;# 
   243  0098                     	;# 
   244  0099                     	;# 
   245  009C                     	;# 
   246  009D                     	;# 
   247  009E                     	;# 
   248  009F                     	;# 
   249  010C                     	;# 
   250  010D                     	;# 
   251  010E                     	;# 
   252  010F                     	;# 
   253  018C                     	;# 
   254  018D                     	;# 
   255  000E                     _TMR1	set	14
   256  0015                     _CCPR1	set	21
   257  0001                     _TMR0	set	1
   258  001E                     _ADRESH	set	30
   259  001F                     _ADCON0	set	31
   260  0041                     _RD1	set	65
   261  0040                     _RD0	set	64
   262  0045                     _RD5	set	69
   263  0044                     _RD4	set	68
   264  0043                     _RD3	set	67
   265  0042                     _RD2	set	66
   266  003F                     _RC7	set	63
   267  005A                     _TMR0IF	set	90
   268  0062                     _CCP1IF	set	98
   269  00B8                     _CCP1M0	set	184
   270  00B9                     _CCP1M1	set	185
   271  00BA                     _CCP1M2	set	186
   272  00BB                     _CCP1M3	set	187
   273  0080                     _TMR1ON	set	128
   274  0081                     _TMR1CS	set	129
   275  0082                     _T1SYNC	set	130
   276  0083                     _T1OSCEN	set	131
   277  0084                     _T1CKPS0	set	132
   278  0085                     _T1CKPS1	set	133
   279  005E                     _PEIE	set	94
   280  005F                     _GIE	set	95
   281  00FA                     _GO_nDONE	set	250
   282  0066                     _ADIF	set	102
   283  00F8                     _ADON	set	248
   284  00FF                     _ADCS1	set	255
   285  00FE                     _ADCS0	set	254
   286  005D                     _TMR0IE	set	93
   287  0088                     _TRISD	set	136
   288  0087                     _TRISC	set	135
   289  0086                     _TRISB	set	134
   290  0085                     _TRISA	set	133
   291  0081                     _OPTION_REG	set	129
   292  009E                     _ADRESL	set	158
   293  0462                     _CCP1IE	set	1122
   294  043A                     _TRISC2	set	1082
   295  0460                     _TMR1IE	set	1120
   296  0466                     _ADIE	set	1126
   297  04FF                     _ADFM	set	1279
   298  04FE                     _ADCS2	set	1278
   299  04FB                     _PCFG3	set	1275
   300  04FA                     _PCFG2	set	1274
   301  04F9                     _PCFG1	set	1273
   302  04F8                     _PCFG0	set	1272
   303  043F                     _TRISC7	set	1087
   304  0428                     _TRISA0	set	1064
   305                           
   306                           	psect	strings
   307  0800                     __pstrings:	
   308  0800                     stringtab:	
   309  0800                     __stringtab:	
   310  0800                     stringcode:	
   311                           ;	String table - string pointers are 1 byte each
   312                           
   313  0800                     stringdir:	
   314  0800  3008               	movlw	high stringdir
   315  0801  008A               	movwf	10
   316  0802  0804               	movf	4,w
   317  0803  0A84               	incf	4,f
   318  0804  0782               	addwf	2,f
   319  0805                     __stringbase:	
   320  0805  3400               	retlw	0
   321  0806                     __end_of__stringtab:	
   322  0806                     STR_2:	
   323  0806  3454               	retlw	84	;'T'
   324  0807  346F               	retlw	111	;'o'
   325  0808  3463               	retlw	99	;'c'
   326  0809  3420               	retlw	32	;' '
   327  080A  3464               	retlw	100	;'d'
   328  080B  346F               	retlw	111	;'o'
   329  080C  343A               	retlw	58	;':'
   330  080D  3420               	retlw	32	;' '
   331  080E  3420               	retlw	32	;' '
   332  080F  3420               	retlw	32	;' '
   333  0810  3420               	retlw	32	;' '
   334  0811  3420               	retlw	32	;' '
   335  0812  3472               	retlw	114	;'r'
   336  0813  3470               	retlw	112	;'p'
   337  0814  346D               	retlw	109	;'m'
   338  0815  3400               	retlw	0
   339  0816                     STR_1:	
   340  0816  3466               	retlw	102	;'f'
   341  0817  3465               	retlw	101	;'e'
   342  0818  3465               	retlw	101	;'e'
   343  0819  3464               	retlw	100	;'d'
   344  081A  343A               	retlw	58	;':'
   345  081B  3420               	retlw	32	;' '
   346  081C  3420               	retlw	32	;' '
   347  081D  3420               	retlw	32	;' '
   348  081E  3420               	retlw	32	;' '
   349  081F  3420               	retlw	32	;' '
   350  0820  3420               	retlw	32	;' '
   351  0821  3472               	retlw	114	;'r'
   352  0822  3470               	retlw	112	;'p'
   353  0823  346D               	retlw	109	;'m'
   354  0824  3400               	retlw	0
   355  0825                     STR_3:	
   356  0825  3445               	retlw	69	;'E'
   357  0826  3452               	retlw	82	;'R'
   358  0827  3452               	retlw	82	;'R'
   359  0828  344F               	retlw	79	;'O'
   360  0829  3400               	retlw	0
   361                           
   362                           ; #config settings
   363  0000                     
   364                           	psect	cinit
   365  000F                     start_initialization:	
   366  000F                     __initialization:	
   367                           
   368                           ; Clear objects allocated to BANK1
   369  000F  1383               	bcf	3,7	;select IRP bank0
   370  0010  30B7               	movlw	low __pbssBANK1
   371  0011  0084               	movwf	4
   372  0012  30C8               	movlw	low (__pbssBANK1+17)
   373  0013  160A  118A  2748   	fcall	clear_ram0
   374  0016                     end_of_initialization:	
   375                           ;End of C runtime variable initialization code
   376                           
   377  0016                     __end_of__initialization:	
   378  0016  0183               	clrf	3
   379  0017  120A  118A  281A   	ljmp	_main	;jump to C main() function
   380                           
   381                           	psect	bssBANK1
   382  00B7                     __pbssBANK1:	
   383  00B7                     _sum:	
   384  00B7                     	ds	4
   385  00BB                     _speed:	
   386  00BB                     	ds	4
   387  00BF                     _t:	
   388  00BF                     	ds	2
   389  00C1                     _x:	
   390  00C1                     	ds	2
   391  00C3                     _a:	
   392  00C3                     	ds	2
   393  00C5                     _buffer:	
   394  00C5                     	ds	2
   395  00C7                     _m:	
   396  00C7                     	ds	1
   397                           
   398                           	psect	clrtext
   399  1748                     clear_ram0:	
   400                           ;	Called with FSR containing the base address, and
   401                           ;	W with the last address+1
   402                           
   403  1748  0064               	clrwdt	;clear the watchdog before getting into this loop
   404  1749                     clrloop0:	
   405  1749  0180               	clrf	0	;clear RAM location pointed to by FSR
   406  174A  0A84               	incf	4,f	;increment pointer
   407  174B  0604               	xorwf	4,w	;XOR with final address
   408  174C  1903               	btfsc	3,2	;have we reached the end yet?
   409  174D  3400               	retlw	0	;all done for this memory range, return
   410  174E  0604               	xorwf	4,w	;XOR again to restore value
   411  174F  2F49               	goto	clrloop0	;do the next byte
   412                           
   413                           	psect	cstackBANK1
   414  00A0                     __pcstackBANK1:	
   415  00A0                     ?___fltol:	
   416  00A0                     ___fltol@f1:	
   417                           ; 4 bytes @ 0x0
   418                           
   419                           
   420                           ; 4 bytes @ 0x0
   421  00A0                     	ds	4
   422  00A4                     ??___fltol:	
   423                           
   424                           ; 1 bytes @ 0x4
   425  00A4                     	ds	5
   426  00A9                     ??_main:	
   427                           
   428                           ; 1 bytes @ 0x9
   429  00A9                     	ds	2
   430  00AB                     _main$820:	
   431                           
   432                           ; 4 bytes @ 0xB
   433  00AB                     	ds	4
   434  00AF                     _main$818:	
   435                           
   436                           ; 4 bytes @ 0xF
   437  00AF                     	ds	4
   438  00B3                     _main$819:	
   439                           
   440                           ; 4 bytes @ 0x13
   441  00B3                     	ds	4
   442                           
   443                           	psect	cstackCOMMON
   444  0070                     __pcstackCOMMON:	
   445  0070                     ?_Lcd_Set_Port:	
   446  0070                     ?_Lcd_Init:	
   447                           ; 1 bytes @ 0x0
   448                           
   449  0070                     ?_ADC_Init:	
   450                           ; 1 bytes @ 0x0
   451                           
   452  0070                     ?_Timer0_Init:	
   453                           ; 1 bytes @ 0x0
   454                           
   455  0070                     ?_Timer1_Init:	
   456                           ; 1 bytes @ 0x0
   457                           
   458  0070                     ?_Capture_Init:	
   459                           ; 1 bytes @ 0x0
   460                           
   461  0070                     ?_Lcd_Write_String:	
   462                           ; 1 bytes @ 0x0
   463                           
   464  0070                     ?_Lcd_Write_Char:	
   465                           ; 1 bytes @ 0x0
   466                           
   467  0070                     ?_main:	
   468                           ; 1 bytes @ 0x0
   469                           
   470  0070                     ?_MyInterrup:	
   471                           ; 1 bytes @ 0x0
   472                           
   473  0070                     ??_MyInterrup:	
   474                           ; 1 bytes @ 0x0
   475                           
   476  0070                     ?_Lcd_Port:	
   477                           ; 1 bytes @ 0x0
   478                           
   479  0070                     ?_Lcd_Cmd:	
   480                           ; 1 bytes @ 0x0
   481                           
   482                           
   483                           ; 1 bytes @ 0x0
   484  0070                     	ds	2
   485  0072                     ??_Lcd_Set_Port:	
   486  0072                     ??_ADC_Init:	
   487                           ; 1 bytes @ 0x2
   488                           
   489  0072                     ??_Timer0_Init:	
   490                           ; 1 bytes @ 0x2
   491                           
   492  0072                     ??_Timer1_Init:	
   493                           ; 1 bytes @ 0x2
   494                           
   495  0072                     ??_Capture_Init:	
   496                           ; 1 bytes @ 0x2
   497                           
   498  0072                     ??_Lcd_Port:	
   499                           ; 1 bytes @ 0x2
   500                           
   501  0072                     ?_Read_ADC:	
   502                           ; 1 bytes @ 0x2
   503                           
   504  0072                     ?__Umul8_16:	
   505                           ; 2 bytes @ 0x2
   506                           
   507  0072                     ?___lwmod:	
   508                           ; 2 bytes @ 0x2
   509                           
   510  0072                     ?___lmul:	
   511                           ; 2 bytes @ 0x2
   512                           
   513  0072                     ?___lldiv:	
   514                           ; 4 bytes @ 0x2
   515                           
   516  0072                     ?___xxtofl:	
   517                           ; 4 bytes @ 0x2
   518                           
   519  0072                     Lcd_Port@a:	
   520                           ; 4 bytes @ 0x2
   521                           
   522  0072                     __Umul8_16@multiplicand:	
   523                           ; 1 bytes @ 0x2
   524                           
   525  0072                     ___lwmod@divisor:	
   526                           ; 1 bytes @ 0x2
   527                           
   528  0072                     ___lmul@multiplier:	
   529                           ; 2 bytes @ 0x2
   530                           
   531  0072                     ___lldiv@divisor:	
   532                           ; 4 bytes @ 0x2
   533                           
   534  0072                     ___xxtofl@val:	
   535                           ; 4 bytes @ 0x2
   536                           
   537                           
   538                           ; 4 bytes @ 0x2
   539  0072                     	ds	1
   540  0073                     ??_Lcd_Write_Char:	
   541  0073                     ??_Lcd_Cmd:	
   542                           ; 1 bytes @ 0x3
   543                           
   544                           
   545                           ; 1 bytes @ 0x3
   546  0073                     	ds	1
   547  0074                     ??_Read_ADC:	
   548  0074                     ??__Umul8_16:	
   549                           ; 1 bytes @ 0x4
   550                           
   551  0074                     Lcd_Write_Char@temp:	
   552                           ; 1 bytes @ 0x4
   553                           
   554  0074                     Lcd_Set_Port@a:	
   555                           ; 1 bytes @ 0x4
   556                           
   557  0074                     ___lwmod@dividend:	
   558                           ; 1 bytes @ 0x4
   559                           
   560                           
   561                           ; 2 bytes @ 0x4
   562  0074                     	ds	1
   563  0075                     Lcd_Cmd@a:	
   564  0075                     Lcd_Write_Char@y:	
   565                           ; 1 bytes @ 0x5
   566                           
   567                           
   568                           ; 1 bytes @ 0x5
   569  0075                     	ds	1
   570  0076                     ??_Lcd_Init:	
   571  0076                     ?_Lcd_Set_Cursor:	
   572                           ; 1 bytes @ 0x6
   573                           
   574  0076                     ??___lwmod:	
   575                           ; 1 bytes @ 0x6
   576                           
   577  0076                     ??___xxtofl:	
   578                           ; 1 bytes @ 0x6
   579                           
   580  0076                     Lcd_Set_Cursor@b:	
   581                           ; 1 bytes @ 0x6
   582                           
   583  0076                     Lcd_Write_Char@a:	
   584                           ; 1 bytes @ 0x6
   585                           
   586  0076                     __Umul8_16@product:	
   587                           ; 1 bytes @ 0x6
   588                           
   589  0076                     ___lmul@multiplicand:	
   590                           ; 2 bytes @ 0x6
   591                           
   592  0076                     ___lldiv@dividend:	
   593                           ; 4 bytes @ 0x6
   594                           
   595                           
   596                           ; 4 bytes @ 0x6
   597  0076                     	ds	1
   598  0077                     ??_Lcd_Write_String:	
   599  0077                     ??_Lcd_Set_Cursor:	
   600                           ; 1 bytes @ 0x7
   601                           
   602  0077                     ___lwmod@counter:	
   603                           ; 1 bytes @ 0x7
   604                           
   605  0077                     Lcd_Write_String@i:	
   606                           ; 1 bytes @ 0x7
   607                           
   608                           
   609                           ; 2 bytes @ 0x7
   610  0077                     	ds	1
   611  0078                     ?___lwdiv:	
   612  0078                     Read_ADC@N:	
   613                           ; 2 bytes @ 0x8
   614                           
   615  0078                     ___lwdiv@divisor:	
   616                           ; 2 bytes @ 0x8
   617                           
   618  0078                     __Umul8_16@word_mpld:	
   619                           ; 2 bytes @ 0x8
   620                           
   621                           
   622                           ; 2 bytes @ 0x8
   623  0078                     	ds	1
   624  0079                     Lcd_Write_String@a:	
   625                           
   626                           ; 1 bytes @ 0x9
   627  0079                     	ds	1
   628  007A                     ??___lmul:	
   629  007A                     ??___lldiv:	
   630                           ; 1 bytes @ 0xA
   631                           
   632  007A                     Read_ADC@channel:	
   633                           ; 1 bytes @ 0xA
   634                           
   635  007A                     __Umul8_16@multiplier:	
   636                           ; 1 bytes @ 0xA
   637                           
   638  007A                     ___lwdiv@dividend:	
   639                           ; 1 bytes @ 0xA
   640                           
   641                           
   642                           ; 2 bytes @ 0xA
   643  007A                     	ds	1
   644  007B                     ??___aldiv:	
   645                           
   646                           ; 1 bytes @ 0xB
   647  007B                     	ds	1
   648                           
   649                           	psect	cstackBANK0
   650  0020                     __pcstackBANK0:	
   651  0020                     ??___lwdiv:	
   652  0020                     Lcd_Set_Cursor@a:	
   653                           ; 1 bytes @ 0x0
   654                           
   655  0020                     ___xxtofl@sign:	
   656                           ; 1 bytes @ 0x0
   657                           
   658  0020                     ___lmul@product:	
   659                           ; 1 bytes @ 0x0
   660                           
   661  0020                     ___lldiv@quotient:	
   662                           ; 4 bytes @ 0x0
   663                           
   664                           
   665                           ; 4 bytes @ 0x0
   666  0020                     	ds	1
   667  0021                     Lcd_Set_Cursor@z:	
   668  0021                     ___xxtofl@exp:	
   669                           ; 1 bytes @ 0x1
   670                           
   671  0021                     ___lwdiv@quotient:	
   672                           ; 1 bytes @ 0x1
   673                           
   674                           
   675                           ; 2 bytes @ 0x1
   676  0021                     	ds	1
   677  0022                     Lcd_Set_Cursor@y:	
   678  0022                     ___xxtofl@arg:	
   679                           ; 1 bytes @ 0x2
   680                           
   681                           
   682                           ; 4 bytes @ 0x2
   683  0022                     	ds	1
   684  0023                     Lcd_Set_Cursor@temp:	
   685  0023                     ___lwdiv@counter:	
   686                           ; 1 bytes @ 0x3
   687                           
   688                           
   689                           ; 1 bytes @ 0x3
   690  0023                     	ds	1
   691  0024                     ?_Lcd_Display:	
   692  0024                     ?___aldiv:	
   693                           ; 1 bytes @ 0x4
   694                           
   695  0024                     ___lldiv@counter:	
   696                           ; 4 bytes @ 0x4
   697                           
   698  0024                     Lcd_Display@speed_feel:	
   699                           ; 1 bytes @ 0x4
   700                           
   701  0024                     ___aldiv@divisor:	
   702                           ; 2 bytes @ 0x4
   703                           
   704                           
   705                           ; 4 bytes @ 0x4
   706  0024                     	ds	2
   707  0026                     ?___flmul:	
   708  0026                     Lcd_Display@speed:	
   709                           ; 4 bytes @ 0x6
   710                           
   711  0026                     ___flmul@b:	
   712                           ; 2 bytes @ 0x6
   713                           
   714                           
   715                           ; 4 bytes @ 0x6
   716  0026                     	ds	2
   717  0028                     ??_Lcd_Display:	
   718  0028                     ___aldiv@dividend:	
   719                           ; 1 bytes @ 0x8
   720                           
   721                           
   722                           ; 4 bytes @ 0x8
   723  0028                     	ds	2
   724  002A                     ___flmul@a:	
   725                           
   726                           ; 4 bytes @ 0xA
   727  002A                     	ds	2
   728  002C                     ___aldiv@counter:	
   729                           
   730                           ; 1 bytes @ 0xC
   731  002C                     	ds	1
   732  002D                     ___aldiv@sign:	
   733                           
   734                           ; 1 bytes @ 0xD
   735  002D                     	ds	1
   736  002E                     ??___flmul:	
   737  002E                     ___aldiv@quotient:	
   738                           ; 1 bytes @ 0xE
   739                           
   740                           
   741                           ; 4 bytes @ 0xE
   742  002E                     	ds	4
   743  0032                     ?_map:	
   744  0032                     map@x:	
   745                           ; 4 bytes @ 0x12
   746                           
   747                           
   748                           ; 4 bytes @ 0x12
   749  0032                     	ds	1
   750  0033                     ___flmul@sign:	
   751                           
   752                           ; 1 bytes @ 0x13
   753  0033                     	ds	1
   754  0034                     ___flmul@grs:	
   755                           
   756                           ; 4 bytes @ 0x14
   757  0034                     	ds	2
   758  0036                     map@in_min:	
   759                           
   760                           ; 4 bytes @ 0x16
   761  0036                     	ds	2
   762  0038                     ___flmul@aexp:	
   763                           
   764                           ; 1 bytes @ 0x18
   765  0038                     	ds	1
   766  0039                     ___flmul@bexp:	
   767                           
   768                           ; 1 bytes @ 0x19
   769  0039                     	ds	1
   770  003A                     map@in_max:	
   771  003A                     ___flmul@prod:	
   772                           ; 4 bytes @ 0x1A
   773                           
   774                           
   775                           ; 4 bytes @ 0x1A
   776  003A                     	ds	4
   777  003E                     ___flmul@temp:	
   778  003E                     map@out_min:	
   779                           ; 2 bytes @ 0x1E
   780                           
   781                           
   782                           ; 4 bytes @ 0x1E
   783  003E                     	ds	2
   784  0040                     ?___fldiv:	
   785  0040                     ___fldiv@a:	
   786                           ; 4 bytes @ 0x20
   787                           
   788                           
   789                           ; 4 bytes @ 0x20
   790  0040                     	ds	2
   791  0042                     map@out_max:	
   792                           
   793                           ; 4 bytes @ 0x22
   794  0042                     	ds	2
   795  0044                     ___fldiv@b:	
   796                           
   797                           ; 4 bytes @ 0x24
   798  0044                     	ds	2
   799  0046                     ??_map:	
   800                           
   801                           ; 1 bytes @ 0x26
   802  0046                     	ds	2
   803  0048                     ??___fldiv:	
   804                           
   805                           ; 1 bytes @ 0x28
   806  0048                     	ds	5
   807  004D                     ___fldiv@rem:	
   808                           
   809                           ; 4 bytes @ 0x2D
   810  004D                     	ds	4
   811  0051                     ___fldiv@sign:	
   812                           
   813                           ; 1 bytes @ 0x31
   814  0051                     	ds	1
   815  0052                     ___fldiv@new_exp:	
   816                           
   817                           ; 2 bytes @ 0x32
   818  0052                     	ds	2
   819  0054                     ___fldiv@grs:	
   820                           
   821                           ; 4 bytes @ 0x34
   822  0054                     	ds	4
   823  0058                     ___fldiv@bexp:	
   824                           
   825                           ; 1 bytes @ 0x38
   826  0058                     	ds	1
   827  0059                     ___fldiv@aexp:	
   828                           
   829                           ; 1 bytes @ 0x39
   830  0059                     	ds	1
   831  005A                     ?___fladd:	
   832  005A                     ___fladd@b:	
   833                           ; 4 bytes @ 0x3A
   834                           
   835                           
   836                           ; 4 bytes @ 0x3A
   837  005A                     	ds	4
   838  005E                     ___fladd@a:	
   839                           
   840                           ; 4 bytes @ 0x3E
   841  005E                     	ds	4
   842  0062                     ??___fladd:	
   843                           
   844                           ; 1 bytes @ 0x42
   845  0062                     	ds	8
   846  006A                     ___fladd@signs:	
   847                           
   848                           ; 1 bytes @ 0x4A
   849  006A                     	ds	1
   850  006B                     ___fladd@aexp:	
   851                           
   852                           ; 1 bytes @ 0x4B
   853  006B                     	ds	1
   854  006C                     ___fladd@bexp:	
   855                           
   856                           ; 1 bytes @ 0x4C
   857  006C                     	ds	1
   858  006D                     ___fladd@grs:	
   859                           
   860                           ; 1 bytes @ 0x4D
   861  006D                     	ds	1
   862  006E                     ___fltol@sign1:	
   863                           
   864                           ; 1 bytes @ 0x4E
   865  006E                     	ds	1
   866  006F                     ___fltol@exp1:	
   867                           
   868                           ; 1 bytes @ 0x4F
   869  006F                     	ds	1
   870                           
   871                           	psect	maintext
   872  001A                     __pmaintext:	
   873 ;;
   874 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   875 ;;
   876 ;; *************** function _main *****************
   877 ;; Defined at:
   878 ;;		line 18 in file "Test_A4988.c"
   879 ;; Parameters:    Size  Location     Type
   880 ;;		None
   881 ;; Auto vars:     Size  Location     Type
   882 ;;		None
   883 ;; Return value:  Size  Location     Type
   884 ;;                  1    wreg      void 
   885 ;; Registers used:
   886 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   887 ;; Tracked objects:
   888 ;;		On entry : B00/0
   889 ;;		On exit  : 0/0
   890 ;;		Unchanged: 0/0
   891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   892 ;;      Params:         0       0       0       0       0
   893 ;;      Locals:         0       0      12       0       0
   894 ;;      Temps:          0       0       2       0       0
   895 ;;      Totals:         0       0      14       0       0
   896 ;;Total ram usage:       14 bytes
   897 ;; Hardware stack levels required when called:    5
   898 ;; This function calls:
   899 ;;		_ADC_Init
   900 ;;		_Capture_Init
   901 ;;		_Lcd_Display
   902 ;;		_Lcd_Init
   903 ;;		_Lcd_Set_Cursor
   904 ;;		_Lcd_Set_Port
   905 ;;		_Lcd_Write_String
   906 ;;		_Read_ADC
   907 ;;		_Timer0_Init
   908 ;;		_Timer1_Init
   909 ;;		___fladd
   910 ;;		___fldiv
   911 ;;		___flmul
   912 ;;		___fltol
   913 ;;		___lldiv
   914 ;;		___xxtofl
   915 ;;		_map
   916 ;; This function is called by:
   917 ;;		Startup code after reset
   918 ;; This function uses a non-reentrant model
   919 ;;
   920                           
   921                           
   922                           ;psect for function _main
   923  001A                     _main:	
   924                           
   925                           ;Test_A4988.c: 21:     TRISA0 = 1;
   926                           
   927                           ;incstack = 0
   928                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   929  001A  1683               	bsf	3,5	;RP0=1, select bank1
   930  001B  1303               	bcf	3,6	;RP1=0, select bank1
   931  001C  1405               	bsf	5,0	;volatile
   932                           
   933                           ;Test_A4988.c: 22:     TRISC7 = 0;
   934  001D  1387               	bcf	7,7	;volatile
   935                           
   936                           ;Test_A4988.c: 24:     Lcd_Set_Port('D');
   937  001E  3044               	movlw	68
   938  001F  120A  158A  2050  120A  118A  	fcall	_Lcd_Set_Port
   939                           
   940                           ;Test_A4988.c: 25:     Lcd_Init();
   941  0024  120A  158A  21F2  120A  118A  	fcall	_Lcd_Init
   942                           
   943                           ;Test_A4988.c: 26:     ADC_Init();
   944  0029  160A  118A  2773  120A  118A  	fcall	_ADC_Init
   945                           
   946                           ;Test_A4988.c: 27:     Timer0_Init();
   947  002E  120A  118A  27F2  120A  118A  	fcall	_Timer0_Init
   948                           
   949                           ;Test_A4988.c: 28:     Timer1_Init();
   950  0033  160A  118A  2761  120A  118A  	fcall	_Timer1_Init
   951                           
   952                           ;Test_A4988.c: 29:     Capture_Init();
   953  0038  160A  118A  2750  120A  118A  	fcall	_Capture_Init
   954                           
   955                           ;Test_A4988.c: 31:     Lcd_Write_String("feed:      rpm");
   956  003D  3011               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   957  003E  160A  118A  27DE  120A  118A  	fcall	_Lcd_Write_String
   958                           
   959                           ;Test_A4988.c: 32:     Lcd_Set_Cursor(2,1);
   960  0043  01F6               	clrf	Lcd_Set_Cursor@b
   961  0044  0AF6               	incf	Lcd_Set_Cursor@b,f
   962  0045  3002               	movlw	2
   963  0046  120A  158A  21A2  120A  118A  	fcall	_Lcd_Set_Cursor
   964                           
   965                           ;Test_A4988.c: 33:     Lcd_Write_String("Toc do:     rpm");
   966  004B  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   967  004C  160A  118A  27DE  120A  118A  	fcall	_Lcd_Write_String
   968  0051                     l2685:	
   969                           
   970                           ;Test_A4988.c: 35:     {;Test_A4988.c: 36:         a = Read_ADC(0);
   971  0051  3000               	movlw	0
   972  0052  120A  158A  20E4  120A  118A  	fcall	_Read_ADC
   973  0057  0873               	movf	?_Read_ADC+1,w
   974  0058  1683               	bsf	3,5	;RP0=1, select bank1
   975  0059  1303               	bcf	3,6	;RP1=0, select bank1
   976  005A  00C4               	movwf	(_a+1)^(0+128)
   977  005B  0872               	movf	?_Read_ADC,w
   978  005C  00C3               	movwf	_a^(0+128)
   979                           
   980                           ;Test_A4988.c: 37:         if (a>1020)
   981  005D  3003               	movlw	3
   982  005E  0244               	subwf	(_a+1)^(0+128),w
   983  005F  30FD               	movlw	253
   984  0060  1903               	skipnz
   985  0061  0243               	subwf	_a^(0+128),w
   986  0062  1C03               	skipc
   987  0063  286D               	goto	l126
   988                           
   989                           ;Test_A4988.c: 38:         {;Test_A4988.c: 39:             TMR0IE = 0;
   990  0064  128B               	bcf	11,5	;volatile
   991                           
   992                           ;Test_A4988.c: 40:             speed = 0;
   993  0065  3000               	movlw	0
   994  0066  00BE               	movwf	(_speed+3)^(0+128)
   995  0067  3000               	movlw	0
   996  0068  00BD               	movwf	(_speed+2)^(0+128)
   997  0069  3000               	movlw	0
   998  006A  00BC               	movwf	(_speed+1)^(0+128)
   999  006B  3000               	movlw	0
  1000  006C  29C8               	goto	L1
  1001  006D                     l126:	
  1002                           ;Test_A4988.c: 42:         else
  1003                           
  1004                           ;Test_A4988.c: 41:         }
  1005                           
  1006                           
  1007                           ;Test_A4988.c: 43:         {;Test_A4988.c: 44:             TMR0IE = 1;
  1008  006D  168B               	bsf	11,5	;volatile
  1009                           
  1010                           ;Test_A4988.c: 45:             buffer = map(a,0,1023, 242, 0);
  1011  006E  0843               	movf	_a^(0+128),w
  1012  006F  1283               	bcf	3,5	;RP0=0, select bank0
  1013  0070  1303               	bcf	3,6	;RP1=0, select bank0
  1014  0071  00B2               	movwf	map@x
  1015  0072  1683               	bsf	3,5	;RP0=1, select bank1
  1016  0073  1303               	bcf	3,6	;RP1=0, select bank1
  1017  0074  0844               	movf	(_a+1)^(0+128),w
  1018  0075  1283               	bcf	3,5	;RP0=0, select bank0
  1019  0076  1303               	bcf	3,6	;RP1=0, select bank0
  1020  0077  00B3               	movwf	map@x+1
  1021  0078  01B4               	clrf	map@x+2
  1022  0079  01B5               	clrf	map@x+3
  1023  007A  3000               	movlw	0
  1024  007B  00B9               	movwf	map@in_min+3
  1025  007C  3000               	movlw	0
  1026  007D  00B8               	movwf	map@in_min+2
  1027  007E  3000               	movlw	0
  1028  007F  00B7               	movwf	map@in_min+1
  1029  0080  3000               	movlw	0
  1030  0081  00B6               	movwf	map@in_min
  1031  0082  3000               	movlw	0
  1032  0083  00BD               	movwf	map@in_max+3
  1033  0084  3000               	movlw	0
  1034  0085  00BC               	movwf	map@in_max+2
  1035  0086  3003               	movlw	3
  1036  0087  00BB               	movwf	map@in_max+1
  1037  0088  30FF               	movlw	255
  1038  0089  00BA               	movwf	map@in_max
  1039  008A  3000               	movlw	0
  1040  008B  00C1               	movwf	map@out_min+3
  1041  008C  3000               	movlw	0
  1042  008D  00C0               	movwf	map@out_min+2
  1043  008E  3000               	movlw	0
  1044  008F  00BF               	movwf	map@out_min+1
  1045  0090  30F2               	movlw	242
  1046  0091  00BE               	movwf	map@out_min
  1047  0092  3000               	movlw	0
  1048  0093  00C5               	movwf	map@out_max+3
  1049  0094  3000               	movlw	0
  1050  0095  00C4               	movwf	map@out_max+2
  1051  0096  3000               	movlw	0
  1052  0097  00C3               	movwf	map@out_max+1
  1053  0098  3000               	movlw	0
  1054  0099  00C2               	movwf	map@out_max
  1055  009A  120A  158A  2465  120A  118A  	fcall	_map
  1056  009F  1283               	bcf	3,5	;RP0=0, select bank0
  1057  00A0  1303               	bcf	3,6	;RP1=0, select bank0
  1058  00A1  0833               	movf	?_map+1,w
  1059  00A2  1683               	bsf	3,5	;RP0=1, select bank1
  1060  00A3  1303               	bcf	3,6	;RP1=0, select bank1
  1061  00A4  00C6               	movwf	(_buffer+1)^(0+128)
  1062  00A5  1283               	bcf	3,5	;RP0=0, select bank0
  1063  00A6  1303               	bcf	3,6	;RP1=0, select bank0
  1064  00A7  0832               	movf	?_map,w
  1065  00A8  1683               	bsf	3,5	;RP0=1, select bank1
  1066  00A9  1303               	bcf	3,6	;RP1=0, select bank1
  1067  00AA  00C5               	movwf	_buffer^(0+128)
  1068                           
  1069                           ;Test_A4988.c: 46:             speed = 60000000/((256-buffer)*0.2f*2*256*200);
  1070  00AB  3000               	movlw	0
  1071  00AC  00A9               	movwf	??_main^(0+128)
  1072  00AD  3001               	movlw	1
  1073  00AE  00AA               	movwf	(??_main^(0+128)+1)
  1074  00AF  0845               	movf	_buffer^(0+128),w
  1075  00B0  0229               	subwf	??_main^(0+128),w
  1076  00B1  00F2               	movwf	___xxtofl@val
  1077  00B2  0846               	movf	(_buffer+1)^(0+128),w
  1078  00B3  1C03               	skipc
  1079  00B4  0A46               	incf	(_buffer+1)^(0+128),w
  1080  00B5  022A               	subwf	(??_main+1)^(0+128),w
  1081  00B6  00F3               	movwf	___xxtofl@val+1
  1082  00B7  01F4               	clrf	___xxtofl@val+2
  1083  00B8  01F5               	clrf	___xxtofl@val+3
  1084  00B9  3000               	movlw	0
  1085  00BA  120A  158A  23C0  120A  118A  	fcall	___xxtofl
  1086  00BF  0875               	movf	?___xxtofl+3,w
  1087  00C0  1283               	bcf	3,5	;RP0=0, select bank0
  1088  00C1  1303               	bcf	3,6	;RP1=0, select bank0
  1089  00C2  00AD               	movwf	___flmul@a+3
  1090  00C3  0874               	movf	?___xxtofl+2,w
  1091  00C4  00AC               	movwf	___flmul@a+2
  1092  00C5  0873               	movf	?___xxtofl+1,w
  1093  00C6  00AB               	movwf	___flmul@a+1
  1094  00C7  0872               	movf	?___xxtofl,w
  1095  00C8  00AA               	movwf	___flmul@a
  1096  00C9  303E               	movlw	62
  1097  00CA  00A9               	movwf	___flmul@b+3
  1098  00CB  304C               	movlw	76
  1099  00CC  00A8               	movwf	___flmul@b+2
  1100  00CD  30CC               	movlw	204
  1101  00CE  00A7               	movwf	___flmul@b+1
  1102  00CF  30CD               	movlw	205
  1103  00D0  00A6               	movwf	___flmul@b
  1104  00D1  120A  118A  233A  120A  118A  	fcall	___flmul
  1105  00D6  1283               	bcf	3,5	;RP0=0, select bank0
  1106  00D7  1303               	bcf	3,6	;RP1=0, select bank0
  1107  00D8  0829               	movf	?___flmul+3,w
  1108  00D9  1683               	bsf	3,5	;RP0=1, select bank1
  1109  00DA  1303               	bcf	3,6	;RP1=0, select bank1
  1110  00DB  00B2               	movwf	(_main$818+3)^(0+128)
  1111  00DC  1283               	bcf	3,5	;RP0=0, select bank0
  1112  00DD  1303               	bcf	3,6	;RP1=0, select bank0
  1113  00DE  0828               	movf	?___flmul+2,w
  1114  00DF  1683               	bsf	3,5	;RP0=1, select bank1
  1115  00E0  1303               	bcf	3,6	;RP1=0, select bank1
  1116  00E1  00B1               	movwf	(_main$818+2)^(0+128)
  1117  00E2  1283               	bcf	3,5	;RP0=0, select bank0
  1118  00E3  1303               	bcf	3,6	;RP1=0, select bank0
  1119  00E4  0827               	movf	?___flmul+1,w
  1120  00E5  1683               	bsf	3,5	;RP0=1, select bank1
  1121  00E6  1303               	bcf	3,6	;RP1=0, select bank1
  1122  00E7  00B0               	movwf	(_main$818+1)^(0+128)
  1123  00E8  1283               	bcf	3,5	;RP0=0, select bank0
  1124  00E9  1303               	bcf	3,6	;RP1=0, select bank0
  1125  00EA  0826               	movf	?___flmul,w
  1126  00EB  1683               	bsf	3,5	;RP0=1, select bank1
  1127  00EC  1303               	bcf	3,6	;RP1=0, select bank1
  1128  00ED  00AF               	movwf	_main$818^(0+128)
  1129                           
  1130                           ;Test_A4988.c: 46:             speed = 60000000/((256-buffer)*0.2f*2*256*200);
  1131  00EE  0832               	movf	(_main$818+3)^(0+128),w
  1132  00EF  1283               	bcf	3,5	;RP0=0, select bank0
  1133  00F0  1303               	bcf	3,6	;RP1=0, select bank0
  1134  00F1  00AD               	movwf	___flmul@a+3
  1135  00F2  1683               	bsf	3,5	;RP0=1, select bank1
  1136  00F3  1303               	bcf	3,6	;RP1=0, select bank1
  1137  00F4  0831               	movf	(_main$818+2)^(0+128),w
  1138  00F5  1283               	bcf	3,5	;RP0=0, select bank0
  1139  00F6  1303               	bcf	3,6	;RP1=0, select bank0
  1140  00F7  00AC               	movwf	___flmul@a+2
  1141  00F8  1683               	bsf	3,5	;RP0=1, select bank1
  1142  00F9  1303               	bcf	3,6	;RP1=0, select bank1
  1143  00FA  0830               	movf	(_main$818+1)^(0+128),w
  1144  00FB  1283               	bcf	3,5	;RP0=0, select bank0
  1145  00FC  1303               	bcf	3,6	;RP1=0, select bank0
  1146  00FD  00AB               	movwf	___flmul@a+1
  1147  00FE  1683               	bsf	3,5	;RP0=1, select bank1
  1148  00FF  1303               	bcf	3,6	;RP1=0, select bank1
  1149  0100  082F               	movf	_main$818^(0+128),w
  1150  0101  1283               	bcf	3,5	;RP0=0, select bank0
  1151  0102  1303               	bcf	3,6	;RP1=0, select bank0
  1152  0103  00AA               	movwf	___flmul@a
  1153  0104  3040               	movlw	64
  1154  0105  00A9               	movwf	___flmul@b+3
  1155  0106  3000               	movlw	0
  1156  0107  00A8               	movwf	___flmul@b+2
  1157  0108  3000               	movlw	0
  1158  0109  00A7               	movwf	___flmul@b+1
  1159  010A  3000               	movlw	0
  1160  010B  00A6               	movwf	___flmul@b
  1161  010C  120A  118A  233A  120A  118A  	fcall	___flmul
  1162  0111  1283               	bcf	3,5	;RP0=0, select bank0
  1163  0112  1303               	bcf	3,6	;RP1=0, select bank0
  1164  0113  0829               	movf	?___flmul+3,w
  1165  0114  1683               	bsf	3,5	;RP0=1, select bank1
  1166  0115  1303               	bcf	3,6	;RP1=0, select bank1
  1167  0116  00B6               	movwf	(_main$819+3)^(0+128)
  1168  0117  1283               	bcf	3,5	;RP0=0, select bank0
  1169  0118  1303               	bcf	3,6	;RP1=0, select bank0
  1170  0119  0828               	movf	?___flmul+2,w
  1171  011A  1683               	bsf	3,5	;RP0=1, select bank1
  1172  011B  1303               	bcf	3,6	;RP1=0, select bank1
  1173  011C  00B5               	movwf	(_main$819+2)^(0+128)
  1174  011D  1283               	bcf	3,5	;RP0=0, select bank0
  1175  011E  1303               	bcf	3,6	;RP1=0, select bank0
  1176  011F  0827               	movf	?___flmul+1,w
  1177  0120  1683               	bsf	3,5	;RP0=1, select bank1
  1178  0121  1303               	bcf	3,6	;RP1=0, select bank1
  1179  0122  00B4               	movwf	(_main$819+1)^(0+128)
  1180  0123  1283               	bcf	3,5	;RP0=0, select bank0
  1181  0124  1303               	bcf	3,6	;RP1=0, select bank0
  1182  0125  0826               	movf	?___flmul,w
  1183  0126  1683               	bsf	3,5	;RP0=1, select bank1
  1184  0127  1303               	bcf	3,6	;RP1=0, select bank1
  1185  0128  00B3               	movwf	_main$819^(0+128)
  1186                           
  1187                           ;Test_A4988.c: 46:             speed = 60000000/((256-buffer)*0.2f*2*256*200);
  1188  0129  0836               	movf	(_main$819+3)^(0+128),w
  1189  012A  1283               	bcf	3,5	;RP0=0, select bank0
  1190  012B  1303               	bcf	3,6	;RP1=0, select bank0
  1191  012C  00AD               	movwf	___flmul@a+3
  1192  012D  1683               	bsf	3,5	;RP0=1, select bank1
  1193  012E  1303               	bcf	3,6	;RP1=0, select bank1
  1194  012F  0835               	movf	(_main$819+2)^(0+128),w
  1195  0130  1283               	bcf	3,5	;RP0=0, select bank0
  1196  0131  1303               	bcf	3,6	;RP1=0, select bank0
  1197  0132  00AC               	movwf	___flmul@a+2
  1198  0133  1683               	bsf	3,5	;RP0=1, select bank1
  1199  0134  1303               	bcf	3,6	;RP1=0, select bank1
  1200  0135  0834               	movf	(_main$819+1)^(0+128),w
  1201  0136  1283               	bcf	3,5	;RP0=0, select bank0
  1202  0137  1303               	bcf	3,6	;RP1=0, select bank0
  1203  0138  00AB               	movwf	___flmul@a+1
  1204  0139  1683               	bsf	3,5	;RP0=1, select bank1
  1205  013A  1303               	bcf	3,6	;RP1=0, select bank1
  1206  013B  0833               	movf	_main$819^(0+128),w
  1207  013C  1283               	bcf	3,5	;RP0=0, select bank0
  1208  013D  1303               	bcf	3,6	;RP1=0, select bank0
  1209  013E  00AA               	movwf	___flmul@a
  1210  013F  3043               	movlw	67
  1211  0140  00A9               	movwf	___flmul@b+3
  1212  0141  3080               	movlw	128
  1213  0142  00A8               	movwf	___flmul@b+2
  1214  0143  3000               	movlw	0
  1215  0144  00A7               	movwf	___flmul@b+1
  1216  0145  3000               	movlw	0
  1217  0146  00A6               	movwf	___flmul@b
  1218  0147  120A  118A  233A  120A  118A  	fcall	___flmul
  1219  014C  1283               	bcf	3,5	;RP0=0, select bank0
  1220  014D  1303               	bcf	3,6	;RP1=0, select bank0
  1221  014E  0829               	movf	?___flmul+3,w
  1222  014F  1683               	bsf	3,5	;RP0=1, select bank1
  1223  0150  1303               	bcf	3,6	;RP1=0, select bank1
  1224  0151  00AE               	movwf	(_main$820+3)^(0+128)
  1225  0152  1283               	bcf	3,5	;RP0=0, select bank0
  1226  0153  1303               	bcf	3,6	;RP1=0, select bank0
  1227  0154  0828               	movf	?___flmul+2,w
  1228  0155  1683               	bsf	3,5	;RP0=1, select bank1
  1229  0156  1303               	bcf	3,6	;RP1=0, select bank1
  1230  0157  00AD               	movwf	(_main$820+2)^(0+128)
  1231  0158  1283               	bcf	3,5	;RP0=0, select bank0
  1232  0159  1303               	bcf	3,6	;RP1=0, select bank0
  1233  015A  0827               	movf	?___flmul+1,w
  1234  015B  1683               	bsf	3,5	;RP0=1, select bank1
  1235  015C  1303               	bcf	3,6	;RP1=0, select bank1
  1236  015D  00AC               	movwf	(_main$820+1)^(0+128)
  1237  015E  1283               	bcf	3,5	;RP0=0, select bank0
  1238  015F  1303               	bcf	3,6	;RP1=0, select bank0
  1239  0160  0826               	movf	?___flmul,w
  1240  0161  1683               	bsf	3,5	;RP0=1, select bank1
  1241  0162  1303               	bcf	3,6	;RP1=0, select bank1
  1242  0163  00AB               	movwf	_main$820^(0+128)
  1243                           
  1244                           ;Test_A4988.c: 46:             speed = 60000000/((256-buffer)*0.2f*2*256*200);
  1245  0164  304C               	movlw	76
  1246  0165  1283               	bcf	3,5	;RP0=0, select bank0
  1247  0166  1303               	bcf	3,6	;RP1=0, select bank0
  1248  0167  00C7               	movwf	___fldiv@b+3
  1249  0168  3064               	movlw	100
  1250  0169  00C6               	movwf	___fldiv@b+2
  1251  016A  30E1               	movlw	225
  1252  016B  00C5               	movwf	___fldiv@b+1
  1253  016C  30C0               	movlw	192
  1254  016D  00C4               	movwf	___fldiv@b
  1255  016E  1683               	bsf	3,5	;RP0=1, select bank1
  1256  016F  1303               	bcf	3,6	;RP1=0, select bank1
  1257  0170  082E               	movf	(_main$820+3)^(0+128),w
  1258  0171  1283               	bcf	3,5	;RP0=0, select bank0
  1259  0172  1303               	bcf	3,6	;RP1=0, select bank0
  1260  0173  00AD               	movwf	___flmul@a+3
  1261  0174  1683               	bsf	3,5	;RP0=1, select bank1
  1262  0175  1303               	bcf	3,6	;RP1=0, select bank1
  1263  0176  082D               	movf	(_main$820+2)^(0+128),w
  1264  0177  1283               	bcf	3,5	;RP0=0, select bank0
  1265  0178  1303               	bcf	3,6	;RP1=0, select bank0
  1266  0179  00AC               	movwf	___flmul@a+2
  1267  017A  1683               	bsf	3,5	;RP0=1, select bank1
  1268  017B  1303               	bcf	3,6	;RP1=0, select bank1
  1269  017C  082C               	movf	(_main$820+1)^(0+128),w
  1270  017D  1283               	bcf	3,5	;RP0=0, select bank0
  1271  017E  1303               	bcf	3,6	;RP1=0, select bank0
  1272  017F  00AB               	movwf	___flmul@a+1
  1273  0180  1683               	bsf	3,5	;RP0=1, select bank1
  1274  0181  1303               	bcf	3,6	;RP1=0, select bank1
  1275  0182  082B               	movf	_main$820^(0+128),w
  1276  0183  1283               	bcf	3,5	;RP0=0, select bank0
  1277  0184  1303               	bcf	3,6	;RP1=0, select bank0
  1278  0185  00AA               	movwf	___flmul@a
  1279  0186  3043               	movlw	67
  1280  0187  00A9               	movwf	___flmul@b+3
  1281  0188  3048               	movlw	72
  1282  0189  00A8               	movwf	___flmul@b+2
  1283  018A  3000               	movlw	0
  1284  018B  00A7               	movwf	___flmul@b+1
  1285  018C  3000               	movlw	0
  1286  018D  00A6               	movwf	___flmul@b
  1287  018E  120A  118A  233A  120A  118A  	fcall	___flmul
  1288  0193  1283               	bcf	3,5	;RP0=0, select bank0
  1289  0194  1303               	bcf	3,6	;RP1=0, select bank0
  1290  0195  0829               	movf	?___flmul+3,w
  1291  0196  00C3               	movwf	___fldiv@a+3
  1292  0197  0828               	movf	?___flmul+2,w
  1293  0198  00C2               	movwf	___fldiv@a+2
  1294  0199  0827               	movf	?___flmul+1,w
  1295  019A  00C1               	movwf	___fldiv@a+1
  1296  019B  0826               	movf	?___flmul,w
  1297  019C  00C0               	movwf	___fldiv@a
  1298  019D  120A  118A  264F  120A  118A  	fcall	___fldiv
  1299  01A2  1283               	bcf	3,5	;RP0=0, select bank0
  1300  01A3  1303               	bcf	3,6	;RP1=0, select bank0
  1301  01A4  0843               	movf	?___fldiv+3,w
  1302  01A5  1683               	bsf	3,5	;RP0=1, select bank1
  1303  01A6  1303               	bcf	3,6	;RP1=0, select bank1
  1304  01A7  00A3               	movwf	(___fltol@f1+3)^(0+128)
  1305  01A8  1283               	bcf	3,5	;RP0=0, select bank0
  1306  01A9  1303               	bcf	3,6	;RP1=0, select bank0
  1307  01AA  0842               	movf	?___fldiv+2,w
  1308  01AB  1683               	bsf	3,5	;RP0=1, select bank1
  1309  01AC  1303               	bcf	3,6	;RP1=0, select bank1
  1310  01AD  00A2               	movwf	(___fltol@f1+2)^(0+128)
  1311  01AE  1283               	bcf	3,5	;RP0=0, select bank0
  1312  01AF  1303               	bcf	3,6	;RP1=0, select bank0
  1313  01B0  0841               	movf	?___fldiv+1,w
  1314  01B1  1683               	bsf	3,5	;RP0=1, select bank1
  1315  01B2  1303               	bcf	3,6	;RP1=0, select bank1
  1316  01B3  00A1               	movwf	(___fltol@f1+1)^(0+128)
  1317  01B4  1283               	bcf	3,5	;RP0=0, select bank0
  1318  01B5  1303               	bcf	3,6	;RP1=0, select bank0
  1319  01B6  0840               	movf	?___fldiv,w
  1320  01B7  1683               	bsf	3,5	;RP0=1, select bank1
  1321  01B8  1303               	bcf	3,6	;RP1=0, select bank1
  1322  01B9  00A0               	movwf	___fltol@f1^(0+128)
  1323  01BA  120A  158A  22AE  120A  118A  	fcall	___fltol
  1324  01BF  1683               	bsf	3,5	;RP0=1, select bank1
  1325  01C0  1303               	bcf	3,6	;RP1=0, select bank1
  1326  01C1  0823               	movf	(?___fltol+3)^(0+128),w
  1327  01C2  00BE               	movwf	(_speed+3)^(0+128)
  1328  01C3  0822               	movf	(?___fltol+2)^(0+128),w
  1329  01C4  00BD               	movwf	(_speed+2)^(0+128)
  1330  01C5  0821               	movf	(?___fltol+1)^(0+128),w
  1331  01C6  00BC               	movwf	(_speed+1)^(0+128)
  1332  01C7  0820               	movf	?___fltol^(0+128),w
  1333  01C8                     L1:	
  1334  01C8  00BB               	movwf	_speed^(0+128)
  1335                           
  1336                           ;Test_A4988.c: 49:         x = CCPR1;
  1337  01C9  1283               	bcf	3,5	;RP0=0, select bank0
  1338  01CA  1303               	bcf	3,6	;RP1=0, select bank0
  1339  01CB  0816               	movf	22,w	;volatile
  1340  01CC  1683               	bsf	3,5	;RP0=1, select bank1
  1341  01CD  1303               	bcf	3,6	;RP1=0, select bank1
  1342  01CE  00C2               	movwf	(_x+1)^(0+128)
  1343  01CF  1283               	bcf	3,5	;RP0=0, select bank0
  1344  01D0  1303               	bcf	3,6	;RP1=0, select bank0
  1345  01D1  0815               	movf	21,w	;volatile
  1346  01D2  1683               	bsf	3,5	;RP0=1, select bank1
  1347  01D3  1303               	bcf	3,6	;RP1=0, select bank1
  1348  01D4  00C1               	movwf	_x^(0+128)
  1349                           
  1350                           ;Test_A4988.c: 50:         sum +=(60000000/(x*0.2f*8*40));
  1351  01D5  0841               	movf	_x^(0+128),w
  1352  01D6  00F2               	movwf	___xxtofl@val
  1353  01D7  0842               	movf	(_x+1)^(0+128),w
  1354  01D8  00F3               	movwf	___xxtofl@val+1
  1355  01D9  01F4               	clrf	___xxtofl@val+2
  1356  01DA  01F5               	clrf	___xxtofl@val+3
  1357  01DB  3000               	movlw	0
  1358  01DC  120A  158A  23C0  120A  118A  	fcall	___xxtofl
  1359  01E1  0875               	movf	?___xxtofl+3,w
  1360  01E2  1283               	bcf	3,5	;RP0=0, select bank0
  1361  01E3  1303               	bcf	3,6	;RP1=0, select bank0
  1362  01E4  00AD               	movwf	___flmul@a+3
  1363  01E5  0874               	movf	?___xxtofl+2,w
  1364  01E6  00AC               	movwf	___flmul@a+2
  1365  01E7  0873               	movf	?___xxtofl+1,w
  1366  01E8  00AB               	movwf	___flmul@a+1
  1367  01E9  0872               	movf	?___xxtofl,w
  1368  01EA  00AA               	movwf	___flmul@a
  1369  01EB  303E               	movlw	62
  1370  01EC  00A9               	movwf	___flmul@b+3
  1371  01ED  304C               	movlw	76
  1372  01EE  00A8               	movwf	___flmul@b+2
  1373  01EF  30CC               	movlw	204
  1374  01F0  00A7               	movwf	___flmul@b+1
  1375  01F1  30CD               	movlw	205
  1376  01F2  00A6               	movwf	___flmul@b
  1377  01F3  120A  118A  233A  120A  118A  	fcall	___flmul
  1378  01F8  1283               	bcf	3,5	;RP0=0, select bank0
  1379  01F9  1303               	bcf	3,6	;RP1=0, select bank0
  1380  01FA  0829               	movf	?___flmul+3,w
  1381  01FB  1683               	bsf	3,5	;RP0=1, select bank1
  1382  01FC  1303               	bcf	3,6	;RP1=0, select bank1
  1383  01FD  00B2               	movwf	(_main$818+3)^(0+128)
  1384  01FE  1283               	bcf	3,5	;RP0=0, select bank0
  1385  01FF  1303               	bcf	3,6	;RP1=0, select bank0
  1386  0200  0828               	movf	?___flmul+2,w
  1387  0201  1683               	bsf	3,5	;RP0=1, select bank1
  1388  0202  1303               	bcf	3,6	;RP1=0, select bank1
  1389  0203  00B1               	movwf	(_main$818+2)^(0+128)
  1390  0204  1283               	bcf	3,5	;RP0=0, select bank0
  1391  0205  1303               	bcf	3,6	;RP1=0, select bank0
  1392  0206  0827               	movf	?___flmul+1,w
  1393  0207  1683               	bsf	3,5	;RP0=1, select bank1
  1394  0208  1303               	bcf	3,6	;RP1=0, select bank1
  1395  0209  00B0               	movwf	(_main$818+1)^(0+128)
  1396  020A  1283               	bcf	3,5	;RP0=0, select bank0
  1397  020B  1303               	bcf	3,6	;RP1=0, select bank0
  1398  020C  0826               	movf	?___flmul,w
  1399  020D  1683               	bsf	3,5	;RP0=1, select bank1
  1400  020E  1303               	bcf	3,6	;RP1=0, select bank1
  1401  020F  00AF               	movwf	_main$818^(0+128)
  1402                           
  1403                           ;Test_A4988.c: 50:         sum +=(60000000/(x*0.2f*8*40));
  1404  0210  0832               	movf	(_main$818+3)^(0+128),w
  1405  0211  1283               	bcf	3,5	;RP0=0, select bank0
  1406  0212  1303               	bcf	3,6	;RP1=0, select bank0
  1407  0213  00AD               	movwf	___flmul@a+3
  1408  0214  1683               	bsf	3,5	;RP0=1, select bank1
  1409  0215  1303               	bcf	3,6	;RP1=0, select bank1
  1410  0216  0831               	movf	(_main$818+2)^(0+128),w
  1411  0217  1283               	bcf	3,5	;RP0=0, select bank0
  1412  0218  1303               	bcf	3,6	;RP1=0, select bank0
  1413  0219  00AC               	movwf	___flmul@a+2
  1414  021A  1683               	bsf	3,5	;RP0=1, select bank1
  1415  021B  1303               	bcf	3,6	;RP1=0, select bank1
  1416  021C  0830               	movf	(_main$818+1)^(0+128),w
  1417  021D  1283               	bcf	3,5	;RP0=0, select bank0
  1418  021E  1303               	bcf	3,6	;RP1=0, select bank0
  1419  021F  00AB               	movwf	___flmul@a+1
  1420  0220  1683               	bsf	3,5	;RP0=1, select bank1
  1421  0221  1303               	bcf	3,6	;RP1=0, select bank1
  1422  0222  082F               	movf	_main$818^(0+128),w
  1423  0223  1283               	bcf	3,5	;RP0=0, select bank0
  1424  0224  1303               	bcf	3,6	;RP1=0, select bank0
  1425  0225  00AA               	movwf	___flmul@a
  1426  0226  3041               	movlw	65
  1427  0227  00A9               	movwf	___flmul@b+3
  1428  0228  3000               	movlw	0
  1429  0229  00A8               	movwf	___flmul@b+2
  1430  022A  3000               	movlw	0
  1431  022B  00A7               	movwf	___flmul@b+1
  1432  022C  3000               	movlw	0
  1433  022D  00A6               	movwf	___flmul@b
  1434  022E  120A  118A  233A  120A  118A  	fcall	___flmul
  1435  0233  1283               	bcf	3,5	;RP0=0, select bank0
  1436  0234  1303               	bcf	3,6	;RP1=0, select bank0
  1437  0235  0829               	movf	?___flmul+3,w
  1438  0236  1683               	bsf	3,5	;RP0=1, select bank1
  1439  0237  1303               	bcf	3,6	;RP1=0, select bank1
  1440  0238  00B6               	movwf	(_main$819+3)^(0+128)
  1441  0239  1283               	bcf	3,5	;RP0=0, select bank0
  1442  023A  1303               	bcf	3,6	;RP1=0, select bank0
  1443  023B  0828               	movf	?___flmul+2,w
  1444  023C  1683               	bsf	3,5	;RP0=1, select bank1
  1445  023D  1303               	bcf	3,6	;RP1=0, select bank1
  1446  023E  00B5               	movwf	(_main$819+2)^(0+128)
  1447  023F  1283               	bcf	3,5	;RP0=0, select bank0
  1448  0240  1303               	bcf	3,6	;RP1=0, select bank0
  1449  0241  0827               	movf	?___flmul+1,w
  1450  0242  1683               	bsf	3,5	;RP0=1, select bank1
  1451  0243  1303               	bcf	3,6	;RP1=0, select bank1
  1452  0244  00B4               	movwf	(_main$819+1)^(0+128)
  1453  0245  1283               	bcf	3,5	;RP0=0, select bank0
  1454  0246  1303               	bcf	3,6	;RP1=0, select bank0
  1455  0247  0826               	movf	?___flmul,w
  1456  0248  1683               	bsf	3,5	;RP0=1, select bank1
  1457  0249  1303               	bcf	3,6	;RP1=0, select bank1
  1458  024A  00B3               	movwf	_main$819^(0+128)
  1459                           
  1460                           ;Test_A4988.c: 50:         sum +=(60000000/(x*0.2f*8*40));
  1461  024B  083A               	movf	(_sum+3)^(0+128),w
  1462  024C  00F5               	movwf	___xxtofl@val+3
  1463  024D  0839               	movf	(_sum+2)^(0+128),w
  1464  024E  00F4               	movwf	___xxtofl@val+2
  1465  024F  0838               	movf	(_sum+1)^(0+128),w
  1466  0250  00F3               	movwf	___xxtofl@val+1
  1467  0251  0837               	movf	_sum^(0+128),w
  1468  0252  00F2               	movwf	___xxtofl@val
  1469  0253  3000               	movlw	0
  1470  0254  120A  158A  23C0  120A  118A  	fcall	___xxtofl
  1471  0259  0875               	movf	?___xxtofl+3,w
  1472  025A  1283               	bcf	3,5	;RP0=0, select bank0
  1473  025B  1303               	bcf	3,6	;RP1=0, select bank0
  1474  025C  00E1               	movwf	___fladd@a+3
  1475  025D  0874               	movf	?___xxtofl+2,w
  1476  025E  00E0               	movwf	___fladd@a+2
  1477  025F  0873               	movf	?___xxtofl+1,w
  1478  0260  00DF               	movwf	___fladd@a+1
  1479  0261  0872               	movf	?___xxtofl,w
  1480  0262  00DE               	movwf	___fladd@a
  1481  0263  304C               	movlw	76
  1482  0264  00C7               	movwf	___fldiv@b+3
  1483  0265  3064               	movlw	100
  1484  0266  00C6               	movwf	___fldiv@b+2
  1485  0267  30E1               	movlw	225
  1486  0268  00C5               	movwf	___fldiv@b+1
  1487  0269  30C0               	movlw	192
  1488  026A  00C4               	movwf	___fldiv@b
  1489  026B  1683               	bsf	3,5	;RP0=1, select bank1
  1490  026C  1303               	bcf	3,6	;RP1=0, select bank1
  1491  026D  0836               	movf	(_main$819+3)^(0+128),w
  1492  026E  1283               	bcf	3,5	;RP0=0, select bank0
  1493  026F  1303               	bcf	3,6	;RP1=0, select bank0
  1494  0270  00AD               	movwf	___flmul@a+3
  1495  0271  1683               	bsf	3,5	;RP0=1, select bank1
  1496  0272  1303               	bcf	3,6	;RP1=0, select bank1
  1497  0273  0835               	movf	(_main$819+2)^(0+128),w
  1498  0274  1283               	bcf	3,5	;RP0=0, select bank0
  1499  0275  1303               	bcf	3,6	;RP1=0, select bank0
  1500  0276  00AC               	movwf	___flmul@a+2
  1501  0277  1683               	bsf	3,5	;RP0=1, select bank1
  1502  0278  1303               	bcf	3,6	;RP1=0, select bank1
  1503  0279  0834               	movf	(_main$819+1)^(0+128),w
  1504  027A  1283               	bcf	3,5	;RP0=0, select bank0
  1505  027B  1303               	bcf	3,6	;RP1=0, select bank0
  1506  027C  00AB               	movwf	___flmul@a+1
  1507  027D  1683               	bsf	3,5	;RP0=1, select bank1
  1508  027E  1303               	bcf	3,6	;RP1=0, select bank1
  1509  027F  0833               	movf	_main$819^(0+128),w
  1510  0280  1283               	bcf	3,5	;RP0=0, select bank0
  1511  0281  1303               	bcf	3,6	;RP1=0, select bank0
  1512  0282  00AA               	movwf	___flmul@a
  1513  0283  3042               	movlw	66
  1514  0284  00A9               	movwf	___flmul@b+3
  1515  0285  3020               	movlw	32
  1516  0286  00A8               	movwf	___flmul@b+2
  1517  0287  3000               	movlw	0
  1518  0288  00A7               	movwf	___flmul@b+1
  1519  0289  3000               	movlw	0
  1520  028A  00A6               	movwf	___flmul@b
  1521  028B  120A  118A  233A  120A  118A  	fcall	___flmul
  1522  0290  1283               	bcf	3,5	;RP0=0, select bank0
  1523  0291  1303               	bcf	3,6	;RP1=0, select bank0
  1524  0292  0829               	movf	?___flmul+3,w
  1525  0293  00C3               	movwf	___fldiv@a+3
  1526  0294  0828               	movf	?___flmul+2,w
  1527  0295  00C2               	movwf	___fldiv@a+2
  1528  0296  0827               	movf	?___flmul+1,w
  1529  0297  00C1               	movwf	___fldiv@a+1
  1530  0298  0826               	movf	?___flmul,w
  1531  0299  00C0               	movwf	___fldiv@a
  1532  029A  120A  118A  264F  120A  118A  	fcall	___fldiv
  1533  029F  1283               	bcf	3,5	;RP0=0, select bank0
  1534  02A0  1303               	bcf	3,6	;RP1=0, select bank0
  1535  02A1  0843               	movf	?___fldiv+3,w
  1536  02A2  00DD               	movwf	___fladd@b+3
  1537  02A3  0842               	movf	?___fldiv+2,w
  1538  02A4  00DC               	movwf	___fladd@b+2
  1539  02A5  0841               	movf	?___fldiv+1,w
  1540  02A6  00DB               	movwf	___fladd@b+1
  1541  02A7  0840               	movf	?___fldiv,w
  1542  02A8  00DA               	movwf	___fladd@b
  1543  02A9  120A  158A  25D1  120A  118A  	fcall	___fladd
  1544  02AE  1283               	bcf	3,5	;RP0=0, select bank0
  1545  02AF  1303               	bcf	3,6	;RP1=0, select bank0
  1546  02B0  085D               	movf	?___fladd+3,w
  1547  02B1  1683               	bsf	3,5	;RP0=1, select bank1
  1548  02B2  1303               	bcf	3,6	;RP1=0, select bank1
  1549  02B3  00A3               	movwf	(___fltol@f1+3)^(0+128)
  1550  02B4  1283               	bcf	3,5	;RP0=0, select bank0
  1551  02B5  1303               	bcf	3,6	;RP1=0, select bank0
  1552  02B6  085C               	movf	?___fladd+2,w
  1553  02B7  1683               	bsf	3,5	;RP0=1, select bank1
  1554  02B8  1303               	bcf	3,6	;RP1=0, select bank1
  1555  02B9  00A2               	movwf	(___fltol@f1+2)^(0+128)
  1556  02BA  1283               	bcf	3,5	;RP0=0, select bank0
  1557  02BB  1303               	bcf	3,6	;RP1=0, select bank0
  1558  02BC  085B               	movf	?___fladd+1,w
  1559  02BD  1683               	bsf	3,5	;RP0=1, select bank1
  1560  02BE  1303               	bcf	3,6	;RP1=0, select bank1
  1561  02BF  00A1               	movwf	(___fltol@f1+1)^(0+128)
  1562  02C0  1283               	bcf	3,5	;RP0=0, select bank0
  1563  02C1  1303               	bcf	3,6	;RP1=0, select bank0
  1564  02C2  085A               	movf	?___fladd,w
  1565  02C3  1683               	bsf	3,5	;RP0=1, select bank1
  1566  02C4  1303               	bcf	3,6	;RP1=0, select bank1
  1567  02C5  00A0               	movwf	___fltol@f1^(0+128)
  1568  02C6  120A  158A  22AE  120A  118A  	fcall	___fltol
  1569  02CB  1683               	bsf	3,5	;RP0=1, select bank1
  1570  02CC  1303               	bcf	3,6	;RP1=0, select bank1
  1571  02CD  0823               	movf	(?___fltol+3)^(0+128),w
  1572  02CE  00BA               	movwf	(_sum+3)^(0+128)
  1573  02CF  0822               	movf	(?___fltol+2)^(0+128),w
  1574  02D0  00B9               	movwf	(_sum+2)^(0+128)
  1575  02D1  0821               	movf	(?___fltol+1)^(0+128),w
  1576  02D2  00B8               	movwf	(_sum+1)^(0+128)
  1577  02D3  0820               	movf	?___fltol^(0+128),w
  1578  02D4  00B7               	movwf	_sum^(0+128)
  1579                           
  1580                           ;Test_A4988.c: 51:   if (m < 40) m++;
  1581  02D5  3028               	movlw	40
  1582  02D6  0247               	subwf	_m^(0+128),w
  1583  02D7  1803               	skipnc
  1584  02D8  2ADE               	goto	l2715
  1585  02D9  3001               	movlw	1
  1586  02DA  00A9               	movwf	??_main^(0+128)
  1587  02DB  0829               	movf	??_main^(0+128),w
  1588  02DC  07C7               	addwf	_m^(0+128),f
  1589  02DD  2B02               	goto	l2721
  1590  02DE                     l2715:	
  1591                           
  1592                           ;Test_A4988.c: 53:    t = sum / 40;
  1593  02DE  3000               	movlw	0
  1594  02DF  00F5               	movwf	___lldiv@divisor+3
  1595  02E0  3000               	movlw	0
  1596  02E1  00F4               	movwf	___lldiv@divisor+2
  1597  02E2  3000               	movlw	0
  1598  02E3  00F3               	movwf	___lldiv@divisor+1
  1599  02E4  3028               	movlw	40
  1600  02E5  00F2               	movwf	___lldiv@divisor
  1601  02E6  083A               	movf	(_sum+3)^(0+128),w
  1602  02E7  00F9               	movwf	___lldiv@dividend+3
  1603  02E8  0839               	movf	(_sum+2)^(0+128),w
  1604  02E9  00F8               	movwf	___lldiv@dividend+2
  1605  02EA  0838               	movf	(_sum+1)^(0+128),w
  1606  02EB  00F7               	movwf	___lldiv@dividend+1
  1607  02EC  0837               	movf	_sum^(0+128),w
  1608  02ED  00F6               	movwf	___lldiv@dividend
  1609  02EE  120A  158A  224E  120A  118A  	fcall	___lldiv
  1610  02F3  0873               	movf	?___lldiv+1,w
  1611  02F4  1683               	bsf	3,5	;RP0=1, select bank1
  1612  02F5  1303               	bcf	3,6	;RP1=0, select bank1
  1613  02F6  00C0               	movwf	(_t+1)^(0+128)
  1614  02F7  0872               	movf	?___lldiv,w
  1615  02F8  00BF               	movwf	_t^(0+128)
  1616                           
  1617                           ;Test_A4988.c: 54:    sum = 0;
  1618  02F9  3000               	movlw	0
  1619  02FA  00BA               	movwf	(_sum+3)^(0+128)
  1620  02FB  3000               	movlw	0
  1621  02FC  00B9               	movwf	(_sum+2)^(0+128)
  1622  02FD  3000               	movlw	0
  1623  02FE  00B8               	movwf	(_sum+1)^(0+128)
  1624  02FF  3000               	movlw	0
  1625  0300  00B7               	movwf	_sum^(0+128)
  1626                           
  1627                           ;Test_A4988.c: 55:    m=0;
  1628  0301  01C7               	clrf	_m^(0+128)
  1629  0302                     l2721:	
  1630                           
  1631                           ;Test_A4988.c: 57:         if(speed <= 116) t = 0;
  1632  0302  083E               	movf	(_speed+3)^(0+128),w
  1633  0303  1D03               	btfss	3,2
  1634  0304  2B13               	goto	l2725
  1635  0305  083D               	movf	(_speed+2)^(0+128),w
  1636  0306  1D03               	btfss	3,2
  1637  0307  2B13               	goto	l2725
  1638  0308  083C               	movf	(_speed+1)^(0+128),w
  1639  0309  1D03               	btfss	3,2
  1640  030A  2B13               	goto	l2725
  1641  030B  3075               	movlw	117
  1642  030C  023B               	subwf	_speed^(0+128),w
  1643  030D  1D03               	skipz
  1644  030E  2B0F               	goto	u3903
  1645  030F                     u3903:	
  1646  030F  1803               	btfsc	3,0
  1647  0310  2B13               	goto	l2725
  1648  0311  01BF               	clrf	_t^(0+128)
  1649  0312  01C0               	clrf	(_t+1)^(0+128)
  1650  0313                     l2725:	
  1651                           
  1652                           ;Test_A4988.c: 59:         Lcd_Display(t,speed);
  1653  0313  0840               	movf	(_t+1)^(0+128),w
  1654  0314  1283               	bcf	3,5	;RP0=0, select bank0
  1655  0315  1303               	bcf	3,6	;RP1=0, select bank0
  1656  0316  00A5               	movwf	Lcd_Display@speed_feel+1
  1657  0317  1683               	bsf	3,5	;RP0=1, select bank1
  1658  0318  1303               	bcf	3,6	;RP1=0, select bank1
  1659  0319  083F               	movf	_t^(0+128),w
  1660  031A  1283               	bcf	3,5	;RP0=0, select bank0
  1661  031B  1303               	bcf	3,6	;RP1=0, select bank0
  1662  031C  00A4               	movwf	Lcd_Display@speed_feel
  1663  031D  1683               	bsf	3,5	;RP0=1, select bank1
  1664  031E  1303               	bcf	3,6	;RP1=0, select bank1
  1665  031F  083C               	movf	(_speed+1)^(0+128),w
  1666  0320  1283               	bcf	3,5	;RP0=0, select bank0
  1667  0321  1303               	bcf	3,6	;RP1=0, select bank0
  1668  0322  00A7               	movwf	Lcd_Display@speed+1
  1669  0323  1683               	bsf	3,5	;RP0=1, select bank1
  1670  0324  1303               	bcf	3,6	;RP1=0, select bank1
  1671  0325  083B               	movf	_speed^(0+128),w
  1672  0326  1283               	bcf	3,5	;RP0=0, select bank0
  1673  0327  1303               	bcf	3,6	;RP1=0, select bank0
  1674  0328  00A6               	movwf	Lcd_Display@speed
  1675  0329  120A  158A  250B  120A  118A  	fcall	_Lcd_Display
  1676                           
  1677                           ;Test_A4988.c: 60:         _delay((unsigned long)((10)*(20000000/4000.0)));
  1678  032E  3041               	movlw	65
  1679  032F  1683               	bsf	3,5	;RP0=1, select bank1
  1680  0330  1303               	bcf	3,6	;RP1=0, select bank1
  1681  0331  00AA               	movwf	(??_main^(0+128)+1)
  1682  0332  30ED               	movlw	237
  1683  0333  00A9               	movwf	??_main^(0+128)
  1684  0334                     u3957:	
  1685  0334  0BA9               	decfsz	??_main^(0+128),f
  1686  0335  2B34               	goto	u3957
  1687  0336  0BAA               	decfsz	(??_main^(0+128)+1),f
  1688  0337  2B34               	goto	u3957
  1689  0338  2B39               	nop2
  1690  0339  2851               	goto	l2685
  1691  033A                     __end_of_main:	
  1692                           
  1693                           	psect	text1
  1694  0C65                     __ptext1:	
  1695 ;; *************** function _map *****************
  1696 ;; Defined at:
  1697 ;;		line 167 in file "Test_A4988.c"
  1698 ;; Parameters:    Size  Location     Type
  1699 ;;  x               4   18[BANK0 ] long 
  1700 ;;  in_min          4   22[BANK0 ] long 
  1701 ;;  in_max          4   26[BANK0 ] long 
  1702 ;;  out_min         4   30[BANK0 ] long 
  1703 ;;  out_max         4   34[BANK0 ] long 
  1704 ;; Auto vars:     Size  Location     Type
  1705 ;;		None
  1706 ;; Return value:  Size  Location     Type
  1707 ;;                  4   18[BANK0 ] long 
  1708 ;; Registers used:
  1709 ;;		wreg, status,2, status,0, pclath, cstack
  1710 ;; Tracked objects:
  1711 ;;		On entry : 0/0
  1712 ;;		On exit  : 0/0
  1713 ;;		Unchanged: 0/0
  1714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1715 ;;      Params:         0      20       0       0       0
  1716 ;;      Locals:         0       0       0       0       0
  1717 ;;      Temps:          0      16       0       0       0
  1718 ;;      Totals:         0      36       0       0       0
  1719 ;;Total ram usage:       36 bytes
  1720 ;; Hardware stack levels used:    1
  1721 ;; Hardware stack levels required when called:    2
  1722 ;; This function calls:
  1723 ;;		___aldiv
  1724 ;;		___lmul
  1725 ;; This function is called by:
  1726 ;;		_main
  1727 ;; This function uses a non-reentrant model
  1728 ;;
  1729                           
  1730                           
  1731                           ;psect for function _map
  1732  0C65                     _map:	
  1733                           
  1734                           ;Test_A4988.c: 167: long map(long x, long in_min, long in_max, long out_min, long out_ma
      +                          x);Test_A4988.c: 168: {;Test_A4988.c: 169:  return (x - in_min) * (out_max - out_min) / 
      +                          (in_max - in_min) + out_min;
  1735                           
  1736                           ;incstack = 0
  1737                           ; Regs used in _map: [wreg+status,2+status,0+pclath+cstack]
  1738  0C65  1283               	bcf	3,5	;RP0=0, select bank0
  1739  0C66  1303               	bcf	3,6	;RP1=0, select bank0
  1740  0C67  083A               	movf	map@in_max,w
  1741  0C68  00C6               	movwf	??_map
  1742  0C69  083B               	movf	map@in_max+1,w
  1743  0C6A  00C7               	movwf	??_map+1
  1744  0C6B  083C               	movf	map@in_max+2,w
  1745  0C6C  00C8               	movwf	??_map+2
  1746  0C6D  083D               	movf	map@in_max+3,w
  1747  0C6E  00C9               	movwf	??_map+3
  1748  0C6F  0836               	movf	map@in_min,w
  1749  0C70  02C6               	subwf	??_map,f
  1750  0C71  0837               	movf	map@in_min+1,w
  1751  0C72  1C03               	skipc
  1752  0C73  0F37               	incfsz	map@in_min+1,w
  1753  0C74  2C76               	goto	u2411
  1754  0C75  2C77               	goto	u2412
  1755  0C76                     u2411:	
  1756  0C76  02C7               	subwf	??_map+1,f
  1757  0C77                     u2412:	
  1758  0C77  0838               	movf	map@in_min+2,w
  1759  0C78  1C03               	skipc
  1760  0C79  0F38               	incfsz	map@in_min+2,w
  1761  0C7A  2C7C               	goto	u2413
  1762  0C7B  2C7D               	goto	u2414
  1763  0C7C                     u2413:	
  1764  0C7C  02C8               	subwf	??_map+2,f
  1765  0C7D                     u2414:	
  1766  0C7D  0839               	movf	map@in_min+3,w
  1767  0C7E  1C03               	skipc
  1768  0C7F  0F39               	incfsz	map@in_min+3,w
  1769  0C80  2C82               	goto	u2415
  1770  0C81  2C83               	goto	u2416
  1771  0C82                     u2415:	
  1772  0C82  02C9               	subwf	??_map+3,f
  1773  0C83                     u2416:	
  1774  0C83  0849               	movf	??_map+3,w
  1775  0C84  00A7               	movwf	___aldiv@divisor+3
  1776  0C85  0848               	movf	??_map+2,w
  1777  0C86  00A6               	movwf	___aldiv@divisor+2
  1778  0C87  0847               	movf	??_map+1,w
  1779  0C88  00A5               	movwf	___aldiv@divisor+1
  1780  0C89  0846               	movf	??_map,w
  1781  0C8A  00A4               	movwf	___aldiv@divisor
  1782  0C8B  0832               	movf	map@x,w
  1783  0C8C  00CA               	movwf	??_map+4
  1784  0C8D  0833               	movf	map@x+1,w
  1785  0C8E  00CB               	movwf	??_map+5
  1786  0C8F  0834               	movf	map@x+2,w
  1787  0C90  00CC               	movwf	??_map+6
  1788  0C91  0835               	movf	map@x+3,w
  1789  0C92  00CD               	movwf	??_map+7
  1790  0C93  0836               	movf	map@in_min,w
  1791  0C94  02CA               	subwf	??_map+4,f
  1792  0C95  0837               	movf	map@in_min+1,w
  1793  0C96  1C03               	skipc
  1794  0C97  0F37               	incfsz	map@in_min+1,w
  1795  0C98  2C9A               	goto	u2421
  1796  0C99  2C9B               	goto	u2422
  1797  0C9A                     u2421:	
  1798  0C9A  02CB               	subwf	??_map+5,f
  1799  0C9B                     u2422:	
  1800  0C9B  0838               	movf	map@in_min+2,w
  1801  0C9C  1C03               	skipc
  1802  0C9D  0F38               	incfsz	map@in_min+2,w
  1803  0C9E  2CA0               	goto	u2423
  1804  0C9F  2CA1               	goto	u2424
  1805  0CA0                     u2423:	
  1806  0CA0  02CC               	subwf	??_map+6,f
  1807  0CA1                     u2424:	
  1808  0CA1  0839               	movf	map@in_min+3,w
  1809  0CA2  1C03               	skipc
  1810  0CA3  0F39               	incfsz	map@in_min+3,w
  1811  0CA4  2CA6               	goto	u2425
  1812  0CA5  2CA7               	goto	u2426
  1813  0CA6                     u2425:	
  1814  0CA6  02CD               	subwf	??_map+7,f
  1815  0CA7                     u2426:	
  1816  0CA7  084D               	movf	??_map+7,w
  1817  0CA8  00F5               	movwf	___lmul@multiplier+3
  1818  0CA9  084C               	movf	??_map+6,w
  1819  0CAA  00F4               	movwf	___lmul@multiplier+2
  1820  0CAB  084B               	movf	??_map+5,w
  1821  0CAC  00F3               	movwf	___lmul@multiplier+1
  1822  0CAD  084A               	movf	??_map+4,w
  1823  0CAE  00F2               	movwf	___lmul@multiplier
  1824  0CAF  0842               	movf	map@out_max,w
  1825  0CB0  00CE               	movwf	??_map+8
  1826  0CB1  0843               	movf	map@out_max+1,w
  1827  0CB2  00CF               	movwf	??_map+9
  1828  0CB3  0844               	movf	map@out_max+2,w
  1829  0CB4  00D0               	movwf	??_map+10
  1830  0CB5  0845               	movf	map@out_max+3,w
  1831  0CB6  00D1               	movwf	??_map+11
  1832  0CB7  083E               	movf	map@out_min,w
  1833  0CB8  02CE               	subwf	??_map+8,f
  1834  0CB9  083F               	movf	map@out_min+1,w
  1835  0CBA  1C03               	skipc
  1836  0CBB  0F3F               	incfsz	map@out_min+1,w
  1837  0CBC  2CBE               	goto	u2431
  1838  0CBD  2CBF               	goto	u2432
  1839  0CBE                     u2431:	
  1840  0CBE  02CF               	subwf	??_map+9,f
  1841  0CBF                     u2432:	
  1842  0CBF  0840               	movf	map@out_min+2,w
  1843  0CC0  1C03               	skipc
  1844  0CC1  0F40               	incfsz	map@out_min+2,w
  1845  0CC2  2CC4               	goto	u2433
  1846  0CC3  2CC5               	goto	u2434
  1847  0CC4                     u2433:	
  1848  0CC4  02D0               	subwf	??_map+10,f
  1849  0CC5                     u2434:	
  1850  0CC5  0841               	movf	map@out_min+3,w
  1851  0CC6  1C03               	skipc
  1852  0CC7  0F41               	incfsz	map@out_min+3,w
  1853  0CC8  2CCA               	goto	u2435
  1854  0CC9  2CCB               	goto	u2436
  1855  0CCA                     u2435:	
  1856  0CCA  02D1               	subwf	??_map+11,f
  1857  0CCB                     u2436:	
  1858  0CCB  0851               	movf	??_map+11,w
  1859  0CCC  00F9               	movwf	___lmul@multiplicand+3
  1860  0CCD  0850               	movf	??_map+10,w
  1861  0CCE  00F8               	movwf	___lmul@multiplicand+2
  1862  0CCF  084F               	movf	??_map+9,w
  1863  0CD0  00F7               	movwf	___lmul@multiplicand+1
  1864  0CD1  084E               	movf	??_map+8,w
  1865  0CD2  00F6               	movwf	___lmul@multiplicand
  1866  0CD3  120A  158A  215D  120A  158A  	fcall	___lmul
  1867  0CD8  0875               	movf	?___lmul+3,w
  1868  0CD9  1283               	bcf	3,5	;RP0=0, select bank0
  1869  0CDA  1303               	bcf	3,6	;RP1=0, select bank0
  1870  0CDB  00AB               	movwf	___aldiv@dividend+3
  1871  0CDC  0874               	movf	?___lmul+2,w
  1872  0CDD  00AA               	movwf	___aldiv@dividend+2
  1873  0CDE  0873               	movf	?___lmul+1,w
  1874  0CDF  00A9               	movwf	___aldiv@dividend+1
  1875  0CE0  0872               	movf	?___lmul,w
  1876  0CE1  00A8               	movwf	___aldiv@dividend
  1877  0CE2  120A  158A  2331   	fcall	___aldiv
  1878  0CE5  1283               	bcf	3,5	;RP0=0, select bank0
  1879  0CE6  1303               	bcf	3,6	;RP1=0, select bank0
  1880  0CE7  0824               	movf	?___aldiv,w
  1881  0CE8  073E               	addwf	map@out_min,w
  1882  0CE9  00D2               	movwf	??_map+12
  1883  0CEA  3000               	movlw	0
  1884  0CEB  1803               	skipnc
  1885  0CEC  3001               	movlw	1
  1886  0CED  0725               	addwf	?___aldiv+1,w
  1887  0CEE  01D4               	clrf	??_map+14
  1888  0CEF  1803               	skipnc
  1889  0CF0  0AD4               	incf	??_map+14,f
  1890  0CF1  073F               	addwf	map@out_min+1,w
  1891  0CF2  00D3               	movwf	??_map+13
  1892  0CF3  1803               	skipnc
  1893  0CF4  0AD4               	incf	??_map+14,f
  1894  0CF5  0826               	movf	?___aldiv+2,w
  1895  0CF6  0754               	addwf	??_map+14,w
  1896  0CF7  01D5               	clrf	??_map+15
  1897  0CF8  1803               	skipnc
  1898  0CF9  0AD5               	incf	??_map+15,f
  1899  0CFA  0740               	addwf	map@out_min+2,w
  1900  0CFB  00D4               	movwf	??_map+14
  1901  0CFC  1803               	skipnc
  1902  0CFD  0AD5               	incf	??_map+15,f
  1903  0CFE  0827               	movf	?___aldiv+3,w
  1904  0CFF  0755               	addwf	??_map+15,w
  1905  0D00  0741               	addwf	map@out_min+3,w
  1906  0D01  00D5               	movwf	??_map+15
  1907  0D02  0855               	movf	??_map+15,w
  1908  0D03  00B5               	movwf	?_map+3
  1909  0D04  0854               	movf	??_map+14,w
  1910  0D05  00B4               	movwf	?_map+2
  1911  0D06  0853               	movf	??_map+13,w
  1912  0D07  00B3               	movwf	?_map+1
  1913  0D08  0852               	movf	??_map+12,w
  1914  0D09  00B2               	movwf	?_map
  1915  0D0A  0008               	return
  1916  0D0B                     __end_of_map:	
  1917                           
  1918                           	psect	text2
  1919  095D                     __ptext2:	
  1920 ;; *************** function ___lmul *****************
  1921 ;; Defined at:
  1922 ;;		line 15 in file "D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\Umul32.c"
  1923 ;; Parameters:    Size  Location     Type
  1924 ;;  multiplier      4    2[COMMON] unsigned long 
  1925 ;;  multiplicand    4    6[COMMON] unsigned long 
  1926 ;; Auto vars:     Size  Location     Type
  1927 ;;  product         4    0[BANK0 ] unsigned long 
  1928 ;; Return value:  Size  Location     Type
  1929 ;;                  4    2[COMMON] unsigned long 
  1930 ;; Registers used:
  1931 ;;		wreg, status,2, status,0
  1932 ;; Tracked objects:
  1933 ;;		On entry : 0/0
  1934 ;;		On exit  : 0/0
  1935 ;;		Unchanged: 0/0
  1936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1937 ;;      Params:         8       0       0       0       0
  1938 ;;      Locals:         0       4       0       0       0
  1939 ;;      Temps:          1       0       0       0       0
  1940 ;;      Totals:         9       4       0       0       0
  1941 ;;Total ram usage:       13 bytes
  1942 ;; Hardware stack levels used:    1
  1943 ;; Hardware stack levels required when called:    1
  1944 ;; This function calls:
  1945 ;;		Nothing
  1946 ;; This function is called by:
  1947 ;;		_map
  1948 ;; This function uses a non-reentrant model
  1949 ;;
  1950                           
  1951                           
  1952                           ;psect for function ___lmul
  1953  095D                     ___lmul:	
  1954                           
  1955                           ;incstack = 0
  1956                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  1957  095D  3000               	movlw	0
  1958  095E  1283               	bcf	3,5	;RP0=0, select bank0
  1959  095F  1303               	bcf	3,6	;RP1=0, select bank0
  1960  0960  00A3               	movwf	___lmul@product+3
  1961  0961  3000               	movlw	0
  1962  0962  00A2               	movwf	___lmul@product+2
  1963  0963  3000               	movlw	0
  1964  0964  00A1               	movwf	___lmul@product+1
  1965  0965  3000               	movlw	0
  1966  0966  00A0               	movwf	___lmul@product
  1967  0967                     l1871:	
  1968  0967  1C72               	btfss	___lmul@multiplier,0
  1969  0968  297F               	goto	l1875
  1970  0969  0876               	movf	___lmul@multiplicand,w
  1971  096A  1283               	bcf	3,5	;RP0=0, select bank0
  1972  096B  1303               	bcf	3,6	;RP1=0, select bank0
  1973  096C  07A0               	addwf	___lmul@product,f
  1974  096D  0877               	movf	___lmul@multiplicand+1,w
  1975  096E  1103               	clrz
  1976  096F  1803               	skipnc
  1977  0970  3E01               	addlw	1
  1978  0971  1D03               	btfss	3,2
  1979  0972  07A1               	addwf	___lmul@product+1,f
  1980  0973  0878               	movf	___lmul@multiplicand+2,w
  1981  0974  1103               	clrz
  1982  0975  1803               	skipnc
  1983  0976  3E01               	addlw	1
  1984  0977  1D03               	btfss	3,2
  1985  0978  07A2               	addwf	___lmul@product+2,f
  1986  0979  0879               	movf	___lmul@multiplicand+3,w
  1987  097A  1103               	clrz
  1988  097B  1803               	skipnc
  1989  097C  3E01               	addlw	1
  1990  097D  1D03               	btfss	3,2
  1991  097E  07A3               	addwf	___lmul@product+3,f
  1992  097F                     l1875:	
  1993  097F  3001               	movlw	1
  1994  0980  00FA               	movwf	??___lmul
  1995  0981                     u2105:	
  1996  0981  1003               	clrc
  1997  0982  0DF6               	rlf	___lmul@multiplicand,f
  1998  0983  0DF7               	rlf	___lmul@multiplicand+1,f
  1999  0984  0DF8               	rlf	___lmul@multiplicand+2,f
  2000  0985  0DF9               	rlf	___lmul@multiplicand+3,f
  2001  0986  0BFA               	decfsz	??___lmul,f
  2002  0987  2981               	goto	u2105
  2003  0988  3001               	movlw	1
  2004  0989                     u2115:	
  2005  0989  1003               	clrc
  2006  098A  0CF5               	rrf	___lmul@multiplier+3,f
  2007  098B  0CF4               	rrf	___lmul@multiplier+2,f
  2008  098C  0CF3               	rrf	___lmul@multiplier+1,f
  2009  098D  0CF2               	rrf	___lmul@multiplier,f
  2010  098E  3EFF               	addlw	-1
  2011  098F  1D03               	skipz
  2012  0990  2989               	goto	u2115
  2013  0991  0875               	movf	___lmul@multiplier+3,w
  2014  0992  0474               	iorwf	___lmul@multiplier+2,w
  2015  0993  0473               	iorwf	___lmul@multiplier+1,w
  2016  0994  0472               	iorwf	___lmul@multiplier,w
  2017  0995  1D03               	skipz
  2018  0996  2967               	goto	l1871
  2019  0997  1283               	bcf	3,5	;RP0=0, select bank0
  2020  0998  1303               	bcf	3,6	;RP1=0, select bank0
  2021  0999  0823               	movf	___lmul@product+3,w
  2022  099A  00F5               	movwf	?___lmul+3
  2023  099B  0822               	movf	___lmul@product+2,w
  2024  099C  00F4               	movwf	?___lmul+2
  2025  099D  0821               	movf	___lmul@product+1,w
  2026  099E  00F3               	movwf	?___lmul+1
  2027  099F  0820               	movf	___lmul@product,w
  2028  09A0  00F2               	movwf	?___lmul
  2029  09A1  0008               	return
  2030  09A2                     __end_of___lmul:	
  2031                           
  2032                           	psect	text3
  2033  0B31                     __ptext3:	
  2034 ;; *************** function ___aldiv *****************
  2035 ;; Defined at:
  2036 ;;		line 5 in file "D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\aldiv.c"
  2037 ;; Parameters:    Size  Location     Type
  2038 ;;  divisor         4    4[BANK0 ] long 
  2039 ;;  dividend        4    8[BANK0 ] long 
  2040 ;; Auto vars:     Size  Location     Type
  2041 ;;  quotient        4   14[BANK0 ] long 
  2042 ;;  sign            1   13[BANK0 ] unsigned char 
  2043 ;;  counter         1   12[BANK0 ] unsigned char 
  2044 ;; Return value:  Size  Location     Type
  2045 ;;                  4    4[BANK0 ] long 
  2046 ;; Registers used:
  2047 ;;		wreg, status,2, status,0
  2048 ;; Tracked objects:
  2049 ;;		On entry : 0/0
  2050 ;;		On exit  : 0/0
  2051 ;;		Unchanged: 0/0
  2052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2053 ;;      Params:         0       8       0       0       0
  2054 ;;      Locals:         0       6       0       0       0
  2055 ;;      Temps:          1       0       0       0       0
  2056 ;;      Totals:         1      14       0       0       0
  2057 ;;Total ram usage:       15 bytes
  2058 ;; Hardware stack levels used:    1
  2059 ;; Hardware stack levels required when called:    1
  2060 ;; This function calls:
  2061 ;;		Nothing
  2062 ;; This function is called by:
  2063 ;;		_map
  2064 ;; This function uses a non-reentrant model
  2065 ;;
  2066                           
  2067                           
  2068                           ;psect for function ___aldiv
  2069  0B31                     ___aldiv:	
  2070                           
  2071                           ;incstack = 0
  2072                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  2073  0B31  1283               	bcf	3,5	;RP0=0, select bank0
  2074  0B32  1303               	bcf	3,6	;RP1=0, select bank0
  2075  0B33  01AD               	clrf	___aldiv@sign
  2076  0B34  1FA7               	btfss	___aldiv@divisor+3,7
  2077  0B35  2B43               	goto	l390
  2078  0B36  09A4               	comf	___aldiv@divisor,f
  2079  0B37  09A5               	comf	___aldiv@divisor+1,f
  2080  0B38  09A6               	comf	___aldiv@divisor+2,f
  2081  0B39  09A7               	comf	___aldiv@divisor+3,f
  2082  0B3A  0AA4               	incf	___aldiv@divisor,f
  2083  0B3B  1903               	skipnz
  2084  0B3C  0AA5               	incf	___aldiv@divisor+1,f
  2085  0B3D  1903               	skipnz
  2086  0B3E  0AA6               	incf	___aldiv@divisor+2,f
  2087  0B3F  1903               	skipnz
  2088  0B40  0AA7               	incf	___aldiv@divisor+3,f
  2089  0B41  01AD               	clrf	___aldiv@sign
  2090  0B42  0AAD               	incf	___aldiv@sign,f
  2091  0B43                     l390:	
  2092  0B43  1FAB               	btfss	___aldiv@dividend+3,7
  2093  0B44  2B54               	goto	l1893
  2094  0B45  09A8               	comf	___aldiv@dividend,f
  2095  0B46  09A9               	comf	___aldiv@dividend+1,f
  2096  0B47  09AA               	comf	___aldiv@dividend+2,f
  2097  0B48  09AB               	comf	___aldiv@dividend+3,f
  2098  0B49  0AA8               	incf	___aldiv@dividend,f
  2099  0B4A  1903               	skipnz
  2100  0B4B  0AA9               	incf	___aldiv@dividend+1,f
  2101  0B4C  1903               	skipnz
  2102  0B4D  0AAA               	incf	___aldiv@dividend+2,f
  2103  0B4E  1903               	skipnz
  2104  0B4F  0AAB               	incf	___aldiv@dividend+3,f
  2105  0B50  3001               	movlw	1
  2106  0B51  00FB               	movwf	??___aldiv
  2107  0B52  087B               	movf	??___aldiv,w
  2108  0B53  06AD               	xorwf	___aldiv@sign,f
  2109  0B54                     l1893:	
  2110  0B54  3000               	movlw	0
  2111  0B55  00B1               	movwf	___aldiv@quotient+3
  2112  0B56  3000               	movlw	0
  2113  0B57  00B0               	movwf	___aldiv@quotient+2
  2114  0B58  3000               	movlw	0
  2115  0B59  00AF               	movwf	___aldiv@quotient+1
  2116  0B5A  3000               	movlw	0
  2117  0B5B  00AE               	movwf	___aldiv@quotient
  2118  0B5C  0827               	movf	___aldiv@divisor+3,w
  2119  0B5D  0426               	iorwf	___aldiv@divisor+2,w
  2120  0B5E  0425               	iorwf	___aldiv@divisor+1,w
  2121  0B5F  0424               	iorwf	___aldiv@divisor,w
  2122  0B60  1903               	skipnz
  2123  0B61  2BA9               	goto	l1915
  2124  0B62  01AC               	clrf	___aldiv@counter
  2125  0B63  0AAC               	incf	___aldiv@counter,f
  2126  0B64                     l1901:	
  2127  0B64  1BA7               	btfsc	___aldiv@divisor+3,7
  2128  0B65  2B74               	goto	l1903
  2129  0B66  3001               	movlw	1
  2130  0B67  00FB               	movwf	??___aldiv
  2131  0B68                     u2165:	
  2132  0B68  1003               	clrc
  2133  0B69  0DA4               	rlf	___aldiv@divisor,f
  2134  0B6A  0DA5               	rlf	___aldiv@divisor+1,f
  2135  0B6B  0DA6               	rlf	___aldiv@divisor+2,f
  2136  0B6C  0DA7               	rlf	___aldiv@divisor+3,f
  2137  0B6D  0BFB               	decfsz	??___aldiv,f
  2138  0B6E  2B68               	goto	u2165
  2139  0B6F  3001               	movlw	1
  2140  0B70  00FB               	movwf	??___aldiv
  2141  0B71  087B               	movf	??___aldiv,w
  2142  0B72  07AC               	addwf	___aldiv@counter,f
  2143  0B73  2B64               	goto	l1901
  2144  0B74                     l1903:	
  2145  0B74  3001               	movlw	1
  2146  0B75  00FB               	movwf	??___aldiv
  2147  0B76                     u2185:	
  2148  0B76  1003               	clrc
  2149  0B77  0DAE               	rlf	___aldiv@quotient,f
  2150  0B78  0DAF               	rlf	___aldiv@quotient+1,f
  2151  0B79  0DB0               	rlf	___aldiv@quotient+2,f
  2152  0B7A  0DB1               	rlf	___aldiv@quotient+3,f
  2153  0B7B  0BFB               	decfsz	??___aldiv,f
  2154  0B7C  2B76               	goto	u2185
  2155  0B7D  0827               	movf	___aldiv@divisor+3,w
  2156  0B7E  022B               	subwf	___aldiv@dividend+3,w
  2157  0B7F  1D03               	skipz
  2158  0B80  2B8B               	goto	u2195
  2159  0B81  0826               	movf	___aldiv@divisor+2,w
  2160  0B82  022A               	subwf	___aldiv@dividend+2,w
  2161  0B83  1D03               	skipz
  2162  0B84  2B8B               	goto	u2195
  2163  0B85  0825               	movf	___aldiv@divisor+1,w
  2164  0B86  0229               	subwf	___aldiv@dividend+1,w
  2165  0B87  1D03               	skipz
  2166  0B88  2B8B               	goto	u2195
  2167  0B89  0824               	movf	___aldiv@divisor,w
  2168  0B8A  0228               	subwf	___aldiv@dividend,w
  2169  0B8B                     u2195:	
  2170  0B8B  1C03               	skipc
  2171  0B8C  2B9C               	goto	l1911
  2172  0B8D  0824               	movf	___aldiv@divisor,w
  2173  0B8E  02A8               	subwf	___aldiv@dividend,f
  2174  0B8F  0825               	movf	___aldiv@divisor+1,w
  2175  0B90  1C03               	skipc
  2176  0B91  0F25               	incfsz	___aldiv@divisor+1,w
  2177  0B92  02A9               	subwf	___aldiv@dividend+1,f
  2178  0B93  0826               	movf	___aldiv@divisor+2,w
  2179  0B94  1C03               	skipc
  2180  0B95  0F26               	incfsz	___aldiv@divisor+2,w
  2181  0B96  02AA               	subwf	___aldiv@dividend+2,f
  2182  0B97  0827               	movf	___aldiv@divisor+3,w
  2183  0B98  1C03               	skipc
  2184  0B99  0F27               	incfsz	___aldiv@divisor+3,w
  2185  0B9A  02AB               	subwf	___aldiv@dividend+3,f
  2186  0B9B  142E               	bsf	___aldiv@quotient,0
  2187  0B9C                     l1911:	
  2188  0B9C  3001               	movlw	1
  2189  0B9D                     u2205:	
  2190  0B9D  1003               	clrc
  2191  0B9E  0CA7               	rrf	___aldiv@divisor+3,f
  2192  0B9F  0CA6               	rrf	___aldiv@divisor+2,f
  2193  0BA0  0CA5               	rrf	___aldiv@divisor+1,f
  2194  0BA1  0CA4               	rrf	___aldiv@divisor,f
  2195  0BA2  3EFF               	addlw	-1
  2196  0BA3  1D03               	skipz
  2197  0BA4  2B9D               	goto	u2205
  2198  0BA5  3001               	movlw	1
  2199  0BA6  02AC               	subwf	___aldiv@counter,f
  2200  0BA7  1D03               	btfss	3,2
  2201  0BA8  2B74               	goto	l1903
  2202  0BA9                     l1915:	
  2203  0BA9  082D               	movf	___aldiv@sign,w
  2204  0BAA  1903               	btfsc	3,2
  2205  0BAB  2BB7               	goto	l1919
  2206  0BAC  09AE               	comf	___aldiv@quotient,f
  2207  0BAD  09AF               	comf	___aldiv@quotient+1,f
  2208  0BAE  09B0               	comf	___aldiv@quotient+2,f
  2209  0BAF  09B1               	comf	___aldiv@quotient+3,f
  2210  0BB0  0AAE               	incf	___aldiv@quotient,f
  2211  0BB1  1903               	skipnz
  2212  0BB2  0AAF               	incf	___aldiv@quotient+1,f
  2213  0BB3  1903               	skipnz
  2214  0BB4  0AB0               	incf	___aldiv@quotient+2,f
  2215  0BB5  1903               	skipnz
  2216  0BB6  0AB1               	incf	___aldiv@quotient+3,f
  2217  0BB7                     l1919:	
  2218  0BB7  0831               	movf	___aldiv@quotient+3,w
  2219  0BB8  00A7               	movwf	?___aldiv+3
  2220  0BB9  0830               	movf	___aldiv@quotient+2,w
  2221  0BBA  00A6               	movwf	?___aldiv+2
  2222  0BBB  082F               	movf	___aldiv@quotient+1,w
  2223  0BBC  00A5               	movwf	?___aldiv+1
  2224  0BBD  082E               	movf	___aldiv@quotient,w
  2225  0BBE  00A4               	movwf	?___aldiv
  2226  0BBF  0008               	return
  2227  0BC0                     __end_of___aldiv:	
  2228                           
  2229                           	psect	text4
  2230  0BC0                     __ptext4:	
  2231 ;; *************** function ___xxtofl *****************
  2232 ;; Defined at:
  2233 ;;		line 10 in file "D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\xxtofl.c"
  2234 ;; Parameters:    Size  Location     Type
  2235 ;;  sign            1    wreg     unsigned char 
  2236 ;;  val             4    2[COMMON] long 
  2237 ;; Auto vars:     Size  Location     Type
  2238 ;;  sign            1    0[BANK0 ] unsigned char 
  2239 ;;  arg             4    2[BANK0 ] unsigned long 
  2240 ;;  exp             1    1[BANK0 ] unsigned char 
  2241 ;; Return value:  Size  Location     Type
  2242 ;;                  4    2[COMMON] unsigned char 
  2243 ;; Registers used:
  2244 ;;		wreg, status,2, status,0
  2245 ;; Tracked objects:
  2246 ;;		On entry : 0/0
  2247 ;;		On exit  : 0/0
  2248 ;;		Unchanged: 0/0
  2249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2250 ;;      Params:         4       0       0       0       0
  2251 ;;      Locals:         0       6       0       0       0
  2252 ;;      Temps:          4       0       0       0       0
  2253 ;;      Totals:         8       6       0       0       0
  2254 ;;Total ram usage:       14 bytes
  2255 ;; Hardware stack levels used:    1
  2256 ;; Hardware stack levels required when called:    1
  2257 ;; This function calls:
  2258 ;;		Nothing
  2259 ;; This function is called by:
  2260 ;;		_main
  2261 ;; This function uses a non-reentrant model
  2262 ;;
  2263                           
  2264                           
  2265                           ;psect for function ___xxtofl
  2266  0BC0                     ___xxtofl:	
  2267                           
  2268                           ;incstack = 0
  2269                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  2270                           ;___xxtofl@sign stored from wreg
  2271  0BC0  1283               	bcf	3,5	;RP0=0, select bank0
  2272  0BC1  1303               	bcf	3,6	;RP1=0, select bank0
  2273  0BC2  00A0               	movwf	___xxtofl@sign
  2274  0BC3  0820               	movf	___xxtofl@sign,w
  2275  0BC4  1D03               	btfss	3,2
  2276  0BC5  1FF5               	btfss	___xxtofl@val+3,7
  2277  0BC6  2BD7               	goto	l2627
  2278  0BC7  0972               	comf	___xxtofl@val,w
  2279  0BC8  00A2               	movwf	___xxtofl@arg
  2280  0BC9  0973               	comf	___xxtofl@val+1,w
  2281  0BCA  00A3               	movwf	___xxtofl@arg+1
  2282  0BCB  0974               	comf	___xxtofl@val+2,w
  2283  0BCC  00A4               	movwf	___xxtofl@arg+2
  2284  0BCD  0975               	comf	___xxtofl@val+3,w
  2285  0BCE  00A5               	movwf	___xxtofl@arg+3
  2286  0BCF  0AA2               	incf	___xxtofl@arg,f
  2287  0BD0  1903               	skipnz
  2288  0BD1  0AA3               	incf	___xxtofl@arg+1,f
  2289  0BD2  1903               	skipnz
  2290  0BD3  0AA4               	incf	___xxtofl@arg+2,f
  2291  0BD4  1903               	skipnz
  2292  0BD5  0AA5               	incf	___xxtofl@arg+3,f
  2293  0BD6  2BDF               	goto	l752
  2294  0BD7                     l2627:	
  2295  0BD7  0875               	movf	___xxtofl@val+3,w
  2296  0BD8  00A5               	movwf	___xxtofl@arg+3
  2297  0BD9  0874               	movf	___xxtofl@val+2,w
  2298  0BDA  00A4               	movwf	___xxtofl@arg+2
  2299  0BDB  0873               	movf	___xxtofl@val+1,w
  2300  0BDC  00A3               	movwf	___xxtofl@arg+1
  2301  0BDD  0872               	movf	___xxtofl@val,w
  2302  0BDE  00A2               	movwf	___xxtofl@arg
  2303  0BDF                     l752:	
  2304  0BDF  0875               	movf	___xxtofl@val+3,w
  2305  0BE0  0474               	iorwf	___xxtofl@val+2,w
  2306  0BE1  0473               	iorwf	___xxtofl@val+1,w
  2307  0BE2  0472               	iorwf	___xxtofl@val,w
  2308  0BE3  1D03               	skipz
  2309  0BE4  2BEE               	goto	l2633
  2310  0BE5  3000               	movlw	0
  2311  0BE6  00F5               	movwf	?___xxtofl+3
  2312  0BE7  3000               	movlw	0
  2313  0BE8  00F4               	movwf	?___xxtofl+2
  2314  0BE9  3000               	movlw	0
  2315  0BEA  00F3               	movwf	?___xxtofl+1
  2316  0BEB  3000               	movlw	0
  2317  0BEC  00F2               	movwf	?___xxtofl
  2318  0BED  0008               	return
  2319  0BEE                     l2633:	
  2320  0BEE  3096               	movlw	150
  2321  0BEF  00F6               	movwf	??___xxtofl
  2322  0BF0  0876               	movf	??___xxtofl,w
  2323  0BF1  00A1               	movwf	___xxtofl@exp
  2324  0BF2                     l2637:	
  2325  0BF2  30FE               	movlw	254
  2326  0BF3  0525               	andwf	___xxtofl@arg+3,w
  2327  0BF4  1903               	btfsc	3,2
  2328  0BF5  2C1F               	goto	l758
  2329  0BF6  3001               	movlw	1
  2330  0BF7  00F6               	movwf	??___xxtofl
  2331  0BF8  0876               	movf	??___xxtofl,w
  2332  0BF9  07A1               	addwf	___xxtofl@exp,f
  2333  0BFA  3001               	movlw	1
  2334  0BFB                     u3775:	
  2335  0BFB  1003               	clrc
  2336  0BFC  0CA5               	rrf	___xxtofl@arg+3,f
  2337  0BFD  0CA4               	rrf	___xxtofl@arg+2,f
  2338  0BFE  0CA3               	rrf	___xxtofl@arg+1,f
  2339  0BFF  0CA2               	rrf	___xxtofl@arg,f
  2340  0C00  3EFF               	addlw	-1
  2341  0C01  1D03               	skipz
  2342  0C02  2BFB               	goto	u3775
  2343  0C03  2BF2               	goto	l2637
  2344  0C04                     l2639:	
  2345  0C04  3001               	movlw	1
  2346  0C05  00F6               	movwf	??___xxtofl
  2347  0C06  0876               	movf	??___xxtofl,w
  2348  0C07  07A1               	addwf	___xxtofl@exp,f
  2349  0C08  3001               	movlw	1
  2350  0C09  07A2               	addwf	___xxtofl@arg,f
  2351  0C0A  3000               	movlw	0
  2352  0C0B  1803               	skipnc
  2353  0C0C  3001               	movlw	1
  2354  0C0D  07A3               	addwf	___xxtofl@arg+1,f
  2355  0C0E  3000               	movlw	0
  2356  0C0F  1803               	skipnc
  2357  0C10  3001               	movlw	1
  2358  0C11  07A4               	addwf	___xxtofl@arg+2,f
  2359  0C12  3000               	movlw	0
  2360  0C13  1803               	skipnc
  2361  0C14  3001               	movlw	1
  2362  0C15  07A5               	addwf	___xxtofl@arg+3,f
  2363  0C16  3001               	movlw	1
  2364  0C17                     u3795:	
  2365  0C17  1003               	clrc
  2366  0C18  0CA5               	rrf	___xxtofl@arg+3,f
  2367  0C19  0CA4               	rrf	___xxtofl@arg+2,f
  2368  0C1A  0CA3               	rrf	___xxtofl@arg+1,f
  2369  0C1B  0CA2               	rrf	___xxtofl@arg,f
  2370  0C1C  3EFF               	addlw	-1
  2371  0C1D  1D03               	skipz
  2372  0C1E  2C17               	goto	u3795
  2373  0C1F                     l758:	
  2374  0C1F  30FF               	movlw	255
  2375  0C20  0525               	andwf	___xxtofl@arg+3,w
  2376  0C21  1903               	btfsc	3,2
  2377  0C22  2C33               	goto	l2647
  2378  0C23  2C04               	goto	l2639
  2379  0C24                     l2649:	
  2380  0C24  3002               	movlw	2
  2381  0C25  0221               	subwf	___xxtofl@exp,w
  2382  0C26  1C03               	btfss	3,0
  2383  0C27  2C35               	goto	l765
  2384  0C28  3001               	movlw	1
  2385  0C29  02A1               	subwf	___xxtofl@exp,f
  2386  0C2A  3001               	movlw	1
  2387  0C2B  00F6               	movwf	??___xxtofl
  2388  0C2C                     u3815:	
  2389  0C2C  1003               	clrc
  2390  0C2D  0DA2               	rlf	___xxtofl@arg,f
  2391  0C2E  0DA3               	rlf	___xxtofl@arg+1,f
  2392  0C2F  0DA4               	rlf	___xxtofl@arg+2,f
  2393  0C30  0DA5               	rlf	___xxtofl@arg+3,f
  2394  0C31  0BF6               	decfsz	??___xxtofl,f
  2395  0C32  2C2C               	goto	u3815
  2396  0C33                     l2647:	
  2397  0C33  1FA4               	btfss	___xxtofl@arg+2,7
  2398  0C34  2C24               	goto	l2649
  2399  0C35                     l765:	
  2400  0C35  1821               	btfsc	___xxtofl@exp,0
  2401  0C36  2C3F               	goto	l766
  2402  0C37  30FF               	movlw	255
  2403  0C38  05A2               	andwf	___xxtofl@arg,f
  2404  0C39  30FF               	movlw	255
  2405  0C3A  05A3               	andwf	___xxtofl@arg+1,f
  2406  0C3B  307F               	movlw	127
  2407  0C3C  05A4               	andwf	___xxtofl@arg+2,f
  2408  0C3D  30FF               	movlw	255
  2409  0C3E  05A5               	andwf	___xxtofl@arg+3,f
  2410  0C3F                     l766:	
  2411  0C3F  1003               	clrc
  2412  0C40  0CA1               	rrf	___xxtofl@exp,f
  2413  0C41  0821               	movf	___xxtofl@exp,w
  2414  0C42  00F6               	movwf	??___xxtofl
  2415  0C43  01F7               	clrf	??___xxtofl+1
  2416  0C44  01F8               	clrf	??___xxtofl+2
  2417  0C45  01F9               	clrf	??___xxtofl+3
  2418  0C46  3018               	movlw	24
  2419  0C47                     u3855:	
  2420  0C47  1003               	clrc
  2421  0C48  0DF6               	rlf	??___xxtofl,f
  2422  0C49  0DF7               	rlf	??___xxtofl+1,f
  2423  0C4A  0DF8               	rlf	??___xxtofl+2,f
  2424  0C4B  0DF9               	rlf	??___xxtofl+3,f
  2425  0C4C  3EFF               	addlw	-1
  2426  0C4D  1D03               	skipz
  2427  0C4E  2C47               	goto	u3855
  2428  0C4F  0876               	movf	??___xxtofl,w
  2429  0C50  04A2               	iorwf	___xxtofl@arg,f
  2430  0C51  0877               	movf	??___xxtofl+1,w
  2431  0C52  04A3               	iorwf	___xxtofl@arg+1,f
  2432  0C53  0878               	movf	??___xxtofl+2,w
  2433  0C54  04A4               	iorwf	___xxtofl@arg+2,f
  2434  0C55  0879               	movf	??___xxtofl+3,w
  2435  0C56  04A5               	iorwf	___xxtofl@arg+3,f
  2436  0C57  0820               	movf	___xxtofl@sign,w
  2437  0C58  1D03               	btfss	3,2
  2438  0C59  1FF5               	btfss	___xxtofl@val+3,7
  2439  0C5A  2C5C               	goto	l2661
  2440  0C5B  17A5               	bsf	___xxtofl@arg+3,7
  2441  0C5C                     l2661:	
  2442  0C5C  0825               	movf	___xxtofl@arg+3,w
  2443  0C5D  00F5               	movwf	?___xxtofl+3
  2444  0C5E  0824               	movf	___xxtofl@arg+2,w
  2445  0C5F  00F4               	movwf	?___xxtofl+2
  2446  0C60  0823               	movf	___xxtofl@arg+1,w
  2447  0C61  00F3               	movwf	?___xxtofl+1
  2448  0C62  0822               	movf	___xxtofl@arg,w
  2449  0C63  00F2               	movwf	?___xxtofl
  2450  0C64  0008               	return
  2451  0C65                     __end_of___xxtofl:	
  2452                           
  2453                           	psect	text5
  2454  0A4E                     __ptext5:	
  2455 ;; *************** function ___lldiv *****************
  2456 ;; Defined at:
  2457 ;;		line 5 in file "D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\__lldiv.c"
  2458 ;; Parameters:    Size  Location     Type
  2459 ;;  divisor         4    2[COMMON] unsigned long 
  2460 ;;  dividend        4    6[COMMON] unsigned long 
  2461 ;; Auto vars:     Size  Location     Type
  2462 ;;  quotient        4    0[BANK0 ] unsigned long 
  2463 ;;  counter         1    4[BANK0 ] unsigned char 
  2464 ;; Return value:  Size  Location     Type
  2465 ;;                  4    2[COMMON] unsigned long 
  2466 ;; Registers used:
  2467 ;;		wreg, status,2, status,0
  2468 ;; Tracked objects:
  2469 ;;		On entry : 0/0
  2470 ;;		On exit  : 0/0
  2471 ;;		Unchanged: 0/0
  2472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2473 ;;      Params:         8       0       0       0       0
  2474 ;;      Locals:         0       5       0       0       0
  2475 ;;      Temps:          1       0       0       0       0
  2476 ;;      Totals:         9       5       0       0       0
  2477 ;;Total ram usage:       14 bytes
  2478 ;; Hardware stack levels used:    1
  2479 ;; Hardware stack levels required when called:    1
  2480 ;; This function calls:
  2481 ;;		Nothing
  2482 ;; This function is called by:
  2483 ;;		_main
  2484 ;; This function uses a non-reentrant model
  2485 ;;
  2486                           
  2487                           
  2488                           ;psect for function ___lldiv
  2489  0A4E                     ___lldiv:	
  2490                           
  2491                           ;incstack = 0
  2492                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2493  0A4E  3000               	movlw	0
  2494  0A4F  1283               	bcf	3,5	;RP0=0, select bank0
  2495  0A50  1303               	bcf	3,6	;RP1=0, select bank0
  2496  0A51  00A3               	movwf	___lldiv@quotient+3
  2497  0A52  3000               	movlw	0
  2498  0A53  00A2               	movwf	___lldiv@quotient+2
  2499  0A54  3000               	movlw	0
  2500  0A55  00A1               	movwf	___lldiv@quotient+1
  2501  0A56  3000               	movlw	0
  2502  0A57  00A0               	movwf	___lldiv@quotient
  2503  0A58  0875               	movf	___lldiv@divisor+3,w
  2504  0A59  0474               	iorwf	___lldiv@divisor+2,w
  2505  0A5A  0473               	iorwf	___lldiv@divisor+1,w
  2506  0A5B  0472               	iorwf	___lldiv@divisor,w
  2507  0A5C  1903               	skipnz
  2508  0A5D  2AA5               	goto	l2105
  2509  0A5E  01A4               	clrf	___lldiv@counter
  2510  0A5F  0AA4               	incf	___lldiv@counter,f
  2511  0A60                     l2091:	
  2512  0A60  1BF5               	btfsc	___lldiv@divisor+3,7
  2513  0A61  2A70               	goto	l2093
  2514  0A62  3001               	movlw	1
  2515  0A63  00FA               	movwf	??___lldiv
  2516  0A64                     u2465:	
  2517  0A64  1003               	clrc
  2518  0A65  0DF2               	rlf	___lldiv@divisor,f
  2519  0A66  0DF3               	rlf	___lldiv@divisor+1,f
  2520  0A67  0DF4               	rlf	___lldiv@divisor+2,f
  2521  0A68  0DF5               	rlf	___lldiv@divisor+3,f
  2522  0A69  0BFA               	decfsz	??___lldiv,f
  2523  0A6A  2A64               	goto	u2465
  2524  0A6B  3001               	movlw	1
  2525  0A6C  00FA               	movwf	??___lldiv
  2526  0A6D  087A               	movf	??___lldiv,w
  2527  0A6E  07A4               	addwf	___lldiv@counter,f
  2528  0A6F  2A60               	goto	l2091
  2529  0A70                     l2093:	
  2530  0A70  3001               	movlw	1
  2531  0A71  00FA               	movwf	??___lldiv
  2532  0A72                     u2485:	
  2533  0A72  1003               	clrc
  2534  0A73  0DA0               	rlf	___lldiv@quotient,f
  2535  0A74  0DA1               	rlf	___lldiv@quotient+1,f
  2536  0A75  0DA2               	rlf	___lldiv@quotient+2,f
  2537  0A76  0DA3               	rlf	___lldiv@quotient+3,f
  2538  0A77  0BFA               	decfsz	??___lldiv,f
  2539  0A78  2A72               	goto	u2485
  2540  0A79  0875               	movf	___lldiv@divisor+3,w
  2541  0A7A  0279               	subwf	___lldiv@dividend+3,w
  2542  0A7B  1D03               	skipz
  2543  0A7C  2A87               	goto	u2495
  2544  0A7D  0874               	movf	___lldiv@divisor+2,w
  2545  0A7E  0278               	subwf	___lldiv@dividend+2,w
  2546  0A7F  1D03               	skipz
  2547  0A80  2A87               	goto	u2495
  2548  0A81  0873               	movf	___lldiv@divisor+1,w
  2549  0A82  0277               	subwf	___lldiv@dividend+1,w
  2550  0A83  1D03               	skipz
  2551  0A84  2A87               	goto	u2495
  2552  0A85  0872               	movf	___lldiv@divisor,w
  2553  0A86  0276               	subwf	___lldiv@dividend,w
  2554  0A87                     u2495:	
  2555  0A87  1C03               	skipc
  2556  0A88  2A98               	goto	l2101
  2557  0A89  0872               	movf	___lldiv@divisor,w
  2558  0A8A  02F6               	subwf	___lldiv@dividend,f
  2559  0A8B  0873               	movf	___lldiv@divisor+1,w
  2560  0A8C  1C03               	skipc
  2561  0A8D  0F73               	incfsz	___lldiv@divisor+1,w
  2562  0A8E  02F7               	subwf	___lldiv@dividend+1,f
  2563  0A8F  0874               	movf	___lldiv@divisor+2,w
  2564  0A90  1C03               	skipc
  2565  0A91  0F74               	incfsz	___lldiv@divisor+2,w
  2566  0A92  02F8               	subwf	___lldiv@dividend+2,f
  2567  0A93  0875               	movf	___lldiv@divisor+3,w
  2568  0A94  1C03               	skipc
  2569  0A95  0F75               	incfsz	___lldiv@divisor+3,w
  2570  0A96  02F9               	subwf	___lldiv@dividend+3,f
  2571  0A97  1420               	bsf	___lldiv@quotient,0
  2572  0A98                     l2101:	
  2573  0A98  3001               	movlw	1
  2574  0A99                     u2505:	
  2575  0A99  1003               	clrc
  2576  0A9A  0CF5               	rrf	___lldiv@divisor+3,f
  2577  0A9B  0CF4               	rrf	___lldiv@divisor+2,f
  2578  0A9C  0CF3               	rrf	___lldiv@divisor+1,f
  2579  0A9D  0CF2               	rrf	___lldiv@divisor,f
  2580  0A9E  3EFF               	addlw	-1
  2581  0A9F  1D03               	skipz
  2582  0AA0  2A99               	goto	u2505
  2583  0AA1  3001               	movlw	1
  2584  0AA2  02A4               	subwf	___lldiv@counter,f
  2585  0AA3  1D03               	btfss	3,2
  2586  0AA4  2A70               	goto	l2093
  2587  0AA5                     l2105:	
  2588  0AA5  0823               	movf	___lldiv@quotient+3,w
  2589  0AA6  00F5               	movwf	?___lldiv+3
  2590  0AA7  0822               	movf	___lldiv@quotient+2,w
  2591  0AA8  00F4               	movwf	?___lldiv+2
  2592  0AA9  0821               	movf	___lldiv@quotient+1,w
  2593  0AAA  00F3               	movwf	?___lldiv+1
  2594  0AAB  0820               	movf	___lldiv@quotient,w
  2595  0AAC  00F2               	movwf	?___lldiv
  2596  0AAD  0008               	return
  2597  0AAE                     __end_of___lldiv:	
  2598                           
  2599                           	psect	text6
  2600  0AAE                     __ptext6:	
  2601 ;; *************** function ___fltol *****************
  2602 ;; Defined at:
  2603 ;;		line 43 in file "D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\fltol.c"
  2604 ;; Parameters:    Size  Location     Type
  2605 ;;  f1              4    0[BANK1 ] unsigned long 
  2606 ;; Auto vars:     Size  Location     Type
  2607 ;;  exp1            1   79[BANK0 ] unsigned char 
  2608 ;;  sign1           1   78[BANK0 ] unsigned char 
  2609 ;; Return value:  Size  Location     Type
  2610 ;;                  4    0[BANK1 ] long 
  2611 ;; Registers used:
  2612 ;;		wreg, status,2, status,0
  2613 ;; Tracked objects:
  2614 ;;		On entry : 0/0
  2615 ;;		On exit  : 0/0
  2616 ;;		Unchanged: 0/0
  2617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2618 ;;      Params:         0       0       4       0       0
  2619 ;;      Locals:         0       2       0       0       0
  2620 ;;      Temps:          0       0       5       0       0
  2621 ;;      Totals:         0       2       9       0       0
  2622 ;;Total ram usage:       11 bytes
  2623 ;; Hardware stack levels used:    1
  2624 ;; Hardware stack levels required when called:    1
  2625 ;; This function calls:
  2626 ;;		Nothing
  2627 ;; This function is called by:
  2628 ;;		_main
  2629 ;; This function uses a non-reentrant model
  2630 ;;
  2631                           
  2632                           
  2633                           ;psect for function ___fltol
  2634  0AAE                     ___fltol:	
  2635                           
  2636                           ;incstack = 0
  2637                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  2638  0AAE  1003               	clrc
  2639  0AAF  1683               	bsf	3,5	;RP0=1, select bank1
  2640  0AB0  1303               	bcf	3,6	;RP1=0, select bank1
  2641  0AB1  0D22               	rlf	(___fltol@f1+2)^(0+128),w
  2642  0AB2  0D23               	rlf	(___fltol@f1+3)^(0+128),w
  2643  0AB3  00A4               	movwf	??___fltol^(0+128)
  2644  0AB4  0824               	movf	??___fltol^(0+128),w
  2645  0AB5  1283               	bcf	3,5	;RP0=0, select bank0
  2646  0AB6  1303               	bcf	3,6	;RP1=0, select bank0
  2647  0AB7  00EF               	movwf	___fltol@exp1
  2648  0AB8  086F               	movf	___fltol@exp1,w
  2649  0AB9  1D03               	btfss	3,2
  2650  0ABA  2AC6               	goto	l2115
  2651  0ABB                     l2111:	
  2652  0ABB  3000               	movlw	0
  2653  0ABC  1683               	bsf	3,5	;RP0=1, select bank1
  2654  0ABD  1303               	bcf	3,6	;RP1=0, select bank1
  2655  0ABE  00A3               	movwf	(?___fltol+3)^(0+128)
  2656  0ABF  3000               	movlw	0
  2657  0AC0  00A2               	movwf	(?___fltol+2)^(0+128)
  2658  0AC1  3000               	movlw	0
  2659  0AC2  00A1               	movwf	(?___fltol+1)^(0+128)
  2660  0AC3  3000               	movlw	0
  2661  0AC4  00A0               	movwf	?___fltol^(0+128)
  2662  0AC5  0008               	return
  2663  0AC6                     l2115:	
  2664  0AC6  1683               	bsf	3,5	;RP0=1, select bank1
  2665  0AC7  1303               	bcf	3,6	;RP1=0, select bank1
  2666  0AC8  0820               	movf	___fltol@f1^(0+128),w
  2667  0AC9  00A4               	movwf	??___fltol^(0+128)
  2668  0ACA  0821               	movf	(___fltol@f1+1)^(0+128),w
  2669  0ACB  00A5               	movwf	(??___fltol^(0+128)+1)
  2670  0ACC  0822               	movf	(___fltol@f1+2)^(0+128),w
  2671  0ACD  00A6               	movwf	(??___fltol^(0+128)+2)
  2672  0ACE  0823               	movf	(___fltol@f1+3)^(0+128),w
  2673  0ACF  00A7               	movwf	(??___fltol^(0+128)+3)
  2674  0AD0  301F               	movlw	31
  2675  0AD1                     u2535:	
  2676  0AD1  1003               	clrc
  2677  0AD2  0CA7               	rrf	(??___fltol^(0+128)+3),f
  2678  0AD3  0CA6               	rrf	(??___fltol^(0+128)+2),f
  2679  0AD4  0CA5               	rrf	(??___fltol^(0+128)+1),f
  2680  0AD5  0CA4               	rrf	??___fltol^(0+128),f
  2681  0AD6  3EFF               	addlw	-1
  2682  0AD7  1D03               	skipz
  2683  0AD8  2AD1               	goto	u2535
  2684  0AD9  0824               	movf	??___fltol^(0+128),w
  2685  0ADA  00A8               	movwf	(??___fltol+4)^(0+128)
  2686  0ADB  0828               	movf	(??___fltol+4)^(0+128),w
  2687  0ADC  1283               	bcf	3,5	;RP0=0, select bank0
  2688  0ADD  1303               	bcf	3,6	;RP1=0, select bank0
  2689  0ADE  00EE               	movwf	___fltol@sign1
  2690  0ADF  1683               	bsf	3,5	;RP0=1, select bank1
  2691  0AE0  1303               	bcf	3,6	;RP1=0, select bank1
  2692  0AE1  17A2               	bsf	(___fltol@f1^(0+128)+2),7
  2693  0AE2  30FF               	movlw	255
  2694  0AE3  05A0               	andwf	___fltol@f1^(0+128),f
  2695  0AE4  30FF               	movlw	255
  2696  0AE5  05A1               	andwf	(___fltol@f1+1)^(0+128),f
  2697  0AE6  30FF               	movlw	255
  2698  0AE7  05A2               	andwf	(___fltol@f1+2)^(0+128),f
  2699  0AE8  3000               	movlw	0
  2700  0AE9  05A3               	andwf	(___fltol@f1+3)^(0+128),f
  2701  0AEA  3096               	movlw	150
  2702  0AEB  1283               	bcf	3,5	;RP0=0, select bank0
  2703  0AEC  1303               	bcf	3,6	;RP1=0, select bank0
  2704  0AED  02EF               	subwf	___fltol@exp1,f
  2705  0AEE  1FEF               	btfss	___fltol@exp1,7
  2706  0AEF  2B09               	goto	l2133
  2707  0AF0  086F               	movf	___fltol@exp1,w
  2708  0AF1  3A80               	xorlw	128
  2709  0AF2  3E97               	addlw	151
  2710  0AF3  1C03               	btfss	3,0
  2711  0AF4  2ABB               	goto	l2111
  2712  0AF5                     l2131:	
  2713  0AF5  3001               	movlw	1
  2714  0AF6                     u2565:	
  2715  0AF6  1003               	clrc
  2716  0AF7  1683               	bsf	3,5	;RP0=1, select bank1
  2717  0AF8  1303               	bcf	3,6	;RP1=0, select bank1
  2718  0AF9  0CA3               	rrf	(___fltol@f1+3)^(0+128),f
  2719  0AFA  0CA2               	rrf	(___fltol@f1+2)^(0+128),f
  2720  0AFB  0CA1               	rrf	(___fltol@f1+1)^(0+128),f
  2721  0AFC  0CA0               	rrf	___fltol@f1^(0+128),f
  2722  0AFD  3EFF               	addlw	-1
  2723  0AFE  1D03               	skipz
  2724  0AFF  2AF6               	goto	u2565
  2725  0B00  3001               	movlw	1
  2726  0B01  00A4               	movwf	??___fltol^(0+128)
  2727  0B02  0824               	movf	??___fltol^(0+128),w
  2728  0B03  1283               	bcf	3,5	;RP0=0, select bank0
  2729  0B04  1303               	bcf	3,6	;RP1=0, select bank0
  2730  0B05  07EF               	addwf	___fltol@exp1,f
  2731  0B06  1903               	btfsc	3,2
  2732  0B07  2B20               	goto	l2141
  2733  0B08  2AF5               	goto	l2131
  2734  0B09                     l2133:	
  2735  0B09  3020               	movlw	32
  2736  0B0A  026F               	subwf	___fltol@exp1,w
  2737  0B0B  1803               	btfsc	3,0
  2738  0B0C  2ABB               	goto	l2111
  2739  0B0D                     l518:	
  2740  0B0D  086F               	movf	___fltol@exp1,w
  2741  0B0E  1903               	btfsc	3,2
  2742  0B0F  2B20               	goto	l2141
  2743  0B10  3001               	movlw	1
  2744  0B11  1683               	bsf	3,5	;RP0=1, select bank1
  2745  0B12  1303               	bcf	3,6	;RP1=0, select bank1
  2746  0B13  00A4               	movwf	??___fltol^(0+128)
  2747  0B14                     u2595:	
  2748  0B14  1003               	clrc
  2749  0B15  0DA0               	rlf	___fltol@f1^(0+128),f
  2750  0B16  0DA1               	rlf	(___fltol@f1+1)^(0+128),f
  2751  0B17  0DA2               	rlf	(___fltol@f1+2)^(0+128),f
  2752  0B18  0DA3               	rlf	(___fltol@f1+3)^(0+128),f
  2753  0B19  0BA4               	decfsz	??___fltol^(0+128),f
  2754  0B1A  2B14               	goto	u2595
  2755  0B1B  3001               	movlw	1
  2756  0B1C  1283               	bcf	3,5	;RP0=0, select bank0
  2757  0B1D  1303               	bcf	3,6	;RP1=0, select bank0
  2758  0B1E  02EF               	subwf	___fltol@exp1,f
  2759  0B1F  2B0D               	goto	l518
  2760  0B20                     l2141:	
  2761  0B20  086E               	movf	___fltol@sign1,w
  2762  0B21  1903               	btfsc	3,2
  2763  0B22  0008               	return
  2764  0B23  1683               	bsf	3,5	;RP0=1, select bank1
  2765  0B24  1303               	bcf	3,6	;RP1=0, select bank1
  2766  0B25  09A0               	comf	___fltol@f1^(0+128),f
  2767  0B26  09A1               	comf	(___fltol@f1+1)^(0+128),f
  2768  0B27  09A2               	comf	(___fltol@f1+2)^(0+128),f
  2769  0B28  09A3               	comf	(___fltol@f1+3)^(0+128),f
  2770  0B29  0AA0               	incf	___fltol@f1^(0+128),f
  2771  0B2A  1903               	skipnz
  2772  0B2B  0AA1               	incf	(___fltol@f1+1)^(0+128),f
  2773  0B2C  1903               	skipnz
  2774  0B2D  0AA2               	incf	(___fltol@f1+2)^(0+128),f
  2775  0B2E  1903               	skipnz
  2776  0B2F  0AA3               	incf	(___fltol@f1+3)^(0+128),f
  2777  0B30  0008               	return
  2778  0B31                     __end_of___fltol:	
  2779                           
  2780                           	psect	text7
  2781  033A                     __ptext7:	
  2782 ;; *************** function ___flmul *****************
  2783 ;; Defined at:
  2784 ;;		line 8 in file "D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\sprcmul.c"
  2785 ;; Parameters:    Size  Location     Type
  2786 ;;  b               4    6[BANK0 ] long 
  2787 ;;  a               4   10[BANK0 ] long 
  2788 ;; Auto vars:     Size  Location     Type
  2789 ;;  prod            4   26[BANK0 ] struct .
  2790 ;;  grs             4   20[BANK0 ] unsigned long 
  2791 ;;  temp            2   30[BANK0 ] struct .
  2792 ;;  bexp            1   25[BANK0 ] unsigned char 
  2793 ;;  aexp            1   24[BANK0 ] unsigned char 
  2794 ;;  sign            1   19[BANK0 ] unsigned char 
  2795 ;; Return value:  Size  Location     Type
  2796 ;;                  4    6[BANK0 ] unsigned char 
  2797 ;; Registers used:
  2798 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2799 ;; Tracked objects:
  2800 ;;		On entry : 0/0
  2801 ;;		On exit  : 0/0
  2802 ;;		Unchanged: 0/0
  2803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2804 ;;      Params:         0       8       0       0       0
  2805 ;;      Locals:         0      13       0       0       0
  2806 ;;      Temps:          0       5       0       0       0
  2807 ;;      Totals:         0      26       0       0       0
  2808 ;;Total ram usage:       26 bytes
  2809 ;; Hardware stack levels used:    1
  2810 ;; Hardware stack levels required when called:    2
  2811 ;; This function calls:
  2812 ;;		__Umul8_16
  2813 ;; This function is called by:
  2814 ;;		_main
  2815 ;; This function uses a non-reentrant model
  2816 ;;
  2817                           
  2818                           
  2819                           ;psect for function ___flmul
  2820  033A                     ___flmul:	
  2821                           
  2822                           ;incstack = 0
  2823                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2824  033A  1283               	bcf	3,5	;RP0=0, select bank0
  2825  033B  1303               	bcf	3,6	;RP1=0, select bank0
  2826  033C  0829               	movf	___flmul@b+3,w
  2827  033D  3980               	andlw	128
  2828  033E  00AE               	movwf	??___flmul
  2829  033F  082E               	movf	??___flmul,w
  2830  0340  00B3               	movwf	___flmul@sign
  2831  0341  0829               	movf	___flmul@b+3,w
  2832  0342  00AE               	movwf	??___flmul
  2833  0343  072E               	addwf	??___flmul,w
  2834  0344  00AF               	movwf	??___flmul+1
  2835  0345  082F               	movf	??___flmul+1,w
  2836  0346  00B9               	movwf	___flmul@bexp
  2837  0347  1BA8               	btfsc	___flmul@b+2,7
  2838  0348  1439               	bsf	___flmul@bexp,0
  2839  0349  0839               	movf	___flmul@bexp,w
  2840  034A  1903               	btfsc	3,2
  2841  034B  2B59               	goto	l2497
  2842  034C  0A39               	incf	___flmul@bexp,w
  2843  034D  1D03               	btfss	3,2
  2844  034E  2B57               	goto	l2495
  2845  034F  3000               	movlw	0
  2846  0350  00A9               	movwf	___flmul@b+3
  2847  0351  3000               	movlw	0
  2848  0352  00A8               	movwf	___flmul@b+2
  2849  0353  3000               	movlw	0
  2850  0354  00A7               	movwf	___flmul@b+1
  2851  0355  3000               	movlw	0
  2852  0356  00A6               	movwf	___flmul@b
  2853  0357                     l2495:	
  2854  0357  17A8               	bsf	___flmul@b+2,7
  2855  0358  2B61               	goto	l2499
  2856  0359                     l2497:	
  2857  0359  3000               	movlw	0
  2858  035A  00A9               	movwf	___flmul@b+3
  2859  035B  3000               	movlw	0
  2860  035C  00A8               	movwf	___flmul@b+2
  2861  035D  3000               	movlw	0
  2862  035E  00A7               	movwf	___flmul@b+1
  2863  035F  3000               	movlw	0
  2864  0360  00A6               	movwf	___flmul@b
  2865  0361                     l2499:	
  2866  0361  082D               	movf	___flmul@a+3,w
  2867  0362  3980               	andlw	128
  2868  0363  00AE               	movwf	??___flmul
  2869  0364  082E               	movf	??___flmul,w
  2870  0365  06B3               	xorwf	___flmul@sign,f
  2871  0366  082D               	movf	___flmul@a+3,w
  2872  0367  00AE               	movwf	??___flmul
  2873  0368  072E               	addwf	??___flmul,w
  2874  0369  00AF               	movwf	??___flmul+1
  2875  036A  082F               	movf	??___flmul+1,w
  2876  036B  00B8               	movwf	___flmul@aexp
  2877  036C  1BAC               	btfsc	___flmul@a+2,7
  2878  036D  1438               	bsf	___flmul@aexp,0
  2879  036E  0838               	movf	___flmul@aexp,w
  2880  036F  1903               	btfsc	3,2
  2881  0370  2B7E               	goto	l2515
  2882  0371  0A38               	incf	___flmul@aexp,w
  2883  0372  1D03               	btfss	3,2
  2884  0373  2B7C               	goto	l2513
  2885  0374  3000               	movlw	0
  2886  0375  00AD               	movwf	___flmul@a+3
  2887  0376  3000               	movlw	0
  2888  0377  00AC               	movwf	___flmul@a+2
  2889  0378  3000               	movlw	0
  2890  0379  00AB               	movwf	___flmul@a+1
  2891  037A  3000               	movlw	0
  2892  037B  00AA               	movwf	___flmul@a
  2893  037C                     l2513:	
  2894  037C  17AC               	bsf	___flmul@a+2,7
  2895  037D  2B86               	goto	l2517
  2896  037E                     l2515:	
  2897  037E  3000               	movlw	0
  2898  037F  00AD               	movwf	___flmul@a+3
  2899  0380  3000               	movlw	0
  2900  0381  00AC               	movwf	___flmul@a+2
  2901  0382  3000               	movlw	0
  2902  0383  00AB               	movwf	___flmul@a+1
  2903  0384  3000               	movlw	0
  2904  0385  00AA               	movwf	___flmul@a
  2905  0386                     l2517:	
  2906  0386  0838               	movf	___flmul@aexp,w
  2907  0387  1D03               	btfss	3,2
  2908  0388  0839               	movf	___flmul@bexp,w
  2909  0389  1D03               	btfss	3,2
  2910  038A  2B94               	goto	l2525
  2911  038B  3000               	movlw	0
  2912  038C  00A9               	movwf	?___flmul+3
  2913  038D  3000               	movlw	0
  2914  038E  00A8               	movwf	?___flmul+2
  2915  038F  3000               	movlw	0
  2916  0390  00A7               	movwf	?___flmul+1
  2917  0391  3000               	movlw	0
  2918  0392  00A6               	movwf	?___flmul
  2919  0393  0008               	return
  2920  0394                     l2525:	
  2921  0394  0826               	movf	___flmul@b,w
  2922  0395  00AE               	movwf	??___flmul
  2923  0396  082E               	movf	??___flmul,w
  2924  0397  00F2               	movwf	__Umul8_16@multiplicand
  2925  0398  082C               	movf	___flmul@a+2,w
  2926  0399  120A  158A  202D  120A  118A  	fcall	__Umul8_16
  2927  039E  0873               	movf	?__Umul8_16+1,w
  2928  039F  1283               	bcf	3,5	;RP0=0, select bank0
  2929  03A0  1303               	bcf	3,6	;RP1=0, select bank0
  2930  03A1  00BF               	movwf	___flmul@temp+1
  2931  03A2  0872               	movf	?__Umul8_16,w
  2932  03A3  00BE               	movwf	___flmul@temp
  2933  03A4  083E               	movf	___flmul@temp,w
  2934  03A5  00AE               	movwf	??___flmul
  2935  03A6  01AF               	clrf	??___flmul+1
  2936  03A7  01B0               	clrf	??___flmul+2
  2937  03A8  01B1               	clrf	??___flmul+3
  2938  03A9  0831               	movf	??___flmul+3,w
  2939  03AA  00B7               	movwf	___flmul@grs+3
  2940  03AB  0830               	movf	??___flmul+2,w
  2941  03AC  00B6               	movwf	___flmul@grs+2
  2942  03AD  082F               	movf	??___flmul+1,w
  2943  03AE  00B5               	movwf	___flmul@grs+1
  2944  03AF  082E               	movf	??___flmul,w
  2945  03B0  00B4               	movwf	___flmul@grs
  2946  03B1  083F               	movf	___flmul@temp+1,w
  2947  03B2  00AE               	movwf	??___flmul
  2948  03B3  01AF               	clrf	??___flmul+1
  2949  03B4  01B0               	clrf	??___flmul+2
  2950  03B5  01B1               	clrf	??___flmul+3
  2951  03B6  0831               	movf	??___flmul+3,w
  2952  03B7  00BD               	movwf	___flmul@prod+3
  2953  03B8  0830               	movf	??___flmul+2,w
  2954  03B9  00BC               	movwf	___flmul@prod+2
  2955  03BA  082F               	movf	??___flmul+1,w
  2956  03BB  00BB               	movwf	___flmul@prod+1
  2957  03BC  082E               	movf	??___flmul,w
  2958  03BD  00BA               	movwf	___flmul@prod
  2959  03BE  0827               	movf	___flmul@b+1,w
  2960  03BF  00AE               	movwf	??___flmul
  2961  03C0  082E               	movf	??___flmul,w
  2962  03C1  00F2               	movwf	__Umul8_16@multiplicand
  2963  03C2  082B               	movf	___flmul@a+1,w
  2964  03C3  120A  158A  202D  120A  118A  	fcall	__Umul8_16
  2965  03C8  0873               	movf	?__Umul8_16+1,w
  2966  03C9  1283               	bcf	3,5	;RP0=0, select bank0
  2967  03CA  1303               	bcf	3,6	;RP1=0, select bank0
  2968  03CB  00BF               	movwf	___flmul@temp+1
  2969  03CC  0872               	movf	?__Umul8_16,w
  2970  03CD  00BE               	movwf	___flmul@temp
  2971  03CE  083E               	movf	___flmul@temp,w
  2972  03CF  00AE               	movwf	??___flmul
  2973  03D0  01AF               	clrf	??___flmul+1
  2974  03D1  01B0               	clrf	??___flmul+2
  2975  03D2  01B1               	clrf	??___flmul+3
  2976  03D3  082E               	movf	??___flmul,w
  2977  03D4  07B4               	addwf	___flmul@grs,f
  2978  03D5  082F               	movf	??___flmul+1,w
  2979  03D6  1103               	clrz
  2980  03D7  1803               	skipnc
  2981  03D8  3E01               	addlw	1
  2982  03D9  1D03               	btfss	3,2
  2983  03DA  07B5               	addwf	___flmul@grs+1,f
  2984  03DB  0830               	movf	??___flmul+2,w
  2985  03DC  1103               	clrz
  2986  03DD  1803               	skipnc
  2987  03DE  3E01               	addlw	1
  2988  03DF  1D03               	btfss	3,2
  2989  03E0  07B6               	addwf	___flmul@grs+2,f
  2990  03E1  0831               	movf	??___flmul+3,w
  2991  03E2  1103               	clrz
  2992  03E3  1803               	skipnc
  2993  03E4  3E01               	addlw	1
  2994  03E5  1D03               	btfss	3,2
  2995  03E6  07B7               	addwf	___flmul@grs+3,f
  2996  03E7  083F               	movf	___flmul@temp+1,w
  2997  03E8  00AE               	movwf	??___flmul
  2998  03E9  01AF               	clrf	??___flmul+1
  2999  03EA  01B0               	clrf	??___flmul+2
  3000  03EB  01B1               	clrf	??___flmul+3
  3001  03EC  082E               	movf	??___flmul,w
  3002  03ED  07BA               	addwf	___flmul@prod,f
  3003  03EE  082F               	movf	??___flmul+1,w
  3004  03EF  1103               	clrz
  3005  03F0  1803               	skipnc
  3006  03F1  3E01               	addlw	1
  3007  03F2  1D03               	btfss	3,2
  3008  03F3  07BB               	addwf	___flmul@prod+1,f
  3009  03F4  0830               	movf	??___flmul+2,w
  3010  03F5  1103               	clrz
  3011  03F6  1803               	skipnc
  3012  03F7  3E01               	addlw	1
  3013  03F8  1D03               	btfss	3,2
  3014  03F9  07BC               	addwf	___flmul@prod+2,f
  3015  03FA  0831               	movf	??___flmul+3,w
  3016  03FB  1103               	clrz
  3017  03FC  1803               	skipnc
  3018  03FD  3E01               	addlw	1
  3019  03FE  1D03               	btfss	3,2
  3020  03FF  07BD               	addwf	___flmul@prod+3,f
  3021  0400  0828               	movf	___flmul@b+2,w
  3022  0401  00AE               	movwf	??___flmul
  3023  0402  082E               	movf	??___flmul,w
  3024  0403  00F2               	movwf	__Umul8_16@multiplicand
  3025  0404  082A               	movf	___flmul@a,w
  3026  0405  120A  158A  202D  120A  118A  	fcall	__Umul8_16
  3027  040A  0873               	movf	?__Umul8_16+1,w
  3028  040B  1283               	bcf	3,5	;RP0=0, select bank0
  3029  040C  1303               	bcf	3,6	;RP1=0, select bank0
  3030  040D  00BF               	movwf	___flmul@temp+1
  3031  040E  0872               	movf	?__Umul8_16,w
  3032  040F  00BE               	movwf	___flmul@temp
  3033  0410  083E               	movf	___flmul@temp,w
  3034  0411  00AE               	movwf	??___flmul
  3035  0412  01AF               	clrf	??___flmul+1
  3036  0413  01B0               	clrf	??___flmul+2
  3037  0414  01B1               	clrf	??___flmul+3
  3038  0415  082E               	movf	??___flmul,w
  3039  0416  07B4               	addwf	___flmul@grs,f
  3040  0417  082F               	movf	??___flmul+1,w
  3041  0418  1103               	clrz
  3042  0419  1803               	skipnc
  3043  041A  3E01               	addlw	1
  3044  041B  1D03               	btfss	3,2
  3045  041C  07B5               	addwf	___flmul@grs+1,f
  3046  041D  0830               	movf	??___flmul+2,w
  3047  041E  1103               	clrz
  3048  041F  1803               	skipnc
  3049  0420  3E01               	addlw	1
  3050  0421  1D03               	btfss	3,2
  3051  0422  07B6               	addwf	___flmul@grs+2,f
  3052  0423  0831               	movf	??___flmul+3,w
  3053  0424  1103               	clrz
  3054  0425  1803               	skipnc
  3055  0426  3E01               	addlw	1
  3056  0427  1D03               	btfss	3,2
  3057  0428  07B7               	addwf	___flmul@grs+3,f
  3058  0429  083F               	movf	___flmul@temp+1,w
  3059  042A  00AE               	movwf	??___flmul
  3060  042B  01AF               	clrf	??___flmul+1
  3061  042C  01B0               	clrf	??___flmul+2
  3062  042D  01B1               	clrf	??___flmul+3
  3063  042E  082E               	movf	??___flmul,w
  3064  042F  07BA               	addwf	___flmul@prod,f
  3065  0430  082F               	movf	??___flmul+1,w
  3066  0431  1103               	clrz
  3067  0432  1803               	skipnc
  3068  0433  3E01               	addlw	1
  3069  0434  1D03               	btfss	3,2
  3070  0435  07BB               	addwf	___flmul@prod+1,f
  3071  0436  0830               	movf	??___flmul+2,w
  3072  0437  1103               	clrz
  3073  0438  1803               	skipnc
  3074  0439  3E01               	addlw	1
  3075  043A  1D03               	btfss	3,2
  3076  043B  07BC               	addwf	___flmul@prod+2,f
  3077  043C  0831               	movf	??___flmul+3,w
  3078  043D  1103               	clrz
  3079  043E  1803               	skipnc
  3080  043F  3E01               	addlw	1
  3081  0440  1D03               	btfss	3,2
  3082  0441  07BD               	addwf	___flmul@prod+3,f
  3083  0442  3008               	movlw	8
  3084  0443  00AE               	movwf	??___flmul
  3085  0444                     u3495:	
  3086  0444  1003               	clrc
  3087  0445  0DB4               	rlf	___flmul@grs,f
  3088  0446  0DB5               	rlf	___flmul@grs+1,f
  3089  0447  0DB6               	rlf	___flmul@grs+2,f
  3090  0448  0DB7               	rlf	___flmul@grs+3,f
  3091  0449  0BAE               	decfsz	??___flmul,f
  3092  044A  2C44               	goto	u3495
  3093  044B  0827               	movf	___flmul@b+1,w
  3094  044C  00AE               	movwf	??___flmul
  3095  044D  082E               	movf	??___flmul,w
  3096  044E  00F2               	movwf	__Umul8_16@multiplicand
  3097  044F  082A               	movf	___flmul@a,w
  3098  0450  120A  158A  202D  120A  118A  	fcall	__Umul8_16
  3099  0455  0873               	movf	?__Umul8_16+1,w
  3100  0456  1283               	bcf	3,5	;RP0=0, select bank0
  3101  0457  1303               	bcf	3,6	;RP1=0, select bank0
  3102  0458  00BF               	movwf	___flmul@temp+1
  3103  0459  0872               	movf	?__Umul8_16,w
  3104  045A  00BE               	movwf	___flmul@temp
  3105  045B  083E               	movf	___flmul@temp,w
  3106  045C  00AE               	movwf	??___flmul
  3107  045D  083F               	movf	___flmul@temp+1,w
  3108  045E  00AF               	movwf	??___flmul+1
  3109  045F  01B0               	clrf	??___flmul+2
  3110  0460  01B1               	clrf	??___flmul+3
  3111  0461  082E               	movf	??___flmul,w
  3112  0462  07B4               	addwf	___flmul@grs,f
  3113  0463  082F               	movf	??___flmul+1,w
  3114  0464  1103               	clrz
  3115  0465  1803               	skipnc
  3116  0466  3E01               	addlw	1
  3117  0467  1D03               	btfss	3,2
  3118  0468  07B5               	addwf	___flmul@grs+1,f
  3119  0469  0830               	movf	??___flmul+2,w
  3120  046A  1103               	clrz
  3121  046B  1803               	skipnc
  3122  046C  3E01               	addlw	1
  3123  046D  1D03               	btfss	3,2
  3124  046E  07B6               	addwf	___flmul@grs+2,f
  3125  046F  0831               	movf	??___flmul+3,w
  3126  0470  1103               	clrz
  3127  0471  1803               	skipnc
  3128  0472  3E01               	addlw	1
  3129  0473  1D03               	btfss	3,2
  3130  0474  07B7               	addwf	___flmul@grs+3,f
  3131  0475  0826               	movf	___flmul@b,w
  3132  0476  00AE               	movwf	??___flmul
  3133  0477  082E               	movf	??___flmul,w
  3134  0478  00F2               	movwf	__Umul8_16@multiplicand
  3135  0479  082B               	movf	___flmul@a+1,w
  3136  047A  120A  158A  202D  120A  118A  	fcall	__Umul8_16
  3137  047F  0873               	movf	?__Umul8_16+1,w
  3138  0480  1283               	bcf	3,5	;RP0=0, select bank0
  3139  0481  1303               	bcf	3,6	;RP1=0, select bank0
  3140  0482  00BF               	movwf	___flmul@temp+1
  3141  0483  0872               	movf	?__Umul8_16,w
  3142  0484  00BE               	movwf	___flmul@temp
  3143  0485  083E               	movf	___flmul@temp,w
  3144  0486  00AE               	movwf	??___flmul
  3145  0487  083F               	movf	___flmul@temp+1,w
  3146  0488  00AF               	movwf	??___flmul+1
  3147  0489  01B0               	clrf	??___flmul+2
  3148  048A  01B1               	clrf	??___flmul+3
  3149  048B  082E               	movf	??___flmul,w
  3150  048C  07B4               	addwf	___flmul@grs,f
  3151  048D  082F               	movf	??___flmul+1,w
  3152  048E  1103               	clrz
  3153  048F  1803               	skipnc
  3154  0490  3E01               	addlw	1
  3155  0491  1D03               	btfss	3,2
  3156  0492  07B5               	addwf	___flmul@grs+1,f
  3157  0493  0830               	movf	??___flmul+2,w
  3158  0494  1103               	clrz
  3159  0495  1803               	skipnc
  3160  0496  3E01               	addlw	1
  3161  0497  1D03               	btfss	3,2
  3162  0498  07B6               	addwf	___flmul@grs+2,f
  3163  0499  0831               	movf	??___flmul+3,w
  3164  049A  1103               	clrz
  3165  049B  1803               	skipnc
  3166  049C  3E01               	addlw	1
  3167  049D  1D03               	btfss	3,2
  3168  049E  07B7               	addwf	___flmul@grs+3,f
  3169  049F  3008               	movlw	8
  3170  04A0  00AE               	movwf	??___flmul
  3171  04A1                     u3525:	
  3172  04A1  1003               	clrc
  3173  04A2  0DB4               	rlf	___flmul@grs,f
  3174  04A3  0DB5               	rlf	___flmul@grs+1,f
  3175  04A4  0DB6               	rlf	___flmul@grs+2,f
  3176  04A5  0DB7               	rlf	___flmul@grs+3,f
  3177  04A6  0BAE               	decfsz	??___flmul,f
  3178  04A7  2CA1               	goto	u3525
  3179  04A8  0826               	movf	___flmul@b,w
  3180  04A9  00AE               	movwf	??___flmul
  3181  04AA  082E               	movf	??___flmul,w
  3182  04AB  00F2               	movwf	__Umul8_16@multiplicand
  3183  04AC  082A               	movf	___flmul@a,w
  3184  04AD  120A  158A  202D  120A  118A  	fcall	__Umul8_16
  3185  04B2  0873               	movf	?__Umul8_16+1,w
  3186  04B3  1283               	bcf	3,5	;RP0=0, select bank0
  3187  04B4  1303               	bcf	3,6	;RP1=0, select bank0
  3188  04B5  00BF               	movwf	___flmul@temp+1
  3189  04B6  0872               	movf	?__Umul8_16,w
  3190  04B7  00BE               	movwf	___flmul@temp
  3191  04B8  083E               	movf	___flmul@temp,w
  3192  04B9  00AE               	movwf	??___flmul
  3193  04BA  083F               	movf	___flmul@temp+1,w
  3194  04BB  00AF               	movwf	??___flmul+1
  3195  04BC  01B0               	clrf	??___flmul+2
  3196  04BD  01B1               	clrf	??___flmul+3
  3197  04BE  082E               	movf	??___flmul,w
  3198  04BF  07B4               	addwf	___flmul@grs,f
  3199  04C0  082F               	movf	??___flmul+1,w
  3200  04C1  1103               	clrz
  3201  04C2  1803               	skipnc
  3202  04C3  3E01               	addlw	1
  3203  04C4  1D03               	btfss	3,2
  3204  04C5  07B5               	addwf	___flmul@grs+1,f
  3205  04C6  0830               	movf	??___flmul+2,w
  3206  04C7  1103               	clrz
  3207  04C8  1803               	skipnc
  3208  04C9  3E01               	addlw	1
  3209  04CA  1D03               	btfss	3,2
  3210  04CB  07B6               	addwf	___flmul@grs+2,f
  3211  04CC  0831               	movf	??___flmul+3,w
  3212  04CD  1103               	clrz
  3213  04CE  1803               	skipnc
  3214  04CF  3E01               	addlw	1
  3215  04D0  1D03               	btfss	3,2
  3216  04D1  07B7               	addwf	___flmul@grs+3,f
  3217  04D2  0827               	movf	___flmul@b+1,w
  3218  04D3  00AE               	movwf	??___flmul
  3219  04D4  082E               	movf	??___flmul,w
  3220  04D5  00F2               	movwf	__Umul8_16@multiplicand
  3221  04D6  082C               	movf	___flmul@a+2,w
  3222  04D7  120A  158A  202D  120A  118A  	fcall	__Umul8_16
  3223  04DC  0873               	movf	?__Umul8_16+1,w
  3224  04DD  1283               	bcf	3,5	;RP0=0, select bank0
  3225  04DE  1303               	bcf	3,6	;RP1=0, select bank0
  3226  04DF  00BF               	movwf	___flmul@temp+1
  3227  04E0  0872               	movf	?__Umul8_16,w
  3228  04E1  00BE               	movwf	___flmul@temp
  3229  04E2  083E               	movf	___flmul@temp,w
  3230  04E3  00AE               	movwf	??___flmul
  3231  04E4  083F               	movf	___flmul@temp+1,w
  3232  04E5  00AF               	movwf	??___flmul+1
  3233  04E6  01B0               	clrf	??___flmul+2
  3234  04E7  01B1               	clrf	??___flmul+3
  3235  04E8  082E               	movf	??___flmul,w
  3236  04E9  07BA               	addwf	___flmul@prod,f
  3237  04EA  082F               	movf	??___flmul+1,w
  3238  04EB  1103               	clrz
  3239  04EC  1803               	skipnc
  3240  04ED  3E01               	addlw	1
  3241  04EE  1D03               	btfss	3,2
  3242  04EF  07BB               	addwf	___flmul@prod+1,f
  3243  04F0  0830               	movf	??___flmul+2,w
  3244  04F1  1103               	clrz
  3245  04F2  1803               	skipnc
  3246  04F3  3E01               	addlw	1
  3247  04F4  1D03               	btfss	3,2
  3248  04F5  07BC               	addwf	___flmul@prod+2,f
  3249  04F6  0831               	movf	??___flmul+3,w
  3250  04F7  1103               	clrz
  3251  04F8  1803               	skipnc
  3252  04F9  3E01               	addlw	1
  3253  04FA  1D03               	btfss	3,2
  3254  04FB  07BD               	addwf	___flmul@prod+3,f
  3255  04FC  0828               	movf	___flmul@b+2,w
  3256  04FD  00AE               	movwf	??___flmul
  3257  04FE  082E               	movf	??___flmul,w
  3258  04FF  00F2               	movwf	__Umul8_16@multiplicand
  3259  0500  082B               	movf	___flmul@a+1,w
  3260  0501  120A  158A  202D  120A  118A  	fcall	__Umul8_16
  3261  0506  0873               	movf	?__Umul8_16+1,w
  3262  0507  1283               	bcf	3,5	;RP0=0, select bank0
  3263  0508  1303               	bcf	3,6	;RP1=0, select bank0
  3264  0509  00BF               	movwf	___flmul@temp+1
  3265  050A  0872               	movf	?__Umul8_16,w
  3266  050B  00BE               	movwf	___flmul@temp
  3267  050C  083E               	movf	___flmul@temp,w
  3268  050D  00AE               	movwf	??___flmul
  3269  050E  083F               	movf	___flmul@temp+1,w
  3270  050F  00AF               	movwf	??___flmul+1
  3271  0510  01B0               	clrf	??___flmul+2
  3272  0511  01B1               	clrf	??___flmul+3
  3273  0512  082E               	movf	??___flmul,w
  3274  0513  07BA               	addwf	___flmul@prod,f
  3275  0514  082F               	movf	??___flmul+1,w
  3276  0515  1103               	clrz
  3277  0516  1803               	skipnc
  3278  0517  3E01               	addlw	1
  3279  0518  1D03               	btfss	3,2
  3280  0519  07BB               	addwf	___flmul@prod+1,f
  3281  051A  0830               	movf	??___flmul+2,w
  3282  051B  1103               	clrz
  3283  051C  1803               	skipnc
  3284  051D  3E01               	addlw	1
  3285  051E  1D03               	btfss	3,2
  3286  051F  07BC               	addwf	___flmul@prod+2,f
  3287  0520  0831               	movf	??___flmul+3,w
  3288  0521  1103               	clrz
  3289  0522  1803               	skipnc
  3290  0523  3E01               	addlw	1
  3291  0524  1D03               	btfss	3,2
  3292  0525  07BD               	addwf	___flmul@prod+3,f
  3293  0526  0828               	movf	___flmul@b+2,w
  3294  0527  00AE               	movwf	??___flmul
  3295  0528  082E               	movf	??___flmul,w
  3296  0529  00F2               	movwf	__Umul8_16@multiplicand
  3297  052A  082C               	movf	___flmul@a+2,w
  3298  052B  120A  158A  202D  120A  118A  	fcall	__Umul8_16
  3299  0530  0873               	movf	?__Umul8_16+1,w
  3300  0531  1283               	bcf	3,5	;RP0=0, select bank0
  3301  0532  1303               	bcf	3,6	;RP1=0, select bank0
  3302  0533  00BF               	movwf	___flmul@temp+1
  3303  0534  0872               	movf	?__Umul8_16,w
  3304  0535  00BE               	movwf	___flmul@temp
  3305  0536  083E               	movf	___flmul@temp,w
  3306  0537  00AE               	movwf	??___flmul
  3307  0538  083F               	movf	___flmul@temp+1,w
  3308  0539  00AF               	movwf	??___flmul+1
  3309  053A  01B0               	clrf	??___flmul+2
  3310  053B  01B1               	clrf	??___flmul+3
  3311  053C  3008               	movlw	8
  3312  053D                     u3565:	
  3313  053D  1003               	clrc
  3314  053E  0DAE               	rlf	??___flmul,f
  3315  053F  0DAF               	rlf	??___flmul+1,f
  3316  0540  0DB0               	rlf	??___flmul+2,f
  3317  0541  0DB1               	rlf	??___flmul+3,f
  3318  0542  3EFF               	addlw	-1
  3319  0543  1D03               	skipz
  3320  0544  2D3D               	goto	u3565
  3321  0545  082E               	movf	??___flmul,w
  3322  0546  07BA               	addwf	___flmul@prod,f
  3323  0547  082F               	movf	??___flmul+1,w
  3324  0548  1103               	clrz
  3325  0549  1803               	skipnc
  3326  054A  3E01               	addlw	1
  3327  054B  1D03               	btfss	3,2
  3328  054C  07BB               	addwf	___flmul@prod+1,f
  3329  054D  0830               	movf	??___flmul+2,w
  3330  054E  1103               	clrz
  3331  054F  1803               	skipnc
  3332  0550  3E01               	addlw	1
  3333  0551  1D03               	btfss	3,2
  3334  0552  07BC               	addwf	___flmul@prod+2,f
  3335  0553  0831               	movf	??___flmul+3,w
  3336  0554  1103               	clrz
  3337  0555  1803               	skipnc
  3338  0556  3E01               	addlw	1
  3339  0557  1D03               	btfss	3,2
  3340  0558  07BD               	addwf	___flmul@prod+3,f
  3341  0559  0834               	movf	___flmul@grs,w
  3342  055A  00AE               	movwf	??___flmul
  3343  055B  0835               	movf	___flmul@grs+1,w
  3344  055C  00AF               	movwf	??___flmul+1
  3345  055D  0836               	movf	___flmul@grs+2,w
  3346  055E  00B0               	movwf	??___flmul+2
  3347  055F  0837               	movf	___flmul@grs+3,w
  3348  0560  00B1               	movwf	??___flmul+3
  3349  0561  3018               	movlw	24
  3350  0562                     u3585:	
  3351  0562  1003               	clrc
  3352  0563  0CB1               	rrf	??___flmul+3,f
  3353  0564  0CB0               	rrf	??___flmul+2,f
  3354  0565  0CAF               	rrf	??___flmul+1,f
  3355  0566  0CAE               	rrf	??___flmul,f
  3356  0567  3EFF               	addlw	-1
  3357  0568  1D03               	skipz
  3358  0569  2D62               	goto	u3585
  3359  056A  082E               	movf	??___flmul,w
  3360  056B  07BA               	addwf	___flmul@prod,f
  3361  056C  082F               	movf	??___flmul+1,w
  3362  056D  1103               	clrz
  3363  056E  1803               	skipnc
  3364  056F  3E01               	addlw	1
  3365  0570  1D03               	btfss	3,2
  3366  0571  07BB               	addwf	___flmul@prod+1,f
  3367  0572  0830               	movf	??___flmul+2,w
  3368  0573  1103               	clrz
  3369  0574  1803               	skipnc
  3370  0575  3E01               	addlw	1
  3371  0576  1D03               	btfss	3,2
  3372  0577  07BC               	addwf	___flmul@prod+2,f
  3373  0578  0831               	movf	??___flmul+3,w
  3374  0579  1103               	clrz
  3375  057A  1803               	skipnc
  3376  057B  3E01               	addlw	1
  3377  057C  1D03               	btfss	3,2
  3378  057D  07BD               	addwf	___flmul@prod+3,f
  3379  057E  3008               	movlw	8
  3380  057F  00AE               	movwf	??___flmul
  3381  0580                     u3605:	
  3382  0580  1003               	clrc
  3383  0581  0DB4               	rlf	___flmul@grs,f
  3384  0582  0DB5               	rlf	___flmul@grs+1,f
  3385  0583  0DB6               	rlf	___flmul@grs+2,f
  3386  0584  0DB7               	rlf	___flmul@grs+3,f
  3387  0585  0BAE               	decfsz	??___flmul,f
  3388  0586  2D80               	goto	u3605
  3389  0587  0839               	movf	___flmul@bexp,w
  3390  0588  0738               	addwf	___flmul@aexp,w
  3391  0589  00AE               	movwf	??___flmul
  3392  058A  01AF               	clrf	??___flmul+1
  3393  058B  0DAF               	rlf	??___flmul+1,f
  3394  058C  082E               	movf	??___flmul,w
  3395  058D  3E82               	addlw	130
  3396  058E  00BE               	movwf	___flmul@temp
  3397  058F  082F               	movf	??___flmul+1,w
  3398  0590  1803               	skipnc
  3399  0591  3E01               	addlw	1
  3400  0592  3EFF               	addlw	255
  3401  0593  00BF               	movwf	___flmul@temp+1
  3402  0594                     l2577:	
  3403  0594  1BBC               	btfsc	___flmul@prod+2,7
  3404  0595  2DB1               	goto	l2579
  3405  0596  3001               	movlw	1
  3406  0597  00AE               	movwf	??___flmul
  3407  0598                     u3615:	
  3408  0598  1003               	clrc
  3409  0599  0DBA               	rlf	___flmul@prod,f
  3410  059A  0DBB               	rlf	___flmul@prod+1,f
  3411  059B  0DBC               	rlf	___flmul@prod+2,f
  3412  059C  0DBD               	rlf	___flmul@prod+3,f
  3413  059D  0BAE               	decfsz	??___flmul,f
  3414  059E  2D98               	goto	u3615
  3415  059F  1BB7               	btfsc	___flmul@grs+3,7
  3416  05A0  143A               	bsf	___flmul@prod,0
  3417  05A1  3001               	movlw	1
  3418  05A2  00AE               	movwf	??___flmul
  3419  05A3                     u3635:	
  3420  05A3  1003               	clrc
  3421  05A4  0DB4               	rlf	___flmul@grs,f
  3422  05A5  0DB5               	rlf	___flmul@grs+1,f
  3423  05A6  0DB6               	rlf	___flmul@grs+2,f
  3424  05A7  0DB7               	rlf	___flmul@grs+3,f
  3425  05A8  0BAE               	decfsz	??___flmul,f
  3426  05A9  2DA3               	goto	u3635
  3427  05AA  30FF               	movlw	255
  3428  05AB  07BE               	addwf	___flmul@temp,f
  3429  05AC  1803               	skipnc
  3430  05AD  0ABF               	incf	___flmul@temp+1,f
  3431  05AE  30FF               	movlw	255
  3432  05AF  07BF               	addwf	___flmul@temp+1,f
  3433  05B0  2D94               	goto	l2577
  3434  05B1                     l2579:	
  3435  05B1  01B8               	clrf	___flmul@aexp
  3436  05B2  1FB7               	btfss	___flmul@grs+3,7
  3437  05B3  2DCA               	goto	l2589
  3438  05B4  30FF               	movlw	255
  3439  05B5  0534               	andwf	___flmul@grs,w
  3440  05B6  00AE               	movwf	??___flmul
  3441  05B7  30FF               	movlw	255
  3442  05B8  0535               	andwf	___flmul@grs+1,w
  3443  05B9  00AF               	movwf	??___flmul+1
  3444  05BA  30FF               	movlw	255
  3445  05BB  0536               	andwf	___flmul@grs+2,w
  3446  05BC  00B0               	movwf	??___flmul+2
  3447  05BD  307F               	movlw	127
  3448  05BE  0537               	andwf	___flmul@grs+3,w
  3449  05BF  00B1               	movwf	??___flmul+3
  3450  05C0  0831               	movf	??___flmul+3,w
  3451  05C1  0430               	iorwf	??___flmul+2,w
  3452  05C2  042F               	iorwf	??___flmul+1,w
  3453  05C3  042E               	iorwf	??___flmul,w
  3454  05C4  1903               	skipnz
  3455  05C5  183A               	btfsc	___flmul@prod,0
  3456  05C6  2DC8               	goto	l2585
  3457  05C7  2DCA               	goto	l2589
  3458  05C8                     l2585:	
  3459  05C8  01B8               	clrf	___flmul@aexp
  3460  05C9  0AB8               	incf	___flmul@aexp,f
  3461  05CA                     l2589:	
  3462  05CA  0838               	movf	___flmul@aexp,w
  3463  05CB  1903               	btfsc	3,2
  3464  05CC  2DFC               	goto	l2599
  3465  05CD  3001               	movlw	1
  3466  05CE  07BA               	addwf	___flmul@prod,f
  3467  05CF  3000               	movlw	0
  3468  05D0  1803               	skipnc
  3469  05D1  3001               	movlw	1
  3470  05D2  07BB               	addwf	___flmul@prod+1,f
  3471  05D3  3000               	movlw	0
  3472  05D4  1803               	skipnc
  3473  05D5  3001               	movlw	1
  3474  05D6  07BC               	addwf	___flmul@prod+2,f
  3475  05D7  3000               	movlw	0
  3476  05D8  1803               	skipnc
  3477  05D9  3001               	movlw	1
  3478  05DA  07BD               	addwf	___flmul@prod+3,f
  3479  05DB  1C3D               	btfss	___flmul@prod+3,0
  3480  05DC  2DFC               	goto	l2599
  3481  05DD  083A               	movf	___flmul@prod,w
  3482  05DE  00AE               	movwf	??___flmul
  3483  05DF  083B               	movf	___flmul@prod+1,w
  3484  05E0  00AF               	movwf	??___flmul+1
  3485  05E1  083C               	movf	___flmul@prod+2,w
  3486  05E2  00B0               	movwf	??___flmul+2
  3487  05E3  083D               	movf	___flmul@prod+3,w
  3488  05E4  00B1               	movwf	??___flmul+3
  3489  05E5  3001               	movlw	1
  3490  05E6  00B2               	movwf	??___flmul+4
  3491  05E7                     u3705:	
  3492  05E7  0D31               	rlf	??___flmul+3,w
  3493  05E8  0CB1               	rrf	??___flmul+3,f
  3494  05E9  0CB0               	rrf	??___flmul+2,f
  3495  05EA  0CAF               	rrf	??___flmul+1,f
  3496  05EB  0CAE               	rrf	??___flmul,f
  3497  05EC  0BB2               	decfsz	??___flmul+4,f
  3498  05ED  2DE7               	goto	u3705
  3499  05EE  0831               	movf	??___flmul+3,w
  3500  05EF  00BD               	movwf	___flmul@prod+3
  3501  05F0  0830               	movf	??___flmul+2,w
  3502  05F1  00BC               	movwf	___flmul@prod+2
  3503  05F2  082F               	movf	??___flmul+1,w
  3504  05F3  00BB               	movwf	___flmul@prod+1
  3505  05F4  082E               	movf	??___flmul,w
  3506  05F5  00BA               	movwf	___flmul@prod
  3507  05F6  3001               	movlw	1
  3508  05F7  07BE               	addwf	___flmul@temp,f
  3509  05F8  1803               	skipnc
  3510  05F9  0ABF               	incf	___flmul@temp+1,f
  3511  05FA  3000               	movlw	0
  3512  05FB  07BF               	addwf	___flmul@temp+1,f
  3513  05FC                     l2599:	
  3514  05FC  083F               	movf	___flmul@temp+1,w
  3515  05FD  3A80               	xorlw	128
  3516  05FE  00FF               	movwf	127
  3517  05FF  3080               	movlw	128
  3518  0600  027F               	subwf	127,w
  3519  0601  1D03               	skipz
  3520  0602  2E05               	goto	u3715
  3521  0603  30FF               	movlw	255
  3522  0604  023E               	subwf	___flmul@temp,w
  3523  0605                     u3715:	
  3524  0605  1C03               	skipc
  3525  0606  2E12               	goto	l2603
  3526  0607  307F               	movlw	127
  3527  0608  1283               	bcf	3,5	;RP0=0, select bank0
  3528  0609  1303               	bcf	3,6	;RP1=0, select bank0
  3529  060A  00BD               	movwf	___flmul@prod+3
  3530  060B  3080               	movlw	128
  3531  060C  00BC               	movwf	___flmul@prod+2
  3532  060D  3000               	movlw	0
  3533  060E  00BB               	movwf	___flmul@prod+1
  3534  060F  3000               	movlw	0
  3535  0610  00BA               	movwf	___flmul@prod
  3536  0611  2E42               	goto	l726
  3537  0612                     l2603:	
  3538  0612  1283               	bcf	3,5	;RP0=0, select bank0
  3539  0613  1303               	bcf	3,6	;RP1=0, select bank0
  3540  0614  083F               	movf	___flmul@temp+1,w
  3541  0615  3A80               	xorlw	128
  3542  0616  00FF               	movwf	127
  3543  0617  3080               	movlw	128
  3544  0618  027F               	subwf	127,w
  3545  0619  1D03               	skipz
  3546  061A  2E1D               	goto	u3725
  3547  061B  3001               	movlw	1
  3548  061C  023E               	subwf	___flmul@temp,w
  3549  061D                     u3725:	
  3550  061D  1803               	skipnc
  3551  061E  2E2B               	goto	l2609
  3552  061F  3000               	movlw	0
  3553  0620  1283               	bcf	3,5	;RP0=0, select bank0
  3554  0621  1303               	bcf	3,6	;RP1=0, select bank0
  3555  0622  00BD               	movwf	___flmul@prod+3
  3556  0623  3000               	movlw	0
  3557  0624  00BC               	movwf	___flmul@prod+2
  3558  0625  3000               	movlw	0
  3559  0626  00BB               	movwf	___flmul@prod+1
  3560  0627  3000               	movlw	0
  3561  0628  00BA               	movwf	___flmul@prod
  3562  0629  01B3               	clrf	___flmul@sign
  3563  062A  2E42               	goto	l726
  3564  062B                     l2609:	
  3565  062B  1283               	bcf	3,5	;RP0=0, select bank0
  3566  062C  1303               	bcf	3,6	;RP1=0, select bank0
  3567  062D  083E               	movf	___flmul@temp,w
  3568  062E  00AE               	movwf	??___flmul
  3569  062F  082E               	movf	??___flmul,w
  3570  0630  00B9               	movwf	___flmul@bexp
  3571  0631  30FF               	movlw	255
  3572  0632  05BA               	andwf	___flmul@prod,f
  3573  0633  30FF               	movlw	255
  3574  0634  05BB               	andwf	___flmul@prod+1,f
  3575  0635  307F               	movlw	127
  3576  0636  05BC               	andwf	___flmul@prod+2,f
  3577  0637  3000               	movlw	0
  3578  0638  05BD               	andwf	___flmul@prod+3,f
  3579  0639  1839               	btfsc	___flmul@bexp,0
  3580  063A  17BC               	bsf	___flmul@prod+2,7
  3581  063B  0839               	movf	___flmul@bexp,w
  3582  063C  00AE               	movwf	??___flmul
  3583  063D  1003               	clrc
  3584  063E  0C2E               	rrf	??___flmul,w
  3585  063F  00AF               	movwf	??___flmul+1
  3586  0640  082F               	movf	??___flmul+1,w
  3587  0641  00BD               	movwf	___flmul@prod+3
  3588  0642                     l726:	
  3589  0642  0833               	movf	___flmul@sign,w
  3590  0643  00AE               	movwf	??___flmul
  3591  0644  082E               	movf	??___flmul,w
  3592  0645  04BD               	iorwf	___flmul@prod+3,f
  3593  0646  083D               	movf	___flmul@prod+3,w
  3594  0647  00A9               	movwf	?___flmul+3
  3595  0648  083C               	movf	___flmul@prod+2,w
  3596  0649  00A8               	movwf	?___flmul+2
  3597  064A  083B               	movf	___flmul@prod+1,w
  3598  064B  00A7               	movwf	?___flmul+1
  3599  064C  083A               	movf	___flmul@prod,w
  3600  064D  00A6               	movwf	?___flmul
  3601  064E  0008               	return
  3602  064F                     __end_of___flmul:	
  3603                           
  3604                           	psect	text8
  3605  082D                     __ptext8:	
  3606 ;; *************** function __Umul8_16 *****************
  3607 ;; Defined at:
  3608 ;;		line 4 in file "D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\Umul8_16.c"
  3609 ;; Parameters:    Size  Location     Type
  3610 ;;  multiplier      1    wreg     unsigned char 
  3611 ;;  multiplicand    1    2[COMMON] unsigned char 
  3612 ;; Auto vars:     Size  Location     Type
  3613 ;;  multiplier      1   10[COMMON] unsigned char 
  3614 ;;  word_mpld       2    8[COMMON] unsigned int 
  3615 ;;  product         2    6[COMMON] unsigned int 
  3616 ;; Return value:  Size  Location     Type
  3617 ;;                  2    2[COMMON] unsigned int 
  3618 ;; Registers used:
  3619 ;;		wreg, status,2, status,0
  3620 ;; Tracked objects:
  3621 ;;		On entry : 0/0
  3622 ;;		On exit  : 0/0
  3623 ;;		Unchanged: 0/0
  3624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3625 ;;      Params:         2       0       0       0       0
  3626 ;;      Locals:         5       0       0       0       0
  3627 ;;      Temps:          2       0       0       0       0
  3628 ;;      Totals:         9       0       0       0       0
  3629 ;;Total ram usage:        9 bytes
  3630 ;; Hardware stack levels used:    1
  3631 ;; Hardware stack levels required when called:    1
  3632 ;; This function calls:
  3633 ;;		Nothing
  3634 ;; This function is called by:
  3635 ;;		___flmul
  3636 ;; This function uses a non-reentrant model
  3637 ;;
  3638                           
  3639                           
  3640                           ;psect for function __Umul8_16
  3641  082D                     __Umul8_16:	
  3642                           
  3643                           ;incstack = 0
  3644                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  3645                           ;__Umul8_16@multiplier stored from wreg
  3646  082D  00FA               	movwf	__Umul8_16@multiplier
  3647  082E  01F6               	clrf	__Umul8_16@product
  3648  082F  01F7               	clrf	__Umul8_16@product+1
  3649  0830  0872               	movf	__Umul8_16@multiplicand,w
  3650  0831  00F4               	movwf	??__Umul8_16
  3651  0832  01F5               	clrf	??__Umul8_16+1
  3652  0833  0874               	movf	??__Umul8_16,w
  3653  0834  00F8               	movwf	__Umul8_16@word_mpld
  3654  0835  0875               	movf	??__Umul8_16+1,w
  3655  0836  00F9               	movwf	__Umul8_16@word_mpld+1
  3656  0837                     l1975:	
  3657  0837  1C7A               	btfss	__Umul8_16@multiplier,0
  3658  0838  283F               	goto	l771
  3659  0839  0878               	movf	__Umul8_16@word_mpld,w
  3660  083A  07F6               	addwf	__Umul8_16@product,f
  3661  083B  1803               	skipnc
  3662  083C  0AF7               	incf	__Umul8_16@product+1,f
  3663  083D  0879               	movf	__Umul8_16@word_mpld+1,w
  3664  083E  07F7               	addwf	__Umul8_16@product+1,f
  3665  083F                     l771:	
  3666  083F  3001               	movlw	1
  3667  0840                     u2375:	
  3668  0840  1003               	clrc
  3669  0841  0DF8               	rlf	__Umul8_16@word_mpld,f
  3670  0842  0DF9               	rlf	__Umul8_16@word_mpld+1,f
  3671  0843  3EFF               	addlw	-1
  3672  0844  1D03               	skipz
  3673  0845  2840               	goto	u2375
  3674  0846  1003               	clrc
  3675  0847  0CFA               	rrf	__Umul8_16@multiplier,f
  3676  0848  087A               	movf	__Umul8_16@multiplier,w
  3677  0849  1D03               	btfss	3,2
  3678  084A  2837               	goto	l1975
  3679  084B  0877               	movf	__Umul8_16@product+1,w
  3680  084C  00F3               	movwf	?__Umul8_16+1
  3681  084D  0876               	movf	__Umul8_16@product,w
  3682  084E  00F2               	movwf	?__Umul8_16
  3683  084F  0008               	return
  3684  0850                     __end_of__Umul8_16:	
  3685                           
  3686                           	psect	text9
  3687  064F                     __ptext9:	
  3688 ;; *************** function ___fldiv *****************
  3689 ;; Defined at:
  3690 ;;		line 8 in file "D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\sprcdiv.c"
  3691 ;; Parameters:    Size  Location     Type
  3692 ;;  a               4   32[BANK0 ] unsigned int 
  3693 ;;  b               4   36[BANK0 ] unsigned int 
  3694 ;; Auto vars:     Size  Location     Type
  3695 ;;  grs             4   52[BANK0 ] unsigned long 
  3696 ;;  rem             4   45[BANK0 ] unsigned long 
  3697 ;;  new_exp         2   50[BANK0 ] int 
  3698 ;;  aexp            1   57[BANK0 ] unsigned char 
  3699 ;;  bexp            1   56[BANK0 ] unsigned char 
  3700 ;;  sign            1   49[BANK0 ] unsigned char 
  3701 ;; Return value:  Size  Location     Type
  3702 ;;                  4   32[BANK0 ] unsigned char 
  3703 ;; Registers used:
  3704 ;;		wreg, status,2, status,0, btemp+1
  3705 ;; Tracked objects:
  3706 ;;		On entry : 0/0
  3707 ;;		On exit  : 0/0
  3708 ;;		Unchanged: 0/0
  3709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3710 ;;      Params:         0       8       0       0       0
  3711 ;;      Locals:         0      13       0       0       0
  3712 ;;      Temps:          0       5       0       0       0
  3713 ;;      Totals:         0      26       0       0       0
  3714 ;;Total ram usage:       26 bytes
  3715 ;; Hardware stack levels used:    1
  3716 ;; Hardware stack levels required when called:    1
  3717 ;; This function calls:
  3718 ;;		Nothing
  3719 ;; This function is called by:
  3720 ;;		_main
  3721 ;; This function uses a non-reentrant model
  3722 ;;
  3723                           
  3724                           
  3725                           ;psect for function ___fldiv
  3726  064F                     ___fldiv:	
  3727                           
  3728                           ;incstack = 0
  3729                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  3730  064F  1283               	bcf	3,5	;RP0=0, select bank0
  3731  0650  1303               	bcf	3,6	;RP1=0, select bank0
  3732  0651  0847               	movf	___fldiv@b+3,w
  3733  0652  3980               	andlw	128
  3734  0653  00C8               	movwf	??___fldiv
  3735  0654  0848               	movf	??___fldiv,w
  3736  0655  00D1               	movwf	___fldiv@sign
  3737  0656  0847               	movf	___fldiv@b+3,w
  3738  0657  00C8               	movwf	??___fldiv
  3739  0658  0748               	addwf	??___fldiv,w
  3740  0659  00C9               	movwf	??___fldiv+1
  3741  065A  0849               	movf	??___fldiv+1,w
  3742  065B  00D8               	movwf	___fldiv@bexp
  3743  065C  1BC6               	btfsc	___fldiv@b+2,7
  3744  065D  1458               	bsf	___fldiv@bexp,0
  3745  065E  0858               	movf	___fldiv@bexp,w
  3746  065F  1903               	btfsc	3,2
  3747  0660  2E6F               	goto	l2357
  3748  0661  0A58               	incf	___fldiv@bexp,w
  3749  0662  1D03               	btfss	3,2
  3750  0663  2E6C               	goto	l2353
  3751  0664  3000               	movlw	0
  3752  0665  00C7               	movwf	___fldiv@b+3
  3753  0666  3000               	movlw	0
  3754  0667  00C6               	movwf	___fldiv@b+2
  3755  0668  3000               	movlw	0
  3756  0669  00C5               	movwf	___fldiv@b+1
  3757  066A  3000               	movlw	0
  3758  066B  00C4               	movwf	___fldiv@b
  3759  066C                     l2353:	
  3760  066C  17C6               	bsf	___fldiv@b+2,7
  3761  066D  01C7               	clrf	___fldiv@b+3
  3762  066E  2E77               	goto	l2359
  3763  066F                     l2357:	
  3764  066F  3000               	movlw	0
  3765  0670  00C7               	movwf	___fldiv@b+3
  3766  0671  3000               	movlw	0
  3767  0672  00C6               	movwf	___fldiv@b+2
  3768  0673  3000               	movlw	0
  3769  0674  00C5               	movwf	___fldiv@b+1
  3770  0675  3000               	movlw	0
  3771  0676  00C4               	movwf	___fldiv@b
  3772  0677                     l2359:	
  3773  0677  0843               	movf	___fldiv@a+3,w
  3774  0678  3980               	andlw	128
  3775  0679  00C8               	movwf	??___fldiv
  3776  067A  0848               	movf	??___fldiv,w
  3777  067B  06D1               	xorwf	___fldiv@sign,f
  3778  067C  0843               	movf	___fldiv@a+3,w
  3779  067D  00C8               	movwf	??___fldiv
  3780  067E  0748               	addwf	??___fldiv,w
  3781  067F  00C9               	movwf	??___fldiv+1
  3782  0680  0849               	movf	??___fldiv+1,w
  3783  0681  00D9               	movwf	___fldiv@aexp
  3784  0682  1BC2               	btfsc	___fldiv@a+2,7
  3785  0683  1459               	bsf	___fldiv@aexp,0
  3786  0684  0859               	movf	___fldiv@aexp,w
  3787  0685  1903               	btfsc	3,2
  3788  0686  2E95               	goto	l2377
  3789  0687  0A59               	incf	___fldiv@aexp,w
  3790  0688  1D03               	btfss	3,2
  3791  0689  2E92               	goto	l2373
  3792  068A  3000               	movlw	0
  3793  068B  00C3               	movwf	___fldiv@a+3
  3794  068C  3000               	movlw	0
  3795  068D  00C2               	movwf	___fldiv@a+2
  3796  068E  3000               	movlw	0
  3797  068F  00C1               	movwf	___fldiv@a+1
  3798  0690  3000               	movlw	0
  3799  0691  00C0               	movwf	___fldiv@a
  3800  0692                     l2373:	
  3801  0692  17C2               	bsf	___fldiv@a+2,7
  3802  0693  01C3               	clrf	___fldiv@a+3
  3803  0694  2E9D               	goto	l674
  3804  0695                     l2377:	
  3805  0695  3000               	movlw	0
  3806  0696  00C3               	movwf	___fldiv@a+3
  3807  0697  3000               	movlw	0
  3808  0698  00C2               	movwf	___fldiv@a+2
  3809  0699  3000               	movlw	0
  3810  069A  00C1               	movwf	___fldiv@a+1
  3811  069B  3000               	movlw	0
  3812  069C  00C0               	movwf	___fldiv@a
  3813  069D                     l674:	
  3814  069D  0843               	movf	___fldiv@a+3,w
  3815  069E  0442               	iorwf	___fldiv@a+2,w
  3816  069F  0441               	iorwf	___fldiv@a+1,w
  3817  06A0  0440               	iorwf	___fldiv@a,w
  3818  06A1  1D03               	skipz
  3819  06A2  2EBC               	goto	l2387
  3820  06A3  3000               	movlw	0
  3821  06A4  00C7               	movwf	___fldiv@b+3
  3822  06A5  3000               	movlw	0
  3823  06A6  00C6               	movwf	___fldiv@b+2
  3824  06A7  3000               	movlw	0
  3825  06A8  00C5               	movwf	___fldiv@b+1
  3826  06A9  3000               	movlw	0
  3827  06AA  00C4               	movwf	___fldiv@b
  3828  06AB  3080               	movlw	128
  3829  06AC  04C6               	iorwf	___fldiv@b+2,f
  3830  06AD  307F               	movlw	127
  3831  06AE  04C7               	iorwf	___fldiv@b+3,f
  3832  06AF                     L2:	
  3833  06AF  0851               	movf	___fldiv@sign,w
  3834  06B0  00C8               	movwf	??___fldiv
  3835  06B1  0848               	movf	??___fldiv,w
  3836  06B2  04C7               	iorwf	___fldiv@b+3,f
  3837  06B3  0847               	movf	___fldiv@b+3,w
  3838  06B4  00C3               	movwf	?___fldiv+3
  3839  06B5  0846               	movf	___fldiv@b+2,w
  3840  06B6  00C2               	movwf	?___fldiv+2
  3841  06B7  0845               	movf	___fldiv@b+1,w
  3842  06B8  00C1               	movwf	?___fldiv+1
  3843  06B9  0844               	movf	___fldiv@b,w
  3844  06BA  00C0               	movwf	?___fldiv
  3845  06BB  0008               	return
  3846  06BC                     l2387:	
  3847  06BC  0858               	movf	___fldiv@bexp,w
  3848  06BD  1D03               	btfss	3,2
  3849  06BE  2EC8               	goto	l2393
  3850  06BF  3000               	movlw	0
  3851  06C0  00C3               	movwf	?___fldiv+3
  3852  06C1  3000               	movlw	0
  3853  06C2  00C2               	movwf	?___fldiv+2
  3854  06C3  3000               	movlw	0
  3855  06C4  00C1               	movwf	?___fldiv+1
  3856  06C5  3000               	movlw	0
  3857  06C6  00C0               	movwf	?___fldiv
  3858  06C7  0008               	return
  3859  06C8                     l2393:	
  3860  06C8  0858               	movf	___fldiv@bexp,w
  3861  06C9  00C8               	movwf	??___fldiv
  3862  06CA  01C9               	clrf	??___fldiv+1
  3863  06CB  0849               	movf	??___fldiv+1,w
  3864  06CC  00CB               	movwf	??___fldiv+3
  3865  06CD  0859               	movf	___fldiv@aexp,w
  3866  06CE  0248               	subwf	??___fldiv,w
  3867  06CF  00CA               	movwf	??___fldiv+2
  3868  06D0  1C03               	skipc
  3869  06D1  03CB               	decf	??___fldiv+3,f
  3870  06D2  084A               	movf	??___fldiv+2,w
  3871  06D3  3E7F               	addlw	127
  3872  06D4  00D2               	movwf	___fldiv@new_exp
  3873  06D5  084B               	movf	??___fldiv+3,w
  3874  06D6  1803               	skipnc
  3875  06D7  3E01               	addlw	1
  3876  06D8  3E00               	addlw	0
  3877  06D9  00D3               	movwf	___fldiv@new_exp+1
  3878  06DA  0847               	movf	___fldiv@b+3,w
  3879  06DB  00D0               	movwf	___fldiv@rem+3
  3880  06DC  0846               	movf	___fldiv@b+2,w
  3881  06DD  00CF               	movwf	___fldiv@rem+2
  3882  06DE  0845               	movf	___fldiv@b+1,w
  3883  06DF  00CE               	movwf	___fldiv@rem+1
  3884  06E0  0844               	movf	___fldiv@b,w
  3885  06E1  00CD               	movwf	___fldiv@rem
  3886  06E2  3000               	movlw	0
  3887  06E3  00C7               	movwf	___fldiv@b+3
  3888  06E4  3000               	movlw	0
  3889  06E5  00C6               	movwf	___fldiv@b+2
  3890  06E6  3000               	movlw	0
  3891  06E7  00C5               	movwf	___fldiv@b+1
  3892  06E8  3000               	movlw	0
  3893  06E9  00C4               	movwf	___fldiv@b
  3894  06EA  3000               	movlw	0
  3895  06EB  00D7               	movwf	___fldiv@grs+3
  3896  06EC  3000               	movlw	0
  3897  06ED  00D6               	movwf	___fldiv@grs+2
  3898  06EE  3000               	movlw	0
  3899  06EF  00D5               	movwf	___fldiv@grs+1
  3900  06F0  3000               	movlw	0
  3901  06F1  00D4               	movwf	___fldiv@grs
  3902  06F2  01D9               	clrf	___fldiv@aexp
  3903  06F3                     l2421:	
  3904  06F3  301A               	movlw	26
  3905  06F4  0259               	subwf	___fldiv@aexp,w
  3906  06F5  1803               	btfsc	3,0
  3907  06F6  2F3B               	goto	l2423
  3908  06F7  0859               	movf	___fldiv@aexp,w
  3909  06F8  1903               	btfsc	3,2
  3910  06F9  2F17               	goto	l2413
  3911  06FA  3001               	movlw	1
  3912  06FB  00C8               	movwf	??___fldiv
  3913  06FC                     u3175:	
  3914  06FC  1003               	clrc
  3915  06FD  0DCD               	rlf	___fldiv@rem,f
  3916  06FE  0DCE               	rlf	___fldiv@rem+1,f
  3917  06FF  0DCF               	rlf	___fldiv@rem+2,f
  3918  0700  0DD0               	rlf	___fldiv@rem+3,f
  3919  0701  0BC8               	decfsz	??___fldiv,f
  3920  0702  2EFC               	goto	u3175
  3921  0703  3001               	movlw	1
  3922  0704  00C8               	movwf	??___fldiv
  3923  0705                     u3185:	
  3924  0705  1003               	clrc
  3925  0706  0DC4               	rlf	___fldiv@b,f
  3926  0707  0DC5               	rlf	___fldiv@b+1,f
  3927  0708  0DC6               	rlf	___fldiv@b+2,f
  3928  0709  0DC7               	rlf	___fldiv@b+3,f
  3929  070A  0BC8               	decfsz	??___fldiv,f
  3930  070B  2F05               	goto	u3185
  3931  070C  1BD7               	btfsc	___fldiv@grs+3,7
  3932  070D  1444               	bsf	___fldiv@b,0
  3933  070E  3001               	movlw	1
  3934  070F  00C8               	movwf	??___fldiv
  3935  0710                     u3205:	
  3936  0710  1003               	clrc
  3937  0711  0DD4               	rlf	___fldiv@grs,f
  3938  0712  0DD5               	rlf	___fldiv@grs+1,f
  3939  0713  0DD6               	rlf	___fldiv@grs+2,f
  3940  0714  0DD7               	rlf	___fldiv@grs+3,f
  3941  0715  0BC8               	decfsz	??___fldiv,f
  3942  0716  2F10               	goto	u3205
  3943  0717                     l2413:	
  3944  0717  0843               	movf	___fldiv@a+3,w
  3945  0718  0250               	subwf	___fldiv@rem+3,w
  3946  0719  1D03               	skipz
  3947  071A  2F25               	goto	u3215
  3948  071B  0842               	movf	___fldiv@a+2,w
  3949  071C  024F               	subwf	___fldiv@rem+2,w
  3950  071D  1D03               	skipz
  3951  071E  2F25               	goto	u3215
  3952  071F  0841               	movf	___fldiv@a+1,w
  3953  0720  024E               	subwf	___fldiv@rem+1,w
  3954  0721  1D03               	skipz
  3955  0722  2F25               	goto	u3215
  3956  0723  0840               	movf	___fldiv@a,w
  3957  0724  024D               	subwf	___fldiv@rem,w
  3958  0725                     u3215:	
  3959  0725  1C03               	skipc
  3960  0726  2F36               	goto	l2419
  3961  0727  1757               	bsf	___fldiv@grs+3,6
  3962  0728  0840               	movf	___fldiv@a,w
  3963  0729  02CD               	subwf	___fldiv@rem,f
  3964  072A  0841               	movf	___fldiv@a+1,w
  3965  072B  1C03               	skipc
  3966  072C  0F41               	incfsz	___fldiv@a+1,w
  3967  072D  02CE               	subwf	___fldiv@rem+1,f
  3968  072E  0842               	movf	___fldiv@a+2,w
  3969  072F  1C03               	skipc
  3970  0730  0F42               	incfsz	___fldiv@a+2,w
  3971  0731  02CF               	subwf	___fldiv@rem+2,f
  3972  0732  0843               	movf	___fldiv@a+3,w
  3973  0733  1C03               	skipc
  3974  0734  0F43               	incfsz	___fldiv@a+3,w
  3975  0735  02D0               	subwf	___fldiv@rem+3,f
  3976  0736                     l2419:	
  3977  0736  3001               	movlw	1
  3978  0737  00C8               	movwf	??___fldiv
  3979  0738  0848               	movf	??___fldiv,w
  3980  0739  07D9               	addwf	___fldiv@aexp,f
  3981  073A  2EF3               	goto	l2421
  3982  073B                     l2423:	
  3983  073B  0850               	movf	___fldiv@rem+3,w
  3984  073C  044F               	iorwf	___fldiv@rem+2,w
  3985  073D  044E               	iorwf	___fldiv@rem+1,w
  3986  073E  044D               	iorwf	___fldiv@rem,w
  3987  073F  1D03               	btfss	3,2
  3988  0740  1454               	bsf	___fldiv@grs,0
  3989  0741                     l2437:	
  3990  0741  1BC6               	btfsc	___fldiv@b+2,7
  3991  0742  2F5E               	goto	l2439
  3992  0743  3001               	movlw	1
  3993  0744  00C8               	movwf	??___fldiv
  3994  0745                     u3245:	
  3995  0745  1003               	clrc
  3996  0746  0DC4               	rlf	___fldiv@b,f
  3997  0747  0DC5               	rlf	___fldiv@b+1,f
  3998  0748  0DC6               	rlf	___fldiv@b+2,f
  3999  0749  0DC7               	rlf	___fldiv@b+3,f
  4000  074A  0BC8               	decfsz	??___fldiv,f
  4001  074B  2F45               	goto	u3245
  4002  074C  1BD7               	btfsc	___fldiv@grs+3,7
  4003  074D  1444               	bsf	___fldiv@b,0
  4004  074E  3001               	movlw	1
  4005  074F  00C8               	movwf	??___fldiv
  4006  0750                     u3265:	
  4007  0750  1003               	clrc
  4008  0751  0DD4               	rlf	___fldiv@grs,f
  4009  0752  0DD5               	rlf	___fldiv@grs+1,f
  4010  0753  0DD6               	rlf	___fldiv@grs+2,f
  4011  0754  0DD7               	rlf	___fldiv@grs+3,f
  4012  0755  0BC8               	decfsz	??___fldiv,f
  4013  0756  2F50               	goto	u3265
  4014  0757  30FF               	movlw	255
  4015  0758  07D2               	addwf	___fldiv@new_exp,f
  4016  0759  1803               	skipnc
  4017  075A  0AD3               	incf	___fldiv@new_exp+1,f
  4018  075B  30FF               	movlw	255
  4019  075C  07D3               	addwf	___fldiv@new_exp+1,f
  4020  075D  2F41               	goto	l2437
  4021  075E                     l2439:	
  4022  075E  01D9               	clrf	___fldiv@aexp
  4023  075F  1FD7               	btfss	___fldiv@grs+3,7
  4024  0760  2F77               	goto	l2449
  4025  0761  30FF               	movlw	255
  4026  0762  0554               	andwf	___fldiv@grs,w
  4027  0763  00C8               	movwf	??___fldiv
  4028  0764  30FF               	movlw	255
  4029  0765  0555               	andwf	___fldiv@grs+1,w
  4030  0766  00C9               	movwf	??___fldiv+1
  4031  0767  30FF               	movlw	255
  4032  0768  0556               	andwf	___fldiv@grs+2,w
  4033  0769  00CA               	movwf	??___fldiv+2
  4034  076A  307F               	movlw	127
  4035  076B  0557               	andwf	___fldiv@grs+3,w
  4036  076C  00CB               	movwf	??___fldiv+3
  4037  076D  084B               	movf	??___fldiv+3,w
  4038  076E  044A               	iorwf	??___fldiv+2,w
  4039  076F  0449               	iorwf	??___fldiv+1,w
  4040  0770  0448               	iorwf	??___fldiv,w
  4041  0771  1903               	skipnz
  4042  0772  1844               	btfsc	___fldiv@b,0
  4043  0773  2F75               	goto	l2445
  4044  0774  2F77               	goto	l2449
  4045  0775                     l2445:	
  4046  0775  01D9               	clrf	___fldiv@aexp
  4047  0776  0AD9               	incf	___fldiv@aexp,f
  4048  0777                     l2449:	
  4049  0777  0859               	movf	___fldiv@aexp,w
  4050  0778  1903               	btfsc	3,2
  4051  0779  2FA9               	goto	l2459
  4052  077A  3001               	movlw	1
  4053  077B  07C4               	addwf	___fldiv@b,f
  4054  077C  3000               	movlw	0
  4055  077D  1803               	skipnc
  4056  077E  3001               	movlw	1
  4057  077F  07C5               	addwf	___fldiv@b+1,f
  4058  0780  3000               	movlw	0
  4059  0781  1803               	skipnc
  4060  0782  3001               	movlw	1
  4061  0783  07C6               	addwf	___fldiv@b+2,f
  4062  0784  3000               	movlw	0
  4063  0785  1803               	skipnc
  4064  0786  3001               	movlw	1
  4065  0787  07C7               	addwf	___fldiv@b+3,f
  4066  0788  1C47               	btfss	___fldiv@b+3,0
  4067  0789  2FA9               	goto	l2459
  4068  078A  0844               	movf	___fldiv@b,w
  4069  078B  00C8               	movwf	??___fldiv
  4070  078C  0845               	movf	___fldiv@b+1,w
  4071  078D  00C9               	movwf	??___fldiv+1
  4072  078E  0846               	movf	___fldiv@b+2,w
  4073  078F  00CA               	movwf	??___fldiv+2
  4074  0790  0847               	movf	___fldiv@b+3,w
  4075  0791  00CB               	movwf	??___fldiv+3
  4076  0792  3001               	movlw	1
  4077  0793  00CC               	movwf	??___fldiv+4
  4078  0794                     u3335:	
  4079  0794  0D4B               	rlf	??___fldiv+3,w
  4080  0795  0CCB               	rrf	??___fldiv+3,f
  4081  0796  0CCA               	rrf	??___fldiv+2,f
  4082  0797  0CC9               	rrf	??___fldiv+1,f
  4083  0798  0CC8               	rrf	??___fldiv,f
  4084  0799  0BCC               	decfsz	??___fldiv+4,f
  4085  079A  2F94               	goto	u3335
  4086  079B  084B               	movf	??___fldiv+3,w
  4087  079C  00C7               	movwf	___fldiv@b+3
  4088  079D  084A               	movf	??___fldiv+2,w
  4089  079E  00C6               	movwf	___fldiv@b+2
  4090  079F  0849               	movf	??___fldiv+1,w
  4091  07A0  00C5               	movwf	___fldiv@b+1
  4092  07A1  0848               	movf	??___fldiv,w
  4093  07A2  00C4               	movwf	___fldiv@b
  4094  07A3  3001               	movlw	1
  4095  07A4  07D2               	addwf	___fldiv@new_exp,f
  4096  07A5  1803               	skipnc
  4097  07A6  0AD3               	incf	___fldiv@new_exp+1,f
  4098  07A7  3000               	movlw	0
  4099  07A8  07D3               	addwf	___fldiv@new_exp+1,f
  4100  07A9                     l2459:	
  4101  07A9  0853               	movf	___fldiv@new_exp+1,w
  4102  07AA  3A80               	xorlw	128
  4103  07AB  00FF               	movwf	127
  4104  07AC  3080               	movlw	128
  4105  07AD  027F               	subwf	127,w
  4106  07AE  1D03               	skipz
  4107  07AF  2FB2               	goto	u3345
  4108  07B0  30FF               	movlw	255
  4109  07B1  0252               	subwf	___fldiv@new_exp,w
  4110  07B2                     u3345:	
  4111  07B2  1C03               	skipc
  4112  07B3  2FC2               	goto	l2463
  4113  07B4  30FF               	movlw	255
  4114  07B5  1283               	bcf	3,5	;RP0=0, select bank0
  4115  07B6  1303               	bcf	3,6	;RP1=0, select bank0
  4116  07B7  00D2               	movwf	___fldiv@new_exp
  4117  07B8  3000               	movlw	0
  4118  07B9  00D3               	movwf	___fldiv@new_exp+1
  4119  07BA  3000               	movlw	0
  4120  07BB  00C7               	movwf	___fldiv@b+3
  4121  07BC  3000               	movlw	0
  4122  07BD  00C6               	movwf	___fldiv@b+2
  4123  07BE  3000               	movlw	0
  4124  07BF  00C5               	movwf	___fldiv@b+1
  4125  07C0  3000               	movlw	0
  4126  07C1  00C4               	movwf	___fldiv@b
  4127  07C2                     l2463:	
  4128  07C2  1283               	bcf	3,5	;RP0=0, select bank0
  4129  07C3  1303               	bcf	3,6	;RP1=0, select bank0
  4130  07C4  0853               	movf	___fldiv@new_exp+1,w
  4131  07C5  3A80               	xorlw	128
  4132  07C6  00FF               	movwf	127
  4133  07C7  3080               	movlw	128
  4134  07C8  027F               	subwf	127,w
  4135  07C9  1D03               	skipz
  4136  07CA  2FCD               	goto	u3355
  4137  07CB  3001               	movlw	1
  4138  07CC  0252               	subwf	___fldiv@new_exp,w
  4139  07CD                     u3355:	
  4140  07CD  1803               	skipnc
  4141  07CE  2FDC               	goto	l696
  4142  07CF  1283               	bcf	3,5	;RP0=0, select bank0
  4143  07D0  1303               	bcf	3,6	;RP1=0, select bank0
  4144  07D1  01D2               	clrf	___fldiv@new_exp
  4145  07D2  01D3               	clrf	___fldiv@new_exp+1
  4146  07D3  3000               	movlw	0
  4147  07D4  00C7               	movwf	___fldiv@b+3
  4148  07D5  3000               	movlw	0
  4149  07D6  00C6               	movwf	___fldiv@b+2
  4150  07D7  3000               	movlw	0
  4151  07D8  00C5               	movwf	___fldiv@b+1
  4152  07D9  3000               	movlw	0
  4153  07DA  00C4               	movwf	___fldiv@b
  4154  07DB  01D1               	clrf	___fldiv@sign
  4155  07DC                     l696:	
  4156  07DC  1283               	bcf	3,5	;RP0=0, select bank0
  4157  07DD  1303               	bcf	3,6	;RP1=0, select bank0
  4158  07DE  0852               	movf	___fldiv@new_exp,w
  4159  07DF  00C8               	movwf	??___fldiv
  4160  07E0  0848               	movf	??___fldiv,w
  4161  07E1  00D8               	movwf	___fldiv@bexp
  4162  07E2  1C58               	btfss	___fldiv@bexp,0
  4163  07E3  2FE6               	goto	l2475
  4164  07E4  17C6               	bsf	___fldiv@b+2,7
  4165  07E5  2FEA               	goto	l698
  4166  07E6                     l2475:	
  4167  07E6  307F               	movlw	127
  4168  07E7  00C8               	movwf	??___fldiv
  4169  07E8  0848               	movf	??___fldiv,w
  4170  07E9  05C6               	andwf	___fldiv@b+2,f
  4171  07EA                     l698:	
  4172  07EA  0858               	movf	___fldiv@bexp,w
  4173  07EB  00C8               	movwf	??___fldiv
  4174  07EC  1003               	clrc
  4175  07ED  0C48               	rrf	??___fldiv,w
  4176  07EE  00C9               	movwf	??___fldiv+1
  4177  07EF  0849               	movf	??___fldiv+1,w
  4178  07F0  00C7               	movwf	___fldiv@b+3
  4179  07F1  2EAF               	goto	L2
  4180  07F2                     __end_of___fldiv:	
  4181                           
  4182                           	psect	text10
  4183  0DD1                     __ptext10:	
  4184 ;; *************** function ___fladd *****************
  4185 ;; Defined at:
  4186 ;;		line 10 in file "D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\sprcadd.c"
  4187 ;; Parameters:    Size  Location     Type
  4188 ;;  b               4   58[BANK0 ] unsigned char 
  4189 ;;  a               4   62[BANK0 ] unsigned char 
  4190 ;; Auto vars:     Size  Location     Type
  4191 ;;  grs             1   77[BANK0 ] unsigned char 
  4192 ;;  bexp            1   76[BANK0 ] unsigned char 
  4193 ;;  aexp            1   75[BANK0 ] unsigned char 
  4194 ;;  signs           1   74[BANK0 ] unsigned char 
  4195 ;; Return value:  Size  Location     Type
  4196 ;;                  4   58[BANK0 ] unsigned char 
  4197 ;; Registers used:
  4198 ;;		wreg, status,2, status,0, btemp+1
  4199 ;; Tracked objects:
  4200 ;;		On entry : 0/0
  4201 ;;		On exit  : 0/0
  4202 ;;		Unchanged: 0/0
  4203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4204 ;;      Params:         0       8       0       0       0
  4205 ;;      Locals:         0       4       0       0       0
  4206 ;;      Temps:          0       8       0       0       0
  4207 ;;      Totals:         0      20       0       0       0
  4208 ;;Total ram usage:       20 bytes
  4209 ;; Hardware stack levels used:    1
  4210 ;; Hardware stack levels required when called:    1
  4211 ;; This function calls:
  4212 ;;		Nothing
  4213 ;; This function is called by:
  4214 ;;		_main
  4215 ;; This function uses a non-reentrant model
  4216 ;;
  4217                           
  4218                           
  4219                           ;psect for function ___fladd
  4220  0DD1                     ___fladd:	
  4221                           
  4222                           ;incstack = 0
  4223                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  4224  0DD1  1283               	bcf	3,5	;RP0=0, select bank0
  4225  0DD2  1303               	bcf	3,6	;RP1=0, select bank0
  4226  0DD3  085D               	movf	___fladd@b+3,w
  4227  0DD4  3980               	andlw	128
  4228  0DD5  00E2               	movwf	??___fladd
  4229  0DD6  0862               	movf	??___fladd,w
  4230  0DD7  00EA               	movwf	___fladd@signs
  4231  0DD8  085D               	movf	___fladd@b+3,w
  4232  0DD9  00E2               	movwf	??___fladd
  4233  0DDA  0762               	addwf	??___fladd,w
  4234  0DDB  00E3               	movwf	??___fladd+1
  4235  0DDC  0863               	movf	??___fladd+1,w
  4236  0DDD  00EC               	movwf	___fladd@bexp
  4237  0DDE  1BDC               	btfsc	___fladd@b+2,7
  4238  0DDF  146C               	bsf	___fladd@bexp,0
  4239  0DE0  086C               	movf	___fladd@bexp,w
  4240  0DE1  1903               	btfsc	3,2
  4241  0DE2  2DF1               	goto	l2163
  4242  0DE3  0A6C               	incf	___fladd@bexp,w
  4243  0DE4  1D03               	btfss	3,2
  4244  0DE5  2DEE               	goto	l2159
  4245  0DE6  3000               	movlw	0
  4246  0DE7  00DD               	movwf	___fladd@b+3
  4247  0DE8  3000               	movlw	0
  4248  0DE9  00DC               	movwf	___fladd@b+2
  4249  0DEA  3000               	movlw	0
  4250  0DEB  00DB               	movwf	___fladd@b+1
  4251  0DEC  3000               	movlw	0
  4252  0DED  00DA               	movwf	___fladd@b
  4253  0DEE                     l2159:	
  4254  0DEE  17DC               	bsf	___fladd@b+2,7
  4255  0DEF  01DD               	clrf	___fladd@b+3
  4256  0DF0  2DF9               	goto	l2165
  4257  0DF1                     l2163:	
  4258  0DF1  3000               	movlw	0
  4259  0DF2  00DD               	movwf	___fladd@b+3
  4260  0DF3  3000               	movlw	0
  4261  0DF4  00DC               	movwf	___fladd@b+2
  4262  0DF5  3000               	movlw	0
  4263  0DF6  00DB               	movwf	___fladd@b+1
  4264  0DF7  3000               	movlw	0
  4265  0DF8  00DA               	movwf	___fladd@b
  4266  0DF9                     l2165:	
  4267  0DF9  0861               	movf	___fladd@a+3,w
  4268  0DFA  3980               	andlw	128
  4269  0DFB  00E2               	movwf	??___fladd
  4270  0DFC  0862               	movf	??___fladd,w
  4271  0DFD  00EB               	movwf	___fladd@aexp
  4272  0DFE  086B               	movf	___fladd@aexp,w
  4273  0DFF  066A               	xorwf	___fladd@signs,w
  4274  0E00  1D03               	btfss	3,2
  4275  0E01  176A               	bsf	___fladd@signs,6
  4276  0E02  0861               	movf	___fladd@a+3,w
  4277  0E03  00E2               	movwf	??___fladd
  4278  0E04  0762               	addwf	??___fladd,w
  4279  0E05  00E3               	movwf	??___fladd+1
  4280  0E06  0863               	movf	??___fladd+1,w
  4281  0E07  00EB               	movwf	___fladd@aexp
  4282  0E08  1BE0               	btfsc	___fladd@a+2,7
  4283  0E09  146B               	bsf	___fladd@aexp,0
  4284  0E0A  086B               	movf	___fladd@aexp,w
  4285  0E0B  1903               	btfsc	3,2
  4286  0E0C  2E1B               	goto	l2187
  4287  0E0D  0A6B               	incf	___fladd@aexp,w
  4288  0E0E  1D03               	btfss	3,2
  4289  0E0F  2E18               	goto	l2183
  4290  0E10  3000               	movlw	0
  4291  0E11  00E1               	movwf	___fladd@a+3
  4292  0E12  3000               	movlw	0
  4293  0E13  00E0               	movwf	___fladd@a+2
  4294  0E14  3000               	movlw	0
  4295  0E15  00DF               	movwf	___fladd@a+1
  4296  0E16  3000               	movlw	0
  4297  0E17  00DE               	movwf	___fladd@a
  4298  0E18                     l2183:	
  4299  0E18  17E0               	bsf	___fladd@a+2,7
  4300  0E19  01E1               	clrf	___fladd@a+3
  4301  0E1A  2E23               	goto	l618
  4302  0E1B                     l2187:	
  4303  0E1B  3000               	movlw	0
  4304  0E1C  00E1               	movwf	___fladd@a+3
  4305  0E1D  3000               	movlw	0
  4306  0E1E  00E0               	movwf	___fladd@a+2
  4307  0E1F  3000               	movlw	0
  4308  0E20  00DF               	movwf	___fladd@a+1
  4309  0E21  3000               	movlw	0
  4310  0E22  00DE               	movwf	___fladd@a
  4311  0E23                     l618:	
  4312  0E23  086C               	movf	___fladd@bexp,w
  4313  0E24  026B               	subwf	___fladd@aexp,w
  4314  0E25  1803               	skipnc
  4315  0E26  2E69               	goto	l2223
  4316  0E27  1F6A               	btfss	___fladd@signs,6
  4317  0E28  2E2D               	goto	l2193
  4318  0E29  3080               	movlw	128
  4319  0E2A  00E2               	movwf	??___fladd
  4320  0E2B  0862               	movf	??___fladd,w
  4321  0E2C  06EA               	xorwf	___fladd@signs,f
  4322  0E2D                     l2193:	
  4323  0E2D  086C               	movf	___fladd@bexp,w
  4324  0E2E  00E2               	movwf	??___fladd
  4325  0E2F  0862               	movf	??___fladd,w
  4326  0E30  00ED               	movwf	___fladd@grs
  4327  0E31  086B               	movf	___fladd@aexp,w
  4328  0E32  00E2               	movwf	??___fladd
  4329  0E33  0862               	movf	??___fladd,w
  4330  0E34  00EC               	movwf	___fladd@bexp
  4331  0E35  086D               	movf	___fladd@grs,w
  4332  0E36  00E2               	movwf	??___fladd
  4333  0E37  0862               	movf	??___fladd,w
  4334  0E38  00EB               	movwf	___fladd@aexp
  4335  0E39  085A               	movf	___fladd@b,w
  4336  0E3A  00E2               	movwf	??___fladd
  4337  0E3B  0862               	movf	??___fladd,w
  4338  0E3C  00ED               	movwf	___fladd@grs
  4339  0E3D  085E               	movf	___fladd@a,w
  4340  0E3E  00E2               	movwf	??___fladd
  4341  0E3F  0862               	movf	??___fladd,w
  4342  0E40  00DA               	movwf	___fladd@b
  4343  0E41  086D               	movf	___fladd@grs,w
  4344  0E42  00E2               	movwf	??___fladd
  4345  0E43  0862               	movf	??___fladd,w
  4346  0E44  00DE               	movwf	___fladd@a
  4347  0E45  085B               	movf	___fladd@b+1,w
  4348  0E46  00E2               	movwf	??___fladd
  4349  0E47  0862               	movf	??___fladd,w
  4350  0E48  00ED               	movwf	___fladd@grs
  4351  0E49  085F               	movf	___fladd@a+1,w
  4352  0E4A  00E2               	movwf	??___fladd
  4353  0E4B  0862               	movf	??___fladd,w
  4354  0E4C  00DB               	movwf	___fladd@b+1
  4355  0E4D  086D               	movf	___fladd@grs,w
  4356  0E4E  00E2               	movwf	??___fladd
  4357  0E4F  0862               	movf	??___fladd,w
  4358  0E50  00DF               	movwf	___fladd@a+1
  4359  0E51  085C               	movf	___fladd@b+2,w
  4360  0E52  00E2               	movwf	??___fladd
  4361  0E53  0862               	movf	??___fladd,w
  4362  0E54  00ED               	movwf	___fladd@grs
  4363  0E55  0860               	movf	___fladd@a+2,w
  4364  0E56  00E2               	movwf	??___fladd
  4365  0E57  0862               	movf	??___fladd,w
  4366  0E58  00DC               	movwf	___fladd@b+2
  4367  0E59  086D               	movf	___fladd@grs,w
  4368  0E5A  00E2               	movwf	??___fladd
  4369  0E5B  0862               	movf	??___fladd,w
  4370  0E5C  00E0               	movwf	___fladd@a+2
  4371  0E5D  085D               	movf	___fladd@b+3,w
  4372  0E5E  00E2               	movwf	??___fladd
  4373  0E5F  0862               	movf	??___fladd,w
  4374  0E60  00ED               	movwf	___fladd@grs
  4375  0E61  0861               	movf	___fladd@a+3,w
  4376  0E62  00E2               	movwf	??___fladd
  4377  0E63  0862               	movf	??___fladd,w
  4378  0E64  00DD               	movwf	___fladd@b+3
  4379  0E65  086D               	movf	___fladd@grs,w
  4380  0E66  00E2               	movwf	??___fladd
  4381  0E67  0862               	movf	??___fladd,w
  4382  0E68  00E1               	movwf	___fladd@a+3
  4383  0E69                     l2223:	
  4384  0E69  01ED               	clrf	___fladd@grs
  4385  0E6A  086B               	movf	___fladd@aexp,w
  4386  0E6B  00E2               	movwf	??___fladd
  4387  0E6C  01E3               	clrf	??___fladd+1
  4388  0E6D  0863               	movf	??___fladd+1,w
  4389  0E6E  00E5               	movwf	??___fladd+3
  4390  0E6F  086C               	movf	___fladd@bexp,w
  4391  0E70  0262               	subwf	??___fladd,w
  4392  0E71  00E4               	movwf	??___fladd+2
  4393  0E72  1C03               	skipc
  4394  0E73  03E5               	decf	??___fladd+3,f
  4395  0E74  0865               	movf	??___fladd+3,w
  4396  0E75  3A80               	xorlw	128
  4397  0E76  00FF               	movwf	127
  4398  0E77  3080               	movlw	128
  4399  0E78  027F               	subwf	127,w
  4400  0E79  1D03               	skipz
  4401  0E7A  2E7D               	goto	u2715
  4402  0E7B  301A               	movlw	26
  4403  0E7C  0264               	subwf	??___fladd+2,w
  4404  0E7D                     u2715:	
  4405  0E7D  1C03               	skipc
  4406  0E7E  2EB6               	goto	l2241
  4407  0E7F  1283               	bcf	3,5	;RP0=0, select bank0
  4408  0E80  1303               	bcf	3,6	;RP1=0, select bank0
  4409  0E81  085D               	movf	___fladd@b+3,w
  4410  0E82  045C               	iorwf	___fladd@b+2,w
  4411  0E83  045B               	iorwf	___fladd@b+1,w
  4412  0E84  045A               	iorwf	___fladd@b,w
  4413  0E85  1903               	btfsc	3,2
  4414  0E86  2E89               	goto	u2720
  4415  0E87  3001               	movlw	1
  4416  0E88  2E8A               	goto	u2730
  4417  0E89                     u2720:	
  4418  0E89  3000               	movlw	0
  4419  0E8A                     u2730:	
  4420  0E8A  00E2               	movwf	??___fladd
  4421  0E8B  0862               	movf	??___fladd,w
  4422  0E8C  00ED               	movwf	___fladd@grs
  4423  0E8D  3000               	movlw	0
  4424  0E8E  00DD               	movwf	___fladd@b+3
  4425  0E8F  3000               	movlw	0
  4426  0E90  00DC               	movwf	___fladd@b+2
  4427  0E91  3000               	movlw	0
  4428  0E92  00DB               	movwf	___fladd@b+1
  4429  0E93  3000               	movlw	0
  4430  0E94  00DA               	movwf	___fladd@b
  4431  0E95  086B               	movf	___fladd@aexp,w
  4432  0E96  00E2               	movwf	??___fladd
  4433  0E97  0862               	movf	??___fladd,w
  4434  0E98  00EC               	movwf	___fladd@bexp
  4435  0E99  2EBC               	goto	l622
  4436  0E9A                     l624:	
  4437  0E9A  1C6D               	btfss	___fladd@grs,0
  4438  0E9B  2EA5               	goto	l2231
  4439  0E9C  086D               	movf	___fladd@grs,w
  4440  0E9D  00E2               	movwf	??___fladd
  4441  0E9E  1003               	clrc
  4442  0E9F  0C62               	rrf	??___fladd,w
  4443  0EA0  3801               	iorlw	1
  4444  0EA1  00E3               	movwf	??___fladd+1
  4445  0EA2  0863               	movf	??___fladd+1,w
  4446  0EA3  00ED               	movwf	___fladd@grs
  4447  0EA4  2EA7               	goto	l2233
  4448  0EA5                     l2231:	
  4449  0EA5  1003               	clrc
  4450  0EA6  0CED               	rrf	___fladd@grs,f
  4451  0EA7                     l2233:	
  4452  0EA7  185A               	btfsc	___fladd@b,0
  4453  0EA8  17ED               	bsf	___fladd@grs,7
  4454  0EA9  3001               	movlw	1
  4455  0EAA  00E2               	movwf	??___fladd
  4456  0EAB                     u2765:	
  4457  0EAB  0D5D               	rlf	___fladd@b+3,w
  4458  0EAC  0CDD               	rrf	___fladd@b+3,f
  4459  0EAD  0CDC               	rrf	___fladd@b+2,f
  4460  0EAE  0CDB               	rrf	___fladd@b+1,f
  4461  0EAF  0CDA               	rrf	___fladd@b,f
  4462  0EB0  0BE2               	decfsz	??___fladd& (0+127),f
  4463  0EB1  2EAB               	goto	u2765
  4464  0EB2  3001               	movlw	1
  4465  0EB3  00E2               	movwf	??___fladd
  4466  0EB4  0862               	movf	??___fladd,w
  4467  0EB5  07EC               	addwf	___fladd@bexp,f
  4468  0EB6                     l2241:	
  4469  0EB6  1283               	bcf	3,5	;RP0=0, select bank0
  4470  0EB7  1303               	bcf	3,6	;RP1=0, select bank0
  4471  0EB8  086B               	movf	___fladd@aexp,w
  4472  0EB9  026C               	subwf	___fladd@bexp,w
  4473  0EBA  1C03               	skipc
  4474  0EBB  2E9A               	goto	l624
  4475  0EBC                     l622:	
  4476  0EBC  1B6A               	btfsc	___fladd@signs,6
  4477  0EBD  2EFD               	goto	l2267
  4478  0EBE  086C               	movf	___fladd@bexp,w
  4479  0EBF  1D03               	btfss	3,2
  4480  0EC0  2ECA               	goto	l2249
  4481  0EC1  3000               	movlw	0
  4482  0EC2  00DD               	movwf	?___fladd+3
  4483  0EC3  3000               	movlw	0
  4484  0EC4  00DC               	movwf	?___fladd+2
  4485  0EC5  3000               	movlw	0
  4486  0EC6  00DB               	movwf	?___fladd+1
  4487  0EC7  3000               	movlw	0
  4488  0EC8  00DA               	movwf	?___fladd
  4489  0EC9  0008               	return
  4490  0ECA                     l2249:	
  4491  0ECA  085E               	movf	___fladd@a,w
  4492  0ECB  07DA               	addwf	___fladd@b,f
  4493  0ECC  085F               	movf	___fladd@a+1,w
  4494  0ECD  1103               	clrz
  4495  0ECE  1803               	skipnc
  4496  0ECF  3E01               	addlw	1
  4497  0ED0  1D03               	btfss	3,2
  4498  0ED1  07DB               	addwf	___fladd@b+1,f
  4499  0ED2  0860               	movf	___fladd@a+2,w
  4500  0ED3  1103               	clrz
  4501  0ED4  1803               	skipnc
  4502  0ED5  3E01               	addlw	1
  4503  0ED6  1D03               	btfss	3,2
  4504  0ED7  07DC               	addwf	___fladd@b+2,f
  4505  0ED8  0861               	movf	___fladd@a+3,w
  4506  0ED9  1103               	clrz
  4507  0EDA  1803               	skipnc
  4508  0EDB  3E01               	addlw	1
  4509  0EDC  1D03               	btfss	3,2
  4510  0EDD  07DD               	addwf	___fladd@b+3,f
  4511  0EDE  1C5D               	btfss	___fladd@b+3,0
  4512  0EDF  2F9F               	goto	l2301
  4513  0EE0  1C6D               	btfss	___fladd@grs,0
  4514  0EE1  2EEB               	goto	l2257
  4515  0EE2  086D               	movf	___fladd@grs,w
  4516  0EE3  00E2               	movwf	??___fladd
  4517  0EE4  1003               	clrc
  4518  0EE5  0C62               	rrf	??___fladd,w
  4519  0EE6  3801               	iorlw	1
  4520  0EE7  00E3               	movwf	??___fladd+1
  4521  0EE8  0863               	movf	??___fladd+1,w
  4522  0EE9  00ED               	movwf	___fladd@grs
  4523  0EEA  2EED               	goto	l2259
  4524  0EEB                     l2257:	
  4525  0EEB  1003               	clrc
  4526  0EEC  0CED               	rrf	___fladd@grs,f
  4527  0EED                     l2259:	
  4528  0EED  185A               	btfsc	___fladd@b,0
  4529  0EEE  17ED               	bsf	___fladd@grs,7
  4530  0EEF  3001               	movlw	1
  4531  0EF0  00E2               	movwf	??___fladd
  4532  0EF1                     u2845:	
  4533  0EF1  0D5D               	rlf	___fladd@b+3,w
  4534  0EF2  0CDD               	rrf	___fladd@b+3,f
  4535  0EF3  0CDC               	rrf	___fladd@b+2,f
  4536  0EF4  0CDB               	rrf	___fladd@b+1,f
  4537  0EF5  0CDA               	rrf	___fladd@b,f
  4538  0EF6  0BE2               	decfsz	??___fladd& (0+127),f
  4539  0EF7  2EF1               	goto	u2845
  4540  0EF8  3001               	movlw	1
  4541  0EF9  00E2               	movwf	??___fladd
  4542  0EFA  0862               	movf	??___fladd,w
  4543  0EFB  07EC               	addwf	___fladd@bexp,f
  4544  0EFC  2F9F               	goto	l2301
  4545  0EFD                     l2267:	
  4546  0EFD  085D               	movf	___fladd@b+3,w
  4547  0EFE  3A80               	xorlw	128
  4548  0EFF  00FF               	movwf	127
  4549  0F00  0861               	movf	___fladd@a+3,w
  4550  0F01  3A80               	xorlw	128
  4551  0F02  027F               	subwf	127,w
  4552  0F03  1D03               	skipz
  4553  0F04  2F0F               	goto	u2853
  4554  0F05  0860               	movf	___fladd@a+2,w
  4555  0F06  025C               	subwf	___fladd@b+2,w
  4556  0F07  1D03               	skipz
  4557  0F08  2F0F               	goto	u2853
  4558  0F09  085F               	movf	___fladd@a+1,w
  4559  0F0A  025B               	subwf	___fladd@b+1,w
  4560  0F0B  1D03               	skipz
  4561  0F0C  2F0F               	goto	u2853
  4562  0F0D  085E               	movf	___fladd@a,w
  4563  0F0E  025A               	subwf	___fladd@b,w
  4564  0F0F                     u2853:	
  4565  0F0F  1803               	skipnc
  4566  0F10  2F67               	goto	l2277
  4567  0F11  30FF               	movlw	255
  4568  0F12  00E2               	movwf	??___fladd
  4569  0F13  30FF               	movlw	255
  4570  0F14  00E3               	movwf	??___fladd+1
  4571  0F15  30FF               	movlw	255
  4572  0F16  00E4               	movwf	??___fladd+2
  4573  0F17  30FF               	movlw	255
  4574  0F18  00E5               	movwf	??___fladd+3
  4575  0F19  085E               	movf	___fladd@a,w
  4576  0F1A  00E6               	movwf	??___fladd+4
  4577  0F1B  085F               	movf	___fladd@a+1,w
  4578  0F1C  00E7               	movwf	??___fladd+5
  4579  0F1D  0860               	movf	___fladd@a+2,w
  4580  0F1E  00E8               	movwf	??___fladd+6
  4581  0F1F  0861               	movf	___fladd@a+3,w
  4582  0F20  00E9               	movwf	??___fladd+7
  4583  0F21  085A               	movf	___fladd@b,w
  4584  0F22  02E6               	subwf	??___fladd+4,f
  4585  0F23  085B               	movf	___fladd@b+1,w
  4586  0F24  1C03               	skipc
  4587  0F25  0F5B               	incfsz	___fladd@b+1,w
  4588  0F26  2F28               	goto	u2861
  4589  0F27  2F29               	goto	u2862
  4590  0F28                     u2861:	
  4591  0F28  02E7               	subwf	??___fladd+5,f
  4592  0F29                     u2862:	
  4593  0F29  085C               	movf	___fladd@b+2,w
  4594  0F2A  1C03               	skipc
  4595  0F2B  0F5C               	incfsz	___fladd@b+2,w
  4596  0F2C  2F2E               	goto	u2863
  4597  0F2D  2F2F               	goto	u2864
  4598  0F2E                     u2863:	
  4599  0F2E  02E8               	subwf	??___fladd+6,f
  4600  0F2F                     u2864:	
  4601  0F2F  085D               	movf	___fladd@b+3,w
  4602  0F30  1C03               	skipc
  4603  0F31  0F5D               	incfsz	___fladd@b+3,w
  4604  0F32  2F34               	goto	u2865
  4605  0F33  2F35               	goto	u2866
  4606  0F34                     u2865:	
  4607  0F34  02E9               	subwf	??___fladd+7,f
  4608  0F35                     u2866:	
  4609  0F35  0866               	movf	??___fladd+4,w
  4610  0F36  07E2               	addwf	??___fladd,f
  4611  0F37  0867               	movf	??___fladd+5,w
  4612  0F38  1803               	skipnc
  4613  0F39  0F67               	incfsz	??___fladd+5,w
  4614  0F3A  2F3C               	goto	u2870
  4615  0F3B  2F3D               	goto	u2871
  4616  0F3C                     u2870:	
  4617  0F3C  07E3               	addwf	??___fladd+1,f
  4618  0F3D                     u2871:	
  4619  0F3D  0868               	movf	??___fladd+6,w
  4620  0F3E  1803               	skipnc
  4621  0F3F  0F68               	incfsz	??___fladd+6,w
  4622  0F40  2F42               	goto	u2872
  4623  0F41  2F43               	goto	u2873
  4624  0F42                     u2872:	
  4625  0F42  07E4               	addwf	??___fladd+2,f
  4626  0F43                     u2873:	
  4627  0F43  0869               	movf	??___fladd+7,w
  4628  0F44  1803               	skipnc
  4629  0F45  0A69               	incf	??___fladd+7,w
  4630  0F46  07E5               	addwf	??___fladd+3,f
  4631  0F47  0865               	movf	??___fladd+3,w
  4632  0F48  00DD               	movwf	___fladd@b+3
  4633  0F49  0864               	movf	??___fladd+2,w
  4634  0F4A  00DC               	movwf	___fladd@b+2
  4635  0F4B  0863               	movf	??___fladd+1,w
  4636  0F4C  00DB               	movwf	___fladd@b+1
  4637  0F4D  0862               	movf	??___fladd,w
  4638  0F4E  00DA               	movwf	___fladd@b
  4639  0F4F  3080               	movlw	128
  4640  0F50  00E2               	movwf	??___fladd
  4641  0F51  0862               	movf	??___fladd,w
  4642  0F52  06EA               	xorwf	___fladd@signs,f
  4643  0F53  09ED               	comf	___fladd@grs,f
  4644  0F54  0AED               	incf	___fladd@grs,f
  4645  0F55  086D               	movf	___fladd@grs,w
  4646  0F56  1D03               	btfss	3,2
  4647  0F57  2F75               	goto	l639
  4648  0F58  3001               	movlw	1
  4649  0F59  07DA               	addwf	___fladd@b,f
  4650  0F5A  3000               	movlw	0
  4651  0F5B  1803               	skipnc
  4652  0F5C  3001               	movlw	1
  4653  0F5D  07DB               	addwf	___fladd@b+1,f
  4654  0F5E  3000               	movlw	0
  4655  0F5F  1803               	skipnc
  4656  0F60  3001               	movlw	1
  4657  0F61  07DC               	addwf	___fladd@b+2,f
  4658  0F62  3000               	movlw	0
  4659  0F63  1803               	skipnc
  4660  0F64  3001               	movlw	1
  4661  0F65  07DD               	addwf	___fladd@b+3,f
  4662  0F66  2F75               	goto	l639
  4663  0F67                     l2277:	
  4664  0F67  085E               	movf	___fladd@a,w
  4665  0F68  02DA               	subwf	___fladd@b,f
  4666  0F69  085F               	movf	___fladd@a+1,w
  4667  0F6A  1C03               	skipc
  4668  0F6B  0F5F               	incfsz	___fladd@a+1,w
  4669  0F6C  02DB               	subwf	___fladd@b+1,f
  4670  0F6D  0860               	movf	___fladd@a+2,w
  4671  0F6E  1C03               	skipc
  4672  0F6F  0F60               	incfsz	___fladd@a+2,w
  4673  0F70  02DC               	subwf	___fladd@b+2,f
  4674  0F71  0861               	movf	___fladd@a+3,w
  4675  0F72  1C03               	skipc
  4676  0F73  0F61               	incfsz	___fladd@a+3,w
  4677  0F74  02DD               	subwf	___fladd@b+3,f
  4678  0F75                     l639:	
  4679  0F75  085D               	movf	___fladd@b+3,w
  4680  0F76  045C               	iorwf	___fladd@b+2,w
  4681  0F77  045B               	iorwf	___fladd@b+1,w
  4682  0F78  045A               	iorwf	___fladd@b,w
  4683  0F79  1D03               	skipz
  4684  0F7A  2F9D               	goto	l2299
  4685  0F7B  086D               	movf	___fladd@grs,w
  4686  0F7C  1D03               	btfss	3,2
  4687  0F7D  2F9D               	goto	l2299
  4688  0F7E  3000               	movlw	0
  4689  0F7F  00DD               	movwf	?___fladd+3
  4690  0F80  3000               	movlw	0
  4691  0F81  00DC               	movwf	?___fladd+2
  4692  0F82  3000               	movlw	0
  4693  0F83  00DB               	movwf	?___fladd+1
  4694  0F84  3000               	movlw	0
  4695  0F85  00DA               	movwf	?___fladd
  4696  0F86  0008               	return
  4697  0F87                     l2285:	
  4698  0F87  3001               	movlw	1
  4699  0F88  00E2               	movwf	??___fladd
  4700  0F89                     u2915:	
  4701  0F89  1003               	clrc
  4702  0F8A  0DDA               	rlf	___fladd@b,f
  4703  0F8B  0DDB               	rlf	___fladd@b+1,f
  4704  0F8C  0DDC               	rlf	___fladd@b+2,f
  4705  0F8D  0DDD               	rlf	___fladd@b+3,f
  4706  0F8E  0BE2               	decfsz	??___fladd,f
  4707  0F8F  2F89               	goto	u2915
  4708  0F90  1BED               	btfsc	___fladd@grs,7
  4709  0F91  145A               	bsf	___fladd@b,0
  4710  0F92  1C6D               	btfss	___fladd@grs,0
  4711  0F93  2F96               	goto	l2293
  4712  0F94  1403               	setc
  4713  0F95  2F97               	goto	L3
  4714  0F96                     l2293:	
  4715  0F96  1003               	clrc
  4716  0F97                     L3:	
  4717  0F97  0DED               	rlf	___fladd@grs,f
  4718  0F98  086C               	movf	___fladd@bexp,w
  4719  0F99  1903               	btfsc	3,2
  4720  0F9A  2F9D               	goto	l2299
  4721  0F9B  3001               	movlw	1
  4722  0F9C  02EC               	subwf	___fladd@bexp,f
  4723  0F9D                     l2299:	
  4724  0F9D  1FDC               	btfss	___fladd@b+2,7
  4725  0F9E  2F87               	goto	l2285
  4726  0F9F                     l2301:	
  4727  0F9F  01EB               	clrf	___fladd@aexp
  4728  0FA0  1FED               	btfss	___fladd@grs,7
  4729  0FA1  2FAA               	goto	l2311
  4730  0FA2  086D               	movf	___fladd@grs,w
  4731  0FA3  397F               	andlw	127
  4732  0FA4  1903               	btfsc	3,2
  4733  0FA5  185A               	btfsc	___fladd@b,0
  4734  0FA6  2FA8               	goto	l2307
  4735  0FA7  2FAA               	goto	l2311
  4736  0FA8                     l2307:	
  4737  0FA8  01EB               	clrf	___fladd@aexp
  4738  0FA9  0AEB               	incf	___fladd@aexp,f
  4739  0FAA                     l2311:	
  4740  0FAA  086B               	movf	___fladd@aexp,w
  4741  0FAB  1903               	btfsc	3,2
  4742  0FAC  2FDD               	goto	l652
  4743  0FAD  3001               	movlw	1
  4744  0FAE  07DA               	addwf	___fladd@b,f
  4745  0FAF  3000               	movlw	0
  4746  0FB0  1803               	skipnc
  4747  0FB1  3001               	movlw	1
  4748  0FB2  07DB               	addwf	___fladd@b+1,f
  4749  0FB3  3000               	movlw	0
  4750  0FB4  1803               	skipnc
  4751  0FB5  3001               	movlw	1
  4752  0FB6  07DC               	addwf	___fladd@b+2,f
  4753  0FB7  3000               	movlw	0
  4754  0FB8  1803               	skipnc
  4755  0FB9  3001               	movlw	1
  4756  0FBA  07DD               	addwf	___fladd@b+3,f
  4757  0FBB  1C5D               	btfss	___fladd@b+3,0
  4758  0FBC  2FDD               	goto	l652
  4759  0FBD  085A               	movf	___fladd@b,w
  4760  0FBE  00E2               	movwf	??___fladd
  4761  0FBF  085B               	movf	___fladd@b+1,w
  4762  0FC0  00E3               	movwf	??___fladd+1
  4763  0FC1  085C               	movf	___fladd@b+2,w
  4764  0FC2  00E4               	movwf	??___fladd+2
  4765  0FC3  085D               	movf	___fladd@b+3,w
  4766  0FC4  00E5               	movwf	??___fladd+3
  4767  0FC5  3001               	movlw	1
  4768  0FC6  00E6               	movwf	??___fladd+4
  4769  0FC7                     u3015:	
  4770  0FC7  0D65               	rlf	??___fladd+3,w
  4771  0FC8  0CE5               	rrf	??___fladd+3,f
  4772  0FC9  0CE4               	rrf	??___fladd+2,f
  4773  0FCA  0CE3               	rrf	??___fladd+1,f
  4774  0FCB  0CE2               	rrf	??___fladd,f
  4775  0FCC  0BE6               	decfsz	??___fladd+4,f
  4776  0FCD  2FC7               	goto	u3015
  4777  0FCE  0865               	movf	??___fladd+3,w
  4778  0FCF  00DD               	movwf	___fladd@b+3
  4779  0FD0  0864               	movf	??___fladd+2,w
  4780  0FD1  00DC               	movwf	___fladd@b+2
  4781  0FD2  0863               	movf	??___fladd+1,w
  4782  0FD3  00DB               	movwf	___fladd@b+1
  4783  0FD4  0862               	movf	??___fladd,w
  4784  0FD5  00DA               	movwf	___fladd@b
  4785  0FD6  0A6C               	incf	___fladd@bexp,w
  4786  0FD7  1903               	btfsc	3,2
  4787  0FD8  2FDD               	goto	l652
  4788  0FD9  3001               	movlw	1
  4789  0FDA  00E2               	movwf	??___fladd
  4790  0FDB  0862               	movf	??___fladd,w
  4791  0FDC  07EC               	addwf	___fladd@bexp,f
  4792  0FDD                     l652:	
  4793  0FDD  0A6C               	incf	___fladd@bexp,w
  4794  0FDE  1D03               	btfss	3,2
  4795  0FDF  086C               	movf	___fladd@bexp,w
  4796  0FE0  1D03               	btfss	3,2
  4797  0FE1  2FED               	goto	l2329
  4798  0FE2  3000               	movlw	0
  4799  0FE3  00DD               	movwf	___fladd@b+3
  4800  0FE4  3000               	movlw	0
  4801  0FE5  00DC               	movwf	___fladd@b+2
  4802  0FE6  3000               	movlw	0
  4803  0FE7  00DB               	movwf	___fladd@b+1
  4804  0FE8  3000               	movlw	0
  4805  0FE9  00DA               	movwf	___fladd@b
  4806  0FEA  086C               	movf	___fladd@bexp,w
  4807  0FEB  1903               	btfsc	3,2
  4808  0FEC  01EA               	clrf	___fladd@signs
  4809  0FED                     l2329:	
  4810  0FED  1C6C               	btfss	___fladd@bexp,0
  4811  0FEE  2FF1               	goto	l2333
  4812  0FEF  17DC               	bsf	___fladd@b+2,7
  4813  0FF0  2FF5               	goto	l660
  4814  0FF1                     l2333:	
  4815  0FF1  307F               	movlw	127
  4816  0FF2  00E2               	movwf	??___fladd
  4817  0FF3  0862               	movf	??___fladd,w
  4818  0FF4  05DC               	andwf	___fladd@b+2,f
  4819  0FF5                     l660:	
  4820  0FF5  086C               	movf	___fladd@bexp,w
  4821  0FF6  00E2               	movwf	??___fladd
  4822  0FF7  1003               	clrc
  4823  0FF8  0C62               	rrf	??___fladd,w
  4824  0FF9  00E3               	movwf	??___fladd+1
  4825  0FFA  0863               	movf	??___fladd+1,w
  4826  0FFB  00DD               	movwf	___fladd@b+3
  4827  0FFC  1FEA               	btfss	___fladd@signs,7
  4828  0FFD  0008               	return
  4829  0FFE  17DD               	bsf	___fladd@b+3,7
  4830  0FFF  0008               	return
  4831  1000                     __end_of___fladd:	
  4832                           
  4833                           	psect	text11
  4834  1761                     __ptext11:	
  4835 ;; *************** function _Timer1_Init *****************
  4836 ;; Defined at:
  4837 ;;		line 123 in file "Test_A4988.c"
  4838 ;; Parameters:    Size  Location     Type
  4839 ;;		None
  4840 ;; Auto vars:     Size  Location     Type
  4841 ;;		None
  4842 ;; Return value:  Size  Location     Type
  4843 ;;                  1    wreg      void 
  4844 ;; Registers used:
  4845 ;;		status,2
  4846 ;; Tracked objects:
  4847 ;;		On entry : 0/0
  4848 ;;		On exit  : 0/0
  4849 ;;		Unchanged: 0/0
  4850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4851 ;;      Params:         0       0       0       0       0
  4852 ;;      Locals:         0       0       0       0       0
  4853 ;;      Temps:          0       0       0       0       0
  4854 ;;      Totals:         0       0       0       0       0
  4855 ;;Total ram usage:        0 bytes
  4856 ;; Hardware stack levels used:    1
  4857 ;; Hardware stack levels required when called:    1
  4858 ;; This function calls:
  4859 ;;		Nothing
  4860 ;; This function is called by:
  4861 ;;		_main
  4862 ;; This function uses a non-reentrant model
  4863 ;;
  4864                           
  4865                           
  4866                           ;psect for function _Timer1_Init
  4867  1761                     _Timer1_Init:	
  4868                           
  4869                           ;Test_A4988.c: 126:     TMR1 = 0;
  4870                           
  4871                           ;incstack = 0
  4872                           ; Regs used in _Timer1_Init: [status,2]
  4873  1761  1283               	bcf	3,5	;RP0=0, select bank0
  4874  1762  1303               	bcf	3,6	;RP1=0, select bank0
  4875  1763  018E               	clrf	14	;volatile
  4876  1764  018F               	clrf	15	;volatile
  4877                           
  4878                           ;Test_A4988.c: 128:     T1CKPS1 = 1;
  4879  1765  1690               	bsf	16,5	;volatile
  4880                           
  4881                           ;Test_A4988.c: 129:     T1CKPS0 = 1;
  4882  1766  1610               	bsf	16,4	;volatile
  4883                           
  4884                           ;Test_A4988.c: 130:     T1OSCEN = 0;
  4885  1767  1190               	bcf	16,3	;volatile
  4886                           
  4887                           ;Test_A4988.c: 131:     T1SYNC = 0;
  4888  1768  1110               	bcf	16,2	;volatile
  4889                           
  4890                           ;Test_A4988.c: 132:     TMR1CS = 0;
  4891  1769  1090               	bcf	16,1	;volatile
  4892                           
  4893                           ;Test_A4988.c: 134:     GIE = 1;
  4894  176A  178B               	bsf	11,7	;volatile
  4895                           
  4896                           ;Test_A4988.c: 135:     PEIE = 1;
  4897  176B  170B               	bsf	11,6	;volatile
  4898                           
  4899                           ;Test_A4988.c: 136:     TMR1IE = 0;
  4900  176C  1683               	bsf	3,5	;RP0=1, select bank1
  4901  176D  1303               	bcf	3,6	;RP1=0, select bank1
  4902  176E  100C               	bcf	12,0	;volatile
  4903                           
  4904                           ;Test_A4988.c: 138:     TMR1ON = 1;
  4905  176F  1283               	bcf	3,5	;RP0=0, select bank0
  4906  1770  1303               	bcf	3,6	;RP1=0, select bank0
  4907  1771  1410               	bsf	16,0	;volatile
  4908  1772  0008               	return
  4909  1773                     __end_of_Timer1_Init:	
  4910                           
  4911                           	psect	text12
  4912  07F2                     __ptext12:	
  4913 ;; *************** function _Timer0_Init *****************
  4914 ;; Defined at:
  4915 ;;		line 115 in file "Test_A4988.c"
  4916 ;; Parameters:    Size  Location     Type
  4917 ;;		None
  4918 ;; Auto vars:     Size  Location     Type
  4919 ;;		None
  4920 ;; Return value:  Size  Location     Type
  4921 ;;                  1    wreg      void 
  4922 ;; Registers used:
  4923 ;;		wreg, status,2
  4924 ;; Tracked objects:
  4925 ;;		On entry : 0/0
  4926 ;;		On exit  : 0/0
  4927 ;;		Unchanged: 0/0
  4928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4929 ;;      Params:         0       0       0       0       0
  4930 ;;      Locals:         0       0       0       0       0
  4931 ;;      Temps:          0       0       0       0       0
  4932 ;;      Totals:         0       0       0       0       0
  4933 ;;Total ram usage:        0 bytes
  4934 ;; Hardware stack levels used:    1
  4935 ;; Hardware stack levels required when called:    1
  4936 ;; This function calls:
  4937 ;;		Nothing
  4938 ;; This function is called by:
  4939 ;;		_main
  4940 ;; This function uses a non-reentrant model
  4941 ;;
  4942                           
  4943                           
  4944                           ;psect for function _Timer0_Init
  4945  07F2                     _Timer0_Init:	
  4946                           
  4947                           ;Test_A4988.c: 117:     OPTION_REG = 0x07;
  4948                           
  4949                           ;incstack = 0
  4950                           ; Regs used in _Timer0_Init: [wreg+status,2]
  4951  07F2  3007               	movlw	7
  4952  07F3  1683               	bsf	3,5	;RP0=1, select bank1
  4953  07F4  1303               	bcf	3,6	;RP1=0, select bank1
  4954  07F5  0081               	movwf	1	;volatile
  4955                           
  4956                           ;Test_A4988.c: 118:     TMR0 = 0;
  4957  07F6  1283               	bcf	3,5	;RP0=0, select bank0
  4958  07F7  1303               	bcf	3,6	;RP1=0, select bank0
  4959  07F8  0181               	clrf	1	;volatile
  4960                           
  4961                           ;Test_A4988.c: 119:     TMR0IE=1;
  4962  07F9  168B               	bsf	11,5	;volatile
  4963                           
  4964                           ;Test_A4988.c: 120:     GIE=1;
  4965  07FA  178B               	bsf	11,7	;volatile
  4966                           
  4967                           ;Test_A4988.c: 121:     PEIE=1;
  4968  07FB  170B               	bsf	11,6	;volatile
  4969  07FC  0008               	return
  4970  07FD                     __end_of_Timer0_Init:	
  4971                           
  4972                           	psect	text13
  4973  08E4                     __ptext13:	
  4974 ;; *************** function _Read_ADC *****************
  4975 ;; Defined at:
  4976 ;;		line 83 in file "Test_A4988.c"
  4977 ;; Parameters:    Size  Location     Type
  4978 ;;  channel         1    wreg     unsigned char 
  4979 ;; Auto vars:     Size  Location     Type
  4980 ;;  channel         1   10[COMMON] unsigned char 
  4981 ;;  N               2    8[COMMON] unsigned int 
  4982 ;; Return value:  Size  Location     Type
  4983 ;;                  2    2[COMMON] unsigned int 
  4984 ;; Registers used:
  4985 ;;		wreg, status,2, status,0
  4986 ;; Tracked objects:
  4987 ;;		On entry : 0/0
  4988 ;;		On exit  : 0/0
  4989 ;;		Unchanged: 0/0
  4990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4991 ;;      Params:         2       0       0       0       0
  4992 ;;      Locals:         3       0       0       0       0
  4993 ;;      Temps:          4       0       0       0       0
  4994 ;;      Totals:         9       0       0       0       0
  4995 ;;Total ram usage:        9 bytes
  4996 ;; Hardware stack levels used:    1
  4997 ;; Hardware stack levels required when called:    1
  4998 ;; This function calls:
  4999 ;;		Nothing
  5000 ;; This function is called by:
  5001 ;;		_main
  5002 ;; This function uses a non-reentrant model
  5003 ;;
  5004                           
  5005                           
  5006                           ;psect for function _Read_ADC
  5007  08E4                     _Read_ADC:	
  5008                           
  5009                           ;incstack = 0
  5010                           ; Regs used in _Read_ADC: [wreg+status,2+status,0]
  5011                           ;Read_ADC@channel stored from wreg
  5012  08E4  00FA               	movwf	Read_ADC@channel
  5013                           
  5014                           ;Test_A4988.c: 83: unsigned int Read_ADC(unsigned char channel);Test_A4988.c: 84: {;Test
      +                          _A4988.c: 85:     unsigned int N;;Test_A4988.c: 86:     ADCON0 &= 0x11000101;
  5015  08E5  3001               	movlw	1
  5016  08E6  00F4               	movwf	??_Read_ADC
  5017  08E7  0874               	movf	??_Read_ADC,w
  5018  08E8  1283               	bcf	3,5	;RP0=0, select bank0
  5019  08E9  1303               	bcf	3,6	;RP1=0, select bank0
  5020  08EA  059F               	andwf	31,f	;volatile
  5021                           
  5022                           ;Test_A4988.c: 87:     ADCON0 |= channel << 3;
  5023  08EB  087A               	movf	Read_ADC@channel,w	;volatile
  5024  08EC  00F4               	movwf	??_Read_ADC
  5025  08ED  3002               	movlw	2
  5026  08EE                     u2395:	
  5027  08EE  1003               	clrc
  5028  08EF  0DF4               	rlf	??_Read_ADC,f
  5029  08F0  3EFF               	addlw	-1
  5030  08F1  1D03               	skipz
  5031  08F2  28EE               	goto	u2395
  5032  08F3  1003               	clrc
  5033  08F4  0D74               	rlf	??_Read_ADC,w
  5034  08F5  00F5               	movwf	??_Read_ADC+1
  5035  08F6  0875               	movf	??_Read_ADC+1,w
  5036  08F7  049F               	iorwf	31,f	;volatile
  5037                           
  5038                           ;Test_A4988.c: 88:     _delay((unsigned long)((2)*(20000000/4000.0)));
  5039  08F8  300D               	movlw	13
  5040  08F9  00F5               	movwf	??_Read_ADC+1
  5041  08FA  30FB               	movlw	251
  5042  08FB  00F4               	movwf	??_Read_ADC
  5043  08FC                     u3967:	
  5044  08FC  0BF4               	decfsz	??_Read_ADC,f
  5045  08FD  28FC               	goto	u3967
  5046  08FE  0BF5               	decfsz	??_Read_ADC+1,f
  5047  08FF  28FC               	goto	u3967
  5048  0900  2901               	nop2
  5049                           
  5050                           ;Test_A4988.c: 89:     GO_nDONE = 1;
  5051  0901  1283               	bcf	3,5	;RP0=0, select bank0
  5052  0902  1303               	bcf	3,6	;RP1=0, select bank0
  5053  0903  151F               	bsf	31,2	;volatile
  5054  0904                     l139:	
  5055                           ;Test_A4988.c: 90:     while(GO_nDONE);
  5056                           
  5057  0904  191F               	btfsc	31,2	;volatile
  5058  0905  2904               	goto	l139
  5059                           
  5060                           ;Test_A4988.c: 91:     N = ADRESH;
  5061  0906  081E               	movf	30,w	;volatile
  5062  0907  00F4               	movwf	??_Read_ADC
  5063  0908  01F5               	clrf	??_Read_ADC+1
  5064  0909  0874               	movf	??_Read_ADC,w
  5065  090A  00F8               	movwf	Read_ADC@N
  5066  090B  0875               	movf	??_Read_ADC+1,w
  5067  090C  00F9               	movwf	Read_ADC@N+1
  5068                           
  5069                           ;Test_A4988.c: 92:     return ((N<<8)+ADRESL);
  5070  090D  0878               	movf	Read_ADC@N,w
  5071  090E  00F5               	movwf	??_Read_ADC+1
  5072  090F  01F4               	clrf	??_Read_ADC
  5073  0910  1683               	bsf	3,5	;RP0=1, select bank1
  5074  0911  1303               	bcf	3,6	;RP1=0, select bank1
  5075  0912  081E               	movf	30,w	;volatile
  5076  0913  0774               	addwf	??_Read_ADC,w
  5077  0914  00F6               	movwf	??_Read_ADC+2
  5078  0915  3000               	movlw	0
  5079  0916  1803               	skipnc
  5080  0917  3001               	movlw	1
  5081  0918  0775               	addwf	??_Read_ADC+1,w
  5082  0919  00F7               	movwf	??_Read_ADC+3
  5083  091A  0876               	movf	??_Read_ADC+2,w
  5084  091B  00F2               	movwf	?_Read_ADC
  5085  091C  0877               	movf	??_Read_ADC+3,w
  5086  091D  00F3               	movwf	?_Read_ADC+1
  5087  091E  0008               	return
  5088  091F                     __end_of_Read_ADC:	
  5089                           
  5090                           	psect	text14
  5091  0850                     __ptext14:	
  5092 ;; *************** function _Lcd_Set_Port *****************
  5093 ;; Defined at:
  5094 ;;		line 116 in file "lcd4.c"
  5095 ;; Parameters:    Size  Location     Type
  5096 ;;  a               1    wreg     unsigned char 
  5097 ;; Auto vars:     Size  Location     Type
  5098 ;;  a               1    4[COMMON] unsigned char 
  5099 ;; Return value:  Size  Location     Type
  5100 ;;                  1    wreg      void 
  5101 ;; Registers used:
  5102 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5103 ;; Tracked objects:
  5104 ;;		On entry : 0/0
  5105 ;;		On exit  : 0/0
  5106 ;;		Unchanged: 0/0
  5107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5108 ;;      Params:         0       0       0       0       0
  5109 ;;      Locals:         1       0       0       0       0
  5110 ;;      Temps:          2       0       0       0       0
  5111 ;;      Totals:         3       0       0       0       0
  5112 ;;Total ram usage:        3 bytes
  5113 ;; Hardware stack levels used:    1
  5114 ;; Hardware stack levels required when called:    1
  5115 ;; This function calls:
  5116 ;;		Nothing
  5117 ;; This function is called by:
  5118 ;;		_main
  5119 ;; This function uses a non-reentrant model
  5120 ;;
  5121                           
  5122                           
  5123                           ;psect for function _Lcd_Set_Port
  5124  0850                     _Lcd_Set_Port:	
  5125                           
  5126                           ;incstack = 0
  5127                           ; Regs used in _Lcd_Set_Port: [wreg-fsr0h+status,2+status,0]
  5128                           ;Lcd_Set_Port@a stored from wreg
  5129  0850  00F4               	movwf	Lcd_Set_Port@a
  5130                           
  5131                           ;lcd4.c: 116: void Lcd_Set_Port(unsigned char a);lcd4.c: 117: {;lcd4.c: 118:     switch 
      +                          (a)
  5132  0851  2862               	goto	l1997
  5133  0852                     l1987:	
  5134                           
  5135                           ;lcd4.c: 121:             TRISA = 0x00;
  5136  0852  1683               	bsf	3,5	;RP0=1, select bank1
  5137  0853  1303               	bcf	3,6	;RP1=0, select bank1
  5138  0854  0185               	clrf	5	;volatile
  5139                           
  5140                           ;lcd4.c: 122:             break;
  5141  0855  0008               	return
  5142  0856                     l1989:	
  5143                           
  5144                           ;lcd4.c: 124:             TRISB = 0x00;
  5145  0856  1683               	bsf	3,5	;RP0=1, select bank1
  5146  0857  1303               	bcf	3,6	;RP1=0, select bank1
  5147  0858  0186               	clrf	6	;volatile
  5148                           
  5149                           ;lcd4.c: 125:             break;
  5150  0859  0008               	return
  5151  085A                     l1991:	
  5152                           
  5153                           ;lcd4.c: 127:             TRISC = 0x00;
  5154  085A  1683               	bsf	3,5	;RP0=1, select bank1
  5155  085B  1303               	bcf	3,6	;RP1=0, select bank1
  5156  085C  0187               	clrf	7	;volatile
  5157                           
  5158                           ;lcd4.c: 128:             break;
  5159  085D  0008               	return
  5160  085E                     l1993:	
  5161                           
  5162                           ;lcd4.c: 130:             TRISD = 0x00;
  5163  085E  1683               	bsf	3,5	;RP0=1, select bank1
  5164  085F  1303               	bcf	3,6	;RP1=0, select bank1
  5165  0860  0188               	clrf	8	;volatile
  5166                           
  5167                           ;lcd4.c: 131:             break;
  5168  0861  0008               	return
  5169  0862                     l1997:	
  5170  0862  0874               	movf	Lcd_Set_Port@a,w
  5171  0863  00F2               	movwf	??_Lcd_Set_Port
  5172  0864  01F3               	clrf	??_Lcd_Set_Port+1
  5173                           
  5174                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5175                           ; Switch size 1, requested type "simple"
  5176                           ; Number of cases is 1, Range of values is 0 to 0
  5177                           ; switch strategies available:
  5178                           ; Name         Instructions Cycles
  5179                           ; simple_byte            4     3 (average)
  5180                           ; direct_byte           11     8 (fixed)
  5181                           ; jumptable            260     6 (fixed)
  5182                           ;	Chosen strategy is simple_byte
  5183  0865  0873               	movf	??_Lcd_Set_Port+1,w
  5184  0866  3A00               	xorlw	0	; case 0
  5185  0867  1903               	skipnz
  5186  0868  286A               	goto	l2771
  5187  0869  2878               	goto	l239
  5188  086A                     l2771:	
  5189                           
  5190                           ; Switch size 1, requested type "simple"
  5191                           ; Number of cases is 4, Range of values is 65 to 68
  5192                           ; switch strategies available:
  5193                           ; Name         Instructions Cycles
  5194                           ; simple_byte           13     7 (average)
  5195                           ; direct_byte           23    11 (fixed)
  5196                           ; jumptable            263     9 (fixed)
  5197                           ;	Chosen strategy is simple_byte
  5198  086A  0872               	movf	??_Lcd_Set_Port,w
  5199  086B  3A41               	xorlw	65	; case 65
  5200  086C  1903               	skipnz
  5201  086D  2852               	goto	l1987
  5202  086E  3A03               	xorlw	3	; case 66
  5203  086F  1903               	skipnz
  5204  0870  2856               	goto	l1989
  5205  0871  3A01               	xorlw	1	; case 67
  5206  0872  1903               	skipnz
  5207  0873  285A               	goto	l1991
  5208  0874  3A07               	xorlw	7	; case 68
  5209  0875  1903               	skipnz
  5210  0876  285E               	goto	l1993
  5211  0877  2878               	goto	l239
  5212  0878                     l239:	
  5213  0878  0008               	return
  5214  0879                     __end_of_Lcd_Set_Port:	
  5215                           
  5216                           	psect	text15
  5217  09F2                     __ptext15:	
  5218 ;; *************** function _Lcd_Init *****************
  5219 ;; Defined at:
  5220 ;;		line 63 in file "lcd4.c"
  5221 ;; Parameters:    Size  Location     Type
  5222 ;;		None
  5223 ;; Auto vars:     Size  Location     Type
  5224 ;;		None
  5225 ;; Return value:  Size  Location     Type
  5226 ;;                  1    wreg      void 
  5227 ;; Registers used:
  5228 ;;		wreg, status,2, status,0, pclath, cstack
  5229 ;; Tracked objects:
  5230 ;;		On entry : 0/0
  5231 ;;		On exit  : 0/0
  5232 ;;		Unchanged: 0/0
  5233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5234 ;;      Params:         0       0       0       0       0
  5235 ;;      Locals:         0       0       0       0       0
  5236 ;;      Temps:          2       0       0       0       0
  5237 ;;      Totals:         2       0       0       0       0
  5238 ;;Total ram usage:        2 bytes
  5239 ;; Hardware stack levels used:    1
  5240 ;; Hardware stack levels required when called:    3
  5241 ;; This function calls:
  5242 ;;		_Lcd_Cmd
  5243 ;;		_Lcd_Port
  5244 ;; This function is called by:
  5245 ;;		_main
  5246 ;; This function uses a non-reentrant model
  5247 ;;
  5248                           
  5249                           
  5250                           ;psect for function _Lcd_Init
  5251  09F2                     _Lcd_Init:	
  5252                           
  5253                           ;lcd4.c: 65:   Lcd_Port(0x00);
  5254                           
  5255                           ;incstack = 0
  5256                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  5257  09F2  3000               	movlw	0
  5258  09F3  160A  118A  278B  120A  158A  	fcall	_Lcd_Port
  5259                           
  5260                           ;lcd4.c: 66:    _delay((unsigned long)((20)*(20000000/4000.0)));
  5261  09F8  3082               	movlw	130
  5262  09F9  00F7               	movwf	??_Lcd_Init+1
  5263  09FA  30DD               	movlw	221
  5264  09FB  00F6               	movwf	??_Lcd_Init
  5265  09FC                     u3977:	
  5266  09FC  0BF6               	decfsz	??_Lcd_Init,f
  5267  09FD  29FC               	goto	u3977
  5268  09FE  0BF7               	decfsz	??_Lcd_Init+1,f
  5269  09FF  29FC               	goto	u3977
  5270  0A00  2A01               	nop2
  5271                           
  5272                           ;lcd4.c: 67:   Lcd_Cmd(0x03);
  5273  0A01  3003               	movlw	3
  5274  0A02  160A  118A  27A5  120A  158A  	fcall	_Lcd_Cmd
  5275                           
  5276                           ;lcd4.c: 68:  _delay((unsigned long)((5)*(20000000/4000.0)));
  5277  0A07  3021               	movlw	33
  5278  0A08  00F7               	movwf	??_Lcd_Init+1
  5279  0A09  3076               	movlw	118
  5280  0A0A  00F6               	movwf	??_Lcd_Init
  5281  0A0B                     u3987:	
  5282  0A0B  0BF6               	decfsz	??_Lcd_Init,f
  5283  0A0C  2A0B               	goto	u3987
  5284  0A0D  0BF7               	decfsz	??_Lcd_Init+1,f
  5285  0A0E  2A0B               	goto	u3987
  5286  0A0F  0000               	nop
  5287                           
  5288                           ;lcd4.c: 69:   Lcd_Cmd(0x03);
  5289  0A10  3003               	movlw	3
  5290  0A11  160A  118A  27A5  120A  158A  	fcall	_Lcd_Cmd
  5291                           
  5292                           ;lcd4.c: 70:  _delay((unsigned long)((11)*(20000000/4000.0)));
  5293  0A16  3048               	movlw	72
  5294  0A17  00F7               	movwf	??_Lcd_Init+1
  5295  0A18  306C               	movlw	108
  5296  0A19  00F6               	movwf	??_Lcd_Init
  5297  0A1A                     u3997:	
  5298  0A1A  0BF6               	decfsz	??_Lcd_Init,f
  5299  0A1B  2A1A               	goto	u3997
  5300  0A1C  0BF7               	decfsz	??_Lcd_Init+1,f
  5301  0A1D  2A1A               	goto	u3997
  5302  0A1E  0000               	nop
  5303                           
  5304                           ;lcd4.c: 71:   Lcd_Cmd(0x03);
  5305  0A1F  3003               	movlw	3
  5306  0A20  160A  118A  27A5  120A  158A  	fcall	_Lcd_Cmd
  5307                           
  5308                           ;lcd4.c: 73:   Lcd_Cmd(0x02);
  5309  0A25  3002               	movlw	2
  5310  0A26  160A  118A  27A5  120A  158A  	fcall	_Lcd_Cmd
  5311                           
  5312                           ;lcd4.c: 74:   Lcd_Cmd(0x02);
  5313  0A2B  3002               	movlw	2
  5314  0A2C  160A  118A  27A5  120A  158A  	fcall	_Lcd_Cmd
  5315                           
  5316                           ;lcd4.c: 75:   Lcd_Cmd(0x08);
  5317  0A31  3008               	movlw	8
  5318  0A32  160A  118A  27A5  120A  158A  	fcall	_Lcd_Cmd
  5319                           
  5320                           ;lcd4.c: 76:   Lcd_Cmd(0x00);
  5321  0A37  3000               	movlw	0
  5322  0A38  160A  118A  27A5  120A  158A  	fcall	_Lcd_Cmd
  5323                           
  5324                           ;lcd4.c: 77:   Lcd_Cmd(0x0C);
  5325  0A3D  300C               	movlw	12
  5326  0A3E  160A  118A  27A5  120A  158A  	fcall	_Lcd_Cmd
  5327                           
  5328                           ;lcd4.c: 78:   Lcd_Cmd(0x00);
  5329  0A43  3000               	movlw	0
  5330  0A44  160A  118A  27A5  120A  158A  	fcall	_Lcd_Cmd
  5331                           
  5332                           ;lcd4.c: 79:   Lcd_Cmd(0x06);
  5333  0A49  3006               	movlw	6
  5334  0A4A  160A  118A  27A5   	fcall	_Lcd_Cmd
  5335  0A4D  0008               	return
  5336  0A4E                     __end_of_Lcd_Init:	
  5337                           
  5338                           	psect	text16
  5339  0D0B                     __ptext16:	
  5340 ;; *************** function _Lcd_Display *****************
  5341 ;; Defined at:
  5342 ;;		line 95 in file "Test_A4988.c"
  5343 ;; Parameters:    Size  Location     Type
  5344 ;;  speed_feel      2    4[BANK0 ] unsigned int 
  5345 ;;  speed           2    6[BANK0 ] unsigned int 
  5346 ;; Auto vars:     Size  Location     Type
  5347 ;;		None
  5348 ;; Return value:  Size  Location     Type
  5349 ;;                  1    wreg      void 
  5350 ;; Registers used:
  5351 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5352 ;; Tracked objects:
  5353 ;;		On entry : 0/0
  5354 ;;		On exit  : 0/0
  5355 ;;		Unchanged: 0/0
  5356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5357 ;;      Params:         0       4       0       0       0
  5358 ;;      Locals:         0       0       0       0       0
  5359 ;;      Temps:          0       1       0       0       0
  5360 ;;      Totals:         0       5       0       0       0
  5361 ;;Total ram usage:        5 bytes
  5362 ;; Hardware stack levels used:    1
  5363 ;; Hardware stack levels required when called:    4
  5364 ;; This function calls:
  5365 ;;		_Lcd_Set_Cursor
  5366 ;;		_Lcd_Write_Char
  5367 ;;		_Lcd_Write_String
  5368 ;;		___lwdiv
  5369 ;;		___lwmod
  5370 ;; This function is called by:
  5371 ;;		_main
  5372 ;; This function uses a non-reentrant model
  5373 ;;
  5374                           
  5375                           
  5376                           ;psect for function _Lcd_Display
  5377  0D0B                     _Lcd_Display:	
  5378                           
  5379                           ;Test_A4988.c: 95: void Lcd_Display(unsigned int speed_feel,unsigned int speed);Test_A49
      +                          88.c: 96: {;Test_A4988.c: 97:     Lcd_Set_Cursor(1,7);
  5380                           
  5381                           ;incstack = 0
  5382                           ; Regs used in _Lcd_Display: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5383  0D0B  3007               	movlw	7
  5384  0D0C  1283               	bcf	3,5	;RP0=0, select bank0
  5385  0D0D  1303               	bcf	3,6	;RP1=0, select bank0
  5386  0D0E  00A8               	movwf	??_Lcd_Display
  5387  0D0F  0828               	movf	??_Lcd_Display,w
  5388  0D10  00F6               	movwf	Lcd_Set_Cursor@b
  5389  0D11  3001               	movlw	1
  5390  0D12  120A  158A  21A2  120A  158A  	fcall	_Lcd_Set_Cursor
  5391                           
  5392                           ;Test_A4988.c: 98:     if(speed_feel == 0)
  5393  0D17  1283               	bcf	3,5	;RP0=0, select bank0
  5394  0D18  1303               	bcf	3,6	;RP1=0, select bank0
  5395  0D19  0824               	movf	Lcd_Display@speed_feel,w
  5396  0D1A  0425               	iorwf	Lcd_Display@speed_feel+1,w
  5397  0D1B  1D03               	btfss	3,2
  5398  0D1C  2D24               	goto	l2083
  5399                           
  5400                           ;Test_A4988.c: 99:     {;Test_A4988.c: 100:         Lcd_Write_String("ERRO");
  5401  0D1D  3020               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  5402  0D1E  160A  118A  27DE  120A  158A  	fcall	_Lcd_Write_String
  5403                           
  5404                           ;Test_A4988.c: 101:     }
  5405  0D23  2D77               	goto	l146
  5406  0D24                     l2083:	
  5407                           
  5408                           ;Test_A4988.c: 103:     {;Test_A4988.c: 104:         Lcd_Write_Char(speed_feel/100+48);
  5409  0D24  3064               	movlw	100
  5410  0D25  00F8               	movwf	___lwdiv@divisor
  5411  0D26  3000               	movlw	0
  5412  0D27  00F9               	movwf	___lwdiv@divisor+1
  5413  0D28  0825               	movf	Lcd_Display@speed_feel+1,w
  5414  0D29  00FB               	movwf	___lwdiv@dividend+1
  5415  0D2A  0824               	movf	Lcd_Display@speed_feel,w
  5416  0D2B  00FA               	movwf	___lwdiv@dividend
  5417  0D2C  120A  158A  211F  120A  158A  	fcall	___lwdiv
  5418  0D31  0878               	movf	?___lwdiv,w
  5419  0D32  3E30               	addlw	48
  5420  0D33  120A  158A  20AB  120A  158A  	fcall	_Lcd_Write_Char
  5421                           
  5422                           ;Test_A4988.c: 105:         Lcd_Write_Char(speed_feel%100/10+48);
  5423  0D38  300A               	movlw	10
  5424  0D39  00F8               	movwf	___lwdiv@divisor
  5425  0D3A  3000               	movlw	0
  5426  0D3B  00F9               	movwf	___lwdiv@divisor+1
  5427  0D3C  1283               	bcf	3,5	;RP0=0, select bank0
  5428  0D3D  1303               	bcf	3,6	;RP1=0, select bank0
  5429  0D3E  0825               	movf	Lcd_Display@speed_feel+1,w
  5430  0D3F  00F5               	movwf	___lwmod@dividend+1
  5431  0D40  0824               	movf	Lcd_Display@speed_feel,w
  5432  0D41  00F4               	movwf	___lwmod@dividend
  5433  0D42  3064               	movlw	100
  5434  0D43  00F2               	movwf	___lwmod@divisor
  5435  0D44  3000               	movlw	0
  5436  0D45  00F3               	movwf	___lwmod@divisor+1
  5437  0D46  120A  158A  2079  120A  158A  	fcall	___lwmod
  5438  0D4B  0873               	movf	?___lwmod+1,w
  5439  0D4C  00FB               	movwf	___lwdiv@dividend+1
  5440  0D4D  0872               	movf	?___lwmod,w
  5441  0D4E  00FA               	movwf	___lwdiv@dividend
  5442  0D4F  120A  158A  211F  120A  158A  	fcall	___lwdiv
  5443  0D54  0878               	movf	?___lwdiv,w
  5444  0D55  3E30               	addlw	48
  5445  0D56  120A  158A  20AB  120A  158A  	fcall	_Lcd_Write_Char
  5446                           
  5447                           ;Test_A4988.c: 106:         Lcd_Write_Char(speed_feel%10+48);
  5448  0D5B  300A               	movlw	10
  5449  0D5C  00F2               	movwf	___lwmod@divisor
  5450  0D5D  3000               	movlw	0
  5451  0D5E  00F3               	movwf	___lwmod@divisor+1
  5452  0D5F  1283               	bcf	3,5	;RP0=0, select bank0
  5453  0D60  1303               	bcf	3,6	;RP1=0, select bank0
  5454  0D61  0825               	movf	Lcd_Display@speed_feel+1,w
  5455  0D62  00F5               	movwf	___lwmod@dividend+1
  5456  0D63  0824               	movf	Lcd_Display@speed_feel,w
  5457  0D64  00F4               	movwf	___lwmod@dividend
  5458  0D65  120A  158A  2079  120A  158A  	fcall	___lwmod
  5459  0D6A  0872               	movf	?___lwmod,w
  5460  0D6B  3E30               	addlw	48
  5461  0D6C  120A  158A  20AB  120A  158A  	fcall	_Lcd_Write_Char
  5462                           
  5463                           ;Test_A4988.c: 107:         Lcd_Write_Char(' ');
  5464  0D71  3020               	movlw	32
  5465  0D72  120A  158A  20AB  120A  158A  	fcall	_Lcd_Write_Char
  5466  0D77                     l146:	
  5467                           ;Test_A4988.c: 108:     }
  5468                           
  5469                           
  5470                           ;Test_A4988.c: 110:     Lcd_Set_Cursor(2,9);
  5471  0D77  3009               	movlw	9
  5472  0D78  1283               	bcf	3,5	;RP0=0, select bank0
  5473  0D79  1303               	bcf	3,6	;RP1=0, select bank0
  5474  0D7A  00A8               	movwf	??_Lcd_Display
  5475  0D7B  0828               	movf	??_Lcd_Display,w
  5476  0D7C  00F6               	movwf	Lcd_Set_Cursor@b
  5477  0D7D  3002               	movlw	2
  5478  0D7E  120A  158A  21A2  120A  158A  	fcall	_Lcd_Set_Cursor
  5479                           
  5480                           ;Test_A4988.c: 111:     Lcd_Write_Char(speed/100+48);
  5481  0D83  3064               	movlw	100
  5482  0D84  00F8               	movwf	___lwdiv@divisor
  5483  0D85  3000               	movlw	0
  5484  0D86  00F9               	movwf	___lwdiv@divisor+1
  5485  0D87  1283               	bcf	3,5	;RP0=0, select bank0
  5486  0D88  1303               	bcf	3,6	;RP1=0, select bank0
  5487  0D89  0827               	movf	Lcd_Display@speed+1,w
  5488  0D8A  00FB               	movwf	___lwdiv@dividend+1
  5489  0D8B  0826               	movf	Lcd_Display@speed,w
  5490  0D8C  00FA               	movwf	___lwdiv@dividend
  5491  0D8D  120A  158A  211F  120A  158A  	fcall	___lwdiv
  5492  0D92  0878               	movf	?___lwdiv,w
  5493  0D93  3E30               	addlw	48
  5494  0D94  120A  158A  20AB  120A  158A  	fcall	_Lcd_Write_Char
  5495                           
  5496                           ;Test_A4988.c: 112:     Lcd_Write_Char(speed%100/10+48);
  5497  0D99  300A               	movlw	10
  5498  0D9A  00F8               	movwf	___lwdiv@divisor
  5499  0D9B  3000               	movlw	0
  5500  0D9C  00F9               	movwf	___lwdiv@divisor+1
  5501  0D9D  1283               	bcf	3,5	;RP0=0, select bank0
  5502  0D9E  1303               	bcf	3,6	;RP1=0, select bank0
  5503  0D9F  0827               	movf	Lcd_Display@speed+1,w
  5504  0DA0  00F5               	movwf	___lwmod@dividend+1
  5505  0DA1  0826               	movf	Lcd_Display@speed,w
  5506  0DA2  00F4               	movwf	___lwmod@dividend
  5507  0DA3  3064               	movlw	100
  5508  0DA4  00F2               	movwf	___lwmod@divisor
  5509  0DA5  3000               	movlw	0
  5510  0DA6  00F3               	movwf	___lwmod@divisor+1
  5511  0DA7  120A  158A  2079  120A  158A  	fcall	___lwmod
  5512  0DAC  0873               	movf	?___lwmod+1,w
  5513  0DAD  00FB               	movwf	___lwdiv@dividend+1
  5514  0DAE  0872               	movf	?___lwmod,w
  5515  0DAF  00FA               	movwf	___lwdiv@dividend
  5516  0DB0  120A  158A  211F  120A  158A  	fcall	___lwdiv
  5517  0DB5  0878               	movf	?___lwdiv,w
  5518  0DB6  3E30               	addlw	48
  5519  0DB7  120A  158A  20AB  120A  158A  	fcall	_Lcd_Write_Char
  5520                           
  5521                           ;Test_A4988.c: 113:     Lcd_Write_Char(speed%10+48);
  5522  0DBC  300A               	movlw	10
  5523  0DBD  00F2               	movwf	___lwmod@divisor
  5524  0DBE  3000               	movlw	0
  5525  0DBF  00F3               	movwf	___lwmod@divisor+1
  5526  0DC0  1283               	bcf	3,5	;RP0=0, select bank0
  5527  0DC1  1303               	bcf	3,6	;RP1=0, select bank0
  5528  0DC2  0827               	movf	Lcd_Display@speed+1,w
  5529  0DC3  00F5               	movwf	___lwmod@dividend+1
  5530  0DC4  0826               	movf	Lcd_Display@speed,w
  5531  0DC5  00F4               	movwf	___lwmod@dividend
  5532  0DC6  120A  158A  2079  120A  158A  	fcall	___lwmod
  5533  0DCB  0872               	movf	?___lwmod,w
  5534  0DCC  3E30               	addlw	48
  5535  0DCD  120A  158A  20AB   	fcall	_Lcd_Write_Char
  5536  0DD0  0008               	return
  5537  0DD1                     __end_of_Lcd_Display:	
  5538                           
  5539                           	psect	text17
  5540  0879                     __ptext17:	
  5541 ;; *************** function ___lwmod *****************
  5542 ;; Defined at:
  5543 ;;		line 5 in file "D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\lwmod.c"
  5544 ;; Parameters:    Size  Location     Type
  5545 ;;  divisor         2    2[COMMON] unsigned int 
  5546 ;;  dividend        2    4[COMMON] unsigned int 
  5547 ;; Auto vars:     Size  Location     Type
  5548 ;;  counter         1    7[COMMON] unsigned char 
  5549 ;; Return value:  Size  Location     Type
  5550 ;;                  2    2[COMMON] unsigned int 
  5551 ;; Registers used:
  5552 ;;		wreg, status,2, status,0
  5553 ;; Tracked objects:
  5554 ;;		On entry : 0/0
  5555 ;;		On exit  : 0/0
  5556 ;;		Unchanged: 0/0
  5557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5558 ;;      Params:         4       0       0       0       0
  5559 ;;      Locals:         1       0       0       0       0
  5560 ;;      Temps:          1       0       0       0       0
  5561 ;;      Totals:         6       0       0       0       0
  5562 ;;Total ram usage:        6 bytes
  5563 ;; Hardware stack levels used:    1
  5564 ;; Hardware stack levels required when called:    1
  5565 ;; This function calls:
  5566 ;;		Nothing
  5567 ;; This function is called by:
  5568 ;;		_Lcd_Display
  5569 ;; This function uses a non-reentrant model
  5570 ;;
  5571                           
  5572                           
  5573                           ;psect for function ___lwmod
  5574  0879                     ___lwmod:	
  5575                           
  5576                           ;incstack = 0
  5577                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5578  0879  0872               	movf	___lwmod@divisor,w
  5579  087A  0473               	iorwf	___lwmod@divisor+1,w
  5580  087B  1903               	btfsc	3,2
  5581  087C  28A6               	goto	l1967
  5582  087D  01F7               	clrf	___lwmod@counter
  5583  087E  0AF7               	incf	___lwmod@counter,f
  5584  087F                     l1957:	
  5585  087F  1BF3               	btfsc	___lwmod@divisor+1,7
  5586  0880  288D               	goto	l1959
  5587  0881  3001               	movlw	1
  5588  0882                     u2315:	
  5589  0882  1003               	clrc
  5590  0883  0DF2               	rlf	___lwmod@divisor,f
  5591  0884  0DF3               	rlf	___lwmod@divisor+1,f
  5592  0885  3EFF               	addlw	-1
  5593  0886  1D03               	skipz
  5594  0887  2882               	goto	u2315
  5595  0888  3001               	movlw	1
  5596  0889  00F6               	movwf	??___lwmod
  5597  088A  0876               	movf	??___lwmod,w
  5598  088B  07F7               	addwf	___lwmod@counter,f
  5599  088C  287F               	goto	l1957
  5600  088D                     l1959:	
  5601  088D  0873               	movf	___lwmod@divisor+1,w
  5602  088E  0275               	subwf	___lwmod@dividend+1,w
  5603  088F  1D03               	skipz
  5604  0890  2893               	goto	u2335
  5605  0891  0872               	movf	___lwmod@divisor,w
  5606  0892  0274               	subwf	___lwmod@dividend,w
  5607  0893                     u2335:	
  5608  0893  1C03               	skipc
  5609  0894  289B               	goto	l1963
  5610  0895  0872               	movf	___lwmod@divisor,w
  5611  0896  02F4               	subwf	___lwmod@dividend,f
  5612  0897  0873               	movf	___lwmod@divisor+1,w
  5613  0898  1C03               	skipc
  5614  0899  03F5               	decf	___lwmod@dividend+1,f
  5615  089A  02F5               	subwf	___lwmod@dividend+1,f
  5616  089B                     l1963:	
  5617  089B  3001               	movlw	1
  5618  089C                     u2345:	
  5619  089C  1003               	clrc
  5620  089D  0CF3               	rrf	___lwmod@divisor+1,f
  5621  089E  0CF2               	rrf	___lwmod@divisor,f
  5622  089F  3EFF               	addlw	-1
  5623  08A0  1D03               	skipz
  5624  08A1  289C               	goto	u2345
  5625  08A2  3001               	movlw	1
  5626  08A3  02F7               	subwf	___lwmod@counter,f
  5627  08A4  1D03               	btfss	3,2
  5628  08A5  288D               	goto	l1959
  5629  08A6                     l1967:	
  5630  08A6  0875               	movf	___lwmod@dividend+1,w
  5631  08A7  00F3               	movwf	?___lwmod+1
  5632  08A8  0874               	movf	___lwmod@dividend,w
  5633  08A9  00F2               	movwf	?___lwmod
  5634  08AA  0008               	return
  5635  08AB                     __end_of___lwmod:	
  5636                           
  5637                           	psect	text18
  5638  091F                     __ptext18:	
  5639 ;; *************** function ___lwdiv *****************
  5640 ;; Defined at:
  5641 ;;		line 5 in file "D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\lwdiv.c"
  5642 ;; Parameters:    Size  Location     Type
  5643 ;;  divisor         2    8[COMMON] unsigned int 
  5644 ;;  dividend        2   10[COMMON] unsigned int 
  5645 ;; Auto vars:     Size  Location     Type
  5646 ;;  quotient        2    1[BANK0 ] unsigned int 
  5647 ;;  counter         1    3[BANK0 ] unsigned char 
  5648 ;; Return value:  Size  Location     Type
  5649 ;;                  2    8[COMMON] unsigned int 
  5650 ;; Registers used:
  5651 ;;		wreg, status,2, status,0
  5652 ;; Tracked objects:
  5653 ;;		On entry : 0/0
  5654 ;;		On exit  : 0/0
  5655 ;;		Unchanged: 0/0
  5656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5657 ;;      Params:         4       0       0       0       0
  5658 ;;      Locals:         0       3       0       0       0
  5659 ;;      Temps:          0       1       0       0       0
  5660 ;;      Totals:         4       4       0       0       0
  5661 ;;Total ram usage:        8 bytes
  5662 ;; Hardware stack levels used:    1
  5663 ;; Hardware stack levels required when called:    1
  5664 ;; This function calls:
  5665 ;;		Nothing
  5666 ;; This function is called by:
  5667 ;;		_Lcd_Display
  5668 ;; This function uses a non-reentrant model
  5669 ;;
  5670                           
  5671                           
  5672                           ;psect for function ___lwdiv
  5673  091F                     ___lwdiv:	
  5674                           
  5675                           ;incstack = 0
  5676                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5677  091F  1283               	bcf	3,5	;RP0=0, select bank0
  5678  0920  1303               	bcf	3,6	;RP1=0, select bank0
  5679  0921  01A1               	clrf	___lwdiv@quotient
  5680  0922  01A2               	clrf	___lwdiv@quotient+1
  5681  0923  0878               	movf	___lwdiv@divisor,w
  5682  0924  0479               	iorwf	___lwdiv@divisor+1,w
  5683  0925  1903               	btfsc	3,2
  5684  0926  2958               	goto	l1945
  5685  0927  01A3               	clrf	___lwdiv@counter
  5686  0928  0AA3               	incf	___lwdiv@counter,f
  5687  0929                     l1933:	
  5688  0929  1BF9               	btfsc	___lwdiv@divisor+1,7
  5689  092A  2937               	goto	l1935
  5690  092B  3001               	movlw	1
  5691  092C                     u2245:	
  5692  092C  1003               	clrc
  5693  092D  0DF8               	rlf	___lwdiv@divisor,f
  5694  092E  0DF9               	rlf	___lwdiv@divisor+1,f
  5695  092F  3EFF               	addlw	-1
  5696  0930  1D03               	skipz
  5697  0931  292C               	goto	u2245
  5698  0932  3001               	movlw	1
  5699  0933  00A0               	movwf	??___lwdiv
  5700  0934  0820               	movf	??___lwdiv,w
  5701  0935  07A3               	addwf	___lwdiv@counter,f
  5702  0936  2929               	goto	l1933
  5703  0937                     l1935:	
  5704  0937  3001               	movlw	1
  5705  0938                     u2265:	
  5706  0938  1003               	clrc
  5707  0939  0DA1               	rlf	___lwdiv@quotient,f
  5708  093A  0DA2               	rlf	___lwdiv@quotient+1,f
  5709  093B  3EFF               	addlw	-1
  5710  093C  1D03               	skipz
  5711  093D  2938               	goto	u2265
  5712  093E  0879               	movf	___lwdiv@divisor+1,w
  5713  093F  027B               	subwf	___lwdiv@dividend+1,w
  5714  0940  1D03               	skipz
  5715  0941  2944               	goto	u2275
  5716  0942  0878               	movf	___lwdiv@divisor,w
  5717  0943  027A               	subwf	___lwdiv@dividend,w
  5718  0944                     u2275:	
  5719  0944  1C03               	skipc
  5720  0945  294D               	goto	l1941
  5721  0946  0878               	movf	___lwdiv@divisor,w
  5722  0947  02FA               	subwf	___lwdiv@dividend,f
  5723  0948  0879               	movf	___lwdiv@divisor+1,w
  5724  0949  1C03               	skipc
  5725  094A  03FB               	decf	___lwdiv@dividend+1,f
  5726  094B  02FB               	subwf	___lwdiv@dividend+1,f
  5727  094C  1421               	bsf	___lwdiv@quotient,0
  5728  094D                     l1941:	
  5729  094D  3001               	movlw	1
  5730  094E                     u2285:	
  5731  094E  1003               	clrc
  5732  094F  0CF9               	rrf	___lwdiv@divisor+1,f
  5733  0950  0CF8               	rrf	___lwdiv@divisor,f
  5734  0951  3EFF               	addlw	-1
  5735  0952  1D03               	skipz
  5736  0953  294E               	goto	u2285
  5737  0954  3001               	movlw	1
  5738  0955  02A3               	subwf	___lwdiv@counter,f
  5739  0956  1D03               	btfss	3,2
  5740  0957  2937               	goto	l1935
  5741  0958                     l1945:	
  5742  0958  0822               	movf	___lwdiv@quotient+1,w
  5743  0959  00F9               	movwf	?___lwdiv+1
  5744  095A  0821               	movf	___lwdiv@quotient,w
  5745  095B  00F8               	movwf	?___lwdiv
  5746  095C  0008               	return
  5747  095D                     __end_of___lwdiv:	
  5748                           
  5749                           	psect	text19
  5750  17DE                     __ptext19:	
  5751 ;; *************** function _Lcd_Write_String *****************
  5752 ;; Defined at:
  5753 ;;		line 98 in file "lcd4.c"
  5754 ;; Parameters:    Size  Location     Type
  5755 ;;  a               1    wreg     PTR unsigned char 
  5756 ;;		 -> STR_3(5), STR_2(16), STR_1(15), 
  5757 ;; Auto vars:     Size  Location     Type
  5758 ;;  a               1    9[COMMON] PTR unsigned char 
  5759 ;;		 -> STR_3(5), STR_2(16), STR_1(15), 
  5760 ;;  i               2    7[COMMON] int 
  5761 ;; Return value:  Size  Location     Type
  5762 ;;                  1    wreg      void 
  5763 ;; Registers used:
  5764 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5765 ;; Tracked objects:
  5766 ;;		On entry : 0/0
  5767 ;;		On exit  : 0/0
  5768 ;;		Unchanged: 0/0
  5769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5770 ;;      Params:         0       0       0       0       0
  5771 ;;      Locals:         3       0       0       0       0
  5772 ;;      Temps:          0       0       0       0       0
  5773 ;;      Totals:         3       0       0       0       0
  5774 ;;Total ram usage:        3 bytes
  5775 ;; Hardware stack levels used:    1
  5776 ;; Hardware stack levels required when called:    3
  5777 ;; This function calls:
  5778 ;;		_Lcd_Write_Char
  5779 ;; This function is called by:
  5780 ;;		_main
  5781 ;;		_Lcd_Display
  5782 ;; This function uses a non-reentrant model
  5783 ;;
  5784                           
  5785                           
  5786                           ;psect for function _Lcd_Write_String
  5787  17DE                     _Lcd_Write_String:	
  5788                           
  5789                           ;incstack = 0
  5790                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5791                           ;Lcd_Write_String@a stored from wreg
  5792  17DE  00F9               	movwf	Lcd_Write_String@a
  5793                           
  5794                           ;lcd4.c: 98: void Lcd_Write_String(char *a);lcd4.c: 99: {;lcd4.c: 100:  int i;;lcd4.c: 1
      +                          01:  for(i=0;a[i]!='\0';i++)
  5795  17DF  01F7               	clrf	Lcd_Write_String@i
  5796  17E0  01F8               	clrf	Lcd_Write_String@i+1
  5797  17E1                     l1847:	
  5798  17E1  0877               	movf	Lcd_Write_String@i,w
  5799  17E2  0779               	addwf	Lcd_Write_String@a,w
  5800  17E3  0084               	movwf	4
  5801  17E4  120A  158A  2000  160A  118A  	fcall	stringdir
  5802  17E9  3A00               	xorlw	0
  5803  17EA  1903               	btfsc	3,2
  5804  17EB  0008               	return
  5805                           
  5806                           ;lcd4.c: 102:     Lcd_Write_Char(a[i]);
  5807  17EC  0877               	movf	Lcd_Write_String@i,w
  5808  17ED  0779               	addwf	Lcd_Write_String@a,w
  5809  17EE  0084               	movwf	4
  5810  17EF  120A  158A  2000  160A  118A  	fcall	stringdir
  5811  17F4  120A  158A  20AB  160A  118A  	fcall	_Lcd_Write_Char
  5812  17F9  3001               	movlw	1
  5813  17FA  07F7               	addwf	Lcd_Write_String@i,f
  5814  17FB  1803               	skipnc
  5815  17FC  0AF8               	incf	Lcd_Write_String@i+1,f
  5816  17FD  3000               	movlw	0
  5817  17FE  07F8               	addwf	Lcd_Write_String@i+1,f
  5818  17FF  2FE1               	goto	l1847
  5819  1800                     __end_of_Lcd_Write_String:	
  5820                           
  5821                           	psect	text20
  5822  08AB                     __ptext20:	
  5823 ;; *************** function _Lcd_Write_Char *****************
  5824 ;; Defined at:
  5825 ;;		line 82 in file "lcd4.c"
  5826 ;; Parameters:    Size  Location     Type
  5827 ;;  a               1    wreg     unsigned char 
  5828 ;; Auto vars:     Size  Location     Type
  5829 ;;  a               1    6[COMMON] unsigned char 
  5830 ;;  y               1    5[COMMON] unsigned char 
  5831 ;;  temp            1    4[COMMON] unsigned char 
  5832 ;; Return value:  Size  Location     Type
  5833 ;;                  1    wreg      void 
  5834 ;; Registers used:
  5835 ;;		wreg, status,2, status,0, pclath, cstack
  5836 ;; Tracked objects:
  5837 ;;		On entry : 0/0
  5838 ;;		On exit  : 0/0
  5839 ;;		Unchanged: 0/0
  5840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5841 ;;      Params:         0       0       0       0       0
  5842 ;;      Locals:         3       0       0       0       0
  5843 ;;      Temps:          1       0       0       0       0
  5844 ;;      Totals:         4       0       0       0       0
  5845 ;;Total ram usage:        4 bytes
  5846 ;; Hardware stack levels used:    1
  5847 ;; Hardware stack levels required when called:    2
  5848 ;; This function calls:
  5849 ;;		_Lcd_Port
  5850 ;; This function is called by:
  5851 ;;		_Lcd_Display
  5852 ;;		_Lcd_Write_String
  5853 ;; This function uses a non-reentrant model
  5854 ;;
  5855                           
  5856                           
  5857                           ;psect for function _Lcd_Write_Char
  5858  08AB                     _Lcd_Write_Char:	
  5859                           
  5860                           ;incstack = 0
  5861                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  5862                           ;Lcd_Write_Char@a stored from wreg
  5863  08AB  00F6               	movwf	Lcd_Write_Char@a
  5864                           
  5865                           ;lcd4.c: 82: void Lcd_Write_Char(char a);lcd4.c: 83: {;lcd4.c: 84:    char temp,y;;lcd4.
      +                          c: 85:    temp = a&0x0F;
  5866  08AC  0876               	movf	Lcd_Write_Char@a,w
  5867  08AD  390F               	andlw	15
  5868  08AE  00F3               	movwf	??_Lcd_Write_Char
  5869  08AF  0873               	movf	??_Lcd_Write_Char,w
  5870  08B0  00F4               	movwf	Lcd_Write_Char@temp
  5871                           
  5872                           ;lcd4.c: 86:    y = a&0xF0;
  5873  08B1  0876               	movf	Lcd_Write_Char@a,w
  5874  08B2  39F0               	andlw	240
  5875  08B3  00F3               	movwf	??_Lcd_Write_Char
  5876  08B4  0873               	movf	??_Lcd_Write_Char,w
  5877  08B5  00F5               	movwf	Lcd_Write_Char@y
  5878                           
  5879                           ;lcd4.c: 87:    RD0 = 1;
  5880  08B6  1283               	bcf	3,5	;RP0=0, select bank0
  5881  08B7  1303               	bcf	3,6	;RP1=0, select bank0
  5882  08B8  1408               	bsf	8,0	;volatile
  5883                           
  5884                           ;lcd4.c: 88:    Lcd_Port(y>>4);
  5885  08B9  0875               	movf	Lcd_Write_Char@y,w
  5886  08BA  00F3               	movwf	??_Lcd_Write_Char
  5887  08BB  3004               	movlw	4
  5888  08BC                     u2025:	
  5889  08BC  1003               	clrc
  5890  08BD  0CF3               	rrf	??_Lcd_Write_Char,f
  5891  08BE  3EFF               	addlw	-1
  5892  08BF  1D03               	skipz
  5893  08C0  28BC               	goto	u2025
  5894  08C1  0873               	movf	??_Lcd_Write_Char,w
  5895  08C2  160A  118A  278B  120A  158A  	fcall	_Lcd_Port
  5896                           
  5897                           ;lcd4.c: 89:    RD1 = 1;
  5898  08C7  1283               	bcf	3,5	;RP0=0, select bank0
  5899  08C8  1303               	bcf	3,6	;RP1=0, select bank0
  5900  08C9  1488               	bsf	8,1	;volatile
  5901                           
  5902                           ;lcd4.c: 90:    _delay((unsigned long)((40)*(20000000/4000000.0)));
  5903  08CA  3042               	movlw	66
  5904  08CB  00F3               	movwf	??_Lcd_Write_Char
  5905  08CC                     u4007:	
  5906  08CC  0BF3               	decfsz	??_Lcd_Write_Char,f
  5907  08CD  28CC               	goto	u4007
  5908  08CE  0000               	nop
  5909                           
  5910                           ;lcd4.c: 91:    RD1 = 0;
  5911  08CF  1283               	bcf	3,5	;RP0=0, select bank0
  5912  08D0  1303               	bcf	3,6	;RP1=0, select bank0
  5913  08D1  1088               	bcf	8,1	;volatile
  5914                           
  5915                           ;lcd4.c: 92:    Lcd_Port(temp);
  5916  08D2  0874               	movf	Lcd_Write_Char@temp,w
  5917  08D3  160A  118A  278B  120A  158A  	fcall	_Lcd_Port
  5918                           
  5919                           ;lcd4.c: 93:    RD1 = 1;
  5920  08D8  1283               	bcf	3,5	;RP0=0, select bank0
  5921  08D9  1303               	bcf	3,6	;RP1=0, select bank0
  5922  08DA  1488               	bsf	8,1	;volatile
  5923                           
  5924                           ;lcd4.c: 94:    _delay((unsigned long)((40)*(20000000/4000000.0)));
  5925  08DB  3042               	movlw	66
  5926  08DC  00F3               	movwf	??_Lcd_Write_Char
  5927  08DD                     u4017:	
  5928  08DD  0BF3               	decfsz	??_Lcd_Write_Char,f
  5929  08DE  28DD               	goto	u4017
  5930  08DF  0000               	nop
  5931                           
  5932                           ;lcd4.c: 95:    RD1 = 0;
  5933  08E0  1283               	bcf	3,5	;RP0=0, select bank0
  5934  08E1  1303               	bcf	3,6	;RP1=0, select bank0
  5935  08E2  1088               	bcf	8,1	;volatile
  5936  08E3  0008               	return
  5937  08E4                     __end_of_Lcd_Write_Char:	
  5938                           
  5939                           	psect	text21
  5940  09A2                     __ptext21:	
  5941 ;; *************** function _Lcd_Set_Cursor *****************
  5942 ;; Defined at:
  5943 ;;		line 42 in file "lcd4.c"
  5944 ;; Parameters:    Size  Location     Type
  5945 ;;  a               1    wreg     unsigned char 
  5946 ;;  b               1    6[COMMON] unsigned char 
  5947 ;; Auto vars:     Size  Location     Type
  5948 ;;  a               1    0[BANK0 ] unsigned char 
  5949 ;;  temp            1    3[BANK0 ] unsigned char 
  5950 ;;  y               1    2[BANK0 ] unsigned char 
  5951 ;;  z               1    1[BANK0 ] unsigned char 
  5952 ;; Return value:  Size  Location     Type
  5953 ;;                  1    wreg      void 
  5954 ;; Registers used:
  5955 ;;		wreg, status,2, status,0, pclath, cstack
  5956 ;; Tracked objects:
  5957 ;;		On entry : 0/0
  5958 ;;		On exit  : 0/0
  5959 ;;		Unchanged: 0/0
  5960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5961 ;;      Params:         1       0       0       0       0
  5962 ;;      Locals:         0       4       0       0       0
  5963 ;;      Temps:          2       0       0       0       0
  5964 ;;      Totals:         3       4       0       0       0
  5965 ;;Total ram usage:        7 bytes
  5966 ;; Hardware stack levels used:    1
  5967 ;; Hardware stack levels required when called:    3
  5968 ;; This function calls:
  5969 ;;		_Lcd_Cmd
  5970 ;; This function is called by:
  5971 ;;		_main
  5972 ;;		_Lcd_Display
  5973 ;; This function uses a non-reentrant model
  5974 ;;
  5975                           
  5976                           
  5977                           ;psect for function _Lcd_Set_Cursor
  5978  09A2                     _Lcd_Set_Cursor:	
  5979                           
  5980                           ;incstack = 0
  5981                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  5982                           ;Lcd_Set_Cursor@a stored from wreg
  5983  09A2  1283               	bcf	3,5	;RP0=0, select bank0
  5984  09A3  1303               	bcf	3,6	;RP1=0, select bank0
  5985  09A4  00A0               	movwf	Lcd_Set_Cursor@a
  5986                           
  5987                           ;lcd4.c: 42: void Lcd_Set_Cursor(char a, char b);lcd4.c: 43: {;lcd4.c: 44:  char temp,z,
      +                          y;;lcd4.c: 45:  if(a == 1)
  5988  09A5  0320               	decf	Lcd_Set_Cursor@a,w
  5989  09A6  1D03               	btfss	3,2
  5990  09A7  29CB               	goto	l1859
  5991                           
  5992                           ;lcd4.c: 46:  {;lcd4.c: 47:    temp = 0x80 + b - 1;
  5993  09A8  0876               	movf	Lcd_Set_Cursor@b,w
  5994  09A9  3E7F               	addlw	127
  5995  09AA  00F7               	movwf	??_Lcd_Set_Cursor
  5996  09AB  0877               	movf	??_Lcd_Set_Cursor,w
  5997  09AC  00A3               	movwf	Lcd_Set_Cursor@temp
  5998                           
  5999                           ;lcd4.c: 48:   z = temp>>4;
  6000  09AD  0823               	movf	Lcd_Set_Cursor@temp,w
  6001  09AE  00F7               	movwf	??_Lcd_Set_Cursor
  6002  09AF  3004               	movlw	4
  6003  09B0                     u2055:	
  6004  09B0  1003               	clrc
  6005  09B1  0CF7               	rrf	??_Lcd_Set_Cursor,f
  6006  09B2  3EFF               	addlw	-1
  6007  09B3  1D03               	skipz
  6008  09B4  29B0               	goto	u2055
  6009  09B5  0877               	movf	??_Lcd_Set_Cursor,w
  6010  09B6  00F8               	movwf	??_Lcd_Set_Cursor+1
  6011  09B7  0878               	movf	??_Lcd_Set_Cursor+1,w
  6012  09B8  00A1               	movwf	Lcd_Set_Cursor@z
  6013                           
  6014                           ;lcd4.c: 49:   y = temp & 0x0F;
  6015  09B9  0823               	movf	Lcd_Set_Cursor@temp,w
  6016  09BA  390F               	andlw	15
  6017  09BB  00F7               	movwf	??_Lcd_Set_Cursor
  6018  09BC  0877               	movf	??_Lcd_Set_Cursor,w
  6019  09BD  00A2               	movwf	Lcd_Set_Cursor@y
  6020                           
  6021                           ;lcd4.c: 50:   Lcd_Cmd(z);
  6022  09BE  0821               	movf	Lcd_Set_Cursor@z,w
  6023  09BF  160A  118A  27A5  120A  158A  	fcall	_Lcd_Cmd
  6024                           
  6025                           ;lcd4.c: 51:   Lcd_Cmd(y);
  6026  09C4  1283               	bcf	3,5	;RP0=0, select bank0
  6027  09C5  1303               	bcf	3,6	;RP1=0, select bank0
  6028  09C6  0822               	movf	Lcd_Set_Cursor@y,w
  6029  09C7  160A  118A  27A5   	fcall	_Lcd_Cmd
  6030                           
  6031                           ;lcd4.c: 52:  }
  6032  09CA  0008               	return
  6033  09CB                     l1859:	
  6034  09CB  3002               	movlw	2
  6035  09CC  0620               	xorwf	Lcd_Set_Cursor@a,w
  6036  09CD  1D03               	btfss	3,2
  6037  09CE  0008               	return
  6038                           
  6039                           ;lcd4.c: 54:  {;lcd4.c: 55:   temp = 0xC0 + b - 1;
  6040  09CF  0876               	movf	Lcd_Set_Cursor@b,w
  6041  09D0  3EBF               	addlw	191
  6042  09D1  00F7               	movwf	??_Lcd_Set_Cursor
  6043  09D2  0877               	movf	??_Lcd_Set_Cursor,w
  6044  09D3  00A3               	movwf	Lcd_Set_Cursor@temp
  6045                           
  6046                           ;lcd4.c: 56:   z = temp>>4;
  6047  09D4  0823               	movf	Lcd_Set_Cursor@temp,w
  6048  09D5  00F7               	movwf	??_Lcd_Set_Cursor
  6049  09D6  3004               	movlw	4
  6050  09D7                     u2075:	
  6051  09D7  1003               	clrc
  6052  09D8  0CF7               	rrf	??_Lcd_Set_Cursor,f
  6053  09D9  3EFF               	addlw	-1
  6054  09DA  1D03               	skipz
  6055  09DB  29D7               	goto	u2075
  6056  09DC  0877               	movf	??_Lcd_Set_Cursor,w
  6057  09DD  00F8               	movwf	??_Lcd_Set_Cursor+1
  6058  09DE  0878               	movf	??_Lcd_Set_Cursor+1,w
  6059  09DF  00A1               	movwf	Lcd_Set_Cursor@z
  6060                           
  6061                           ;lcd4.c: 57:   y = temp & 0x0F;
  6062  09E0  0823               	movf	Lcd_Set_Cursor@temp,w
  6063  09E1  390F               	andlw	15
  6064  09E2  00F7               	movwf	??_Lcd_Set_Cursor
  6065  09E3  0877               	movf	??_Lcd_Set_Cursor,w
  6066  09E4  00A2               	movwf	Lcd_Set_Cursor@y
  6067                           
  6068                           ;lcd4.c: 58:   Lcd_Cmd(z);
  6069  09E5  0821               	movf	Lcd_Set_Cursor@z,w
  6070  09E6  160A  118A  27A5  120A  158A  	fcall	_Lcd_Cmd
  6071                           
  6072                           ;lcd4.c: 59:   Lcd_Cmd(y);
  6073  09EB  1283               	bcf	3,5	;RP0=0, select bank0
  6074  09EC  1303               	bcf	3,6	;RP1=0, select bank0
  6075  09ED  0822               	movf	Lcd_Set_Cursor@y,w
  6076  09EE  160A  118A  27A5   	fcall	_Lcd_Cmd
  6077  09F1  0008               	return
  6078  09F2                     __end_of_Lcd_Set_Cursor:	
  6079                           
  6080                           	psect	text22
  6081  17A5                     __ptext22:	
  6082 ;; *************** function _Lcd_Cmd *****************
  6083 ;; Defined at:
  6084 ;;		line 27 in file "lcd4.c"
  6085 ;; Parameters:    Size  Location     Type
  6086 ;;  a               1    wreg     unsigned char 
  6087 ;; Auto vars:     Size  Location     Type
  6088 ;;  a               1    5[COMMON] unsigned char 
  6089 ;; Return value:  Size  Location     Type
  6090 ;;                  1    wreg      void 
  6091 ;; Registers used:
  6092 ;;		wreg, status,2, status,0, pclath, cstack
  6093 ;; Tracked objects:
  6094 ;;		On entry : 0/0
  6095 ;;		On exit  : 0/0
  6096 ;;		Unchanged: 0/0
  6097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6098 ;;      Params:         0       0       0       0       0
  6099 ;;      Locals:         1       0       0       0       0
  6100 ;;      Temps:          2       0       0       0       0
  6101 ;;      Totals:         3       0       0       0       0
  6102 ;;Total ram usage:        3 bytes
  6103 ;; Hardware stack levels used:    1
  6104 ;; Hardware stack levels required when called:    2
  6105 ;; This function calls:
  6106 ;;		_Lcd_Port
  6107 ;; This function is called by:
  6108 ;;		_Lcd_Set_Cursor
  6109 ;;		_Lcd_Init
  6110 ;;		_Lcd_Clear
  6111 ;;		_Lcd_Shift_Right
  6112 ;;		_Lcd_Shift_Left
  6113 ;; This function uses a non-reentrant model
  6114 ;;
  6115                           
  6116                           
  6117                           ;psect for function _Lcd_Cmd
  6118  17A5                     _Lcd_Cmd:	
  6119                           
  6120                           ;incstack = 0
  6121                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  6122                           ;Lcd_Cmd@a stored from wreg
  6123  17A5  00F5               	movwf	Lcd_Cmd@a
  6124                           
  6125                           ;lcd4.c: 27: void Lcd_Cmd(char a);lcd4.c: 28: {;lcd4.c: 29:  RD0 = 0;
  6126  17A6  1283               	bcf	3,5	;RP0=0, select bank0
  6127  17A7  1303               	bcf	3,6	;RP1=0, select bank0
  6128  17A8  1008               	bcf	8,0	;volatile
  6129                           
  6130                           ;lcd4.c: 30:  Lcd_Port(a);
  6131  17A9  0875               	movf	Lcd_Cmd@a,w
  6132  17AA  160A  118A  278B  160A  118A  	fcall	_Lcd_Port
  6133                           
  6134                           ;lcd4.c: 31:  RD1 = 1;
  6135  17AF  1283               	bcf	3,5	;RP0=0, select bank0
  6136  17B0  1303               	bcf	3,6	;RP1=0, select bank0
  6137  17B1  1488               	bsf	8,1	;volatile
  6138                           
  6139                           ;lcd4.c: 32:         _delay((unsigned long)((4)*(20000000/4000.0)));
  6140  17B2  301A               	movlw	26
  6141  17B3  00F4               	movwf	??_Lcd_Cmd+1
  6142  17B4  30F8               	movlw	248
  6143  17B5  00F3               	movwf	??_Lcd_Cmd
  6144  17B6                     u4027:	
  6145  17B6  0BF3               	decfsz	??_Lcd_Cmd,f
  6146  17B7  2FB6               	goto	u4027
  6147  17B8  0BF4               	decfsz	??_Lcd_Cmd+1,f
  6148  17B9  2FB6               	goto	u4027
  6149  17BA  0000               	nop
  6150                           
  6151                           ;lcd4.c: 33:         RD1 = 0;
  6152  17BB  1283               	bcf	3,5	;RP0=0, select bank0
  6153  17BC  1303               	bcf	3,6	;RP1=0, select bank0
  6154  17BD  1088               	bcf	8,1	;volatile
  6155  17BE  0008               	return
  6156  17BF                     __end_of_Lcd_Cmd:	
  6157                           
  6158                           	psect	text23
  6159  178B                     __ptext23:	
  6160 ;; *************** function _Lcd_Port *****************
  6161 ;; Defined at:
  6162 ;;		line 5 in file "lcd4.c"
  6163 ;; Parameters:    Size  Location     Type
  6164 ;;  a               1    wreg     unsigned char 
  6165 ;; Auto vars:     Size  Location     Type
  6166 ;;  a               1    2[COMMON] unsigned char 
  6167 ;; Return value:  Size  Location     Type
  6168 ;;                  1    wreg      void 
  6169 ;; Registers used:
  6170 ;;		wreg
  6171 ;; Tracked objects:
  6172 ;;		On entry : 0/0
  6173 ;;		On exit  : 0/0
  6174 ;;		Unchanged: 0/0
  6175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6176 ;;      Params:         0       0       0       0       0
  6177 ;;      Locals:         1       0       0       0       0
  6178 ;;      Temps:          0       0       0       0       0
  6179 ;;      Totals:         1       0       0       0       0
  6180 ;;Total ram usage:        1 bytes
  6181 ;; Hardware stack levels used:    1
  6182 ;; Hardware stack levels required when called:    1
  6183 ;; This function calls:
  6184 ;;		Nothing
  6185 ;; This function is called by:
  6186 ;;		_Lcd_Cmd
  6187 ;;		_Lcd_Init
  6188 ;;		_Lcd_Write_Char
  6189 ;; This function uses a non-reentrant model
  6190 ;;
  6191                           
  6192                           
  6193                           ;psect for function _Lcd_Port
  6194  178B                     _Lcd_Port:	
  6195                           
  6196                           ;incstack = 0
  6197                           ; Regs used in _Lcd_Port: [wreg]
  6198                           ;Lcd_Port@a stored from wreg
  6199  178B  00F2               	movwf	Lcd_Port@a
  6200                           
  6201                           ;lcd4.c: 5: void Lcd_Port(char a);lcd4.c: 6: {;lcd4.c: 7:  if(a & 1)
  6202  178C  1C72               	btfss	Lcd_Port@a,0
  6203  178D  2F92               	goto	l191
  6204                           
  6205                           ;lcd4.c: 8:   RD2 = 1;
  6206  178E  1283               	bcf	3,5	;RP0=0, select bank0
  6207  178F  1303               	bcf	3,6	;RP1=0, select bank0
  6208  1790  1508               	bsf	8,2	;volatile
  6209  1791  2F95               	goto	l192
  6210  1792                     l191:	
  6211                           ;lcd4.c: 9:  else
  6212                           
  6213                           
  6214                           ;lcd4.c: 10:   RD2 = 0;
  6215  1792  1283               	bcf	3,5	;RP0=0, select bank0
  6216  1793  1303               	bcf	3,6	;RP1=0, select bank0
  6217  1794  1108               	bcf	8,2	;volatile
  6218  1795                     l192:	
  6219                           
  6220                           ;lcd4.c: 12:  if(a & 2)
  6221  1795  1CF2               	btfss	Lcd_Port@a,1
  6222  1796  2F99               	goto	l193
  6223                           
  6224                           ;lcd4.c: 13:   RD3 = 1;
  6225  1797  1588               	bsf	8,3	;volatile
  6226  1798  2F9A               	goto	l194
  6227  1799                     l193:	
  6228                           ;lcd4.c: 14:  else
  6229                           
  6230                           
  6231                           ;lcd4.c: 15:   RD3 = 0;
  6232  1799  1188               	bcf	8,3	;volatile
  6233  179A                     l194:	
  6234                           
  6235                           ;lcd4.c: 17:  if(a & 4)
  6236  179A  1D72               	btfss	Lcd_Port@a,2
  6237  179B  2F9E               	goto	l195
  6238                           
  6239                           ;lcd4.c: 18:   RD4 = 1;
  6240  179C  1608               	bsf	8,4	;volatile
  6241  179D  2F9F               	goto	l196
  6242  179E                     l195:	
  6243                           ;lcd4.c: 19:  else
  6244                           
  6245                           
  6246                           ;lcd4.c: 20:   RD4 = 0;
  6247  179E  1208               	bcf	8,4	;volatile
  6248  179F                     l196:	
  6249                           
  6250                           ;lcd4.c: 22:  if(a & 8)
  6251  179F  1DF2               	btfss	Lcd_Port@a,3
  6252  17A0  2FA3               	goto	l197
  6253                           
  6254                           ;lcd4.c: 23:   RD5 = 1;
  6255  17A1  1688               	bsf	8,5	;volatile
  6256  17A2  0008               	return
  6257  17A3                     l197:	
  6258                           ;lcd4.c: 24:  else
  6259                           
  6260                           
  6261                           ;lcd4.c: 25:   RD5 = 0;
  6262  17A3  1288               	bcf	8,5	;volatile
  6263  17A4  0008               	return
  6264  17A5                     __end_of_Lcd_Port:	
  6265                           
  6266                           	psect	text24
  6267  1750                     __ptext24:	
  6268 ;; *************** function _Capture_Init *****************
  6269 ;; Defined at:
  6270 ;;		line 140 in file "Test_A4988.c"
  6271 ;; Parameters:    Size  Location     Type
  6272 ;;		None
  6273 ;; Auto vars:     Size  Location     Type
  6274 ;;		None
  6275 ;; Return value:  Size  Location     Type
  6276 ;;                  1    wreg      void 
  6277 ;; Registers used:
  6278 ;;		status,2
  6279 ;; Tracked objects:
  6280 ;;		On entry : 0/0
  6281 ;;		On exit  : 0/0
  6282 ;;		Unchanged: 0/0
  6283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6284 ;;      Params:         0       0       0       0       0
  6285 ;;      Locals:         0       0       0       0       0
  6286 ;;      Temps:          0       0       0       0       0
  6287 ;;      Totals:         0       0       0       0       0
  6288 ;;Total ram usage:        0 bytes
  6289 ;; Hardware stack levels used:    1
  6290 ;; Hardware stack levels required when called:    1
  6291 ;; This function calls:
  6292 ;;		Nothing
  6293 ;; This function is called by:
  6294 ;;		_main
  6295 ;; This function uses a non-reentrant model
  6296 ;;
  6297                           
  6298                           
  6299                           ;psect for function _Capture_Init
  6300  1750                     _Capture_Init:	
  6301                           
  6302                           ;Test_A4988.c: 142:     TRISC2 = 1;
  6303                           
  6304                           ;incstack = 0
  6305                           ; Regs used in _Capture_Init: [status,2]
  6306  1750  1683               	bsf	3,5	;RP0=1, select bank1
  6307  1751  1303               	bcf	3,6	;RP1=0, select bank1
  6308  1752  1507               	bsf	7,2	;volatile
  6309                           
  6310                           ;Test_A4988.c: 144:     CCPR1 = 0;
  6311  1753  1283               	bcf	3,5	;RP0=0, select bank0
  6312  1754  1303               	bcf	3,6	;RP1=0, select bank0
  6313  1755  0195               	clrf	21	;volatile
  6314  1756  0196               	clrf	22	;volatile
  6315                           
  6316                           ;Test_A4988.c: 146:     CCP1IE = 1;
  6317  1757  1683               	bsf	3,5	;RP0=1, select bank1
  6318  1758  1303               	bcf	3,6	;RP1=0, select bank1
  6319  1759  150C               	bsf	12,2	;volatile
  6320                           
  6321                           ;Test_A4988.c: 148:     CCP1M3 = 0;
  6322  175A  1283               	bcf	3,5	;RP0=0, select bank0
  6323  175B  1303               	bcf	3,6	;RP1=0, select bank0
  6324  175C  1197               	bcf	23,3	;volatile
  6325                           
  6326                           ;Test_A4988.c: 149:     CCP1M2 = 1;
  6327  175D  1517               	bsf	23,2	;volatile
  6328                           
  6329                           ;Test_A4988.c: 150:     CCP1M1 = 0;
  6330  175E  1097               	bcf	23,1	;volatile
  6331                           
  6332                           ;Test_A4988.c: 151:     CCP1M0 = 1;
  6333  175F  1417               	bsf	23,0	;volatile
  6334  1760  0008               	return
  6335  1761                     __end_of_Capture_Init:	
  6336                           
  6337                           	psect	text25
  6338  1773                     __ptext25:	
  6339 ;; *************** function _ADC_Init *****************
  6340 ;; Defined at:
  6341 ;;		line 64 in file "Test_A4988.c"
  6342 ;; Parameters:    Size  Location     Type
  6343 ;;		None
  6344 ;; Auto vars:     Size  Location     Type
  6345 ;;		None
  6346 ;; Return value:  Size  Location     Type
  6347 ;;                  1    wreg      void 
  6348 ;; Registers used:
  6349 ;;		None
  6350 ;; Tracked objects:
  6351 ;;		On entry : 0/0
  6352 ;;		On exit  : 0/0
  6353 ;;		Unchanged: 0/0
  6354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6355 ;;      Params:         0       0       0       0       0
  6356 ;;      Locals:         0       0       0       0       0
  6357 ;;      Temps:          0       0       0       0       0
  6358 ;;      Totals:         0       0       0       0       0
  6359 ;;Total ram usage:        0 bytes
  6360 ;; Hardware stack levels used:    1
  6361 ;; Hardware stack levels required when called:    1
  6362 ;; This function calls:
  6363 ;;		Nothing
  6364 ;; This function is called by:
  6365 ;;		_main
  6366 ;; This function uses a non-reentrant model
  6367 ;;
  6368                           
  6369                           
  6370                           ;psect for function _ADC_Init
  6371  1773                     _ADC_Init:	
  6372                           
  6373                           ;Test_A4988.c: 67:     PCFG0 = 0;
  6374                           
  6375                           ;incstack = 0
  6376                           ; Regs used in _ADC_Init: []
  6377  1773  1683               	bsf	3,5	;RP0=1, select bank1
  6378  1774  1303               	bcf	3,6	;RP1=0, select bank1
  6379  1775  101F               	bcf	31,0	;volatile
  6380                           
  6381                           ;Test_A4988.c: 68:     PCFG1 = 0;
  6382  1776  109F               	bcf	31,1	;volatile
  6383                           
  6384                           ;Test_A4988.c: 69:     PCFG2 = 0;
  6385  1777  111F               	bcf	31,2	;volatile
  6386                           
  6387                           ;Test_A4988.c: 70:     PCFG3 = 0;
  6388  1778  119F               	bcf	31,3	;volatile
  6389                           
  6390                           ;Test_A4988.c: 72:     ADCS0 = 1;
  6391  1779  1283               	bcf	3,5	;RP0=0, select bank0
  6392  177A  1303               	bcf	3,6	;RP1=0, select bank0
  6393  177B  171F               	bsf	31,6	;volatile
  6394                           
  6395                           ;Test_A4988.c: 73:     ADCS1 = 0;
  6396  177C  139F               	bcf	31,7	;volatile
  6397                           
  6398                           ;Test_A4988.c: 74:     ADCS2 = 1;
  6399  177D  1683               	bsf	3,5	;RP0=1, select bank1
  6400  177E  1303               	bcf	3,6	;RP1=0, select bank1
  6401  177F  171F               	bsf	31,6	;volatile
  6402                           
  6403                           ;Test_A4988.c: 76:     ADFM = 1;
  6404  1780  179F               	bsf	31,7	;volatile
  6405                           
  6406                           ;Test_A4988.c: 78:     ADON = 1;
  6407  1781  1283               	bcf	3,5	;RP0=0, select bank0
  6408  1782  1303               	bcf	3,6	;RP1=0, select bank0
  6409  1783  141F               	bsf	31,0	;volatile
  6410                           
  6411                           ;Test_A4988.c: 80:     ADIE = 0;
  6412  1784  1683               	bsf	3,5	;RP0=1, select bank1
  6413  1785  1303               	bcf	3,6	;RP1=0, select bank1
  6414  1786  130C               	bcf	12,6	;volatile
  6415                           
  6416                           ;Test_A4988.c: 81:     ADIF = 0;
  6417  1787  1283               	bcf	3,5	;RP0=0, select bank0
  6418  1788  1303               	bcf	3,6	;RP1=0, select bank0
  6419  1789  130C               	bcf	12,6	;volatile
  6420  178A  0008               	return
  6421  178B                     __end_of_ADC_Init:	
  6422                           
  6423                           	psect	text26
  6424  17BF                     __ptext26:	
  6425 ;; *************** function _MyInterrup *****************
  6426 ;; Defined at:
  6427 ;;		line 153 in file "Test_A4988.c"
  6428 ;; Parameters:    Size  Location     Type
  6429 ;;		None
  6430 ;; Auto vars:     Size  Location     Type
  6431 ;;		None
  6432 ;; Return value:  Size  Location     Type
  6433 ;;                  1    wreg      void 
  6434 ;; Registers used:
  6435 ;;		wreg, status,2
  6436 ;; Tracked objects:
  6437 ;;		On entry : 0/0
  6438 ;;		On exit  : 0/0
  6439 ;;		Unchanged: 0/0
  6440 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6441 ;;      Params:         0       0       0       0       0
  6442 ;;      Locals:         0       0       0       0       0
  6443 ;;      Temps:          2       0       0       0       0
  6444 ;;      Totals:         2       0       0       0       0
  6445 ;;Total ram usage:        2 bytes
  6446 ;; Hardware stack levels used:    1
  6447 ;; This function calls:
  6448 ;;		Nothing
  6449 ;; This function is called by:
  6450 ;;		Interrupt level 1
  6451 ;; This function uses a non-reentrant model
  6452 ;;
  6453                           
  6454                           
  6455                           ;psect for function _MyInterrup
  6456  17BF                     _MyInterrup:	
  6457                           
  6458                           ;Test_A4988.c: 155:     if(CCP1IE == 1 && CCP1IF == 1)
  6459  17BF  1683               	bsf	3,5	;RP0=1, select bank1
  6460  17C0  1303               	bcf	3,6	;RP1=0, select bank1
  6461  17C1  1D0C               	btfss	12,2	;volatile
  6462  17C2  2FCA               	goto	i1l2737
  6463  17C3  1283               	bcf	3,5	;RP0=0, select bank0
  6464  17C4  1303               	bcf	3,6	;RP1=0, select bank0
  6465  17C5  1D0C               	btfss	12,2	;volatile
  6466  17C6  2FCA               	goto	i1l2737
  6467                           
  6468                           ;Test_A4988.c: 156:     {;Test_A4988.c: 157:         TMR1 = 0;
  6469  17C7  018E               	clrf	14	;volatile
  6470  17C8  018F               	clrf	15	;volatile
  6471                           
  6472                           ;Test_A4988.c: 158:         CCP1IF = 0;
  6473  17C9  110C               	bcf	12,2	;volatile
  6474  17CA                     i1l2737:	
  6475                           
  6476                           ;Test_A4988.c: 160:     if(TMR0IF == 1 && TMR0IE == 1 )
  6477  17CA  190B               	btfsc	11,2	;volatile
  6478  17CB  1E8B               	btfss	11,5	;volatile
  6479  17CC  2FD7               	goto	i1l163
  6480                           
  6481                           ;Test_A4988.c: 161:     {;Test_A4988.c: 162:       RC7 = !RC7;
  6482  17CD  3080               	movlw	128
  6483  17CE  1283               	bcf	3,5	;RP0=0, select bank0
  6484  17CF  0687               	xorwf	7,f
  6485                           
  6486                           ;Test_A4988.c: 163:       TMR0 = buffer;
  6487  17D0  1683               	bsf	3,5	;RP0=1, select bank1
  6488  17D1  1303               	bcf	3,6	;RP1=0, select bank1
  6489  17D2  0845               	movf	_buffer^(0+128),w
  6490  17D3  1283               	bcf	3,5	;RP0=0, select bank0
  6491  17D4  1303               	bcf	3,6	;RP1=0, select bank0
  6492  17D5  0081               	movwf	1	;volatile
  6493                           
  6494                           ;Test_A4988.c: 164:       TMR0IF = 0;
  6495  17D6  110B               	bcf	11,2	;volatile
  6496  17D7                     i1l163:	
  6497  17D7  0871               	movf	??_MyInterrup+1,w
  6498  17D8  008A               	movwf	10
  6499  17D9  0E70               	swapf	??_MyInterrup^(0+4294967168),w
  6500  17DA  0083               	movwf	3
  6501  17DB  0EFE               	swapf	126,f
  6502  17DC  0E7E               	swapf	126,w
  6503  17DD  0009               	retfie
  6504  17DE                     __end_of_MyInterrup:	
  6505  007E                     btemp	set	126	;btemp
  6506  007E                     wtemp0	set	126
  6507                           
  6508                           	psect	intentry
  6509  0004                     __pintentry:	
  6510                           ;incstack = 0
  6511                           ; Regs used in _MyInterrup: [wreg+status,2]
  6512                           
  6513  0004                     interrupt_function:	
  6514  007E                     saved_w	set	btemp
  6515  0004  00FE               	movwf	btemp
  6516  0005  0E03               	swapf	3,w
  6517  0006  00F0               	movwf	??_MyInterrup
  6518  0007  080A               	movf	10,w
  6519  0008  00F1               	movwf	??_MyInterrup+1
  6520  0009  160A  118A  2FBF   	ljmp	_MyInterrup


Data Sizes:
    Strings     36
    Constant    0
    Data        0
    BSS         17
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80     80      80
    BANK1            80     23      40
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 16
		 -> STR_3(CODE[5]), STR_2(CODE[16]), STR_1(CODE[15]), 


Critical Paths under _main in COMMON

    _map->___aldiv
    ___aldiv->___lmul
    ___flmul->__Umul8_16
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Display->___lwdiv
    ___lwdiv->___lwmod
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _MyInterrup in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___fltol
    _map->___aldiv
    ___aldiv->___lmul
    ___fltol->___fladd
    ___flmul->___xxtofl
    ___fldiv->___flmul
    ___fladd->___fldiv
    _Lcd_Display->_Lcd_Set_Cursor
    _Lcd_Display->___lwdiv

Critical Paths under _MyInterrup in BANK0

    None.

Critical Paths under _main in BANK1

    _main->___fltol

Critical Paths under _MyInterrup in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _MyInterrup in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _MyInterrup in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0   13842
                                              9 BANK1     14    14      0
                           _ADC_Init
                       _Capture_Init
                        _Lcd_Display
                           _Lcd_Init
                     _Lcd_Set_Cursor
                       _Lcd_Set_Port
                   _Lcd_Write_String
                           _Read_ADC
                        _Timer0_Init
                        _Timer1_Init
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                            ___lldiv
                           ___xxtofl
                                _map
 ---------------------------------------------------------------------------------
 (1) _map                                                 36    16     20    1230
                                             18 BANK0     36    16     20
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              13     5      8     244
                                              2 COMMON     9     1      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     452
                                             11 COMMON     1     1      0
                                              4 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     550
                                              2 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) ___lldiv                                             14     6      8     314
                                              2 COMMON     9     1      8
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             11     7      4     381
                                             78 BANK0      2     2      0
                                              0 BANK1      9     5      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             26    18      8    3329
                                              6 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __Umul8_16                                            9     7      2     799
                                              2 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1425
                                             32 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fladd                                             20    12      8    2262
                                             58 BANK0     20    12      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _Timer1_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Read_ADC                                             9     7      2      45
                                              2 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Port                                         3     3      0      22
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              6 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Display                                          5     1      4    2996
                                              4 BANK0      5     1      4
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     767
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     770
                                              8 COMMON     4     0      4
                                              0 BANK0      4     4      0
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     367
                                              7 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              3 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     608
                                              6 COMMON     3     2      1
                                              0 BANK0      4     4      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              3 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Capture_Init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _MyInterrup                                           2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _Capture_Init
   _Lcd_Display
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_Char
       _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Set_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _Read_ADC
   _Timer0_Init
   _Timer1_Init
   ___fladd
     ___fldiv (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul (ARG)
       __Umul8_16
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___fldiv
     ___flmul (ARG)
       __Umul8_16
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
     __Umul8_16
     ___xxtofl (ARG)
   ___fltol
     ___fladd (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fldiv (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul (ARG)
       __Umul8_16
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___lldiv
   ___xxtofl
   _map
     ___aldiv
       ___lmul (ARG)
     ___lmul

 _MyInterrup (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      84       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     17      28       7       50.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      84      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Dec 25 14:51:06 2019

             ___fldiv@aexp 0059               ___fldiv@bexp 0058                          _a 00C3  
                        _m 00C7                          _t 00BF                          _x 00C1  
                        pc 0002               ___fldiv@sign 0051                __CFG_CP$OFF 0000  
                       fsr 0004       __end_of_Capture_Init 1761        __Umul8_16@word_mpld 0078  
                      l126 006D                        l146 0D77                        l139 0904  
                      l191 1792                        l239 0878                        l192 1795  
                      l193 1799                        l194 179A                        l195 179E  
                      l196 179F                        l197 17A3                        l622 0EBC  
                      l518 0B0D                        l390 0B43                        l624 0E9A  
                      l618 0E23                        l660 0FF5                        l652 0FDD  
                      l726 0642                        l639 0F75                        l752 0BDF  
                      l674 069D                        l771 083F                        l765 0C35  
                      l766 0C3F                        l758 0C1F                        l696 07DC  
                      l698 07EA                        _GIE 005F                        _RD0 0040  
                      _RD1 0041                        _RD2 0042                        _RD3 0043  
                      _RD4 0044                        _RC7 003F                        _RD5 0045  
             __CFG_CPD$OFF 0000                        _map 0C65                        fsr0 0004  
                      _sum 00B7                        indf 0000               __CFG_FOSC$HS 0000  
             ___flmul@aexp 0038               ___flmul@bexp 0039        __end_of_Lcd_Display 0DD1  
             ___flmul@sign 0033               ___flmul@temp 003E               ___flmul@prod 003A  
             __CFG_LVP$OFF 0000               ___fltol@exp1 006F                       l2101 0A98  
                     l2111 0ABB                       l2105 0AA5                       l2131 0AF5  
                     l2115 0AC6                       l2301 0F9F                       l2141 0B20  
                     l2133 0B09                       l2311 0FAA                       l2231 0EA5  
                     l2223 0E69                       l2233 0EA7                       l2241 0EB6  
                     l2083 0D24                       l2307 0FA8                       l2163 0DF1  
                     l2091 0A60                       l2333 0FF1                       l2165 0DF9  
                     l2413 0717                       l2421 06F3                       l2093 0A70  
                     l2183 0E18                       l2159 0DEE                       l2423 073B  
                     l2329 0FED                       l2257 0EEB                       l2249 0ECA  
                     l2193 0E2D                       l2353 066C                       l2513 037C  
                     l2259 0EED                       l2267 0EFD                       l2187 0E1B  
                     l2419 0736                       l2603 0612                       l2515 037E  
                     l2293 0F96                       l2285 0F87                       l2277 0F67  
                     l2445 0775                       l2437 0741                       l2373 0692  
                     l2357 066F                       l2525 0394                       l2517 0386  
                     l1901 0B64                       l2463 07C2                       l2439 075E  
                     l2359 0677                       l1911 0B9C                       l1903 0B74  
                     l2449 0777                       l2393 06C8                       l2377 0695  
                     l2609 062B                       l2633 0BEE                       l2721 0302  
                     l2299 0F9D                       l2475 07E6                       l2459 07A9  
                     l2387 06BC                       l2627 0BD7                       l1915 0BA9  
                     l2715 02DE                       l1941 094D                       l1933 0929  
                     l2661 0C5C                       l2637 0BF2                       l2725 0313  
                     l1847 17E1                       l1935 0937                       l2495 0357  
                     l2647 0C33                       l2639 0C04                       l1919 0BB7  
                     l1871 0967                       l1945 0958                       l2585 05C8  
                     l2577 0594                       l2497 0359                       l2649 0C24  
                     l1859 09CB                       l1963 089B                       l2771 086A  
                     l2579 05B1                       l2499 0361                       l1875 097F  
                     l1957 087F                       l2589 05CA                       l1893 0B54  
                     l2685 0051                       ?_map 0032                       l1959 088D  
                     l1967 08A6                       l1991 085A                       l1975 0837  
                     l2599 05FC                       l1993 085E                       l1987 0852  
                     l1989 0856                       l1997 0862                       _ADIE 0466  
                     _ADIF 0066                       _ADFM 04FF                       _ADON 00F8  
                     STR_1 0816                       STR_2 0806                       STR_3 0825  
                     u2025 08BC                       u2105 0981                       u2115 0989  
                     u2205 0B9D                       u2055 09B0                       u3015 0FC7  
                     u2075 09D7                       u2315 0882                       u2411 0C76  
                     u2412 0C77                       u2245 092C                       u3205 0710  
                     u2165 0B68                       u2421 0C9A                       u2413 0C7C  
                     u2422 0C9B                       u2414 0C7D                       u4007 08CC  
                     u2335 0893                       u3215 0725                       u2431 0CBE  
                     u2423 0CA0                       u2415 0C82                       u2432 0CBF  
                     u2424 0CA1                       u2416 0C83                       u4017 08DD  
                     u2265 0938                       u2345 089C                       u2505 0A99  
                     u2185 0B76                       u2433 0CC4                       u2425 0CA6  
                     u2434 0CC5                       u2426 0CA7                       u4027 17B6  
                     u2275 0944                       u2195 0B8B                       u2435 0CCA  
                     u2436 0CCB                       u2285 094E                       u3245 0745  
                     u3335 0794                       u3175 06FC                       u2375 0840  
                     u2535 0AD1                       u2720 0E89                       u3345 07B2  
                     u3265 0750                       u3185 0705                       u2465 0A64  
                     u2730 0E8A                       u2395 08EE                       u2715 0E7D  
                     u3355 07CD                       u3605 0580                       u3525 04A1  
                     u2565 0AF6                       u2485 0A72                       u3615 0598  
                     u2495 0A87                       u3705 05E7                       u2915 0F89  
                     u3715 0605                       u3635 05A3                       u2595 0B14  
                     _PEIE 005E                       u2861 0F28                       u2853 0F0F  
                     u2845 0EF1                       u2765 0EAB                       u3725 061D  
                     u3565 053D                       u2870 0F3C                       u2862 0F29  
                     u2871 0F3D                       u2863 0F2E                       u3495 0444  
                     u3815 0C2C                       u3903 030F                       u2872 0F42  
                     u2864 0F2F                       u2873 0F43                       u2865 0F34  
                     u3585 0562                       u2866 0F35                       u3855 0C47  
                     u3775 0BFB                       u3795 0C17                       u3957 0334  
                     u3967 08FC                       u3977 09FC                       u3987 0A0B  
                     u3997 0A1A                       _TMR0 0001                       _TMR1 000E  
             __CFG_WRT$OFF 0000          ?_Lcd_Write_String 0070                       _main 001A  
                     map@x 0032                       btemp 007E           __end_of_ADC_Init 178B  
                     start 000C         ??_Lcd_Write_String 0077            ___fldiv@new_exp 0052  
          __end_of_Lcd_Cmd 17BF                      ??_map 0046              ___fltol@sign1 006E  
          __end_of___aldiv 0BC0                      _ADCS0 00FE                      _ADCS1 00FF  
                    _ADCS2 04FE            __end_of___fladd 1000                      ?_main 0070  
          __end_of___fldiv 07F2                      _CCPR1 0015              __CFG_WDTE$OFF 0000  
          __end_of___flmul 064F            __end_of___fltol 0B31            __end_of___lldiv 0AAE  
     __end_of_Lcd_Set_Port 0879                      _PCFG0 04F8                      _PCFG1 04F9  
                    _PCFG2 04FA                      _PCFG3 04FB            __end_of___lwdiv 095D  
                    i1l163 17D7            __end_of___lwmod 08AB    __size_of_Lcd_Set_Cursor 0050  
                    _TRISA 0085                      _TRISB 0086                      _TRISC 0087  
                    _TRISD 0088        ___lmul@multiplicand 0076                      _speed 00BB  
           __CFG_BOREN$OFF 0000                      pclath 000A                      status 0003  
                    wtemp0 007E      Lcd_Display@speed_feel 0024           __end_of_Lcd_Init 0A4E  
         __end_of_Lcd_Port 17A5            __initialization 000F               __end_of_main 033A  
         __end_of_Read_ADC 091F                _Lcd_Display 0D0B                     ??_main 00A9  
               _MyInterrup 17BF                     _ADCON0 001F                     _CCP1M0 00B8  
                   _CCP1M1 00B9                     _CCP1M2 00BA                     _CCP1M3 00BB  
                   _CCP1IE 0462                     _CCP1IF 0062                     _ADRESH 001E  
                   _ADRESL 009E                     i1l2737 17CA                     _T1SYNC 0082  
                ??_Lcd_Cmd 0073                     _TMR0IE 005D                     _TMR0IF 005A  
                   _TMR1IE 0460                     _TMR1CS 0081                     _TMR1ON 0080  
  __size_of_Lcd_Write_Char 0039                     _TRISA0 0428                     _TRISC2 043A  
                   _TRISC7 043F           __end_of___xxtofl 0C65              ??_Timer0_Init 0072  
           __CFG_PWRTE$OFF 0000              ??_Timer1_Init 0072      __size_of_Capture_Init 0011  
                   ___lmul 095D            Read_ADC@channel 007A                  ??___aldiv 007B  
                ??___fladd 0062                  ??___fldiv 0048                  ??___flmul 002E  
                ??___fltol 00A4                  ??___lldiv 007A                  ??___lwdiv 0020  
                ??___lwmod 0076                     _buffer 00C5         __size_of__Umul8_16 0023  
                ?_ADC_Init 0070                     saved_w 007E            Lcd_Set_Cursor@a 0020  
          Lcd_Set_Cursor@b 0076            Lcd_Set_Cursor@y 0022            Lcd_Set_Cursor@z 0021  
             ___xxtofl@arg 0022               ___xxtofl@exp 0021               ___xxtofl@val 0072  
  __end_of__initialization 0016               _Capture_Init 1750                 ___fltol@f1 00A0  
           __pcstackCOMMON 0070      __size_of_Lcd_Set_Port 0029        __end_of_Timer0_Init 07FD  
      __end_of_Timer1_Init 1773             _Lcd_Set_Cursor 09A2                ?_MyInterrup 0070  
               ??_ADC_Init 0072                  ?_Lcd_Init 0070                  ?_Lcd_Port 0070  
               __pbssBANK1 00B7                  ?_Read_ADC 0072               _Lcd_Set_Port 0850  
        __end_of__Umul8_16 0850                 __pmaintext 001A                    ?___lmul 0072  
               __pintentry 0004             ___lmul@product 0020  __size_of_Lcd_Write_String 0022  
   __end_of_Lcd_Set_Cursor 09F2                    _T1CKPS0 0084                    _T1CKPS1 0085  
                  _T1OSCEN 0083                  ?___xxtofl 0072                 ??_Lcd_Init 0076  
               ??_Lcd_Port 0072                 __stringtab 0800                 ??_Read_ADC 0074  
           _Lcd_Write_Char 08AB                    _Lcd_Cmd 17A5                _Timer0_Init 07F2  
              _Timer1_Init 1761        __size_of_MyInterrup 001F                    ___aldiv 0B31  
                  ___fladd 0DD1                    ___fldiv 064F            __size_of___lmul 0045  
                  ___flmul 033A                    ___fltol 0AAE                    ___lldiv 0A4E  
                  ___lwdiv 091F                    ___lwmod 0879            ?_Lcd_Set_Cursor 0076  
             ?_Lcd_Display 0024                    __ptext1 0C65                    __ptext2 095D  
                  __ptext3 0B31                    __ptext4 0BC0                    __ptext5 0A4E  
                  __ptext6 0AAE                    __ptext7 033A                    __ptext8 082D  
                  __ptext9 064F               __size_of_map 00A6                 ??___xxtofl 0076  
         ___aldiv@dividend 0028                    clrloop0 1749     __end_of_Lcd_Write_Char 08E4  
     end_of_initialization 0016            ___lldiv@divisor 0072            ___lldiv@counter 0024  
         ___aldiv@quotient 002E                  Lcd_Port@a 0072                ___fladd@grs 006D  
            ___xxtofl@sign 0020                ___fldiv@grs 0054                ___fldiv@rem 004D  
        __size_of_ADC_Init 0018            ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0079  
        Lcd_Write_String@i 0077                 map@out_max 0042                 map@out_min 003E  
              ___flmul@grs 0034                  Read_ADC@N 0078             __end_of___lmul 09A2  
         _Lcd_Write_String 17DE               ??_MyInterrup 0070        start_initialization 000F  
            Lcd_Set_Port@a 0074                __end_of_map 0D0B          __size_of_Lcd_Init 005C  
        __size_of_Lcd_Port 001A          __size_of_Read_ADC 003B         __end_of_MyInterrup 17DE  
                 ??___lmul 007A                  __Umul8_16 082D            Lcd_Write_Char@a 0076  
          Lcd_Write_Char@y 0075                  ___fladd@a 005E                  ___fladd@b 005A  
                ___fldiv@a 0040                  ___fldiv@b 0044       __size_of_Lcd_Display 00C6  
                ___flmul@a 002A                  ___flmul@b 0026                  ___latbits 0002  
            __pcstackBANK0 0020              __pcstackBANK1 00A0          __size_of___xxtofl 00A5  
                 ?_Lcd_Cmd 0070               ?_Timer0_Init 0070               ?_Timer1_Init 0070  
         ___lwdiv@dividend 007A           ??_Lcd_Set_Cursor 0077                   ?___aldiv 0024  
                 ?___fladd 005A                   ?___fldiv 0040                   ?___flmul 0026  
                 ?___fltol 00A0                   ?___lldiv 0072                 ?__Umul8_16 0072  
                 ?___lwdiv 0078                   ?___lwmod 0072                  __pstrings 0800  
                 _ADC_Init 1773           ___lwdiv@quotient 0021            ___aldiv@divisor 0024  
        interrupt_function 0004            ___aldiv@counter 002C                  clear_ram0 1748  
                 Lcd_Cmd@a 0075                   _GO_nDONE 00FA                  map@in_max 003A  
                map@in_min 0036                __stringbase 0805           ??_Lcd_Write_Char 0073  
                 _Lcd_Init 09F2                   _Lcd_Port 178B          ___lmul@multiplier 0072  
                 _Read_ADC 08E4   __end_of_Lcd_Write_String 1800              ?_Capture_Init 0070  
         __size_of_Lcd_Cmd 001A                ??__Umul8_16 0074           __size_of___aldiv 008F  
         __size_of___fladd 022F           __size_of___fldiv 01A3           __size_of___flmul 0315  
         __size_of___fltol 0083           __size_of___lldiv 0060           __size_of___lwdiv 003E  
         __size_of___lwmod 0032         __end_of__stringtab 0806                   ___xxtofl 0BC0  
                 _main$820 00AB                   _main$818 00AF                   _main$819 00B3  
          ___lwdiv@divisor 0078            ___lwdiv@counter 0023                   __ptext10 0DD1  
                 __ptext11 1761                   __ptext20 08AB                   __ptext12 07F2  
                 __ptext21 09A2                   __ptext13 08E4                   __ptext22 17A5  
                 __ptext14 0850                   __ptext23 178B                   __ptext15 09F2  
                 __ptext24 1750                   __ptext16 0D0B                   __ptext25 1773  
                 __ptext17 0879                   __ptext26 17BF                   __ptext18 091F  
                 __ptext19 17DE             ??_Capture_Init 0072           Lcd_Display@speed 0026  
            __size_of_main 0320              ?_Lcd_Set_Port 0070       __size_of_Timer0_Init 000B  
     __size_of_Timer1_Init 0012         Lcd_Write_Char@temp 0074                   intlevel1 0000  
           ??_Lcd_Set_Port 0072           ___lwmod@dividend 0074           ___lldiv@dividend 0076  
                stringcode 0800         Lcd_Set_Cursor@temp 0023              ??_Lcd_Display 0028  
   __Umul8_16@multiplicand 0072                 _OPTION_REG 0081           ___lldiv@quotient 0020  
          ___lwmod@divisor 0072            ___lwmod@counter 0077                   stringdir 0800  
                 stringtab 0800               ___aldiv@sign 002D              ___fladd@signs 006A  
             ___fladd@aexp 006B               ___fladd@bexp 006C       __Umul8_16@multiplier 007A  
        __Umul8_16@product 0076  
