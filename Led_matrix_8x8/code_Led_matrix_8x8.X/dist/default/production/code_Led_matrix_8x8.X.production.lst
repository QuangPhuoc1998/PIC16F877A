

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun Jun 09 21:34:28 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.05
    16                           ; Generated 20/12/2018 GMT
    17                           ; 
    18                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0094                     	;# 
    97  0098                     	;# 
    98  0099                     	;# 
    99  009C                     	;# 
   100  009D                     	;# 
   101  009E                     	;# 
   102  009F                     	;# 
   103  010C                     	;# 
   104  010D                     	;# 
   105  010E                     	;# 
   106  010F                     	;# 
   107  018C                     	;# 
   108  018D                     	;# 
   109  0000                     	;# 
   110  0001                     	;# 
   111  0002                     	;# 
   112  0003                     	;# 
   113  0004                     	;# 
   114  0005                     	;# 
   115  0006                     	;# 
   116  0007                     	;# 
   117  0008                     	;# 
   118  0009                     	;# 
   119  000A                     	;# 
   120  000B                     	;# 
   121  000C                     	;# 
   122  000D                     	;# 
   123  000E                     	;# 
   124  000E                     	;# 
   125  000F                     	;# 
   126  0010                     	;# 
   127  0011                     	;# 
   128  0012                     	;# 
   129  0013                     	;# 
   130  0014                     	;# 
   131  0015                     	;# 
   132  0015                     	;# 
   133  0016                     	;# 
   134  0017                     	;# 
   135  0018                     	;# 
   136  0019                     	;# 
   137  001A                     	;# 
   138  001B                     	;# 
   139  001B                     	;# 
   140  001C                     	;# 
   141  001D                     	;# 
   142  001E                     	;# 
   143  001F                     	;# 
   144  0081                     	;# 
   145  0085                     	;# 
   146  0086                     	;# 
   147  0087                     	;# 
   148  0088                     	;# 
   149  0089                     	;# 
   150  008C                     	;# 
   151  008D                     	;# 
   152  008E                     	;# 
   153  0091                     	;# 
   154  0092                     	;# 
   155  0093                     	;# 
   156  0094                     	;# 
   157  0098                     	;# 
   158  0099                     	;# 
   159  009C                     	;# 
   160  009D                     	;# 
   161  009E                     	;# 
   162  009F                     	;# 
   163  010C                     	;# 
   164  010D                     	;# 
   165  010E                     	;# 
   166  010F                     	;# 
   167  018C                     	;# 
   168  018D                     	;# 
   169                           
   170                           	psect	idataCOMMON
   171  076E                     __pidataCOMMON:	
   172                           
   173                           ;initializer for _cot
   174  076E  34FE               	retlw	254
   175  076F  34FD               	retlw	253
   176  0770  34FB               	retlw	251
   177  0771  34F7               	retlw	247
   178  0772  34EF               	retlw	239
   179  0773  34DF               	retlw	223
   180  0774  34BF               	retlw	191
   181  0775  347F               	retlw	127
   182                           
   183                           	psect	idataBANK0
   184  0776                     __pidataBANK0:	
   185                           
   186                           ;initializer for _code_1
   187  0776  3418               	retlw	24
   188  0777  341C               	retlw	28
   189  0778  341E               	retlw	30
   190  0779  3418               	retlw	24
   191  077A  3418               	retlw	24
   192  077B  3418               	retlw	24
   193  077C  34FF               	retlw	255
   194  077D  34FF               	retlw	255
   195                           
   196                           ;initializer for _hang
   197  077E  343E               	retlw	62
   198  077F  3433               	retlw	51
   199  0780  3433               	retlw	51
   200  0781  3433               	retlw	51
   201  0782  343E               	retlw	62
   202  0783  3430               	retlw	48
   203  0784  3430               	retlw	48
   204  0785  3478               	retlw	120
   205                           
   206                           	psect	nvCOMMON
   207  0078                     __pnvCOMMON:	
   208  0078                     _n:	
   209  0078                     	ds	2
   210  0008                     _PORTD	set	8
   211  0007                     _PORTC	set	7
   212  0088                     _TRISD	set	136
   213  0087                     _TRISC	set	135
   214                           
   215                           ; #config settings
   216  0000                     
   217                           	psect	cinit
   218  07C0                     start_initialization:	
   219  07C0                     __initialization:	
   220                           
   221                           ; Initialize objects allocated to BANK0
   222  07C0  1383               	bcf	3,7	;select IRP bank0
   223  07C1  3030               	movlw	low (__pdataBANK0+16)
   224  07C2  00FD               	movwf	btemp+-1
   225  07C3  3007               	movlw	high __pidataBANK0
   226  07C4  00FE               	movwf	btemp
   227  07C5  3076               	movlw	low __pidataBANK0
   228  07C6  00FF               	movwf	btemp+1
   229  07C7  3020               	movlw	low __pdataBANK0
   230  07C8  0084               	movwf	4
   231  07C9  120A  118A  278A  120A  118A  	fcall	init_ram0
   232                           
   233                           ; Initialize objects allocated to COMMON
   234  07CE  120A  118A  276E  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   235  07D3  00F0               	movwf	__pdataCOMMON& (0+127)
   236  07D4  120A  118A  276F  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   237  07D9  00F1               	movwf	(__pdataCOMMON+1)& (0+127)
   238  07DA  120A  118A  2770  120A  118A  	fcall	__pidataCOMMON+2	;fetch initializer
   239  07DF  00F2               	movwf	(__pdataCOMMON+2)& (0+127)
   240  07E0  120A  118A  2771  120A  118A  	fcall	__pidataCOMMON+3	;fetch initializer
   241  07E5  00F3               	movwf	(__pdataCOMMON+3)& (0+127)
   242  07E6  120A  118A  2772  120A  118A  	fcall	__pidataCOMMON+4	;fetch initializer
   243  07EB  00F4               	movwf	(__pdataCOMMON+4)& (0+127)
   244  07EC  120A  118A  2773  120A  118A  	fcall	__pidataCOMMON+5	;fetch initializer
   245  07F1  00F5               	movwf	(__pdataCOMMON+5)& (0+127)
   246  07F2  120A  118A  2774  120A  118A  	fcall	__pidataCOMMON+6	;fetch initializer
   247  07F7  00F6               	movwf	(__pdataCOMMON+6)& (0+127)
   248  07F8  120A  118A  2775   	fcall	__pidataCOMMON+7	;fetch initializer
   249  07FB  00F7               	movwf	(__pdataCOMMON+7)& (0+127)
   250  07FC                     end_of_initialization:	
   251                           ;End of C runtime variable initialization code
   252                           
   253  07FC                     __end_of__initialization:	
   254  07FC  0183               	clrf	3
   255  07FD  120A  118A  2F97   	ljmp	_main	;jump to C main() function
   256                           
   257                           	psect	dataCOMMON
   258  0070                     __pdataCOMMON:	
   259  0070                     _cot:	
   260  0070                     	ds	8
   261                           
   262                           	psect	dataBANK0
   263  0020                     __pdataBANK0:	
   264  0020                     _code_1:	
   265  0020                     	ds	8
   266  0028                     _hang:	
   267  0028                     	ds	8
   268                           
   269                           	psect	inittext
   270  0786                     init_fetch0:	
   271                           ;	Called with low address in FSR and high address in W
   272                           
   273  0786  087E               	movf	126,w
   274  0787  008A               	movwf	10
   275  0788  087F               	movf	127,w
   276  0789  0082               	movwf	2
   277  078A                     init_ram0:	
   278                           ;Called with:
   279                           ;	high address of idata address in btemp 
   280                           ;	low address of idata address in btemp+1 
   281                           ;	low address of data in FSR
   282                           ;	high address + 1 of data in btemp-1
   283                           
   284  078A  2786  120A  118A   	fcall	init_fetch0
   285  078D  0080               	movwf	0
   286  078E  0A84               	incf	4,f
   287  078F  0804               	movf	4,w
   288  0790  067D               	xorwf	125,w
   289  0791  1903               	btfsc	3,2
   290  0792  3400               	retlw	0
   291  0793  0AFF               	incf	127,f
   292  0794  1903               	btfsc	3,2
   293  0795  0AFE               	incf	126,f
   294  0796  2F8A               	goto	init_ram0
   295                           
   296                           	psect	cstackCOMMON
   297  007A                     __pcstackCOMMON:	
   298  007A                     ?_main:	
   299  007A                     ??_main:	
   300                           ; 1 bytes @ 0x0
   301                           
   302                           
   303                           ; 1 bytes @ 0x0
   304  007A                     	ds	2
   305                           
   306                           	psect	maintext
   307  0797                     __pmaintext:	
   308 ;;
   309 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   310 ;;
   311 ;; *************** function _main *****************
   312 ;; Defined at:
   313 ;;		line 15 in file "main.c"
   314 ;; Parameters:    Size  Location     Type
   315 ;;		None
   316 ;; Auto vars:     Size  Location     Type
   317 ;;		None
   318 ;; Return value:  Size  Location     Type
   319 ;;                  1    wreg      void 
   320 ;; Registers used:
   321 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   322 ;; Tracked objects:
   323 ;;		On entry : B00/0
   324 ;;		On exit  : 0/0
   325 ;;		Unchanged: 0/0
   326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   327 ;;      Params:         0       0       0       0       0
   328 ;;      Locals:         0       0       0       0       0
   329 ;;      Temps:          2       0       0       0       0
   330 ;;      Totals:         2       0       0       0       0
   331 ;;Total ram usage:        2 bytes
   332 ;; This function calls:
   333 ;;		Nothing
   334 ;; This function is called by:
   335 ;;		Startup code after reset
   336 ;; This function uses a non-reentrant model
   337 ;;
   338                           
   339                           
   340                           ;psect for function _main
   341  0797                     _main:	
   342                           
   343                           ;main.c: 17:     TRISC=0x00;
   344                           
   345                           ;incstack = 0
   346                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0]
   347  0797  1683               	bsf	3,5	;RP0=1, select bank1
   348  0798  1303               	bcf	3,6	;RP1=0, select bank1
   349  0799  0187               	clrf	7	;volatile
   350                           
   351                           ;main.c: 18:     TRISD=0x00;
   352  079A  0188               	clrf	8	;volatile
   353  079B                     l23:	
   354                           ;main.c: 19:     while(1)
   355                           
   356                           
   357                           ;main.c: 20:     {;main.c: 21:         for(n=0;n<=7;n++)
   358  079B  01F8               	clrf	_n
   359  079C  01F9               	clrf	_n+1
   360  079D                     l640:	
   361                           
   362                           ;main.c: 22:         {;main.c: 23:             PORTC=cot[n];
   363  079D  0878               	movf	_n,w
   364  079E  3E70               	addlw	(low (_cot| 0))& (0+255)
   365  079F  0084               	movwf	4
   366  07A0  0800               	movf	0,w
   367  07A1  1283               	bcf	3,5	;RP0=0, select bank0
   368  07A2  1303               	bcf	3,6	;RP1=0, select bank0
   369  07A3  0087               	movwf	7	;volatile
   370                           
   371                           ;main.c: 24:             PORTD=code_1[n];
   372  07A4  0878               	movf	_n,w
   373  07A5  3E20               	addlw	(low (_code_1| 0))& (0+255)
   374  07A6  0084               	movwf	4
   375  07A7  1383               	bcf	3,7	;select IRP bank0
   376  07A8  0800               	movf	0,w
   377  07A9  0088               	movwf	8	;volatile
   378                           
   379                           ;main.c: 25:             _delay((unsigned long)((1)*(20000000/4000.0)));
   380  07AA  3007               	movlw	7
   381  07AB  00FB               	movwf	??_main+1
   382  07AC  307D               	movlw	125
   383  07AD  00FA               	movwf	??_main
   384  07AE                     u37:	
   385  07AE  0BFA               	decfsz	??_main,f
   386  07AF  2FAE               	goto	u37
   387  07B0  0BFB               	decfsz	??_main+1,f
   388  07B1  2FAE               	goto	u37
   389                           
   390                           ;main.c: 26:         }
   391  07B2  3001               	movlw	1
   392  07B3  07F8               	addwf	_n,f
   393  07B4  1803               	skipnc
   394  07B5  0AF9               	incf	_n+1,f
   395  07B6  3000               	movlw	0
   396  07B7  07F9               	addwf	_n+1,f
   397  07B8  3000               	movlw	0
   398  07B9  0279               	subwf	_n+1,w
   399  07BA  3008               	movlw	8
   400  07BB  1903               	skipnz
   401  07BC  0278               	subwf	_n,w
   402  07BD  1803               	btfsc	3,0
   403  07BE  2F9B               	goto	l23
   404  07BF  2F9D               	goto	l640
   405  07C0                     __end_of_main:	
   406  007E                     btemp	set	126	;btemp
   407  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        24
    BSS         0
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2      12
    BANK0            80      0      16
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      10       5       20.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      2       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1C      12        0.0%
ABS                  0      0      1C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun Jun 09 21:34:28 2019

                      _n 0078                        pc 0002              __CFG_CP$OFF 0000  
                     l23 079B                       u37 07AE                       fsr 0004  
                    l640 079D             __CFG_CPD$OFF 0000                      _cot 0070  
                    fsr0 0004                      indf 0000             __CFG_FOSC$HS 0000  
           __CFG_LVP$OFF 0000             __CFG_WRT$OFF 0000                     _hang 0028  
                   _main 0797                     btemp 007E                     start 0000  
                  ?_main 007A            __CFG_WDTE$OFF 0000                    _PORTC 0007  
                  _PORTD 0008                    _TRISC 0087                    _TRISD 0088  
         __CFG_BOREN$OFF 0000                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07C0             __end_of_main 07C0  
                 ??_main 007A           __CFG_PWRTE$OFF 0000                   _code_1 0020  
           __pdataCOMMON 0070  __end_of__initialization 07FC           __pcstackCOMMON 007A  
           __pidataBANK0 0776               __pnvCOMMON 0078               __pmaintext 0797  
   end_of_initialization 07FC            __pidataCOMMON 076E      start_initialization 07C0  
             init_fetch0 0786              __pdataBANK0 0020                ___latbits 0002  
          __size_of_main 0029                 init_ram0 078A  
