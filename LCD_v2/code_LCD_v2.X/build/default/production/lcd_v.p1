Version 4.0 HI-TECH Software Intermediate Code
"2755 D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\include\pic16f877a.h
[; ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\include\pic16f877a.h: 2755: extern volatile __bit RD2 __attribute__((address(0x42)));
[v _RD2 `Vb ~T0 @X0 0 e@66 ]
"2758
[; ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\include\pic16f877a.h: 2758: extern volatile __bit RD3 __attribute__((address(0x43)));
[v _RD3 `Vb ~T0 @X0 0 e@67 ]
"2761
[; ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\include\pic16f877a.h: 2761: extern volatile __bit RD4 __attribute__((address(0x44)));
[v _RD4 `Vb ~T0 @X0 0 e@68 ]
"2764
[; ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\include\pic16f877a.h: 2764: extern volatile __bit RD5 __attribute__((address(0x45)));
[v _RD5 `Vb ~T0 @X0 0 e@69 ]
"2749
[; ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\include\pic16f877a.h: 2749: extern volatile __bit RD0 __attribute__((address(0x40)));
[v _RD0 `Vb ~T0 @X0 0 e@64 ]
"2752
[; ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\include\pic16f877a.h: 2752: extern volatile __bit RD1 __attribute__((address(0x41)));
[v _RD1 `Vb ~T0 @X0 0 e@65 ]
[v F842 `(v ~T0 @X0 1 tf1`ul ]
"92 D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\include\pic.h
[v __delay `JF842 ~T0 @X0 0 e ]
[p i __delay ]
"1499 D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\include\pic16f877a.h
[; ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\include\pic16f877a.h: 1499: extern volatile unsigned char TRISD __attribute__((address(0x088)));
[v _TRISD `Vuc ~T0 @X0 0 e@136 ]
"2983
[; ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\include\pic16f877a.h: 2983: extern volatile __bit TRISD0 __attribute__((address(0x440)));
[v _TRISD0 `Vb ~T0 @X0 0 e@1088 ]
"2986
[; ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\include\pic16f877a.h: 2986: extern volatile __bit TRISD1 __attribute__((address(0x441)));
[v _TRISD1 `Vb ~T0 @X0 0 e@1089 ]
"54 D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\include\pic16f877a.h
[; ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\include\pic16f877a.h: 54: __asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
"61
[; ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\include\pic16f877a.h: 61: __asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
"68
[; ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\include\pic16f877a.h: 68: __asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
"75
[; ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\include\pic16f877a.h: 75: __asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
"161
[; ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\include\pic16f877a.h: 161: __asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
"168
[; ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\include\pic16f877a.h: 168: __asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
"218
[; ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\include\pic16f877a.h: 218: __asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
"280
[; ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\include\pic16f877a.h: 280: __asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
"342
[; ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\include\pic16f877a.h: 342: __asm("PORTD equ 08h");
[; <" PORTD equ 08h ;# ">
"404
[; ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\include\pic16f877a.h: 404: __asm("PORTE equ 09h");
[; <" PORTE equ 09h ;# ">
"436
[; ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\include\pic16f877a.h: 436: __asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
"456
[; ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\include\pic16f877a.h: 456: __asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
"534
[; ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\include\pic16f877a.h: 534: __asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
"596
[; ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\include\pic16f877a.h: 596: __asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
"636
[; ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\include\pic16f877a.h: 636: __asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
"643
[; ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\include\pic16f877a.h: 643: __asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
"650
[; ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\include\pic16f877a.h: 650: __asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
"657
[; ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\include\pic16f877a.h: 657: __asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
"732
[; ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\include\pic16f877a.h: 732: __asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
"739
[; ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\include\pic16f877a.h: 739: __asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
"810
[; ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\include\pic16f877a.h: 810: __asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
"817
[; ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\include\pic16f877a.h: 817: __asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
"887
[; ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\include\pic16f877a.h: 887: __asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
"894
[; ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\include\pic16f877a.h: 894: __asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
"901
[; ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\include\pic16f877a.h: 901: __asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
"908
[; ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\include\pic16f877a.h: 908: __asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
"966
[; ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\include\pic16f877a.h: 966: __asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
"1061
[; ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\include\pic16f877a.h: 1061: __asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
"1068
[; ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\include\pic16f877a.h: 1068: __asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
"1075
[; ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\include\pic16f877a.h: 1075: __asm("CCPR2 equ 01Bh");
[; <" CCPR2 equ 01Bh ;# ">
"1082
[; ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\include\pic16f877a.h: 1082: __asm("CCPR2L equ 01Bh");
[; <" CCPR2L equ 01Bh ;# ">
"1089
[; ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\include\pic16f877a.h: 1089: __asm("CCPR2H equ 01Ch");
[; <" CCPR2H equ 01Ch ;# ">
"1096
[; ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\include\pic16f877a.h: 1096: __asm("CCP2CON equ 01Dh");
[; <" CCP2CON equ 01Dh ;# ">
"1154
[; ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\include\pic16f877a.h: 1154: __asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
"1161
[; ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\include\pic16f877a.h: 1161: __asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
"1257
[; ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\include\pic16f877a.h: 1257: __asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
"1327
[; ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\include\pic16f877a.h: 1327: __asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
"1377
[; ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\include\pic16f877a.h: 1377: __asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
"1439
[; ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\include\pic16f877a.h: 1439: __asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
"1501
[; ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\include\pic16f877a.h: 1501: __asm("TRISD equ 088h");
[; <" TRISD equ 088h ;# ">
"1563
[; ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\include\pic16f877a.h: 1563: __asm("TRISE equ 089h");
[; <" TRISE equ 089h ;# ">
"1620
[; ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\include\pic16f877a.h: 1620: __asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
"1682
[; ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\include\pic16f877a.h: 1682: __asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
"1722
[; ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\include\pic16f877a.h: 1722: __asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
"1756
[; ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\include\pic16f877a.h: 1756: __asm("SSPCON2 equ 091h");
[; <" SSPCON2 equ 091h ;# ">
"1818
[; ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\include\pic16f877a.h: 1818: __asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
"1825
[; ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\include\pic16f877a.h: 1825: __asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
"1832
[; ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\include\pic16f877a.h: 1832: __asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
"2001
[; ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\include\pic16f877a.h: 2001: __asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
"2082
[; ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\include\pic16f877a.h: 2082: __asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
"2089
[; ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\include\pic16f877a.h: 2089: __asm("CMCON equ 09Ch");
[; <" CMCON equ 09Ch ;# ">
"2159
[; ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\include\pic16f877a.h: 2159: __asm("CVRCON equ 09Dh");
[; <" CVRCON equ 09Dh ;# ">
"2224
[; ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\include\pic16f877a.h: 2224: __asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
"2231
[; ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\include\pic16f877a.h: 2231: __asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
"2290
[; ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\include\pic16f877a.h: 2290: __asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
"2297
[; ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\include\pic16f877a.h: 2297: __asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
"2304
[; ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\include\pic16f877a.h: 2304: __asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
"2311
[; ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\include\pic16f877a.h: 2311: __asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
"2318
[; ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\include\pic16f877a.h: 2318: __asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
"2363
[; ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\include\pic16f877a.h: 2363: __asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
"7 ./main.h
[p x FOSC = HS ]
"8
[p x WDTE = OFF ]
"9
[p x PWRTE = OFF ]
"10
[p x BOREN = OFF ]
"11
[p x LVP = OFF ]
"12
[p x CPD = OFF ]
"13
[p x WRT = OFF ]
"14
[p x CP = OFF ]
"15 lcd_v.c
[; ;lcd_v.c: 15: void Lcd_Port(unsigned char Data)
[v _Lcd_Port `(v ~T0 @X0 1 ef1`uc ]
"16
[; ;lcd_v.c: 16: {
{
[e :U _Lcd_Port ]
"15
[; ;lcd_v.c: 15: void Lcd_Port(unsigned char Data)
[v _Data `uc ~T0 @X0 1 r1 ]
"16
[; ;lcd_v.c: 16: {
[f ]
"17
[; ;lcd_v.c: 17:   if(Data & 1)
[e $ ! != & -> _Data `i -> 1 `i -> 0 `i 96  ]
"18
[; ;lcd_v.c: 18:     RD2 = 1;
[e = _RD2 -> -> 1 `i `b ]
[e $U 97  ]
"19
[; ;lcd_v.c: 19:   else
[e :U 96 ]
"20
[; ;lcd_v.c: 20:     RD2 = 0;
[e = _RD2 -> -> 0 `i `b ]
[e :U 97 ]
"21
[; ;lcd_v.c: 21:   if(Data & 2)
[e $ ! != & -> _Data `i -> 2 `i -> 0 `i 98  ]
"22
[; ;lcd_v.c: 22:     RD3 = 1;
[e = _RD3 -> -> 1 `i `b ]
[e $U 99  ]
"23
[; ;lcd_v.c: 23:   else
[e :U 98 ]
"24
[; ;lcd_v.c: 24:     RD3 = 0;
[e = _RD3 -> -> 0 `i `b ]
[e :U 99 ]
"25
[; ;lcd_v.c: 25:   if(Data & 4)
[e $ ! != & -> _Data `i -> 4 `i -> 0 `i 100  ]
"26
[; ;lcd_v.c: 26:     RD4 = 1;
[e = _RD4 -> -> 1 `i `b ]
[e $U 101  ]
"27
[; ;lcd_v.c: 27:   else
[e :U 100 ]
"28
[; ;lcd_v.c: 28:     RD4 = 0;
[e = _RD4 -> -> 0 `i `b ]
[e :U 101 ]
"29
[; ;lcd_v.c: 29:   if(Data & 8)
[e $ ! != & -> _Data `i -> 8 `i -> 0 `i 102  ]
"30
[; ;lcd_v.c: 30:     RD5 = 1;
[e = _RD5 -> -> 1 `i `b ]
[e $U 103  ]
"31
[; ;lcd_v.c: 31:   else
[e :U 102 ]
"32
[; ;lcd_v.c: 32:     RD5 = 0;
[e = _RD5 -> -> 0 `i `b ]
[e :U 103 ]
"33
[; ;lcd_v.c: 33: }
[e :UE 95 ]
}
"34
[; ;lcd_v.c: 34: void Lcd_Cmd(char CMD)
[v _Lcd_Cmd `(v ~T0 @X0 1 ef1`uc ]
"35
[; ;lcd_v.c: 35: {
{
[e :U _Lcd_Cmd ]
"34
[; ;lcd_v.c: 34: void Lcd_Cmd(char CMD)
[v _CMD `uc ~T0 @X0 1 r1 ]
"35
[; ;lcd_v.c: 35: {
[f ]
"37
[; ;lcd_v.c: 37:   RD0 = 0;
[e = _RD0 -> -> 0 `i `b ]
"39
[; ;lcd_v.c: 39:   Lcd_Port(CMD);
[e ( _Lcd_Port (1 -> _CMD `uc ]
"41
[; ;lcd_v.c: 41:   RD1 = 1;
[e = _RD1 -> -> 1 `i `b ]
"42
[; ;lcd_v.c: 42:   _delay((unsigned long)((500)*(20000000/4000000.0)));
[e ( __delay (1 -> * -> -> 500 `i `d / -> -> 20000000 `l `d .4000000.0 `ul ]
"43
[; ;lcd_v.c: 43:   RD1 = 0;
[e = _RD1 -> -> 0 `i `b ]
"44
[; ;lcd_v.c: 44: }
[e :UE 104 ]
}
"45
[; ;lcd_v.c: 45: void Lcd_Clear()
[v _Lcd_Clear `(v ~T0 @X0 1 ef ]
"46
[; ;lcd_v.c: 46: {
{
[e :U _Lcd_Clear ]
[f ]
"47
[; ;lcd_v.c: 47:   Lcd_Cmd(0);
[e ( _Lcd_Cmd (1 -> -> 0 `i `uc ]
"48
[; ;lcd_v.c: 48:   Lcd_Cmd(1);
[e ( _Lcd_Cmd (1 -> -> 1 `i `uc ]
"49
[; ;lcd_v.c: 49: }
[e :UE 105 ]
}
"50
[; ;lcd_v.c: 50: void Lcd_Set_Cursor(unsigned char r, unsigned char c)
[v _Lcd_Set_Cursor `(v ~T0 @X0 1 ef2`uc`uc ]
"51
[; ;lcd_v.c: 51: {
{
[e :U _Lcd_Set_Cursor ]
"50
[; ;lcd_v.c: 50: void Lcd_Set_Cursor(unsigned char r, unsigned char c)
[v _r `uc ~T0 @X0 1 r1 ]
[v _c `uc ~T0 @X0 1 r2 ]
"51
[; ;lcd_v.c: 51: {
[f ]
"52
[; ;lcd_v.c: 52:   unsigned char Temp,Low4,High4;
[v _Temp `uc ~T0 @X0 1 a ]
[v _Low4 `uc ~T0 @X0 1 a ]
[v _High4 `uc ~T0 @X0 1 a ]
"53
[; ;lcd_v.c: 53:   if(r == 1)
[e $ ! == -> _r `i -> 1 `i 107  ]
"54
[; ;lcd_v.c: 54:   {
{
"55
[; ;lcd_v.c: 55:     Temp = 0x80 + c - 1;
[e = _Temp -> - + -> 128 `i -> _c `i -> 1 `i `uc ]
"56
[; ;lcd_v.c: 56:     High4 = Temp >> 4;
[e = _High4 -> >> -> _Temp `i -> 4 `i `uc ]
"57
[; ;lcd_v.c: 57:     Low4 = Temp & 0x0F;
[e = _Low4 -> & -> _Temp `i -> 15 `i `uc ]
"58
[; ;lcd_v.c: 58:     Lcd_Cmd(High4);
[e ( _Lcd_Cmd (1 -> _High4 `uc ]
"59
[; ;lcd_v.c: 59:     Lcd_Cmd(Low4);
[e ( _Lcd_Cmd (1 -> _Low4 `uc ]
"60
[; ;lcd_v.c: 60:   }
}
[e :U 107 ]
"61
[; ;lcd_v.c: 61:   if(r == 2)
[e $ ! == -> _r `i -> 2 `i 108  ]
"62
[; ;lcd_v.c: 62:   {
{
"63
[; ;lcd_v.c: 63:     Temp = 0xC0 + c - 1;
[e = _Temp -> - + -> 192 `i -> _c `i -> 1 `i `uc ]
"64
[; ;lcd_v.c: 64:     High4 = Temp >> 4;
[e = _High4 -> >> -> _Temp `i -> 4 `i `uc ]
"65
[; ;lcd_v.c: 65:     Low4 = Temp & 0x0F;
[e = _Low4 -> & -> _Temp `i -> 15 `i `uc ]
"66
[; ;lcd_v.c: 66:     Lcd_Cmd(High4);
[e ( _Lcd_Cmd (1 -> _High4 `uc ]
"67
[; ;lcd_v.c: 67:     Lcd_Cmd(Low4);
[e ( _Lcd_Cmd (1 -> _Low4 `uc ]
"68
[; ;lcd_v.c: 68:   }
}
[e :U 108 ]
"69
[; ;lcd_v.c: 69: }
[e :UE 106 ]
}
"70
[; ;lcd_v.c: 70: void Lcd_Init()
[v _Lcd_Init `(v ~T0 @X0 1 ef ]
"71
[; ;lcd_v.c: 71: {
{
[e :U _Lcd_Init ]
[f ]
"73
[; ;lcd_v.c: 73:   TRISD = 0x00;
[e = _TRISD -> -> 0 `i `uc ]
"74
[; ;lcd_v.c: 74:   TRISD0 = 0;
[e = _TRISD0 -> -> 0 `i `b ]
"75
[; ;lcd_v.c: 75:   TRISD1 = 0;
[e = _TRISD1 -> -> 0 `i `b ]
"77
[; ;lcd_v.c: 77:   Lcd_Port(0x00);
[e ( _Lcd_Port (1 -> -> 0 `i `uc ]
"78
[; ;lcd_v.c: 78:   _delay((unsigned long)((30)*(20000000/4000.0)));
[e ( __delay (1 -> * -> -> 30 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
"79
[; ;lcd_v.c: 79:   _delay((unsigned long)((500)*(20000000/4000000.0)));
[e ( __delay (1 -> * -> -> 500 `i `d / -> -> 20000000 `l `d .4000000.0 `ul ]
"80
[; ;lcd_v.c: 80:   Lcd_Cmd(0x03);
[e ( _Lcd_Cmd (1 -> -> 3 `i `uc ]
"81
[; ;lcd_v.c: 81:   _delay((unsigned long)((5)*(20000000/4000.0)));
[e ( __delay (1 -> * -> -> 5 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
"82
[; ;lcd_v.c: 82:   Lcd_Cmd(0x03);
[e ( _Lcd_Cmd (1 -> -> 3 `i `uc ]
"83
[; ;lcd_v.c: 83:   _delay((unsigned long)((150)*(20000000/4000000.0)));
[e ( __delay (1 -> * -> -> 150 `i `d / -> -> 20000000 `l `d .4000000.0 `ul ]
"84
[; ;lcd_v.c: 84:   Lcd_Cmd(0x03);
[e ( _Lcd_Cmd (1 -> -> 3 `i `uc ]
"85
[; ;lcd_v.c: 85:   Lcd_Cmd(0x02);
[e ( _Lcd_Cmd (1 -> -> 2 `i `uc ]
"86
[; ;lcd_v.c: 86:   Lcd_Cmd(0x02);
[e ( _Lcd_Cmd (1 -> -> 2 `i `uc ]
"87
[; ;lcd_v.c: 87:   Lcd_Cmd(0x08);
[e ( _Lcd_Cmd (1 -> -> 8 `i `uc ]
"88
[; ;lcd_v.c: 88:   Lcd_Cmd(0x00);
[e ( _Lcd_Cmd (1 -> -> 0 `i `uc ]
"89
[; ;lcd_v.c: 89:   Lcd_Cmd(0x0C);
[e ( _Lcd_Cmd (1 -> -> 12 `i `uc ]
"90
[; ;lcd_v.c: 90:   Lcd_Cmd(0x00);
[e ( _Lcd_Cmd (1 -> -> 0 `i `uc ]
"91
[; ;lcd_v.c: 91:   Lcd_Cmd(0x06);
[e ( _Lcd_Cmd (1 -> -> 6 `i `uc ]
"92
[; ;lcd_v.c: 92: }
[e :UE 109 ]
}
"93
[; ;lcd_v.c: 93: void Lcd_Write_Char(char a)
[v _Lcd_Write_Char `(v ~T0 @X0 1 ef1`uc ]
"94
[; ;lcd_v.c: 94: {
{
[e :U _Lcd_Write_Char ]
"93
[; ;lcd_v.c: 93: void Lcd_Write_Char(char a)
[v _a `uc ~T0 @X0 1 r1 ]
"94
[; ;lcd_v.c: 94: {
[f ]
"95
[; ;lcd_v.c: 95:   char Low4,High4;
[v _Low4 `uc ~T0 @X0 1 a ]
[v _High4 `uc ~T0 @X0 1 a ]
"96
[; ;lcd_v.c: 96:   Low4 = a & 0x0F;
[e = _Low4 -> & -> _a `i -> 15 `i `uc ]
"97
[; ;lcd_v.c: 97:   High4 = a & 0xF0;
[e = _High4 -> & -> _a `i -> 240 `i `uc ]
"98
[; ;lcd_v.c: 98:   RD0 = 1;
[e = _RD0 -> -> 1 `i `b ]
"99
[; ;lcd_v.c: 99:   Lcd_Port(High4>>4);
[e ( _Lcd_Port (1 -> >> -> _High4 `i -> 4 `i `uc ]
"100
[; ;lcd_v.c: 100:   RD1 = 1;
[e = _RD1 -> -> 1 `i `b ]
"101
[; ;lcd_v.c: 101:   _delay((unsigned long)((500)*(20000000/4000000.0)));
[e ( __delay (1 -> * -> -> 500 `i `d / -> -> 20000000 `l `d .4000000.0 `ul ]
"102
[; ;lcd_v.c: 102:   RD1 = 0;
[e = _RD1 -> -> 0 `i `b ]
"103
[; ;lcd_v.c: 103:   _delay((unsigned long)((500)*(20000000/4000000.0)));
[e ( __delay (1 -> * -> -> 500 `i `d / -> -> 20000000 `l `d .4000000.0 `ul ]
"104
[; ;lcd_v.c: 104:   Lcd_Port(Low4);
[e ( _Lcd_Port (1 -> _Low4 `uc ]
"105
[; ;lcd_v.c: 105:   RD1 = 1;
[e = _RD1 -> -> 1 `i `b ]
"106
[; ;lcd_v.c: 106:   _delay((unsigned long)((500)*(20000000/4000000.0)));
[e ( __delay (1 -> * -> -> 500 `i `d / -> -> 20000000 `l `d .4000000.0 `ul ]
"107
[; ;lcd_v.c: 107:   RD1 = 0;
[e = _RD1 -> -> 0 `i `b ]
"108
[; ;lcd_v.c: 108:   _delay((unsigned long)((500)*(20000000/4000000.0)));
[e ( __delay (1 -> * -> -> 500 `i `d / -> -> 20000000 `l `d .4000000.0 `ul ]
"109
[; ;lcd_v.c: 109: }
[e :UE 110 ]
}
"110
[; ;lcd_v.c: 110: void Lcd_Write_String(char *a)
[v _Lcd_Write_String `(v ~T0 @X0 1 ef1`*uc ]
"111
[; ;lcd_v.c: 111: {
{
[e :U _Lcd_Write_String ]
"110
[; ;lcd_v.c: 110: void Lcd_Write_String(char *a)
[v _a `*uc ~T0 @X0 1 r1 ]
"111
[; ;lcd_v.c: 111: {
[f ]
"112
[; ;lcd_v.c: 112:   int i;
[v _i `i ~T0 @X0 1 a ]
"113
[; ;lcd_v.c: 113:   for(i=0;a[i]!='\0';i++)
{
[e = _i -> 0 `i ]
[e $U 115  ]
[e :U 112 ]
"114
[; ;lcd_v.c: 114:   Lcd_Write_Char(a[i]);
[e ( _Lcd_Write_Char (1 *U + _a * -> _i `x -> -> # *U _a `i `x ]
[e ++ _i -> 1 `i ]
[e :U 115 ]
[e $ != -> *U + _a * -> _i `x -> -> # *U _a `i `x `ui -> 0 `ui 112  ]
[e :U 113 ]
}
"115
[; ;lcd_v.c: 115: }
[e :UE 111 ]
}
"116
[; ;lcd_v.c: 116: void Lcd_Shift_Left()
[v _Lcd_Shift_Left `(v ~T0 @X0 1 ef ]
"117
[; ;lcd_v.c: 117: {
{
[e :U _Lcd_Shift_Left ]
[f ]
"118
[; ;lcd_v.c: 118:   Lcd_Cmd(0x01);
[e ( _Lcd_Cmd (1 -> -> 1 `i `uc ]
"119
[; ;lcd_v.c: 119:   Lcd_Cmd(0x08);
[e ( _Lcd_Cmd (1 -> -> 8 `i `uc ]
"120
[; ;lcd_v.c: 120: }
[e :UE 116 ]
}
"121
[; ;lcd_v.c: 121: void Lcd_Shift_Right()
[v _Lcd_Shift_Right `(v ~T0 @X0 1 ef ]
"122
[; ;lcd_v.c: 122: {
{
[e :U _Lcd_Shift_Right ]
[f ]
"123
[; ;lcd_v.c: 123:   Lcd_Cmd(0x01);
[e ( _Lcd_Cmd (1 -> -> 1 `i `uc ]
"124
[; ;lcd_v.c: 124:   Lcd_Cmd(0x0C);
[e ( _Lcd_Cmd (1 -> -> 12 `i `uc ]
"125
[; ;lcd_v.c: 125: }
[e :UE 117 ]
}
