

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Fri Sep 20 22:02:09 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.05
    16                           ; Generated 20/12/2018 GMT
    17                           ; 
    18                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0094                     	;# 
    97  0098                     	;# 
    98  0099                     	;# 
    99  009C                     	;# 
   100  009D                     	;# 
   101  009E                     	;# 
   102  009F                     	;# 
   103  010C                     	;# 
   104  010D                     	;# 
   105  010E                     	;# 
   106  010F                     	;# 
   107  018C                     	;# 
   108  018D                     	;# 
   109  0000                     	;# 
   110  0001                     	;# 
   111  0002                     	;# 
   112  0003                     	;# 
   113  0004                     	;# 
   114  0005                     	;# 
   115  0006                     	;# 
   116  0007                     	;# 
   117  0008                     	;# 
   118  0009                     	;# 
   119  000A                     	;# 
   120  000B                     	;# 
   121  000C                     	;# 
   122  000D                     	;# 
   123  000E                     	;# 
   124  000E                     	;# 
   125  000F                     	;# 
   126  0010                     	;# 
   127  0011                     	;# 
   128  0012                     	;# 
   129  0013                     	;# 
   130  0014                     	;# 
   131  0015                     	;# 
   132  0015                     	;# 
   133  0016                     	;# 
   134  0017                     	;# 
   135  0018                     	;# 
   136  0019                     	;# 
   137  001A                     	;# 
   138  001B                     	;# 
   139  001B                     	;# 
   140  001C                     	;# 
   141  001D                     	;# 
   142  001E                     	;# 
   143  001F                     	;# 
   144  0081                     	;# 
   145  0085                     	;# 
   146  0086                     	;# 
   147  0087                     	;# 
   148  0088                     	;# 
   149  0089                     	;# 
   150  008C                     	;# 
   151  008D                     	;# 
   152  008E                     	;# 
   153  0091                     	;# 
   154  0092                     	;# 
   155  0093                     	;# 
   156  0094                     	;# 
   157  0098                     	;# 
   158  0099                     	;# 
   159  009C                     	;# 
   160  009D                     	;# 
   161  009E                     	;# 
   162  009F                     	;# 
   163  010C                     	;# 
   164  010D                     	;# 
   165  010E                     	;# 
   166  010F                     	;# 
   167  018C                     	;# 
   168  018D                     	;# 
   169  0000                     	;# 
   170  0001                     	;# 
   171  0002                     	;# 
   172  0003                     	;# 
   173  0004                     	;# 
   174  0005                     	;# 
   175  0006                     	;# 
   176  0007                     	;# 
   177  0008                     	;# 
   178  0009                     	;# 
   179  000A                     	;# 
   180  000B                     	;# 
   181  000C                     	;# 
   182  000D                     	;# 
   183  000E                     	;# 
   184  000E                     	;# 
   185  000F                     	;# 
   186  0010                     	;# 
   187  0011                     	;# 
   188  0012                     	;# 
   189  0013                     	;# 
   190  0014                     	;# 
   191  0015                     	;# 
   192  0015                     	;# 
   193  0016                     	;# 
   194  0017                     	;# 
   195  0018                     	;# 
   196  0019                     	;# 
   197  001A                     	;# 
   198  001B                     	;# 
   199  001B                     	;# 
   200  001C                     	;# 
   201  001D                     	;# 
   202  001E                     	;# 
   203  001F                     	;# 
   204  0081                     	;# 
   205  0085                     	;# 
   206  0086                     	;# 
   207  0087                     	;# 
   208  0088                     	;# 
   209  0089                     	;# 
   210  008C                     	;# 
   211  008D                     	;# 
   212  008E                     	;# 
   213  0091                     	;# 
   214  0092                     	;# 
   215  0093                     	;# 
   216  0094                     	;# 
   217  0098                     	;# 
   218  0099                     	;# 
   219  009C                     	;# 
   220  009D                     	;# 
   221  009E                     	;# 
   222  009F                     	;# 
   223  010C                     	;# 
   224  010D                     	;# 
   225  010E                     	;# 
   226  010F                     	;# 
   227  018C                     	;# 
   228  018D                     	;# 
   229  0041                     _RD1	set	65
   230  0040                     _RD0	set	64
   231  0045                     _RD5	set	69
   232  0044                     _RD4	set	68
   233  0043                     _RD3	set	67
   234  0042                     _RD2	set	66
   235  0088                     _TRISD	set	136
   236  0441                     _TRISD1	set	1089
   237  0440                     _TRISD0	set	1088
   238                           
   239                           	psect	strings
   240  0003                     __pstrings:	
   241  0003                     stringtab:	
   242  0003                     __stringtab:	
   243  0003                     stringcode:	
   244                           ;	String table - string pointers are 1 byte each
   245                           
   246  0003                     stringdir:	
   247  0003  3000               	movlw	high stringdir
   248  0004  008A               	movwf	10
   249  0005  0804               	movf	4,w
   250  0006  0A84               	incf	4,f
   251  0007  0782               	addwf	2,f
   252  0008                     __stringbase:	
   253  0008  3400               	retlw	0
   254  0009                     __end_of__stringtab:	
   255  0009                     STR_1:	
   256  0009  3448               	retlw	72	;'H'
   257  000A  3449               	retlw	73	;'I'
   258  000B  3448               	retlw	72	;'H'
   259  000C  3449               	retlw	73	;'I'
   260  000D  3400               	retlw	0
   261                           
   262                           ; #config settings
   263  0000                     
   264                           	psect	cinit
   265  07FC                     start_initialization:	
   266  07FC                     __initialization:	
   267  07FC                     end_of_initialization:	
   268                           ;End of C runtime variable initialization code
   269                           
   270  07FC                     __end_of__initialization:	
   271  07FC  0183               	clrf	3
   272  07FD  120A  118A  2EE2   	ljmp	_main	;jump to C main() function
   273                           
   274                           	psect	cstackCOMMON
   275  0070                     __pcstackCOMMON:	
   276  0070                     ?_Lcd_Init:	
   277  0070                     ?_Lcd_Write_String:	
   278                           ; 1 bytes @ 0x0
   279                           
   280  0070                     ?_main:	
   281                           ; 1 bytes @ 0x0
   282                           
   283  0070                     ?_Lcd_Port:	
   284                           ; 1 bytes @ 0x0
   285                           
   286  0070                     ??_Lcd_Port:	
   287                           ; 1 bytes @ 0x0
   288                           
   289  0070                     ?_Lcd_Cmd:	
   290                           ; 1 bytes @ 0x0
   291                           
   292  0070                     ?_Lcd_Write_Char:	
   293                           ; 1 bytes @ 0x0
   294                           
   295  0070                     Lcd_Port@Data:	
   296                           ; 1 bytes @ 0x0
   297                           
   298                           
   299                           ; 1 bytes @ 0x0
   300  0070                     	ds	1
   301  0071                     ??_Lcd_Cmd:	
   302  0071                     ??_Lcd_Write_Char:	
   303                           ; 1 bytes @ 0x1
   304                           
   305                           
   306                           ; 1 bytes @ 0x1
   307  0071                     	ds	2
   308  0073                     Lcd_Cmd@CMD:	
   309  0073                     Lcd_Write_Char@Low4:	
   310                           ; 1 bytes @ 0x3
   311                           
   312                           
   313                           ; 1 bytes @ 0x3
   314  0073                     	ds	1
   315  0074                     ??_Lcd_Init:	
   316  0074                     Lcd_Write_Char@High4:	
   317                           ; 1 bytes @ 0x4
   318                           
   319                           
   320                           ; 1 bytes @ 0x4
   321  0074                     	ds	1
   322  0075                     Lcd_Write_Char@a:	
   323                           
   324                           ; 1 bytes @ 0x5
   325  0075                     	ds	1
   326  0076                     ??_Lcd_Write_String:	
   327  0076                     Lcd_Write_String@i:	
   328                           ; 1 bytes @ 0x6
   329                           
   330                           
   331                           ; 2 bytes @ 0x6
   332  0076                     	ds	2
   333  0078                     Lcd_Write_String@a:	
   334                           
   335                           ; 1 bytes @ 0x8
   336  0078                     	ds	1
   337  0079                     ??_main:	
   338                           
   339                           	psect	maintext
   340  06E2                     __pmaintext:	
   341                           ; 1 bytes @ 0x9
   342 ;;
   343 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   344 ;;
   345 ;; *************** function _main *****************
   346 ;; Defined at:
   347 ;;		line 3 in file "LCD_v2.c"
   348 ;; Parameters:    Size  Location     Type
   349 ;;		None
   350 ;; Auto vars:     Size  Location     Type
   351 ;;		None
   352 ;; Return value:  Size  Location     Type
   353 ;;                  1    wreg      void 
   354 ;; Registers used:
   355 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   356 ;; Tracked objects:
   357 ;;		On entry : B00/0
   358 ;;		On exit  : 0/0
   359 ;;		Unchanged: 0/0
   360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   361 ;;      Params:         0       0       0       0       0
   362 ;;      Locals:         0       0       0       0       0
   363 ;;      Temps:          0       0       0       0       0
   364 ;;      Totals:         0       0       0       0       0
   365 ;;Total ram usage:        0 bytes
   366 ;; Hardware stack levels required when called:    3
   367 ;; This function calls:
   368 ;;		_Lcd_Init
   369 ;;		_Lcd_Write_String
   370 ;; This function is called by:
   371 ;;		Startup code after reset
   372 ;; This function uses a non-reentrant model
   373 ;;
   374                           
   375                           
   376                           ;psect for function _main
   377  06E2                     _main:	
   378                           
   379                           ;LCD_v2.c: 5:     Lcd_Init();
   380                           
   381                           ;incstack = 0
   382                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   383  06E2  120A  118A  2797  120A  118A  	fcall	_Lcd_Init
   384                           
   385                           ;LCD_v2.c: 6:     Lcd_Write_String("HIHI");
   386  06E7  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   387  06E8  120A  118A  2722  120A  118A  	fcall	_Lcd_Write_String
   388  06ED                     l9:	
   389                           ;LCD_v2.c: 7:     while(1)
   390                           
   391                           
   392                           ;LCD_v2.c: 8:     {;LCD_v2.c: 10:     }
   393  06ED  2EED               	goto	l9
   394  06EE                     __end_of_main:	
   395                           
   396                           	psect	text1
   397  0722                     __ptext1:	
   398 ;; *************** function _Lcd_Write_String *****************
   399 ;; Defined at:
   400 ;;		line 110 in file "lcd_v.c"
   401 ;; Parameters:    Size  Location     Type
   402 ;;  a               1    wreg     PTR unsigned char 
   403 ;;		 -> STR_1(5), 
   404 ;; Auto vars:     Size  Location     Type
   405 ;;  a               1    8[COMMON] PTR unsigned char 
   406 ;;		 -> STR_1(5), 
   407 ;;  i               2    6[COMMON] int 
   408 ;; Return value:  Size  Location     Type
   409 ;;                  1    wreg      void 
   410 ;; Registers used:
   411 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   412 ;; Tracked objects:
   413 ;;		On entry : 0/0
   414 ;;		On exit  : 0/0
   415 ;;		Unchanged: 0/0
   416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   417 ;;      Params:         0       0       0       0       0
   418 ;;      Locals:         3       0       0       0       0
   419 ;;      Temps:          0       0       0       0       0
   420 ;;      Totals:         3       0       0       0       0
   421 ;;Total ram usage:        3 bytes
   422 ;; Hardware stack levels used:    1
   423 ;; Hardware stack levels required when called:    2
   424 ;; This function calls:
   425 ;;		_Lcd_Write_Char
   426 ;; This function is called by:
   427 ;;		_main
   428 ;; This function uses a non-reentrant model
   429 ;;
   430                           
   431                           
   432                           ;psect for function _Lcd_Write_String
   433  0722                     _Lcd_Write_String:	
   434                           
   435                           ;incstack = 0
   436                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   437                           ;Lcd_Write_String@a stored from wreg
   438  0722  00F8               	movwf	Lcd_Write_String@a
   439                           
   440                           ;lcd_v.c: 110: void Lcd_Write_String(char *a);lcd_v.c: 111: {;lcd_v.c: 112:   int i;;lcd
      +                          _v.c: 113:   for(i=0;a[i]!='\0';i++)
   441  0723  01F6               	clrf	Lcd_Write_String@i
   442  0724  01F7               	clrf	Lcd_Write_String@i+1
   443  0725                     l788:	
   444  0725  0876               	movf	Lcd_Write_String@i,w
   445  0726  0778               	addwf	Lcd_Write_String@a,w
   446  0727  0084               	movwf	4
   447  0728  120A  118A  2003  120A  118A  	fcall	stringdir
   448  072D  3A00               	xorlw	0
   449  072E  1903               	btfsc	3,2
   450  072F  0008               	return
   451                           
   452                           ;lcd_v.c: 114:   Lcd_Write_Char(a[i]);
   453  0730  0876               	movf	Lcd_Write_String@i,w
   454  0731  0778               	addwf	Lcd_Write_String@a,w
   455  0732  0084               	movwf	4
   456  0733  120A  118A  2003  120A  118A  	fcall	stringdir
   457  0738  120A  118A  2744  120A  118A  	fcall	_Lcd_Write_Char
   458  073D  3001               	movlw	1
   459  073E  07F6               	addwf	Lcd_Write_String@i,f
   460  073F  1803               	skipnc
   461  0740  0AF7               	incf	Lcd_Write_String@i+1,f
   462  0741  3000               	movlw	0
   463  0742  07F7               	addwf	Lcd_Write_String@i+1,f
   464  0743  2F25               	goto	l788
   465  0744                     __end_of_Lcd_Write_String:	
   466                           
   467                           	psect	text2
   468  0744                     __ptext2:	
   469 ;; *************** function _Lcd_Write_Char *****************
   470 ;; Defined at:
   471 ;;		line 93 in file "lcd_v.c"
   472 ;; Parameters:    Size  Location     Type
   473 ;;  a               1    wreg     unsigned char 
   474 ;; Auto vars:     Size  Location     Type
   475 ;;  a               1    5[COMMON] unsigned char 
   476 ;;  High4           1    4[COMMON] unsigned char 
   477 ;;  Low4            1    3[COMMON] unsigned char 
   478 ;; Return value:  Size  Location     Type
   479 ;;                  1    wreg      void 
   480 ;; Registers used:
   481 ;;		wreg, status,2, status,0, pclath, cstack
   482 ;; Tracked objects:
   483 ;;		On entry : 0/0
   484 ;;		On exit  : 0/0
   485 ;;		Unchanged: 0/0
   486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   487 ;;      Params:         0       0       0       0       0
   488 ;;      Locals:         3       0       0       0       0
   489 ;;      Temps:          2       0       0       0       0
   490 ;;      Totals:         5       0       0       0       0
   491 ;;Total ram usage:        5 bytes
   492 ;; Hardware stack levels used:    1
   493 ;; Hardware stack levels required when called:    1
   494 ;; This function calls:
   495 ;;		_Lcd_Port
   496 ;; This function is called by:
   497 ;;		_Lcd_Write_String
   498 ;; This function uses a non-reentrant model
   499 ;;
   500                           
   501                           
   502                           ;psect for function _Lcd_Write_Char
   503  0744                     _Lcd_Write_Char:	
   504                           
   505                           ;incstack = 0
   506                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
   507                           ;Lcd_Write_Char@a stored from wreg
   508  0744  00F5               	movwf	Lcd_Write_Char@a
   509                           
   510                           ;lcd_v.c: 93: void Lcd_Write_Char(char a);lcd_v.c: 94: {;lcd_v.c: 95:   char Low4,High4;
      +                          ;lcd_v.c: 96:   Low4 = a & 0x0F;
   511  0745  0875               	movf	Lcd_Write_Char@a,w
   512  0746  390F               	andlw	15
   513  0747  00F1               	movwf	??_Lcd_Write_Char
   514  0748  0871               	movf	??_Lcd_Write_Char,w
   515  0749  00F3               	movwf	Lcd_Write_Char@Low4
   516                           
   517                           ;lcd_v.c: 97:   High4 = a & 0xF0;
   518  074A  0875               	movf	Lcd_Write_Char@a,w
   519  074B  39F0               	andlw	240
   520  074C  00F1               	movwf	??_Lcd_Write_Char
   521  074D  0871               	movf	??_Lcd_Write_Char,w
   522  074E  00F4               	movwf	Lcd_Write_Char@High4
   523                           
   524                           ;lcd_v.c: 98:   RD0 = 1;
   525  074F  1283               	bcf	3,5	;RP0=0, select bank0
   526  0750  1303               	bcf	3,6	;RP1=0, select bank0
   527  0751  1408               	bsf	8,0	;volatile
   528                           
   529                           ;lcd_v.c: 99:   Lcd_Port(High4>>4);
   530  0752  0874               	movf	Lcd_Write_Char@High4,w
   531  0753  00F1               	movwf	??_Lcd_Write_Char
   532  0754  3004               	movlw	4
   533  0755                     u55:	
   534  0755  1003               	clrc
   535  0756  0CF1               	rrf	??_Lcd_Write_Char,f
   536  0757  3EFF               	addlw	-1
   537  0758  1D03               	skipz
   538  0759  2F55               	goto	u55
   539  075A  0871               	movf	??_Lcd_Write_Char,w
   540  075B  120A  118A  26EE  120A  118A  	fcall	_Lcd_Port
   541                           
   542                           ;lcd_v.c: 100:   RD1 = 1;
   543  0760  1283               	bcf	3,5	;RP0=0, select bank0
   544  0761  1303               	bcf	3,6	;RP1=0, select bank0
   545  0762  1488               	bsf	8,1	;volatile
   546                           
   547                           ;lcd_v.c: 101:   _delay((unsigned long)((500)*(20000000/4000000.0)));
   548  0763  3004               	movlw	4
   549  0764  00F2               	movwf	??_Lcd_Write_Char+1
   550  0765  303D               	movlw	61
   551  0766  00F1               	movwf	??_Lcd_Write_Char
   552  0767                     u127:	
   553  0767  0BF1               	decfsz	??_Lcd_Write_Char,f
   554  0768  2F67               	goto	u127
   555  0769  0BF2               	decfsz	??_Lcd_Write_Char+1,f
   556  076A  2F67               	goto	u127
   557  076B  2F6C               	nop2
   558                           
   559                           ;lcd_v.c: 102:   RD1 = 0;
   560  076C  1283               	bcf	3,5	;RP0=0, select bank0
   561  076D  1303               	bcf	3,6	;RP1=0, select bank0
   562  076E  1088               	bcf	8,1	;volatile
   563                           
   564                           ;lcd_v.c: 103:   _delay((unsigned long)((500)*(20000000/4000000.0)));
   565  076F  3004               	movlw	4
   566  0770  00F2               	movwf	??_Lcd_Write_Char+1
   567  0771  303D               	movlw	61
   568  0772  00F1               	movwf	??_Lcd_Write_Char
   569  0773                     u137:	
   570  0773  0BF1               	decfsz	??_Lcd_Write_Char,f
   571  0774  2F73               	goto	u137
   572  0775  0BF2               	decfsz	??_Lcd_Write_Char+1,f
   573  0776  2F73               	goto	u137
   574  0777  2F78               	nop2
   575                           
   576                           ;lcd_v.c: 104:   Lcd_Port(Low4);
   577  0778  0873               	movf	Lcd_Write_Char@Low4,w
   578  0779  120A  118A  26EE  120A  118A  	fcall	_Lcd_Port
   579                           
   580                           ;lcd_v.c: 105:   RD1 = 1;
   581  077E  1283               	bcf	3,5	;RP0=0, select bank0
   582  077F  1303               	bcf	3,6	;RP1=0, select bank0
   583  0780  1488               	bsf	8,1	;volatile
   584                           
   585                           ;lcd_v.c: 106:   _delay((unsigned long)((500)*(20000000/4000000.0)));
   586  0781  3004               	movlw	4
   587  0782  00F2               	movwf	??_Lcd_Write_Char+1
   588  0783  303D               	movlw	61
   589  0784  00F1               	movwf	??_Lcd_Write_Char
   590  0785                     u147:	
   591  0785  0BF1               	decfsz	??_Lcd_Write_Char,f
   592  0786  2F85               	goto	u147
   593  0787  0BF2               	decfsz	??_Lcd_Write_Char+1,f
   594  0788  2F85               	goto	u147
   595  0789  2F8A               	nop2
   596                           
   597                           ;lcd_v.c: 107:   RD1 = 0;
   598  078A  1283               	bcf	3,5	;RP0=0, select bank0
   599  078B  1303               	bcf	3,6	;RP1=0, select bank0
   600  078C  1088               	bcf	8,1	;volatile
   601                           
   602                           ;lcd_v.c: 108:   _delay((unsigned long)((500)*(20000000/4000000.0)));
   603  078D  3004               	movlw	4
   604  078E  00F2               	movwf	??_Lcd_Write_Char+1
   605  078F  303D               	movlw	61
   606  0790  00F1               	movwf	??_Lcd_Write_Char
   607  0791                     u157:	
   608  0791  0BF1               	decfsz	??_Lcd_Write_Char,f
   609  0792  2F91               	goto	u157
   610  0793  0BF2               	decfsz	??_Lcd_Write_Char+1,f
   611  0794  2F91               	goto	u157
   612  0795  2F96               	nop2
   613  0796  0008               	return
   614  0797                     __end_of_Lcd_Write_Char:	
   615                           
   616                           	psect	text3
   617  0797                     __ptext3:	
   618 ;; *************** function _Lcd_Init *****************
   619 ;; Defined at:
   620 ;;		line 70 in file "lcd_v.c"
   621 ;; Parameters:    Size  Location     Type
   622 ;;		None
   623 ;; Auto vars:     Size  Location     Type
   624 ;;		None
   625 ;; Return value:  Size  Location     Type
   626 ;;                  1    wreg      void 
   627 ;; Registers used:
   628 ;;		wreg, status,2, status,0, pclath, cstack
   629 ;; Tracked objects:
   630 ;;		On entry : 0/0
   631 ;;		On exit  : 0/0
   632 ;;		Unchanged: 0/0
   633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   634 ;;      Params:         0       0       0       0       0
   635 ;;      Locals:         0       0       0       0       0
   636 ;;      Temps:          2       0       0       0       0
   637 ;;      Totals:         2       0       0       0       0
   638 ;;Total ram usage:        2 bytes
   639 ;; Hardware stack levels used:    1
   640 ;; Hardware stack levels required when called:    2
   641 ;; This function calls:
   642 ;;		_Lcd_Cmd
   643 ;;		_Lcd_Port
   644 ;; This function is called by:
   645 ;;		_main
   646 ;; This function uses a non-reentrant model
   647 ;;
   648                           
   649                           
   650                           ;psect for function _Lcd_Init
   651  0797                     _Lcd_Init:	
   652                           
   653                           ;lcd_v.c: 73:   TRISD = 0x00;
   654                           
   655                           ;incstack = 0
   656                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
   657  0797  1683               	bsf	3,5	;RP0=1, select bank1
   658  0798  1303               	bcf	3,6	;RP1=0, select bank1
   659  0799  0188               	clrf	8	;volatile
   660                           
   661                           ;lcd_v.c: 74:   TRISD0 = 0;
   662  079A  1008               	bcf	8,0	;volatile
   663                           
   664                           ;lcd_v.c: 75:   TRISD1 = 0;
   665  079B  1088               	bcf	8,1	;volatile
   666                           
   667                           ;lcd_v.c: 77:   Lcd_Port(0x00);
   668  079C  3000               	movlw	0
   669  079D  120A  118A  26EE  120A  118A  	fcall	_Lcd_Port
   670                           
   671                           ;lcd_v.c: 78:   _delay((unsigned long)((30)*(20000000/4000.0)));
   672  07A2  30C3               	movlw	195
   673  07A3  00F5               	movwf	??_Lcd_Init+1
   674  07A4  30CD               	movlw	205
   675  07A5  00F4               	movwf	??_Lcd_Init
   676  07A6                     u167:	
   677  07A6  0BF4               	decfsz	??_Lcd_Init,f
   678  07A7  2FA6               	goto	u167
   679  07A8  0BF5               	decfsz	??_Lcd_Init+1,f
   680  07A9  2FA6               	goto	u167
   681                           
   682                           ;lcd_v.c: 79:   _delay((unsigned long)((500)*(20000000/4000000.0)));
   683  07AA  3004               	movlw	4
   684  07AB  00F5               	movwf	??_Lcd_Init+1
   685  07AC  303D               	movlw	61
   686  07AD  00F4               	movwf	??_Lcd_Init
   687  07AE                     u177:	
   688  07AE  0BF4               	decfsz	??_Lcd_Init,f
   689  07AF  2FAE               	goto	u177
   690  07B0  0BF5               	decfsz	??_Lcd_Init+1,f
   691  07B1  2FAE               	goto	u177
   692  07B2  2FB3               	nop2
   693                           
   694                           ;lcd_v.c: 80:   Lcd_Cmd(0x03);
   695  07B3  3003               	movlw	3
   696  07B4  120A  118A  2708  120A  118A  	fcall	_Lcd_Cmd
   697                           
   698                           ;lcd_v.c: 81:   _delay((unsigned long)((5)*(20000000/4000.0)));
   699  07B9  3021               	movlw	33
   700  07BA  00F5               	movwf	??_Lcd_Init+1
   701  07BB  3076               	movlw	118
   702  07BC  00F4               	movwf	??_Lcd_Init
   703  07BD                     u187:	
   704  07BD  0BF4               	decfsz	??_Lcd_Init,f
   705  07BE  2FBD               	goto	u187
   706  07BF  0BF5               	decfsz	??_Lcd_Init+1,f
   707  07C0  2FBD               	goto	u187
   708  07C1  0000               	nop
   709                           
   710                           ;lcd_v.c: 82:   Lcd_Cmd(0x03);
   711  07C2  3003               	movlw	3
   712  07C3  120A  118A  2708  120A  118A  	fcall	_Lcd_Cmd
   713                           
   714                           ;lcd_v.c: 83:   _delay((unsigned long)((150)*(20000000/4000000.0)));
   715  07C8  30F9               	movlw	249
   716  07C9  00F4               	movwf	??_Lcd_Init
   717  07CA                     u197:	
   718  07CA  0BF4               	decfsz	??_Lcd_Init,f
   719  07CB  2FCA               	goto	u197
   720  07CC  2FCD               	nop2
   721                           
   722                           ;lcd_v.c: 84:   Lcd_Cmd(0x03);
   723  07CD  3003               	movlw	3
   724  07CE  120A  118A  2708  120A  118A  	fcall	_Lcd_Cmd
   725                           
   726                           ;lcd_v.c: 85:   Lcd_Cmd(0x02);
   727  07D3  3002               	movlw	2
   728  07D4  120A  118A  2708  120A  118A  	fcall	_Lcd_Cmd
   729                           
   730                           ;lcd_v.c: 86:   Lcd_Cmd(0x02);
   731  07D9  3002               	movlw	2
   732  07DA  120A  118A  2708  120A  118A  	fcall	_Lcd_Cmd
   733                           
   734                           ;lcd_v.c: 87:   Lcd_Cmd(0x08);
   735  07DF  3008               	movlw	8
   736  07E0  120A  118A  2708  120A  118A  	fcall	_Lcd_Cmd
   737                           
   738                           ;lcd_v.c: 88:   Lcd_Cmd(0x00);
   739  07E5  3000               	movlw	0
   740  07E6  120A  118A  2708  120A  118A  	fcall	_Lcd_Cmd
   741                           
   742                           ;lcd_v.c: 89:   Lcd_Cmd(0x0C);
   743  07EB  300C               	movlw	12
   744  07EC  120A  118A  2708  120A  118A  	fcall	_Lcd_Cmd
   745                           
   746                           ;lcd_v.c: 90:   Lcd_Cmd(0x00);
   747  07F1  3000               	movlw	0
   748  07F2  120A  118A  2708  120A  118A  	fcall	_Lcd_Cmd
   749                           
   750                           ;lcd_v.c: 91:   Lcd_Cmd(0x06);
   751  07F7  3006               	movlw	6
   752  07F8  120A  118A  2708   	fcall	_Lcd_Cmd
   753  07FB  0008               	return
   754  07FC                     __end_of_Lcd_Init:	
   755                           
   756                           	psect	text4
   757  0708                     __ptext4:	
   758 ;; *************** function _Lcd_Cmd *****************
   759 ;; Defined at:
   760 ;;		line 34 in file "lcd_v.c"
   761 ;; Parameters:    Size  Location     Type
   762 ;;  CMD             1    wreg     unsigned char 
   763 ;; Auto vars:     Size  Location     Type
   764 ;;  CMD             1    3[COMMON] unsigned char 
   765 ;; Return value:  Size  Location     Type
   766 ;;                  1    wreg      void 
   767 ;; Registers used:
   768 ;;		wreg, status,2, status,0, pclath, cstack
   769 ;; Tracked objects:
   770 ;;		On entry : 0/0
   771 ;;		On exit  : 0/0
   772 ;;		Unchanged: 0/0
   773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   774 ;;      Params:         0       0       0       0       0
   775 ;;      Locals:         1       0       0       0       0
   776 ;;      Temps:          2       0       0       0       0
   777 ;;      Totals:         3       0       0       0       0
   778 ;;Total ram usage:        3 bytes
   779 ;; Hardware stack levels used:    1
   780 ;; Hardware stack levels required when called:    1
   781 ;; This function calls:
   782 ;;		_Lcd_Port
   783 ;; This function is called by:
   784 ;;		_Lcd_Init
   785 ;;		_Lcd_Clear
   786 ;;		_Lcd_Set_Cursor
   787 ;;		_Lcd_Shift_Left
   788 ;;		_Lcd_Shift_Right
   789 ;; This function uses a non-reentrant model
   790 ;;
   791                           
   792                           
   793                           ;psect for function _Lcd_Cmd
   794  0708                     _Lcd_Cmd:	
   795                           
   796                           ;incstack = 0
   797                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
   798                           ;Lcd_Cmd@CMD stored from wreg
   799  0708  00F3               	movwf	Lcd_Cmd@CMD
   800                           
   801                           ;lcd_v.c: 34: void Lcd_Cmd(char CMD);lcd_v.c: 35: {;lcd_v.c: 37:   RD0 = 0;
   802  0709  1283               	bcf	3,5	;RP0=0, select bank0
   803  070A  1303               	bcf	3,6	;RP1=0, select bank0
   804  070B  1008               	bcf	8,0	;volatile
   805                           
   806                           ;lcd_v.c: 39:   Lcd_Port(CMD);
   807  070C  0873               	movf	Lcd_Cmd@CMD,w
   808  070D  120A  118A  26EE  120A  118A  	fcall	_Lcd_Port
   809                           
   810                           ;lcd_v.c: 41:   RD1 = 1;
   811  0712  1283               	bcf	3,5	;RP0=0, select bank0
   812  0713  1303               	bcf	3,6	;RP1=0, select bank0
   813  0714  1488               	bsf	8,1	;volatile
   814                           
   815                           ;lcd_v.c: 42:   _delay((unsigned long)((500)*(20000000/4000000.0)));
   816  0715  3004               	movlw	4
   817  0716  00F2               	movwf	??_Lcd_Cmd+1
   818  0717  303D               	movlw	61
   819  0718  00F1               	movwf	??_Lcd_Cmd
   820  0719                     u207:	
   821  0719  0BF1               	decfsz	??_Lcd_Cmd,f
   822  071A  2F19               	goto	u207
   823  071B  0BF2               	decfsz	??_Lcd_Cmd+1,f
   824  071C  2F19               	goto	u207
   825  071D  2F1E               	nop2
   826                           
   827                           ;lcd_v.c: 43:   RD1 = 0;
   828  071E  1283               	bcf	3,5	;RP0=0, select bank0
   829  071F  1303               	bcf	3,6	;RP1=0, select bank0
   830  0720  1088               	bcf	8,1	;volatile
   831  0721  0008               	return
   832  0722                     __end_of_Lcd_Cmd:	
   833                           
   834                           	psect	text5
   835  06EE                     __ptext5:	
   836 ;; *************** function _Lcd_Port *****************
   837 ;; Defined at:
   838 ;;		line 15 in file "lcd_v.c"
   839 ;; Parameters:    Size  Location     Type
   840 ;;  Data            1    wreg     unsigned char 
   841 ;; Auto vars:     Size  Location     Type
   842 ;;  Data            1    0[COMMON] unsigned char 
   843 ;; Return value:  Size  Location     Type
   844 ;;                  1    wreg      void 
   845 ;; Registers used:
   846 ;;		wreg
   847 ;; Tracked objects:
   848 ;;		On entry : 0/0
   849 ;;		On exit  : 0/0
   850 ;;		Unchanged: 0/0
   851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   852 ;;      Params:         0       0       0       0       0
   853 ;;      Locals:         1       0       0       0       0
   854 ;;      Temps:          0       0       0       0       0
   855 ;;      Totals:         1       0       0       0       0
   856 ;;Total ram usage:        1 bytes
   857 ;; Hardware stack levels used:    1
   858 ;; This function calls:
   859 ;;		Nothing
   860 ;; This function is called by:
   861 ;;		_Lcd_Cmd
   862 ;;		_Lcd_Init
   863 ;;		_Lcd_Write_Char
   864 ;; This function uses a non-reentrant model
   865 ;;
   866                           
   867                           
   868                           ;psect for function _Lcd_Port
   869  06EE                     _Lcd_Port:	
   870                           
   871                           ;incstack = 0
   872                           ; Regs used in _Lcd_Port: [wreg]
   873                           ;Lcd_Port@Data stored from wreg
   874  06EE  00F0               	movwf	Lcd_Port@Data
   875                           
   876                           ;lcd_v.c: 15: void Lcd_Port(unsigned char Data);lcd_v.c: 16: {;lcd_v.c: 17:   if(Data & 
      +                          1)
   877  06EF  1C70               	btfss	Lcd_Port@Data,0
   878  06F0  2EF5               	goto	l35
   879                           
   880                           ;lcd_v.c: 18:     RD2 = 1;
   881  06F1  1283               	bcf	3,5	;RP0=0, select bank0
   882  06F2  1303               	bcf	3,6	;RP1=0, select bank0
   883  06F3  1508               	bsf	8,2	;volatile
   884  06F4  2EF8               	goto	l36
   885  06F5                     l35:	
   886                           ;lcd_v.c: 19:   else
   887                           
   888                           
   889                           ;lcd_v.c: 20:     RD2 = 0;
   890  06F5  1283               	bcf	3,5	;RP0=0, select bank0
   891  06F6  1303               	bcf	3,6	;RP1=0, select bank0
   892  06F7  1108               	bcf	8,2	;volatile
   893  06F8                     l36:	
   894                           
   895                           ;lcd_v.c: 21:   if(Data & 2)
   896  06F8  1CF0               	btfss	Lcd_Port@Data,1
   897  06F9  2EFC               	goto	l37
   898                           
   899                           ;lcd_v.c: 22:     RD3 = 1;
   900  06FA  1588               	bsf	8,3	;volatile
   901  06FB  2EFD               	goto	l38
   902  06FC                     l37:	
   903                           ;lcd_v.c: 23:   else
   904                           
   905                           
   906                           ;lcd_v.c: 24:     RD3 = 0;
   907  06FC  1188               	bcf	8,3	;volatile
   908  06FD                     l38:	
   909                           
   910                           ;lcd_v.c: 25:   if(Data & 4)
   911  06FD  1D70               	btfss	Lcd_Port@Data,2
   912  06FE  2F01               	goto	l39
   913                           
   914                           ;lcd_v.c: 26:     RD4 = 1;
   915  06FF  1608               	bsf	8,4	;volatile
   916  0700  2F02               	goto	l40
   917  0701                     l39:	
   918                           ;lcd_v.c: 27:   else
   919                           
   920                           
   921                           ;lcd_v.c: 28:     RD4 = 0;
   922  0701  1208               	bcf	8,4	;volatile
   923  0702                     l40:	
   924                           
   925                           ;lcd_v.c: 29:   if(Data & 8)
   926  0702  1DF0               	btfss	Lcd_Port@Data,3
   927  0703  2F06               	goto	l41
   928                           
   929                           ;lcd_v.c: 30:     RD5 = 1;
   930  0704  1688               	bsf	8,5	;volatile
   931  0705  0008               	return
   932  0706                     l41:	
   933                           ;lcd_v.c: 31:   else
   934                           
   935                           
   936                           ;lcd_v.c: 32:     RD5 = 0;
   937  0706  1288               	bcf	8,5	;volatile
   938  0707  0008               	return
   939  0708                     __end_of_Lcd_Port:	
   940  007E                     btemp	set	126	;btemp
   941  007E                     wtemp0	set	126


Data Sizes:
    Strings     5
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 5
		 -> STR_1(CODE[5]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Write_String
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     378
                           _Lcd_Init
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     243
                                              6 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       5     5      0     120
                                              1 COMMON     5     5      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     135
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      75
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      60
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Fri Sep 20 22:02:09 2019

                        l9 06ED                          pc 0002                __CFG_CP$OFF 0000  
                       l40 0702                         l41 0706                         l35 06F5  
                       l36 06F8                         l37 06FC                         l38 06FD  
                       l39 0701                         u55 0755                         fsr 0004  
                      l788 0725                        _RD0 0040                        _RD1 0041  
                      _RD2 0042                        _RD3 0043                        _RD4 0044  
                      _RD5 0045                        u207 0719                        u127 0767  
                      u137 0773                        u147 0785                        u157 0791  
                      u167 07A6                        u177 07AE               __CFG_CPD$OFF 0000  
                      u187 07BD                        u197 07CA                        fsr0 0004  
             __CFG_FOSC$HS 0000               __CFG_LVP$OFF 0000                       STR_1 0009  
             __CFG_WRT$OFF 0000          ?_Lcd_Write_String 0070                       _main 06E2  
                     btemp 007E                       start 0000         ??_Lcd_Write_String 0076  
          __end_of_Lcd_Cmd 0722                      ?_main 0070              __CFG_WDTE$OFF 0000  
                    _TRISD 0088             __CFG_BOREN$OFF 0000                      pclath 000A  
                    status 0003                      wtemp0 007E           __end_of_Lcd_Init 07FC  
         __end_of_Lcd_Port 0708            __initialization 07FC               __end_of_main 06EE  
                   ??_main 0079                  ??_Lcd_Cmd 0071    __size_of_Lcd_Write_Char 0053  
                   _TRISD0 0440                     _TRISD1 0441             __CFG_PWRTE$OFF 0000  
  __end_of__initialization 07FC             __pcstackCOMMON 0070                  ?_Lcd_Init 0070  
                ?_Lcd_Port 0070                 __pmaintext 06E2  __size_of_Lcd_Write_String 0022  
               ??_Lcd_Init 0074                 ??_Lcd_Port 0070                 __stringtab 0003  
           _Lcd_Write_Char 0744                    _Lcd_Cmd 0708                    __ptext1 0722  
                  __ptext2 0744                    __ptext3 0797                    __ptext4 0708  
                  __ptext5 06EE     __end_of_Lcd_Write_Char 0797       end_of_initialization 07FC  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0078          Lcd_Write_String@i 0076  
         _Lcd_Write_String 0722        start_initialization 07FC          __size_of_Lcd_Init 0065  
        __size_of_Lcd_Port 001A            Lcd_Write_Char@a 0075                  ___latbits 0002  
                 ?_Lcd_Cmd 0070                  __pstrings 0003                __stringbase 0008  
         ??_Lcd_Write_Char 0071                   _Lcd_Init 0797                   _Lcd_Port 06EE  
 __end_of_Lcd_Write_String 0744           __size_of_Lcd_Cmd 001A               Lcd_Port@Data 0070  
      Lcd_Write_Char@High4 0074         __end_of__stringtab 0009              __size_of_main 000C  
       Lcd_Write_Char@Low4 0073                 Lcd_Cmd@CMD 0073                  stringcode 0003  
                 stringdir 0003                   stringtab 0003  
