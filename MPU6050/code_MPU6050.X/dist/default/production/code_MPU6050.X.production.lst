

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Mon Jun 03 23:58:42 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text23,local,class=CODE,merge=1,delta=2
    33                           	psect	text24,local,class=CODE,merge=1,delta=2
    34                           	psect	text25,local,class=CODE,merge=1,delta=2
    35                           	psect	text26,local,class=CODE,merge=1,delta=2
    36                           	psect	text27,local,class=CODE,merge=1,delta=2
    37                           	psect	text28,local,class=CODE,merge=1,delta=2
    38                           	psect	text29,local,class=CODE,merge=1,delta=2
    39                           	psect	text30,local,class=CODE,merge=1,delta=2
    40                           	psect	text31,local,class=CODE,merge=1,delta=2
    41                           	psect	text32,local,class=CODE,merge=1,delta=2
    42                           	psect	text33,local,class=CODE,merge=1,delta=2
    43                           	psect	text34,local,class=CODE,merge=1,delta=2
    44                           	psect	text35,local,class=CODE,merge=1,delta=2
    45                           	psect	text36,local,class=CODE,merge=1,delta=2
    46                           	psect	text37,local,class=CODE,merge=1,delta=2
    47                           	psect	text38,local,class=CODE,merge=1,delta=2
    48                           	psect	text39,local,class=CODE,merge=1,delta=2
    49                           	psect	text40,local,class=CODE,merge=1,delta=2
    50                           	dabs	1,0x7E,2
    51  0000                     
    52                           ; Version 2.05
    53                           ; Generated 20/12/2018 GMT
    54                           ; 
    55                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC16F877A Definitions
    84                           ; 
    85                           ; SFR Addresses
    86  0000                     	;# 
    87  0001                     	;# 
    88  0002                     	;# 
    89  0003                     	;# 
    90  0004                     	;# 
    91  0005                     	;# 
    92  0006                     	;# 
    93  0007                     	;# 
    94  0008                     	;# 
    95  0009                     	;# 
    96  000A                     	;# 
    97  000B                     	;# 
    98  000C                     	;# 
    99  000D                     	;# 
   100  000E                     	;# 
   101  000E                     	;# 
   102  000F                     	;# 
   103  0010                     	;# 
   104  0011                     	;# 
   105  0012                     	;# 
   106  0013                     	;# 
   107  0014                     	;# 
   108  0015                     	;# 
   109  0015                     	;# 
   110  0016                     	;# 
   111  0017                     	;# 
   112  0018                     	;# 
   113  0019                     	;# 
   114  001A                     	;# 
   115  001B                     	;# 
   116  001B                     	;# 
   117  001C                     	;# 
   118  001D                     	;# 
   119  001E                     	;# 
   120  001F                     	;# 
   121  0081                     	;# 
   122  0085                     	;# 
   123  0086                     	;# 
   124  0087                     	;# 
   125  0088                     	;# 
   126  0089                     	;# 
   127  008C                     	;# 
   128  008D                     	;# 
   129  008E                     	;# 
   130  0091                     	;# 
   131  0092                     	;# 
   132  0093                     	;# 
   133  0094                     	;# 
   134  0098                     	;# 
   135  0099                     	;# 
   136  009C                     	;# 
   137  009D                     	;# 
   138  009E                     	;# 
   139  009F                     	;# 
   140  010C                     	;# 
   141  010D                     	;# 
   142  010E                     	;# 
   143  010F                     	;# 
   144  018C                     	;# 
   145  018D                     	;# 
   146  0000                     	;# 
   147  0001                     	;# 
   148  0002                     	;# 
   149  0003                     	;# 
   150  0004                     	;# 
   151  0005                     	;# 
   152  0006                     	;# 
   153  0007                     	;# 
   154  0008                     	;# 
   155  0009                     	;# 
   156  000A                     	;# 
   157  000B                     	;# 
   158  000C                     	;# 
   159  000D                     	;# 
   160  000E                     	;# 
   161  000E                     	;# 
   162  000F                     	;# 
   163  0010                     	;# 
   164  0011                     	;# 
   165  0012                     	;# 
   166  0013                     	;# 
   167  0014                     	;# 
   168  0015                     	;# 
   169  0015                     	;# 
   170  0016                     	;# 
   171  0017                     	;# 
   172  0018                     	;# 
   173  0019                     	;# 
   174  001A                     	;# 
   175  001B                     	;# 
   176  001B                     	;# 
   177  001C                     	;# 
   178  001D                     	;# 
   179  001E                     	;# 
   180  001F                     	;# 
   181  0081                     	;# 
   182  0085                     	;# 
   183  0086                     	;# 
   184  0087                     	;# 
   185  0088                     	;# 
   186  0089                     	;# 
   187  008C                     	;# 
   188  008D                     	;# 
   189  008E                     	;# 
   190  0091                     	;# 
   191  0092                     	;# 
   192  0093                     	;# 
   193  0094                     	;# 
   194  0098                     	;# 
   195  0099                     	;# 
   196  009C                     	;# 
   197  009D                     	;# 
   198  009E                     	;# 
   199  009F                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  0000                     	;# 
   207  0001                     	;# 
   208  0002                     	;# 
   209  0003                     	;# 
   210  0004                     	;# 
   211  0005                     	;# 
   212  0006                     	;# 
   213  0007                     	;# 
   214  0008                     	;# 
   215  0009                     	;# 
   216  000A                     	;# 
   217  000B                     	;# 
   218  000C                     	;# 
   219  000D                     	;# 
   220  000E                     	;# 
   221  000E                     	;# 
   222  000F                     	;# 
   223  0010                     	;# 
   224  0011                     	;# 
   225  0012                     	;# 
   226  0013                     	;# 
   227  0014                     	;# 
   228  0015                     	;# 
   229  0015                     	;# 
   230  0016                     	;# 
   231  0017                     	;# 
   232  0018                     	;# 
   233  0019                     	;# 
   234  001A                     	;# 
   235  001B                     	;# 
   236  001B                     	;# 
   237  001C                     	;# 
   238  001D                     	;# 
   239  001E                     	;# 
   240  001F                     	;# 
   241  0081                     	;# 
   242  0085                     	;# 
   243  0086                     	;# 
   244  0087                     	;# 
   245  0088                     	;# 
   246  0089                     	;# 
   247  008C                     	;# 
   248  008D                     	;# 
   249  008E                     	;# 
   250  0091                     	;# 
   251  0092                     	;# 
   252  0093                     	;# 
   253  0094                     	;# 
   254  0098                     	;# 
   255  0099                     	;# 
   256  009C                     	;# 
   257  009D                     	;# 
   258  009E                     	;# 
   259  009F                     	;# 
   260  010C                     	;# 
   261  010D                     	;# 
   262  010E                     	;# 
   263  010F                     	;# 
   264  018C                     	;# 
   265  018D                     	;# 
   266  0000                     	;# 
   267  0001                     	;# 
   268  0002                     	;# 
   269  0003                     	;# 
   270  0004                     	;# 
   271  0005                     	;# 
   272  0006                     	;# 
   273  0007                     	;# 
   274  0008                     	;# 
   275  0009                     	;# 
   276  000A                     	;# 
   277  000B                     	;# 
   278  000C                     	;# 
   279  000D                     	;# 
   280  000E                     	;# 
   281  000E                     	;# 
   282  000F                     	;# 
   283  0010                     	;# 
   284  0011                     	;# 
   285  0012                     	;# 
   286  0013                     	;# 
   287  0014                     	;# 
   288  0015                     	;# 
   289  0015                     	;# 
   290  0016                     	;# 
   291  0017                     	;# 
   292  0018                     	;# 
   293  0019                     	;# 
   294  001A                     	;# 
   295  001B                     	;# 
   296  001B                     	;# 
   297  001C                     	;# 
   298  001D                     	;# 
   299  001E                     	;# 
   300  001F                     	;# 
   301  0081                     	;# 
   302  0085                     	;# 
   303  0086                     	;# 
   304  0087                     	;# 
   305  0088                     	;# 
   306  0089                     	;# 
   307  008C                     	;# 
   308  008D                     	;# 
   309  008E                     	;# 
   310  0091                     	;# 
   311  0092                     	;# 
   312  0093                     	;# 
   313  0094                     	;# 
   314  0098                     	;# 
   315  0099                     	;# 
   316  009C                     	;# 
   317  009D                     	;# 
   318  009E                     	;# 
   319  009F                     	;# 
   320  010C                     	;# 
   321  010D                     	;# 
   322  010E                     	;# 
   323  010F                     	;# 
   324  018C                     	;# 
   325  018D                     	;# 
   326                           
   327                           	psect	strings
   328  1000                     __pstrings:	
   329  1000                     stringtab:	
   330  1000                     __stringtab:	
   331  1000                     stringcode:	
   332                           ;	String table - string pointers are 1 byte each
   333                           
   334  1000                     stringdir:	
   335  1000  3010               	movlw	high stringdir
   336  1001  008A               	movwf	10
   337  1002  0804               	movf	4,w
   338  1003  0A84               	incf	4,f
   339  1004  0782               	addwf	2,f
   340  1005                     __stringbase:	
   341  1005  3400               	retlw	0
   342  1006                     __end_of__stringtab:	
   343  1006                     __powers_:	
   344  1006  3400               	retlw	0
   345  1007  3400               	retlw	0
   346  1008  3480               	retlw	128
   347  1009  343F               	retlw	63
   348  100A  3400               	retlw	0
   349  100B  3400               	retlw	0
   350  100C  3420               	retlw	32
   351  100D  3441               	retlw	65
   352  100E  3400               	retlw	0
   353  100F  3400               	retlw	0
   354  1010  34C8               	retlw	200
   355  1011  3442               	retlw	66
   356  1012  3400               	retlw	0
   357  1013  3400               	retlw	0
   358  1014  347A               	retlw	122
   359  1015  3444               	retlw	68
   360  1016  3400               	retlw	0
   361  1017  3440               	retlw	64
   362  1018  341C               	retlw	28
   363  1019  3446               	retlw	70
   364  101A  3400               	retlw	0
   365  101B  3450               	retlw	80
   366  101C  34C3               	retlw	195
   367  101D  3447               	retlw	71
   368  101E  3400               	retlw	0
   369  101F  3424               	retlw	36
   370  1020  3474               	retlw	116
   371  1021  3449               	retlw	73
   372  1022  3480               	retlw	128
   373  1023  3496               	retlw	150
   374  1024  3418               	retlw	24
   375  1025  344B               	retlw	75
   376  1026  3420               	retlw	32
   377  1027  34BC               	retlw	188
   378  1028  34BE               	retlw	190
   379  1029  344C               	retlw	76
   380  102A  3428               	retlw	40
   381  102B  346B               	retlw	107
   382  102C  346E               	retlw	110
   383  102D  344E               	retlw	78
   384  102E  34F9               	retlw	249
   385  102F  3402               	retlw	2
   386  1030  3415               	retlw	21
   387  1031  3450               	retlw	80
   388  1032  34EC               	retlw	236
   389  1033  3478               	retlw	120
   390  1034  34AD               	retlw	173
   391  1035  3460               	retlw	96
   392  1036  34CA               	retlw	202
   393  1037  34F2               	retlw	242
   394  1038  3449               	retlw	73
   395  1039  3471               	retlw	113
   396  103A                     __end_of__powers_:	
   397  103A                     __npowers_:	
   398  103A  3400               	retlw	0
   399  103B  3400               	retlw	0
   400  103C  3480               	retlw	128
   401  103D  343F               	retlw	63
   402  103E  34CD               	retlw	205
   403  103F  34CC               	retlw	204
   404  1040  34CC               	retlw	204
   405  1041  343D               	retlw	61
   406  1042  340A               	retlw	10
   407  1043  34D7               	retlw	215
   408  1044  3423               	retlw	35
   409  1045  343C               	retlw	60
   410  1046  346F               	retlw	111
   411  1047  3412               	retlw	18
   412  1048  3483               	retlw	131
   413  1049  343A               	retlw	58
   414  104A  3417               	retlw	23
   415  104B  34B7               	retlw	183
   416  104C  34D1               	retlw	209
   417  104D  3438               	retlw	56
   418  104E  34AC               	retlw	172
   419  104F  34C5               	retlw	197
   420  1050  3427               	retlw	39
   421  1051  3437               	retlw	55
   422  1052  34BD               	retlw	189
   423  1053  3437               	retlw	55
   424  1054  3486               	retlw	134
   425  1055  3435               	retlw	53
   426  1056  3495               	retlw	149
   427  1057  34BF               	retlw	191
   428  1058  34D6               	retlw	214
   429  1059  3433               	retlw	51
   430  105A  3477               	retlw	119
   431  105B  34CC               	retlw	204
   432  105C  342B               	retlw	43
   433  105D  3432               	retlw	50
   434  105E  345F               	retlw	95
   435  105F  3470               	retlw	112
   436  1060  3489               	retlw	137
   437  1061  3430               	retlw	48
   438  1062  34FF               	retlw	255
   439  1063  34E6               	retlw	230
   440  1064  34DB               	retlw	219
   441  1065  342E               	retlw	46
   442  1066  3408               	retlw	8
   443  1067  34E5               	retlw	229
   444  1068  343C               	retlw	60
   445  1069  341E               	retlw	30
   446  106A  3460               	retlw	96
   447  106B  3442               	retlw	66
   448  106C  34A2               	retlw	162
   449  106D  340D               	retlw	13
   450  106E                     __end_of__npowers_:	
   451  106E                     _dpowers:	
   452  106E  3401               	retlw	1
   453  106F  3400               	retlw	0
   454  1070  3400               	retlw	0
   455  1071  3400               	retlw	0
   456  1072  340A               	retlw	10
   457  1073  3400               	retlw	0
   458  1074  3400               	retlw	0
   459  1075  3400               	retlw	0
   460  1076  3464               	retlw	100
   461  1077  3400               	retlw	0
   462  1078  3400               	retlw	0
   463  1079  3400               	retlw	0
   464  107A  34E8               	retlw	232
   465  107B  3403               	retlw	3
   466  107C  3400               	retlw	0
   467  107D  3400               	retlw	0
   468  107E  3410               	retlw	16
   469  107F  3427               	retlw	39
   470  1080  3400               	retlw	0
   471  1081  3400               	retlw	0
   472  1082  34A0               	retlw	160
   473  1083  3486               	retlw	134
   474  1084  3401               	retlw	1
   475  1085  3400               	retlw	0
   476  1086  3440               	retlw	64
   477  1087  3442               	retlw	66
   478  1088  340F               	retlw	15
   479  1089  3400               	retlw	0
   480  108A  3480               	retlw	128
   481  108B  3496               	retlw	150
   482  108C  3498               	retlw	152
   483  108D  3400               	retlw	0
   484  108E  3400               	retlw	0
   485  108F  34E1               	retlw	225
   486  1090  34F5               	retlw	245
   487  1091  3405               	retlw	5
   488  1092  3400               	retlw	0
   489  1093  34CA               	retlw	202
   490  1094  349A               	retlw	154
   491  1095  343B               	retlw	59
   492  1096                     __end_of_dpowers:	
   493  0013                     _SSPBUF	set	19
   494  0014                     _SSPCON	set	20
   495  0063                     _SSPIF	set	99
   496  0041                     _RD1	set	65
   497  0040                     _RD0	set	64
   498  0045                     _RD5	set	69
   499  0044                     _RD4	set	68
   500  0043                     _RD3	set	67
   501  0042                     _RD2	set	66
   502  0094                     _SSPSTATbits	set	148
   503  0091                     _SSPCON2bits	set	145
   504  0093                     _SSPADD	set	147
   505  0091                     _SSPCON2	set	145
   506  0094                     _SSPSTAT	set	148
   507  0088                     _TRISD	set	136
   508  0087                     _TRISC	set	135
   509  0086                     _TRISB	set	134
   510  0085                     _TRISA	set	133
   511  048A                     _PEN	set	1162
   512  048B                     _RCEN	set	1163
   513  048C                     _ACKEN	set	1164
   514  048D                     _ACKDT	set	1165
   515  0489                     _RSEN	set	1161
   516  048E                     _ACKSTAT	set	1166
   517  0463                     _SSPIE	set	1123
   518  043C                     _TRISC4	set	1084
   519  043B                     _TRISC3	set	1083
   520  1096                     STR_1:	
   521  1096  3441               	retlw	65	;'A'
   522  1097  3478               	retlw	120	;'x'
   523  1098  343D               	retlw	61	;'='
   524  1099  3425               	retlw	37	;'%'
   525  109A  342E               	retlw	46	;'.'
   526  109B  3432               	retlw	50	;'2'
   527  109C  3466               	retlw	102	;'f'
   528  109D  3420               	retlw	32	;' '
   529  109E  3409               	retlw	9
   530  109F  3400               	retlw	0
   531                           
   532                           ; #config settings
   533  0000                     
   534                           	psect	cinit
   535  07FC                     start_initialization:	
   536  07FC                     __initialization:	
   537  07FC                     end_of_initialization:	
   538                           ;End of C runtime variable initialization code
   539                           
   540  07FC                     __end_of__initialization:	
   541  07FC  0183               	clrf	3
   542  07FD  160A  118A  2C9A   	ljmp	_main	;jump to C main() function
   543                           
   544                           	psect	cstackBANK1
   545  00A0                     __pcstackBANK1:	
   546  00A0                     ?_sprintf:	
   547  00A0                     sprintf@f:	
   548                           ; 2 bytes @ 0x0
   549                           
   550                           
   551                           ; 1 bytes @ 0x0
   552  00A0                     	ds	5
   553  00A5                     ??_sprintf:	
   554                           
   555                           ; 1 bytes @ 0x5
   556  00A5                     	ds	5
   557  00AA                     _sprintf$1003:	
   558                           
   559                           ; 4 bytes @ 0xA
   560  00AA                     	ds	4
   561  00AE                     sprintf@ap:	
   562                           
   563                           ; 1 bytes @ 0xE
   564  00AE                     	ds	1
   565  00AF                     sprintf@flag:	
   566                           
   567                           ; 2 bytes @ 0xF
   568  00AF                     	ds	2
   569  00B1                     sprintf@val:	
   570                           
   571                           ; 4 bytes @ 0x11
   572  00B1                     	ds	4
   573  00B5                     sprintf@eexp:	
   574                           
   575                           ; 2 bytes @ 0x15
   576  00B5                     	ds	2
   577  00B7                     sprintf@tmpval:	
   578                           
   579                           ; 4 bytes @ 0x17
   580  00B7                     	ds	4
   581  00BB                     sprintf@sp:	
   582                           
   583                           ; 1 bytes @ 0x1B
   584  00BB                     	ds	1
   585  00BC                     sprintf@prec:	
   586                           
   587                           ; 2 bytes @ 0x1C
   588  00BC                     	ds	2
   589  00BE                     sprintf@fval:	
   590                           
   591                           ; 4 bytes @ 0x1E
   592  00BE                     	ds	4
   593  00C2                     sprintf@c:	
   594                           
   595                           ; 1 bytes @ 0x22
   596  00C2                     	ds	1
   597  00C3                     ??_main:	
   598                           
   599                           ; 1 bytes @ 0x23
   600  00C3                     	ds	4
   601  00C7                     main@buffer:	
   602                           
   603                           ; 20 bytes @ 0x27
   604  00C7                     	ds	20
   605  00DB                     main@Xa:	
   606                           
   607                           ; 4 bytes @ 0x3B
   608  00DB                     	ds	4
   609  00DF                     main@Ax:	
   610                           
   611                           ; 2 bytes @ 0x3F
   612  00DF                     	ds	2
   613                           
   614                           	psect	cstackCOMMON
   615  0070                     __pcstackCOMMON:	
   616  0070                     ?_isdigit:	
   617  0070                     ?___fleq:	
   618                           ; 1 bit 
   619                           
   620  0070                     ?___flge:	
   621                           ; 1 bit 
   622                           
   623  0070                     ?_I2C_Start_Wait:	
   624                           ; 1 bit 
   625                           
   626  0070                     ?_I2C_Write:	
   627                           ; 1 bytes @ 0x0
   628                           
   629  0070                     ??_I2C_Write:	
   630                           ; 1 bytes @ 0x0
   631                           
   632  0070                     ?_I2C_Stop:	
   633                           ; 1 bytes @ 0x0
   634                           
   635  0070                     ??_I2C_Stop:	
   636                           ; 1 bytes @ 0x0
   637                           
   638  0070                     ?_I2C_Repeated_Start:	
   639                           ; 1 bytes @ 0x0
   640                           
   641  0070                     ?_Lcd_Set_Port:	
   642                           ; 1 bytes @ 0x0
   643                           
   644  0070                     ??_Lcd_Set_Port:	
   645                           ; 1 bytes @ 0x0
   646                           
   647  0070                     ?_Lcd_Init:	
   648                           ; 1 bytes @ 0x0
   649                           
   650  0070                     ?_I2C_Init:	
   651                           ; 1 bytes @ 0x0
   652                           
   653  0070                     ??_I2C_Init:	
   654                           ; 1 bytes @ 0x0
   655                           
   656  0070                     ?_I2C_Read:	
   657                           ; 1 bytes @ 0x0
   658                           
   659  0070                     ??_I2C_Read:	
   660                           ; 1 bytes @ 0x0
   661                           
   662  0070                     ?_Lcd_Write_String:	
   663                           ; 1 bytes @ 0x0
   664                           
   665  0070                     ?_I2C_Ready:	
   666                           ; 1 bytes @ 0x0
   667                           
   668  0070                     ??_I2C_Ready:	
   669                           ; 1 bytes @ 0x0
   670                           
   671  0070                     ??_isdigit:	
   672                           ; 1 bytes @ 0x0
   673                           
   674  0070                     ?_MPU6050_Init:	
   675                           ; 1 bytes @ 0x0
   676                           
   677  0070                     ?_MPU_Start_Loc:	
   678                           ; 1 bytes @ 0x0
   679                           
   680  0070                     ?_main:	
   681                           ; 1 bytes @ 0x0
   682                           
   683  0070                     ?_Lcd_Port:	
   684                           ; 1 bytes @ 0x0
   685                           
   686  0070                     ??_Lcd_Port:	
   687                           ; 1 bytes @ 0x0
   688                           
   689  0070                     ?_Lcd_Cmd:	
   690                           ; 1 bytes @ 0x0
   691                           
   692  0070                     ?_Lcd_Write_Char:	
   693                           ; 1 bytes @ 0x0
   694                           
   695  0070                     ?_I2C_Ack:	
   696                           ; 1 bytes @ 0x0
   697                           
   698  0070                     ??_I2C_Ack:	
   699                           ; 1 bytes @ 0x0
   700                           
   701  0070                     ?_I2C_Nack:	
   702                           ; 1 bytes @ 0x0
   703                           
   704  0070                     ??_I2C_Nack:	
   705                           ; 1 bytes @ 0x0
   706                           
   707  0070                     ?__Umul8_16:	
   708                           ; 1 bytes @ 0x0
   709                           
   710  0070                     ?___wmul:	
   711                           ; 2 bytes @ 0x0
   712                           
   713  0070                     ?___awmod:	
   714                           ; 2 bytes @ 0x0
   715                           
   716  0070                     ?___lwmod:	
   717                           ; 2 bytes @ 0x0
   718                           
   719  0070                     ?__tdiv_to_l_:	
   720                           ; 2 bytes @ 0x0
   721                           
   722  0070                     ?__div_to_l_:	
   723                           ; 4 bytes @ 0x0
   724                           
   725  0070                     ?___lldiv:	
   726                           ; 4 bytes @ 0x0
   727                           
   728  0070                     ?___flneg:	
   729                           ; 4 bytes @ 0x0
   730                           
   731  0070                     ?___llmod:	
   732                           ; 4 bytes @ 0x0
   733                           
   734  0070                     ?___xxtofl:	
   735                           ; 4 bytes @ 0x0
   736                           
   737  0070                     Lcd_Port@a:	
   738                           ; 4 bytes @ 0x0
   739                           
   740  0070                     I2C_Write@data:	
   741                           ; 1 bytes @ 0x0
   742                           
   743  0070                     _isdigit$803:	
   744                           ; 1 bytes @ 0x0
   745                           
   746  0070                     __Umul8_16@multiplicand:	
   747                           ; 1 bytes @ 0x0
   748                           
   749  0070                     ___wmul@multiplier:	
   750                           ; 1 bytes @ 0x0
   751                           
   752  0070                     ___awmod@divisor:	
   753                           ; 2 bytes @ 0x0
   754                           
   755  0070                     ___lwmod@divisor:	
   756                           ; 2 bytes @ 0x0
   757                           
   758  0070                     ___lldiv@divisor:	
   759                           ; 2 bytes @ 0x0
   760                           
   761  0070                     __div_to_l_@f1:	
   762                           ; 4 bytes @ 0x0
   763                           
   764  0070                     ___fleq@ff1:	
   765                           ; 4 bytes @ 0x0
   766                           
   767  0070                     ___flge@ff1:	
   768                           ; 4 bytes @ 0x0
   769                           
   770  0070                     ___flneg@f1:	
   771                           ; 4 bytes @ 0x0
   772                           
   773  0070                     __tdiv_to_l_@f1:	
   774                           ; 4 bytes @ 0x0
   775                           
   776  0070                     ___llmod@divisor:	
   777                           ; 4 bytes @ 0x0
   778                           
   779  0070                     ___xxtofl@val:	
   780                           ; 4 bytes @ 0x0
   781                           
   782                           
   783                           ; 4 bytes @ 0x0
   784  0070                     	ds	1
   785  0071                     ??_I2C_Start_Wait:	
   786  0071                     ??_I2C_Repeated_Start:	
   787                           ; 1 bytes @ 0x1
   788                           
   789  0071                     ??_Lcd_Cmd:	
   790                           ; 1 bytes @ 0x1
   791                           
   792  0071                     ??_Lcd_Write_Char:	
   793                           ; 1 bytes @ 0x1
   794                           
   795  0071                     I2C_Start_Wait@slave_write_address:	
   796                           ; 1 bytes @ 0x1
   797                           
   798  0071                     I2C_Repeated_Start@slave_read_address:	
   799                           ; 1 bytes @ 0x1
   800                           
   801  0071                     I2C_Read@flag:	
   802                           ; 1 bytes @ 0x1
   803                           
   804  0071                     isdigit@c:	
   805                           ; 1 bytes @ 0x1
   806                           
   807                           
   808                           ; 1 bytes @ 0x1
   809  0071                     	ds	1
   810  0072                     ??__Umul8_16:	
   811  0072                     ??_MPU6050_Init:	
   812                           ; 1 bytes @ 0x2
   813                           
   814  0072                     ??_MPU_Start_Loc:	
   815                           ; 1 bytes @ 0x2
   816                           
   817  0072                     Lcd_Write_Char@temp:	
   818                           ; 1 bytes @ 0x2
   819                           
   820  0072                     Lcd_Set_Port@a:	
   821                           ; 1 bytes @ 0x2
   822                           
   823  0072                     I2C_Read@buffer:	
   824                           ; 1 bytes @ 0x2
   825                           
   826  0072                     ___wmul@multiplicand:	
   827                           ; 1 bytes @ 0x2
   828                           
   829  0072                     ___awmod@dividend:	
   830                           ; 2 bytes @ 0x2
   831                           
   832  0072                     ___lwmod@dividend:	
   833                           ; 2 bytes @ 0x2
   834                           
   835                           
   836                           ; 2 bytes @ 0x2
   837  0072                     	ds	1
   838  0073                     Lcd_Cmd@a:	
   839  0073                     Lcd_Write_Char@y:	
   840                           ; 1 bytes @ 0x3
   841                           
   842                           
   843                           ; 1 bytes @ 0x3
   844  0073                     	ds	1
   845  0074                     ??_Lcd_Init:	
   846  0074                     ?_Lcd_Set_Cursor:	
   847                           ; 1 bytes @ 0x4
   848                           
   849  0074                     ??___wmul:	
   850                           ; 1 bytes @ 0x4
   851                           
   852  0074                     ??___awmod:	
   853                           ; 1 bytes @ 0x4
   854                           
   855  0074                     ??___flneg:	
   856                           ; 1 bytes @ 0x4
   857                           
   858  0074                     ??___lwmod:	
   859                           ; 1 bytes @ 0x4
   860                           
   861  0074                     ??___xxtofl:	
   862                           ; 1 bytes @ 0x4
   863                           
   864  0074                     Lcd_Set_Cursor@b:	
   865                           ; 1 bytes @ 0x4
   866                           
   867  0074                     Lcd_Write_Char@a:	
   868                           ; 1 bytes @ 0x4
   869                           
   870  0074                     ___wmul@product:	
   871                           ; 1 bytes @ 0x4
   872                           
   873  0074                     __Umul8_16@product:	
   874                           ; 2 bytes @ 0x4
   875                           
   876  0074                     ___lldiv@dividend:	
   877                           ; 2 bytes @ 0x4
   878                           
   879  0074                     __div_to_l_@f2:	
   880                           ; 4 bytes @ 0x4
   881                           
   882  0074                     ___fleq@ff2:	
   883                           ; 4 bytes @ 0x4
   884                           
   885  0074                     ___flge@ff2:	
   886                           ; 4 bytes @ 0x4
   887                           
   888  0074                     __tdiv_to_l_@f2:	
   889                           ; 4 bytes @ 0x4
   890                           
   891  0074                     ___llmod@dividend:	
   892                           ; 4 bytes @ 0x4
   893                           
   894                           
   895                           ; 4 bytes @ 0x4
   896  0074                     	ds	1
   897  0075                     ??_Lcd_Set_Cursor:	
   898  0075                     ??_Lcd_Write_String:	
   899                           ; 1 bytes @ 0x5
   900                           
   901  0075                     ___awmod@counter:	
   902                           ; 1 bytes @ 0x5
   903                           
   904  0075                     ___lwmod@counter:	
   905                           ; 1 bytes @ 0x5
   906                           
   907                           
   908                           ; 1 bytes @ 0x5
   909  0075                     	ds	1
   910  0076                     ?___lwdiv:	
   911  0076                     ___awmod@sign:	
   912                           ; 2 bytes @ 0x6
   913                           
   914  0076                     Lcd_Write_String@i:	
   915                           ; 1 bytes @ 0x6
   916                           
   917  0076                     ___lwdiv@divisor:	
   918                           ; 2 bytes @ 0x6
   919                           
   920  0076                     __Umul8_16@word_mpld:	
   921                           ; 2 bytes @ 0x6
   922                           
   923                           
   924                           ; 2 bytes @ 0x6
   925  0076                     	ds	1
   926  0077                     ?___awdiv:	
   927  0077                     Lcd_Set_Cursor@a:	
   928                           ; 2 bytes @ 0x7
   929                           
   930  0077                     ___awdiv@divisor:	
   931                           ; 1 bytes @ 0x7
   932                           
   933                           
   934                           ; 2 bytes @ 0x7
   935  0077                     	ds	1
   936  0078                     ??__tdiv_to_l_:	
   937  0078                     ??__div_to_l_:	
   938                           ; 1 bytes @ 0x8
   939                           
   940  0078                     ??___lldiv:	
   941                           ; 1 bytes @ 0x8
   942                           
   943  0078                     ??___fleq:	
   944                           ; 1 bytes @ 0x8
   945                           
   946  0078                     ??___flge:	
   947                           ; 1 bytes @ 0x8
   948                           
   949  0078                     ??___llmod:	
   950                           ; 1 bytes @ 0x8
   951                           
   952  0078                     Lcd_Set_Cursor@z:	
   953                           ; 1 bytes @ 0x8
   954                           
   955  0078                     Lcd_Write_String@a:	
   956                           ; 1 bytes @ 0x8
   957                           
   958  0078                     ___xxtofl@sign:	
   959                           ; 1 bytes @ 0x8
   960                           
   961  0078                     __Umul8_16@multiplier:	
   962                           ; 1 bytes @ 0x8
   963                           
   964  0078                     ___lwdiv@dividend:	
   965                           ; 1 bytes @ 0x8
   966                           
   967                           
   968                           ; 2 bytes @ 0x8
   969  0078                     	ds	1
   970  0079                     Lcd_Set_Cursor@y:	
   971  0079                     ___llmod@counter:	
   972                           ; 1 bytes @ 0x9
   973                           
   974  0079                     ___xxtofl@exp:	
   975                           ; 1 bytes @ 0x9
   976                           
   977  0079                     ___awdiv@dividend:	
   978                           ; 1 bytes @ 0x9
   979                           
   980  0079                     ___lldiv@quotient:	
   981                           ; 2 bytes @ 0x9
   982                           
   983                           
   984                           ; 4 bytes @ 0x9
   985  0079                     	ds	1
   986  007A                     ??___lwdiv:	
   987  007A                     Lcd_Set_Cursor@temp:	
   988                           ; 1 bytes @ 0xA
   989                           
   990  007A                     ___xxtofl@arg:	
   991                           ; 1 bytes @ 0xA
   992                           
   993                           
   994                           ; 4 bytes @ 0xA
   995  007A                     	ds	1
   996  007B                     ??___awdiv:	
   997  007B                     ___lwdiv@quotient:	
   998                           ; 1 bytes @ 0xB
   999                           
  1000                           
  1001                           ; 2 bytes @ 0xB
  1002  007B                     	ds	2
  1003  007D                     ___lldiv@counter:	
  1004  007D                     ___lwdiv@counter:	
  1005                           ; 1 bytes @ 0xD
  1006                           
  1007                           
  1008                           ; 1 bytes @ 0xD
  1009  007D                     	ds	1
  1010  007E                     ??___flsub:	
  1011                           
  1012                           	psect	cstackBANK0
  1013  0020                     __pcstackBANK0:	
  1014                           ; 1 bytes @ 0xE
  1015                           
  1016  0020                     ___awdiv@counter:	
  1017  0020                     __div_to_l_@quot:	
  1018                           ; 1 bytes @ 0x0
  1019                           
  1020  0020                     __tdiv_to_l_@quot:	
  1021                           ; 4 bytes @ 0x0
  1022                           
  1023                           
  1024                           ; 4 bytes @ 0x0
  1025  0020                     	ds	1
  1026  0021                     ___awdiv@sign:	
  1027                           
  1028                           ; 1 bytes @ 0x1
  1029  0021                     	ds	1
  1030  0022                     ___awdiv@quotient:	
  1031                           
  1032                           ; 2 bytes @ 0x2
  1033  0022                     	ds	2
  1034  0024                     ?___flmul:	
  1035  0024                     __div_to_l_@cntr:	
  1036                           ; 4 bytes @ 0x4
  1037                           
  1038  0024                     __tdiv_to_l_@cntr:	
  1039                           ; 1 bytes @ 0x4
  1040                           
  1041  0024                     ___flmul@b:	
  1042                           ; 1 bytes @ 0x4
  1043                           
  1044                           
  1045                           ; 4 bytes @ 0x4
  1046  0024                     	ds	1
  1047  0025                     __div_to_l_@exp1:	
  1048  0025                     __tdiv_to_l_@exp1:	
  1049                           ; 1 bytes @ 0x5
  1050                           
  1051                           
  1052                           ; 1 bytes @ 0x5
  1053  0025                     	ds	3
  1054  0028                     ___flmul@a:	
  1055                           
  1056                           ; 4 bytes @ 0x8
  1057  0028                     	ds	4
  1058  002C                     ??___flmul:	
  1059                           
  1060                           ; 1 bytes @ 0xC
  1061  002C                     	ds	5
  1062  0031                     ___flmul@sign:	
  1063                           
  1064                           ; 1 bytes @ 0x11
  1065  0031                     	ds	1
  1066  0032                     ___flmul@grs:	
  1067                           
  1068                           ; 4 bytes @ 0x12
  1069  0032                     	ds	4
  1070  0036                     ___flmul@aexp:	
  1071                           
  1072                           ; 1 bytes @ 0x16
  1073  0036                     	ds	1
  1074  0037                     ___flmul@bexp:	
  1075                           
  1076                           ; 1 bytes @ 0x17
  1077  0037                     	ds	1
  1078  0038                     ___flmul@prod:	
  1079                           
  1080                           ; 4 bytes @ 0x18
  1081  0038                     	ds	4
  1082  003C                     ___flmul@temp:	
  1083                           
  1084                           ; 2 bytes @ 0x1C
  1085  003C                     	ds	2
  1086  003E                     ?_fround:	
  1087  003E                     ?_scale:	
  1088                           ; 4 bytes @ 0x1E
  1089                           
  1090                           
  1091                           ; 4 bytes @ 0x1E
  1092  003E                     	ds	4
  1093  0042                     ??_fround:	
  1094  0042                     ??_scale:	
  1095                           ; 1 bytes @ 0x22
  1096                           
  1097                           
  1098                           ; 1 bytes @ 0x22
  1099  0042                     	ds	7
  1100  0049                     _fround$1001:	
  1101                           
  1102                           ; 4 bytes @ 0x29
  1103  0049                     	ds	3
  1104  004C                     _scale$1002:	
  1105                           
  1106                           ; 4 bytes @ 0x2C
  1107  004C                     	ds	1
  1108  004D                     _fround$1000:	
  1109                           
  1110                           ; 4 bytes @ 0x2D
  1111  004D                     	ds	3
  1112  0050                     scale@scl:	
  1113                           
  1114                           ; 1 bytes @ 0x30
  1115  0050                     	ds	1
  1116  0051                     ?___fltol:	
  1117  0051                     fround@prec:	
  1118                           ; 4 bytes @ 0x31
  1119                           
  1120  0051                     ___fltol@f1:	
  1121                           ; 1 bytes @ 0x31
  1122                           
  1123                           
  1124                           ; 4 bytes @ 0x31
  1125  0051                     	ds	1
  1126  0052                     ?___fladd:	
  1127  0052                     ___fladd@b:	
  1128                           ; 4 bytes @ 0x32
  1129                           
  1130                           
  1131                           ; 4 bytes @ 0x32
  1132  0052                     	ds	3
  1133  0055                     ??___fltol:	
  1134                           
  1135                           ; 1 bytes @ 0x35
  1136  0055                     	ds	1
  1137  0056                     ___fladd@a:	
  1138                           
  1139                           ; 4 bytes @ 0x36
  1140  0056                     	ds	4
  1141  005A                     ??___fladd:	
  1142  005A                     ___fltol@sign1:	
  1143                           ; 1 bytes @ 0x3A
  1144                           
  1145                           
  1146                           ; 1 bytes @ 0x3A
  1147  005A                     	ds	1
  1148  005B                     ___fltol@exp1:	
  1149                           
  1150                           ; 1 bytes @ 0x3B
  1151  005B                     	ds	7
  1152  0062                     ___fladd@signs:	
  1153                           
  1154                           ; 1 bytes @ 0x42
  1155  0062                     	ds	1
  1156  0063                     ___fladd@aexp:	
  1157                           
  1158                           ; 1 bytes @ 0x43
  1159  0063                     	ds	1
  1160  0064                     ___fladd@bexp:	
  1161                           
  1162                           ; 1 bytes @ 0x44
  1163  0064                     	ds	1
  1164  0065                     ___fladd@grs:	
  1165                           
  1166                           ; 1 bytes @ 0x45
  1167  0065                     	ds	1
  1168  0066                     ?___flsub:	
  1169  0066                     ___flsub@a:	
  1170                           ; 4 bytes @ 0x46
  1171                           
  1172                           
  1173                           ; 4 bytes @ 0x46
  1174  0066                     	ds	4
  1175  006A                     ___flsub@b:	
  1176                           
  1177                           ; 4 bytes @ 0x4A
  1178  006A                     	ds	4
  1179                           
  1180                           	psect	maintext
  1181  149A                     __pmaintext:	
  1182 ;;
  1183 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1184 ;;
  1185 ;; *************** function _main *****************
  1186 ;; Defined at:
  1187 ;;		line 34 in file "MPU6050.c"
  1188 ;; Parameters:    Size  Location     Type
  1189 ;;		None
  1190 ;; Auto vars:     Size  Location     Type
  1191 ;;  buffer         20   39[BANK1 ] unsigned char [20]
  1192 ;;  Xa              4   59[BANK1 ] float 
  1193 ;;  Ax              2   63[BANK1 ] int 
  1194 ;; Return value:  Size  Location     Type
  1195 ;;                  1    wreg      void 
  1196 ;; Registers used:
  1197 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1198 ;; Tracked objects:
  1199 ;;		On entry : B00/0
  1200 ;;		On exit  : 0/0
  1201 ;;		Unchanged: 0/0
  1202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1203 ;;      Params:         0       0       0       0       0
  1204 ;;      Locals:         0       0      26       0       0
  1205 ;;      Temps:          0       0       4       0       0
  1206 ;;      Totals:         0       0      30       0       0
  1207 ;;Total ram usage:       30 bytes
  1208 ;; Hardware stack levels required when called:    4
  1209 ;; This function calls:
  1210 ;;		_I2C_Init
  1211 ;;		_I2C_Read
  1212 ;;		_I2C_Stop
  1213 ;;		_Lcd_Init
  1214 ;;		_Lcd_Set_Cursor
  1215 ;;		_Lcd_Set_Port
  1216 ;;		_Lcd_Write_String
  1217 ;;		_MPU6050_Init
  1218 ;;		_MPU_Start_Loc
  1219 ;;		___xxtofl
  1220 ;;		_sprintf
  1221 ;; This function is called by:
  1222 ;;		Startup code after reset
  1223 ;; This function uses a non-reentrant model
  1224 ;;
  1225                           
  1226                           
  1227                           ;psect for function _main
  1228  149A                     _main:	
  1229                           
  1230                           ;MPU6050.c: 37:  int Ax;;MPU6050.c: 38:     float Xa;;MPU6050.c: 39:     char buffer[20]
      +                          ;;MPU6050.c: 41:     Lcd_Set_Port('D');
  1231                           
  1232                           ;incstack = 0
  1233                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1234  149A  3044               	movlw	68
  1235  149B  160A  158A  27D7  160A  118A  	fcall	_Lcd_Set_Port
  1236                           
  1237                           ;MPU6050.c: 42:     Lcd_Init();
  1238  14A0  160A  118A  22E0  160A  118A  	fcall	_Lcd_Init
  1239                           
  1240                           ;MPU6050.c: 43:     I2C_Init();
  1241  14A5  160A  158A  26F2  160A  118A  	fcall	_I2C_Init
  1242                           
  1243                           ;MPU6050.c: 44:     _delay((unsigned long)((100)*(20000000/4000.0)));
  1244  14AA  3003               	movlw	3
  1245  14AB  1683               	bsf	3,5	;RP0=1, select bank1
  1246  14AC  1303               	bcf	3,6	;RP1=0, select bank1
  1247  14AD  00C5               	movwf	(??_main^(0+128)+2)
  1248  14AE  308A               	movlw	138
  1249  14AF  00C4               	movwf	(??_main^(0+128)+1)
  1250  14B0  3055               	movlw	85
  1251  14B1  00C3               	movwf	??_main^(0+128)
  1252  14B2                     u5657:	
  1253  14B2  0BC3               	decfsz	??_main^(0+128),f
  1254  14B3  2CB2               	goto	u5657
  1255  14B4  0BC4               	decfsz	(??_main^(0+128)+1),f
  1256  14B5  2CB2               	goto	u5657
  1257  14B6  0BC5               	decfsz	(??_main^(0+128)+2),f
  1258  14B7  2CB2               	goto	u5657
  1259                           
  1260                           ;MPU6050.c: 45:     MPU6050_Init();
  1261  14B8  160A  118A  2132  160A  118A  	fcall	_MPU6050_Init
  1262  14BD                     l3531:	
  1263                           
  1264                           ;MPU6050.c: 47:     {;MPU6050.c: 48:         MPU_Start_Loc();
  1265  14BD  160A  158A  26BD  160A  118A  	fcall	_MPU_Start_Loc
  1266                           
  1267                           ;MPU6050.c: 50:   Ax = (((int)I2C_Read(0)<<8) | (int)I2C_Read(1));
  1268  14C2  3001               	movlw	1
  1269  14C3  160A  158A  2775  160A  118A  	fcall	_I2C_Read
  1270  14C8  1683               	bsf	3,5	;RP0=1, select bank1
  1271  14C9  1303               	bcf	3,6	;RP1=0, select bank1
  1272  14CA  00C3               	movwf	??_main^(0+128)
  1273  14CB  01C4               	clrf	(??_main^(0+128)+1)
  1274  14CC  3000               	movlw	0
  1275  14CD  160A  158A  2775  160A  118A  	fcall	_I2C_Read
  1276  14D2  1683               	bsf	3,5	;RP0=1, select bank1
  1277  14D3  1303               	bcf	3,6	;RP1=0, select bank1
  1278  14D4  00C5               	movwf	(??_main+2)^(0+128)
  1279  14D5  01C6               	clrf	((??_main+2)^(0+128)+1)
  1280  14D6  0845               	movf	(??_main+2)^(0+128),w
  1281  14D7  00C6               	movwf	((??_main+2)^(0+128)+1)
  1282  14D8  01C5               	clrf	(??_main+2)^(0+128)
  1283  14D9  0843               	movf	??_main^(0+128),w
  1284  14DA  0445               	iorwf	(??_main+2)^(0+128),w
  1285  14DB  00DF               	movwf	main@Ax^(0+128)
  1286  14DC  0844               	movf	(??_main+1)^(0+128),w
  1287  14DD  0446               	iorwf	(??_main+3)^(0+128),w
  1288  14DE  00E0               	movwf	(main@Ax+1)^(0+128)
  1289                           
  1290                           ;MPU6050.c: 51:   I2C_Stop();
  1291  14DF  160A  158A  26A3  160A  118A  	fcall	_I2C_Stop
  1292                           
  1293                           ;MPU6050.c: 53:         Xa = Ax;
  1294  14E4  1683               	bsf	3,5	;RP0=1, select bank1
  1295  14E5  1303               	bcf	3,6	;RP1=0, select bank1
  1296  14E6  085F               	movf	main@Ax^(0+128),w
  1297  14E7  00F0               	movwf	___xxtofl@val
  1298  14E8  0860               	movf	(main@Ax+1)^(0+128),w
  1299  14E9  00F1               	movwf	___xxtofl@val+1
  1300  14EA  3000               	movlw	0
  1301  14EB  1BF1               	btfsc	___xxtofl@val+1,7
  1302  14EC  30FF               	movlw	255
  1303  14ED  00F2               	movwf	___xxtofl@val+2
  1304  14EE  00F3               	movwf	___xxtofl@val+3
  1305  14EF  3001               	movlw	1
  1306  14F0  160A  118A  252E  160A  118A  	fcall	___xxtofl
  1307  14F5  0873               	movf	?___xxtofl+3,w
  1308  14F6  1683               	bsf	3,5	;RP0=1, select bank1
  1309  14F7  1303               	bcf	3,6	;RP1=0, select bank1
  1310  14F8  00DE               	movwf	(main@Xa+3)^(0+128)
  1311  14F9  0872               	movf	?___xxtofl+2,w
  1312  14FA  00DD               	movwf	(main@Xa+2)^(0+128)
  1313  14FB  0871               	movf	?___xxtofl+1,w
  1314  14FC  00DC               	movwf	(main@Xa+1)^(0+128)
  1315  14FD  0870               	movf	?___xxtofl,w
  1316  14FE  00DB               	movwf	main@Xa^(0+128)
  1317                           
  1318                           ;MPU6050.c: 54:         sprintf(buffer,"Ax=%.2f \t",Xa);
  1319  14FF  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1320  1500  00C3               	movwf	??_main^(0+128)
  1321  1501  0843               	movf	??_main^(0+128),w
  1322  1502  00A0               	movwf	sprintf@f^(0+128)
  1323  1503  085E               	movf	(main@Xa+3)^(0+128),w
  1324  1504  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  1325  1505  085D               	movf	(main@Xa+2)^(0+128),w
  1326  1506  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  1327  1507  085C               	movf	(main@Xa+1)^(0+128),w
  1328  1508  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1329  1509  085B               	movf	main@Xa^(0+128),w
  1330  150A  00A1               	movwf	(?_sprintf^(0+128)+1)
  1331  150B  30C7               	movlw	(low (main@buffer| 0))& (0+255)
  1332  150C  120A  118A  2205  160A  118A  	fcall	_sprintf
  1333                           
  1334                           ;MPU6050.c: 55:         Lcd_Set_Cursor(1,1);
  1335  1511  01F4               	clrf	Lcd_Set_Cursor@b
  1336  1512  0AF4               	incf	Lcd_Set_Cursor@b,f
  1337  1513  3001               	movlw	1
  1338  1514  160A  118A  21F0  160A  118A  	fcall	_Lcd_Set_Cursor
  1339                           
  1340                           ;MPU6050.c: 56:   Lcd_Write_String(buffer);
  1341  1519  30C7               	movlw	(low (main@buffer| 0))& (0+255)
  1342  151A  160A  158A  2757  160A  118A  	fcall	_Lcd_Write_String
  1343                           
  1344                           ;MPU6050.c: 57:         _delay((unsigned long)((150)*(20000000/4000.0)));
  1345  151F  3004               	movlw	4
  1346  1520  1683               	bsf	3,5	;RP0=1, select bank1
  1347  1521  1303               	bcf	3,6	;RP1=0, select bank1
  1348  1522  00C5               	movwf	(??_main^(0+128)+2)
  1349  1523  30CF               	movlw	207
  1350  1524  00C4               	movwf	(??_main^(0+128)+1)
  1351  1525  3001               	movlw	1
  1352  1526  00C3               	movwf	??_main^(0+128)
  1353  1527                     u5667:	
  1354  1527  0BC3               	decfsz	??_main^(0+128),f
  1355  1528  2D27               	goto	u5667
  1356  1529  0BC4               	decfsz	(??_main^(0+128)+1),f
  1357  152A  2D27               	goto	u5667
  1358  152B  0BC5               	decfsz	(??_main^(0+128)+2),f
  1359  152C  2D27               	goto	u5667
  1360  152D  2CBD               	goto	l3531
  1361  152E                     __end_of_main:	
  1362                           
  1363                           	psect	text1
  1364  0205                     __ptext1:	
  1365 ;; *************** function _sprintf *****************
  1366 ;; Defined at:
  1367 ;;		line 500 in file "D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c"
  1368 ;; Parameters:    Size  Location     Type
  1369 ;;  sp              1    wreg     PTR unsigned char 
  1370 ;;		 -> main@buffer(20), 
  1371 ;;  f               1    0[BANK1 ] PTR const unsigned char 
  1372 ;;		 -> STR_1(10), 
  1373 ;; Auto vars:     Size  Location     Type
  1374 ;;  sp              1   27[BANK1 ] PTR unsigned char 
  1375 ;;		 -> main@buffer(20), 
  1376 ;;  fval            4   30[BANK1 ] PTR unsigned char 
  1377 ;;  tmpval          4   23[BANK1 ] struct .
  1378 ;;  val             4   17[BANK1 ] unsigned long 
  1379 ;;  prec            2   28[BANK1 ] int 
  1380 ;;  eexp            2   21[BANK1 ] int 
  1381 ;;  flag            2   15[BANK1 ] unsigned short 
  1382 ;;  cp              2    0        PTR const unsigned char 
  1383 ;;  len             2    0        unsigned int 
  1384 ;;  width           2    0        int 
  1385 ;;  c               1   34[BANK1 ] unsigned char 
  1386 ;;  ap              1   14[BANK1 ] PTR void [1]
  1387 ;;		 -> ?_sprintf(2), 
  1388 ;;  d               1    0        unsigned char 
  1389 ;; Return value:  Size  Location     Type
  1390 ;;                  2    0[BANK1 ] int 
  1391 ;; Registers used:
  1392 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1393 ;; Tracked objects:
  1394 ;;		On entry : 0/0
  1395 ;;		On exit  : 0/0
  1396 ;;		Unchanged: 0/0
  1397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1398 ;;      Params:         0       0       5       0       0
  1399 ;;      Locals:         0       0      25       0       0
  1400 ;;      Temps:          0       0       5       0       0
  1401 ;;      Totals:         0       0      35       0       0
  1402 ;;Total ram usage:       35 bytes
  1403 ;; Hardware stack levels used:    1
  1404 ;; Hardware stack levels required when called:    3
  1405 ;; This function calls:
  1406 ;;		___awdiv
  1407 ;;		___fladd
  1408 ;;		___fleq
  1409 ;;		___flge
  1410 ;;		___flmul
  1411 ;;		___flneg
  1412 ;;		___flsub
  1413 ;;		___fltol
  1414 ;;		___lldiv
  1415 ;;		___llmod
  1416 ;;		___wmul
  1417 ;;		___xxtofl
  1418 ;;		__div_to_l_
  1419 ;;		__tdiv_to_l_
  1420 ;;		_fround
  1421 ;;		_isdigit
  1422 ;;		_scale
  1423 ;; This function is called by:
  1424 ;;		_main
  1425 ;; This function uses a non-reentrant model
  1426 ;;
  1427                           
  1428                           
  1429                           ;psect for function _sprintf
  1430  0205                     _sprintf:	
  1431                           
  1432                           ;incstack = 0
  1433                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1434                           ;sprintf@sp stored from wreg
  1435  0205  1683               	bsf	3,5	;RP0=1, select bank1
  1436  0206  1303               	bcf	3,6	;RP1=0, select bank1
  1437  0207  00BB               	movwf	sprintf@sp^(0+128)
  1438                           
  1439                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 500: sprintf(char * 
      +                          sp, const char * f, ...);D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt
      +                          .c: 501: {;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 502:  va_l
      +                          ist ap;;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 507:  char c;
      +                          ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 509:  int width;;D:\
      +                          PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 512:  int prec;
  1440  0208  30A1               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1441  0209  00A5               	movwf	??_sprintf^(0+128)
  1442  020A  0825               	movf	??_sprintf^(0+128),w
  1443  020B  00AE               	movwf	sprintf@ap^(0+128)
  1444  020C                     l3481:	
  1445                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 548:  while((c = *f+
      +                          +)) {
  1446                           
  1447                           
  1448                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 548:  while((c = *f+
      +                          +)) {
  1449  020C  3001               	movlw	1
  1450  020D  07A0               	addwf	sprintf@f^(0+128),f
  1451  020E  30FF               	movlw	-1
  1452  020F  0720               	addwf	sprintf@f^(0+128),w
  1453  0210  0084               	movwf	4
  1454  0211  160A  118A  2000  120A  118A  	fcall	stringdir
  1455  0216  00A5               	movwf	??_sprintf^(0+128)
  1456  0217  0825               	movf	??_sprintf^(0+128),w
  1457  0218  00C2               	movwf	sprintf@c^(0+128)
  1458  0219  0842               	movf	sprintf@c^(0+128),w
  1459  021A  1903               	btfsc	3,2
  1460  021B  2FF7               	goto	l3483
  1461                           
  1462                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 550:   if(c != '%')
  1463  021C  3025               	movlw	37
  1464  021D  0642               	xorwf	sprintf@c^(0+128),w
  1465  021E  1903               	btfsc	3,2
  1466  021F  2A22               	goto	l3297
  1467                           
  1468                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 552:   {;D:\PROGRAM\
      +                          MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 553:    ((*sp++ = (c)));
  1469  0220  0842               	movf	sprintf@c^(0+128),w
  1470  0221  2FEC               	goto	L6
  1471  0222                     l3297:	
  1472                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 554:    continue;
  1473                           
  1474                           
  1475                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 560:   flag = 0;
  1476  0222  01AF               	clrf	sprintf@flag^(0+128)
  1477  0223  01B0               	clrf	(sprintf@flag+1)^(0+128)
  1478                           
  1479                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 623:   if(*f == '.')
      +                           {
  1480  0224  0820               	movf	sprintf@f^(0+128),w
  1481  0225  0084               	movwf	4
  1482  0226  160A  118A  2000  120A  118A  	fcall	stringdir
  1483  022B  3A2E               	xorlw	46
  1484  022C  1D03               	skipz
  1485  022D  2A6F               	goto	l3313
  1486                           
  1487                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 624:    flag |= 0x40
      +                          00;
  1488  022E  1730               	bsf	(sprintf@flag^(0+128)+1),6
  1489                           
  1490                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 625:    f++;
  1491  022F  3001               	movlw	1
  1492  0230  00A5               	movwf	??_sprintf^(0+128)
  1493  0231  0825               	movf	??_sprintf^(0+128),w
  1494  0232  07A0               	addwf	sprintf@f^(0+128),f
  1495                           
  1496                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 639:    {;D:\PROGRAM
      +                          \MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 640:     prec = 0;
  1497  0233  01BC               	clrf	sprintf@prec^(0+128)
  1498  0234  01BD               	clrf	(sprintf@prec+1)^(0+128)
  1499  0235                     l3311:	
  1500                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 641:     while(isdig
      +                          it((unsigned)*f))
  1501                           
  1502                           
  1503                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 641:     while(isdig
      +                          it((unsigned)*f))
  1504  0235  0820               	movf	sprintf@f^(0+128),w
  1505  0236  0084               	movwf	4
  1506  0237  160A  118A  2000  120A  118A  	fcall	stringdir
  1507  023C  160A  158A  26AF  120A  118A  	fcall	_isdigit
  1508  0241  1C03               	btfss	3,0
  1509  0242  2A75               	goto	l3319
  1510                           
  1511                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 642:      prec = pre
      +                          c*10 + *f++ - '0';
  1512  0243  1683               	bsf	3,5	;RP0=1, select bank1
  1513  0244  1303               	bcf	3,6	;RP1=0, select bank1
  1514  0245  083D               	movf	(sprintf@prec+1)^(0+128),w
  1515  0246  00F1               	movwf	___wmul@multiplier+1
  1516  0247  083C               	movf	sprintf@prec^(0+128),w
  1517  0248  00F0               	movwf	___wmul@multiplier
  1518  0249  300A               	movlw	10
  1519  024A  00F2               	movwf	___wmul@multiplicand
  1520  024B  3000               	movlw	0
  1521  024C  00F3               	movwf	___wmul@multiplicand+1
  1522  024D  160A  158A  2794  120A  118A  	fcall	___wmul
  1523  0252  1683               	bsf	3,5	;RP0=1, select bank1
  1524  0253  1303               	bcf	3,6	;RP1=0, select bank1
  1525  0254  0820               	movf	sprintf@f^(0+128),w
  1526  0255  0084               	movwf	4
  1527  0256  160A  118A  2000  120A  118A  	fcall	stringdir
  1528  025B  0770               	addwf	?___wmul,w
  1529  025C  00A5               	movwf	??_sprintf^(0+128)
  1530  025D  3000               	movlw	0
  1531  025E  1803               	skipnc
  1532  025F  3001               	movlw	1
  1533  0260  0771               	addwf	?___wmul+1,w
  1534  0261  00A6               	movwf	(??_sprintf+1)^(0+128)
  1535  0262  0825               	movf	??_sprintf^(0+128),w
  1536  0263  3ED0               	addlw	208
  1537  0264  00BC               	movwf	sprintf@prec^(0+128)
  1538  0265  0826               	movf	(??_sprintf+1)^(0+128),w
  1539  0266  1803               	skipnc
  1540  0267  3E01               	addlw	1
  1541  0268  3EFF               	addlw	255
  1542  0269  00BD               	movwf	(sprintf@prec+1)^(0+128)
  1543  026A  3001               	movlw	1
  1544  026B  00A5               	movwf	??_sprintf^(0+128)
  1545  026C  0825               	movf	??_sprintf^(0+128),w
  1546  026D  07A0               	addwf	sprintf@f^(0+128),f
  1547  026E  2A35               	goto	l3311
  1548  026F                     l3313:	
  1549                           
  1550                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 645:    prec = 0;
  1551  026F  01BC               	clrf	sprintf@prec^(0+128)
  1552  0270  01BD               	clrf	(sprintf@prec+1)^(0+128)
  1553                           
  1554                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 647:    flag |= 0x10
      +                          00;
  1555  0271  1630               	bsf	(sprintf@flag^(0+128)+1),4
  1556  0272  2A75               	goto	l3319
  1557  0273                     l347:	
  1558                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 681:   case 'f':
  1559                           
  1560                           
  1561                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 682:    flag |= 0x40
      +                          0;
  1562  0273  1530               	bsf	(sprintf@flag^(0+128)+1),2
  1563                           
  1564                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 683:    break;
  1565  0274  2A91               	goto	l3321
  1566  0275                     l3319:	
  1567  0275  3001               	movlw	1
  1568  0276  1683               	bsf	3,5	;RP0=1, select bank1
  1569  0277  1303               	bcf	3,6	;RP1=0, select bank1
  1570  0278  07A0               	addwf	sprintf@f^(0+128),f
  1571  0279  30FF               	movlw	-1
  1572  027A  0720               	addwf	sprintf@f^(0+128),w
  1573  027B  0084               	movwf	4
  1574  027C  160A  118A  2000  120A  118A  	fcall	stringdir
  1575  0281  00C2               	movwf	sprintf@c^(0+128)
  1576  0282  00A5               	movwf	??_sprintf^(0+128)
  1577  0283  01A6               	clrf	(??_sprintf^(0+128)+1)
  1578                           
  1579                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1580                           ; Switch size 1, requested type "simple"
  1581                           ; Number of cases is 1, Range of values is 0 to 0
  1582                           ; switch strategies available:
  1583                           ; Name         Instructions Cycles
  1584                           ; simple_byte            4     3 (average)
  1585                           ; direct_byte           11     8 (fixed)
  1586                           ; jumptable            260     6 (fixed)
  1587                           ;	Chosen strategy is simple_byte
  1588  0284  0826               	movf	(??_sprintf+1)^(0+128),w
  1589  0285  3A00               	xorlw	0	; case 0
  1590  0286  1903               	skipnz
  1591  0287  2A89               	goto	l3611
  1592  0288  2A0C               	goto	l3481
  1593  0289                     l3611:	
  1594                           
  1595                           ; Switch size 1, requested type "simple"
  1596                           ; Number of cases is 2, Range of values is 0 to 102
  1597                           ; switch strategies available:
  1598                           ; Name         Instructions Cycles
  1599                           ; simple_byte            7     4 (average)
  1600                           ; jumptable            260     6 (fixed)
  1601                           ;	Chosen strategy is simple_byte
  1602  0289  0825               	movf	??_sprintf^(0+128),w
  1603  028A  3A00               	xorlw	0	; case 0
  1604  028B  1903               	skipnz
  1605  028C  2FF7               	goto	l3483
  1606  028D  3A66               	xorlw	102	; case 102
  1607  028E  1903               	skipnz
  1608  028F  2A73               	goto	l347
  1609  0290  2A0C               	goto	l3481
  1610  0291                     l3321:	
  1611                           
  1612                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 844:   if(flag & (0x
      +                          700)) {
  1613  0291  3000               	movlw	0
  1614  0292  052F               	andwf	sprintf@flag^(0+128),w
  1615  0293  00A5               	movwf	??_sprintf^(0+128)
  1616  0294  3007               	movlw	7
  1617  0295  0530               	andwf	(sprintf@flag+1)^(0+128),w
  1618  0296  00A6               	movwf	(??_sprintf+1)^(0+128)
  1619  0297  0825               	movf	??_sprintf^(0+128),w
  1620  0298  0426               	iorwf	(??_sprintf^(0+128)+1),w
  1621  0299  1903               	btfsc	3,2
  1622  029A  2FB9               	goto	l3463
  1623                           
  1624                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 846:    if(flag & 0x
      +                          1000)
  1625  029B  1E30               	btfss	(sprintf@flag+1)^(0+128),4
  1626  029C  2AA1               	goto	l3327
  1627                           
  1628                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 848:     prec = 6;
  1629  029D  3006               	movlw	6
  1630  029E  00BC               	movwf	sprintf@prec^(0+128)
  1631  029F  3000               	movlw	0
  1632  02A0  00BD               	movwf	(sprintf@prec^(0+128)+1)
  1633  02A1                     l3327:	
  1634                           
  1635                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 849:    fval = (*(do
      +                          uble *)__va_arg((*(double **)ap), (double)0));
  1636  02A1  082E               	movf	sprintf@ap^(0+128),w
  1637  02A2  0084               	movwf	4
  1638  02A3  1383               	bcf	3,7	;select IRP bank0
  1639  02A4  0800               	movf	0,w
  1640  02A5  00BE               	movwf	sprintf@fval^(0+128)
  1641  02A6  0A84               	incf	4,f
  1642  02A7  0800               	movf	0,w
  1643  02A8  00BF               	movwf	(sprintf@fval+1)^(0+128)
  1644  02A9  0A84               	incf	4,f
  1645  02AA  0800               	movf	0,w
  1646  02AB  00C0               	movwf	(sprintf@fval+2)^(0+128)
  1647  02AC  0A84               	incf	4,f
  1648  02AD  0800               	movf	0,w
  1649  02AE  00C1               	movwf	(sprintf@fval+3)^(0+128)
  1650  02AF  3004               	movlw	4
  1651  02B0  00A5               	movwf	??_sprintf^(0+128)
  1652  02B1  0825               	movf	??_sprintf^(0+128),w
  1653  02B2  07AE               	addwf	sprintf@ap^(0+128),f
  1654                           
  1655                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 850:    if(fval < 0.
      +                          0) {
  1656  02B3  0841               	movf	(sprintf@fval+3)^(0+128),w
  1657  02B4  00F3               	movwf	___flge@ff1+3
  1658  02B5  0840               	movf	(sprintf@fval+2)^(0+128),w
  1659  02B6  00F2               	movwf	___flge@ff1+2
  1660  02B7  083F               	movf	(sprintf@fval+1)^(0+128),w
  1661  02B8  00F1               	movwf	___flge@ff1+1
  1662  02B9  083E               	movf	sprintf@fval^(0+128),w
  1663  02BA  00F0               	movwf	___flge@ff1
  1664  02BB  3000               	movlw	0
  1665  02BC  00F7               	movwf	___flge@ff2+3
  1666  02BD  3000               	movlw	0
  1667  02BE  00F6               	movwf	___flge@ff2+2
  1668  02BF  3000               	movlw	0
  1669  02C0  00F5               	movwf	___flge@ff2+1
  1670  02C1  3000               	movlw	0
  1671  02C2  00F4               	movwf	___flge@ff2
  1672  02C3  160A  118A  2407  120A  118A  	fcall	___flge
  1673  02C8  1803               	btfsc	3,0
  1674  02C9  2AE7               	goto	l3337
  1675                           
  1676                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 851:     fval = -fva
      +                          l;
  1677  02CA  1683               	bsf	3,5	;RP0=1, select bank1
  1678  02CB  1303               	bcf	3,6	;RP1=0, select bank1
  1679  02CC  0841               	movf	(sprintf@fval+3)^(0+128),w
  1680  02CD  00F3               	movwf	___flneg@f1+3
  1681  02CE  0840               	movf	(sprintf@fval+2)^(0+128),w
  1682  02CF  00F2               	movwf	___flneg@f1+2
  1683  02D0  083F               	movf	(sprintf@fval+1)^(0+128),w
  1684  02D1  00F1               	movwf	___flneg@f1+1
  1685  02D2  083E               	movf	sprintf@fval^(0+128),w
  1686  02D3  00F0               	movwf	___flneg@f1
  1687  02D4  160A  158A  269A  120A  118A  	fcall	___flneg
  1688  02D9  0873               	movf	?___flneg+3,w
  1689  02DA  1683               	bsf	3,5	;RP0=1, select bank1
  1690  02DB  1303               	bcf	3,6	;RP1=0, select bank1
  1691  02DC  00C1               	movwf	(sprintf@fval+3)^(0+128)
  1692  02DD  0872               	movf	?___flneg+2,w
  1693  02DE  00C0               	movwf	(sprintf@fval+2)^(0+128)
  1694  02DF  0871               	movf	?___flneg+1,w
  1695  02E0  00BF               	movwf	(sprintf@fval+1)^(0+128)
  1696  02E1  0870               	movf	?___flneg,w
  1697  02E2  00BE               	movwf	sprintf@fval^(0+128)
  1698                           
  1699                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 852:     flag |= 0x0
      +                          3;
  1700  02E3  3003               	movlw	3
  1701  02E4  04AF               	iorwf	sprintf@flag^(0+128),f
  1702  02E5  3000               	movlw	0
  1703  02E6  04B0               	iorwf	(sprintf@flag+1)^(0+128),f
  1704  02E7                     l3337:	
  1705                           
  1706                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 854:    eexp = 0;
  1707  02E7  1683               	bsf	3,5	;RP0=1, select bank1
  1708  02E8  1303               	bcf	3,6	;RP1=0, select bank1
  1709  02E9  01B5               	clrf	sprintf@eexp^(0+128)
  1710  02EA  01B6               	clrf	(sprintf@eexp+1)^(0+128)
  1711                           
  1712                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 855:    if( fval!=0)
      +                           {
  1713  02EB  0841               	movf	(sprintf@fval+3)^(0+128),w
  1714  02EC  00F3               	movwf	___fleq@ff1+3
  1715  02ED  0840               	movf	(sprintf@fval+2)^(0+128),w
  1716  02EE  00F2               	movwf	___fleq@ff1+2
  1717  02EF  083F               	movf	(sprintf@fval+1)^(0+128),w
  1718  02F0  00F1               	movwf	___fleq@ff1+1
  1719  02F1  083E               	movf	sprintf@fval^(0+128),w
  1720  02F2  00F0               	movwf	___fleq@ff1
  1721  02F3  3000               	movlw	0
  1722  02F4  00F7               	movwf	___fleq@ff2+3
  1723  02F5  3000               	movlw	0
  1724  02F6  00F6               	movwf	___fleq@ff2+2
  1725  02F7  3000               	movlw	0
  1726  02F8  00F5               	movwf	___fleq@ff2+1
  1727  02F9  3000               	movlw	0
  1728  02FA  00F4               	movwf	___fleq@ff2
  1729  02FB  160A  118A  21A8  120A  118A  	fcall	___fleq
  1730  0300  1803               	btfsc	3,0
  1731  0301  2BEB               	goto	l3365
  1732                           
  1733                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 856:     (void)(*(&e
      +                          exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  1734  0302  1003               	clrc
  1735  0303  1683               	bsf	3,5	;RP0=1, select bank1
  1736  0304  1303               	bcf	3,6	;RP1=0, select bank1
  1737  0305  0D40               	rlf	(sprintf@fval+2)^(0+128),w
  1738  0306  0D41               	rlf	(sprintf@fval+3)^(0+128),w
  1739  0307  3E82               	addlw	130
  1740  0308  00B5               	movwf	sprintf@eexp^(0+128)
  1741  0309  30FF               	movlw	255
  1742  030A  1803               	skipnc
  1743  030B  3000               	movlw	0
  1744  030C  00B6               	movwf	(sprintf@eexp^(0+128)+1)
  1745                           
  1746                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 857:     eexp--;
  1747  030D  30FF               	movlw	255
  1748  030E  07B5               	addwf	sprintf@eexp^(0+128),f
  1749  030F  1803               	skipnc
  1750  0310  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  1751  0311  30FF               	movlw	255
  1752  0312  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  1753                           
  1754                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 858:     eexp *= 3;
  1755  0313  3003               	movlw	3
  1756  0314  00F0               	movwf	___wmul@multiplier
  1757  0315  3000               	movlw	0
  1758  0316  00F1               	movwf	___wmul@multiplier+1
  1759  0317  0836               	movf	(sprintf@eexp+1)^(0+128),w
  1760  0318  00F3               	movwf	___wmul@multiplicand+1
  1761  0319  0835               	movf	sprintf@eexp^(0+128),w
  1762  031A  00F2               	movwf	___wmul@multiplicand
  1763  031B  160A  158A  2794  120A  118A  	fcall	___wmul
  1764  0320  0871               	movf	?___wmul+1,w
  1765  0321  1683               	bsf	3,5	;RP0=1, select bank1
  1766  0322  1303               	bcf	3,6	;RP1=0, select bank1
  1767  0323  00B6               	movwf	(sprintf@eexp+1)^(0+128)
  1768  0324  0870               	movf	?___wmul,w
  1769  0325  00B5               	movwf	sprintf@eexp^(0+128)
  1770                           
  1771                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 859:     eexp /= 10;
  1772  0326  300A               	movlw	10
  1773  0327  00F7               	movwf	___awdiv@divisor
  1774  0328  3000               	movlw	0
  1775  0329  00F8               	movwf	___awdiv@divisor+1
  1776  032A  0836               	movf	(sprintf@eexp+1)^(0+128),w
  1777  032B  00FA               	movwf	___awdiv@dividend+1
  1778  032C  0835               	movf	sprintf@eexp^(0+128),w
  1779  032D  00F9               	movwf	___awdiv@dividend
  1780  032E  160A  118A  2285  120A  118A  	fcall	___awdiv
  1781  0333  0878               	movf	?___awdiv+1,w
  1782  0334  1683               	bsf	3,5	;RP0=1, select bank1
  1783  0335  1303               	bcf	3,6	;RP1=0, select bank1
  1784  0336  00B6               	movwf	(sprintf@eexp+1)^(0+128)
  1785  0337  0877               	movf	?___awdiv,w
  1786  0338  00B5               	movwf	sprintf@eexp^(0+128)
  1787                           
  1788                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 860:     if(eexp < 0
      +                          )
  1789  0339  1FB6               	btfss	(sprintf@eexp+1)^(0+128),7
  1790  033A  2B41               	goto	l3353
  1791                           
  1792                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 861:      eexp--;
  1793  033B  30FF               	movlw	255
  1794  033C  07B5               	addwf	sprintf@eexp^(0+128),f
  1795  033D  1803               	skipnc
  1796  033E  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  1797  033F  30FF               	movlw	255
  1798  0340  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  1799  0341                     l3353:	
  1800                           
  1801                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 865:     tmpval.inte
      +                          g = scale(-eexp);
  1802  0341  0335               	decf	sprintf@eexp^(0+128),w
  1803  0342  3AFF               	xorlw	255
  1804  0343  120A  158A  24B7  120A  118A  	fcall	_scale
  1805  0348  1283               	bcf	3,5	;RP0=0, select bank0
  1806  0349  1303               	bcf	3,6	;RP1=0, select bank0
  1807  034A  0841               	movf	?_scale+3,w
  1808  034B  1683               	bsf	3,5	;RP0=1, select bank1
  1809  034C  1303               	bcf	3,6	;RP1=0, select bank1
  1810  034D  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  1811  034E  1283               	bcf	3,5	;RP0=0, select bank0
  1812  034F  1303               	bcf	3,6	;RP1=0, select bank0
  1813  0350  0840               	movf	?_scale+2,w
  1814  0351  1683               	bsf	3,5	;RP0=1, select bank1
  1815  0352  1303               	bcf	3,6	;RP1=0, select bank1
  1816  0353  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  1817  0354  1283               	bcf	3,5	;RP0=0, select bank0
  1818  0355  1303               	bcf	3,6	;RP1=0, select bank0
  1819  0356  083F               	movf	?_scale+1,w
  1820  0357  1683               	bsf	3,5	;RP0=1, select bank1
  1821  0358  1303               	bcf	3,6	;RP1=0, select bank1
  1822  0359  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  1823  035A  1283               	bcf	3,5	;RP0=0, select bank0
  1824  035B  1303               	bcf	3,6	;RP1=0, select bank0
  1825  035C  083E               	movf	?_scale,w
  1826  035D  1683               	bsf	3,5	;RP0=1, select bank1
  1827  035E  1303               	bcf	3,6	;RP1=0, select bank1
  1828  035F  00B7               	movwf	sprintf@tmpval^(0+128)
  1829                           
  1830                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 866:     tmpval.inte
      +                          g *= fval;
  1831  0360  0841               	movf	(sprintf@fval+3)^(0+128),w
  1832  0361  1283               	bcf	3,5	;RP0=0, select bank0
  1833  0362  1303               	bcf	3,6	;RP1=0, select bank0
  1834  0363  00A7               	movwf	___flmul@b+3
  1835  0364  1683               	bsf	3,5	;RP0=1, select bank1
  1836  0365  1303               	bcf	3,6	;RP1=0, select bank1
  1837  0366  0840               	movf	(sprintf@fval+2)^(0+128),w
  1838  0367  1283               	bcf	3,5	;RP0=0, select bank0
  1839  0368  1303               	bcf	3,6	;RP1=0, select bank0
  1840  0369  00A6               	movwf	___flmul@b+2
  1841  036A  1683               	bsf	3,5	;RP0=1, select bank1
  1842  036B  1303               	bcf	3,6	;RP1=0, select bank1
  1843  036C  083F               	movf	(sprintf@fval+1)^(0+128),w
  1844  036D  1283               	bcf	3,5	;RP0=0, select bank0
  1845  036E  1303               	bcf	3,6	;RP1=0, select bank0
  1846  036F  00A5               	movwf	___flmul@b+1
  1847  0370  1683               	bsf	3,5	;RP0=1, select bank1
  1848  0371  1303               	bcf	3,6	;RP1=0, select bank1
  1849  0372  083E               	movf	sprintf@fval^(0+128),w
  1850  0373  1283               	bcf	3,5	;RP0=0, select bank0
  1851  0374  1303               	bcf	3,6	;RP1=0, select bank0
  1852  0375  00A4               	movwf	___flmul@b
  1853  0376  1683               	bsf	3,5	;RP0=1, select bank1
  1854  0377  1303               	bcf	3,6	;RP1=0, select bank1
  1855  0378  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  1856  0379  1283               	bcf	3,5	;RP0=0, select bank0
  1857  037A  1303               	bcf	3,6	;RP1=0, select bank0
  1858  037B  00AB               	movwf	___flmul@a+3
  1859  037C  1683               	bsf	3,5	;RP0=1, select bank1
  1860  037D  1303               	bcf	3,6	;RP1=0, select bank1
  1861  037E  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  1862  037F  1283               	bcf	3,5	;RP0=0, select bank0
  1863  0380  1303               	bcf	3,6	;RP1=0, select bank0
  1864  0381  00AA               	movwf	___flmul@a+2
  1865  0382  1683               	bsf	3,5	;RP0=1, select bank1
  1866  0383  1303               	bcf	3,6	;RP1=0, select bank1
  1867  0384  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  1868  0385  1283               	bcf	3,5	;RP0=0, select bank0
  1869  0386  1303               	bcf	3,6	;RP1=0, select bank0
  1870  0387  00A9               	movwf	___flmul@a+1
  1871  0388  1683               	bsf	3,5	;RP0=1, select bank1
  1872  0389  1303               	bcf	3,6	;RP1=0, select bank1
  1873  038A  0837               	movf	sprintf@tmpval^(0+128),w
  1874  038B  1283               	bcf	3,5	;RP0=0, select bank0
  1875  038C  1303               	bcf	3,6	;RP1=0, select bank0
  1876  038D  00A8               	movwf	___flmul@a
  1877  038E  120A  158A  21A2  120A  118A  	fcall	___flmul
  1878  0393  1283               	bcf	3,5	;RP0=0, select bank0
  1879  0394  1303               	bcf	3,6	;RP1=0, select bank0
  1880  0395  0827               	movf	?___flmul+3,w
  1881  0396  1683               	bsf	3,5	;RP0=1, select bank1
  1882  0397  1303               	bcf	3,6	;RP1=0, select bank1
  1883  0398  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  1884  0399  1283               	bcf	3,5	;RP0=0, select bank0
  1885  039A  1303               	bcf	3,6	;RP1=0, select bank0
  1886  039B  0826               	movf	?___flmul+2,w
  1887  039C  1683               	bsf	3,5	;RP0=1, select bank1
  1888  039D  1303               	bcf	3,6	;RP1=0, select bank1
  1889  039E  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  1890  039F  1283               	bcf	3,5	;RP0=0, select bank0
  1891  03A0  1303               	bcf	3,6	;RP1=0, select bank0
  1892  03A1  0825               	movf	?___flmul+1,w
  1893  03A2  1683               	bsf	3,5	;RP0=1, select bank1
  1894  03A3  1303               	bcf	3,6	;RP1=0, select bank1
  1895  03A4  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  1896  03A5  1283               	bcf	3,5	;RP0=0, select bank0
  1897  03A6  1303               	bcf	3,6	;RP1=0, select bank0
  1898  03A7  0824               	movf	?___flmul,w
  1899  03A8  1683               	bsf	3,5	;RP0=1, select bank1
  1900  03A9  1303               	bcf	3,6	;RP1=0, select bank1
  1901  03AA  00B7               	movwf	sprintf@tmpval^(0+128)
  1902                           
  1903                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 867:     if(tmpval.i
      +                          nteg < 1.0)
  1904  03AB  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  1905  03AC  00F3               	movwf	___flge@ff1+3
  1906  03AD  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  1907  03AE  00F2               	movwf	___flge@ff1+2
  1908  03AF  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  1909  03B0  00F1               	movwf	___flge@ff1+1
  1910  03B1  0837               	movf	sprintf@tmpval^(0+128),w
  1911  03B2  00F0               	movwf	___flge@ff1
  1912  03B3  303F               	movlw	63
  1913  03B4  00F7               	movwf	___flge@ff2+3
  1914  03B5  3080               	movlw	128
  1915  03B6  00F6               	movwf	___flge@ff2+2
  1916  03B7  3000               	movlw	0
  1917  03B8  00F5               	movwf	___flge@ff2+1
  1918  03B9  3000               	movlw	0
  1919  03BA  00F4               	movwf	___flge@ff2
  1920  03BB  160A  118A  2407  120A  118A  	fcall	___flge
  1921  03C0  1803               	btfsc	3,0
  1922  03C1  2BCA               	goto	l3361
  1923                           
  1924                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  1925  03C2  30FF               	movlw	255
  1926  03C3  1683               	bsf	3,5	;RP0=1, select bank1
  1927  03C4  1303               	bcf	3,6	;RP1=0, select bank1
  1928  03C5  07B5               	addwf	sprintf@eexp^(0+128),f
  1929  03C6  1803               	skipnc
  1930  03C7  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  1931  03C8  30FF               	movlw	255
  1932  03C9  2BEA               	goto	L1
  1933  03CA                     l3361:	
  1934  03CA  1683               	bsf	3,5	;RP0=1, select bank1
  1935  03CB  1303               	bcf	3,6	;RP1=0, select bank1
  1936  03CC  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  1937  03CD  00F3               	movwf	___flge@ff1+3
  1938  03CE  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  1939  03CF  00F2               	movwf	___flge@ff1+2
  1940  03D0  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  1941  03D1  00F1               	movwf	___flge@ff1+1
  1942  03D2  0837               	movf	sprintf@tmpval^(0+128),w
  1943  03D3  00F0               	movwf	___flge@ff1
  1944  03D4  3041               	movlw	65
  1945  03D5  00F7               	movwf	___flge@ff2+3
  1946  03D6  3020               	movlw	32
  1947  03D7  00F6               	movwf	___flge@ff2+2
  1948  03D8  3000               	movlw	0
  1949  03D9  00F5               	movwf	___flge@ff2+1
  1950  03DA  3000               	movlw	0
  1951  03DB  00F4               	movwf	___flge@ff2
  1952  03DC  160A  118A  2407  120A  118A  	fcall	___flge
  1953  03E1  1C03               	btfss	3,0
  1954  03E2  2BEB               	goto	l3365
  1955                           
  1956                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 870:      eexp++;
  1957  03E3  3001               	movlw	1
  1958  03E4  1683               	bsf	3,5	;RP0=1, select bank1
  1959  03E5  1303               	bcf	3,6	;RP1=0, select bank1
  1960  03E6  07B5               	addwf	sprintf@eexp^(0+128),f
  1961  03E7  1803               	skipnc
  1962  03E8  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  1963  03E9  3000               	movlw	0
  1964  03EA                     L1:	
  1965  03EA  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  1966  03EB                     l3365:	
  1967                           
  1968                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 1131:      if(prec <
      +                          = 12)
  1969  03EB  1683               	bsf	3,5	;RP0=1, select bank1
  1970  03EC  1303               	bcf	3,6	;RP1=0, select bank1
  1971  03ED  083D               	movf	(sprintf@prec+1)^(0+128),w
  1972  03EE  3A80               	xorlw	128
  1973  03EF  00FF               	movwf	127
  1974  03F0  3080               	movlw	128
  1975  03F1  027F               	subwf	127,w
  1976  03F2  1D03               	skipz
  1977  03F3  2BF6               	goto	u5335
  1978  03F4  300D               	movlw	13
  1979  03F5  023C               	subwf	sprintf@prec^(0+128),w
  1980  03F6                     u5335:	
  1981  03F6  1803               	skipnc
  1982  03F7  2C3F               	goto	l3369
  1983                           
  1984                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 1132:       fval += 
      +                          fround((unsigned int)prec);
  1985  03F8  1683               	bsf	3,5	;RP0=1, select bank1
  1986  03F9  1303               	bcf	3,6	;RP1=0, select bank1
  1987  03FA  083C               	movf	sprintf@prec^(0+128),w
  1988  03FB  120A  118A  2004  120A  118A  	fcall	_fround
  1989  0400  1283               	bcf	3,5	;RP0=0, select bank0
  1990  0401  1303               	bcf	3,6	;RP1=0, select bank0
  1991  0402  0841               	movf	?_fround+3,w
  1992  0403  00D5               	movwf	___fladd@b+3
  1993  0404  0840               	movf	?_fround+2,w
  1994  0405  00D4               	movwf	___fladd@b+2
  1995  0406  083F               	movf	?_fround+1,w
  1996  0407  00D3               	movwf	___fladd@b+1
  1997  0408  083E               	movf	?_fround,w
  1998  0409  00D2               	movwf	___fladd@b
  1999  040A  1683               	bsf	3,5	;RP0=1, select bank1
  2000  040B  1303               	bcf	3,6	;RP1=0, select bank1
  2001  040C  0841               	movf	(sprintf@fval+3)^(0+128),w
  2002  040D  1283               	bcf	3,5	;RP0=0, select bank0
  2003  040E  1303               	bcf	3,6	;RP1=0, select bank0
  2004  040F  00D9               	movwf	___fladd@a+3
  2005  0410  1683               	bsf	3,5	;RP0=1, select bank1
  2006  0411  1303               	bcf	3,6	;RP1=0, select bank1
  2007  0412  0840               	movf	(sprintf@fval+2)^(0+128),w
  2008  0413  1283               	bcf	3,5	;RP0=0, select bank0
  2009  0414  1303               	bcf	3,6	;RP1=0, select bank0
  2010  0415  00D8               	movwf	___fladd@a+2
  2011  0416  1683               	bsf	3,5	;RP0=1, select bank1
  2012  0417  1303               	bcf	3,6	;RP1=0, select bank1
  2013  0418  083F               	movf	(sprintf@fval+1)^(0+128),w
  2014  0419  1283               	bcf	3,5	;RP0=0, select bank0
  2015  041A  1303               	bcf	3,6	;RP1=0, select bank0
  2016  041B  00D7               	movwf	___fladd@a+1
  2017  041C  1683               	bsf	3,5	;RP0=1, select bank1
  2018  041D  1303               	bcf	3,6	;RP1=0, select bank1
  2019  041E  083E               	movf	sprintf@fval^(0+128),w
  2020  041F  1283               	bcf	3,5	;RP0=0, select bank0
  2021  0420  1303               	bcf	3,6	;RP1=0, select bank0
  2022  0421  00D6               	movwf	___fladd@a
  2023  0422  160A  118A  25D1  120A  118A  	fcall	___fladd
  2024  0427  1283               	bcf	3,5	;RP0=0, select bank0
  2025  0428  1303               	bcf	3,6	;RP1=0, select bank0
  2026  0429  0855               	movf	?___fladd+3,w
  2027  042A  1683               	bsf	3,5	;RP0=1, select bank1
  2028  042B  1303               	bcf	3,6	;RP1=0, select bank1
  2029  042C  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2030  042D  1283               	bcf	3,5	;RP0=0, select bank0
  2031  042E  1303               	bcf	3,6	;RP1=0, select bank0
  2032  042F  0854               	movf	?___fladd+2,w
  2033  0430  1683               	bsf	3,5	;RP0=1, select bank1
  2034  0431  1303               	bcf	3,6	;RP1=0, select bank1
  2035  0432  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2036  0433  1283               	bcf	3,5	;RP0=0, select bank0
  2037  0434  1303               	bcf	3,6	;RP1=0, select bank0
  2038  0435  0853               	movf	?___fladd+1,w
  2039  0436  1683               	bsf	3,5	;RP0=1, select bank1
  2040  0437  1303               	bcf	3,6	;RP1=0, select bank1
  2041  0438  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2042  0439  1283               	bcf	3,5	;RP0=0, select bank0
  2043  043A  1303               	bcf	3,6	;RP1=0, select bank0
  2044  043B  0852               	movf	?___fladd,w
  2045  043C  1683               	bsf	3,5	;RP0=1, select bank1
  2046  043D  1303               	bcf	3,6	;RP1=0, select bank1
  2047  043E  00BE               	movwf	sprintf@fval^(0+128)
  2048  043F                     l3369:	
  2049                           
  2050                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 1135:     if((eexp >
      +                           9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2051  043F  1683               	bsf	3,5	;RP0=1, select bank1
  2052  0440  1303               	bcf	3,6	;RP1=0, select bank1
  2053  0441  0836               	movf	(sprintf@eexp+1)^(0+128),w
  2054  0442  3A80               	xorlw	128
  2055  0443  00FF               	movwf	127
  2056  0444  3080               	movlw	128
  2057  0445  027F               	subwf	127,w
  2058  0446  1D03               	skipz
  2059  0447  2C4A               	goto	u5345
  2060  0448  300A               	movlw	10
  2061  0449  0235               	subwf	sprintf@eexp^(0+128),w
  2062  044A                     u5345:	
  2063  044A  1803               	skipnc
  2064  044B  2C97               	goto	l3377
  2065  044C  1683               	bsf	3,5	;RP0=1, select bank1
  2066  044D  1303               	bcf	3,6	;RP1=0, select bank1
  2067  044E  0841               	movf	(sprintf@fval+3)^(0+128),w
  2068  044F  00F3               	movwf	___fleq@ff1+3
  2069  0450  0840               	movf	(sprintf@fval+2)^(0+128),w
  2070  0451  00F2               	movwf	___fleq@ff1+2
  2071  0452  083F               	movf	(sprintf@fval+1)^(0+128),w
  2072  0453  00F1               	movwf	___fleq@ff1+1
  2073  0454  083E               	movf	sprintf@fval^(0+128),w
  2074  0455  00F0               	movwf	___fleq@ff1
  2075  0456  3000               	movlw	0
  2076  0457  00F7               	movwf	___fleq@ff2+3
  2077  0458  3000               	movlw	0
  2078  0459  00F6               	movwf	___fleq@ff2+2
  2079  045A  3000               	movlw	0
  2080  045B  00F5               	movwf	___fleq@ff2+1
  2081  045C  3000               	movlw	0
  2082  045D  00F4               	movwf	___fleq@ff2
  2083  045E  160A  118A  21A8  120A  118A  	fcall	___fleq
  2084  0463  1803               	btfsc	3,0
  2085  0464  2D00               	goto	l3391
  2086  0465  1683               	bsf	3,5	;RP0=1, select bank1
  2087  0466  1303               	bcf	3,6	;RP1=0, select bank1
  2088  0467  0841               	movf	(sprintf@fval+3)^(0+128),w
  2089  0468  1283               	bcf	3,5	;RP0=0, select bank0
  2090  0469  1303               	bcf	3,6	;RP1=0, select bank0
  2091  046A  00D4               	movwf	___fltol@f1+3
  2092  046B  1683               	bsf	3,5	;RP0=1, select bank1
  2093  046C  1303               	bcf	3,6	;RP1=0, select bank1
  2094  046D  0840               	movf	(sprintf@fval+2)^(0+128),w
  2095  046E  1283               	bcf	3,5	;RP0=0, select bank0
  2096  046F  1303               	bcf	3,6	;RP1=0, select bank0
  2097  0470  00D3               	movwf	___fltol@f1+2
  2098  0471  1683               	bsf	3,5	;RP0=1, select bank1
  2099  0472  1303               	bcf	3,6	;RP1=0, select bank1
  2100  0473  083F               	movf	(sprintf@fval+1)^(0+128),w
  2101  0474  1283               	bcf	3,5	;RP0=0, select bank0
  2102  0475  1303               	bcf	3,6	;RP1=0, select bank0
  2103  0476  00D2               	movwf	___fltol@f1+1
  2104  0477  1683               	bsf	3,5	;RP0=1, select bank1
  2105  0478  1303               	bcf	3,6	;RP1=0, select bank1
  2106  0479  083E               	movf	sprintf@fval^(0+128),w
  2107  047A  1283               	bcf	3,5	;RP0=0, select bank0
  2108  047B  1303               	bcf	3,6	;RP1=0, select bank0
  2109  047C  00D1               	movwf	___fltol@f1
  2110  047D  160A  118A  239A  120A  118A  	fcall	___fltol
  2111  0482  1283               	bcf	3,5	;RP0=0, select bank0
  2112  0483  1303               	bcf	3,6	;RP1=0, select bank0
  2113  0484  0854               	movf	?___fltol+3,w
  2114  0485  0453               	iorwf	?___fltol+2,w
  2115  0486  0452               	iorwf	?___fltol+1,w
  2116  0487  0451               	iorwf	?___fltol,w
  2117  0488  1D03               	skipz
  2118  0489  2D00               	goto	l3391
  2119  048A  1683               	bsf	3,5	;RP0=1, select bank1
  2120  048B  1303               	bcf	3,6	;RP1=0, select bank1
  2121  048C  0836               	movf	(sprintf@eexp+1)^(0+128),w
  2122  048D  3A80               	xorlw	128
  2123  048E  00FF               	movwf	127
  2124  048F  3080               	movlw	128
  2125  0490  027F               	subwf	127,w
  2126  0491  1D03               	skipz
  2127  0492  2C95               	goto	u5375
  2128  0493  3002               	movlw	2
  2129  0494  0235               	subwf	sprintf@eexp^(0+128),w
  2130  0495                     u5375:	
  2131  0495  1C03               	skipc
  2132  0496  2D00               	goto	l3391
  2133  0497                     l3377:	
  2134                           
  2135                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 1139:      if(tmpval
      +                          .integ < 4.294967296){
  2136  0497  1683               	bsf	3,5	;RP0=1, select bank1
  2137  0498  1303               	bcf	3,6	;RP1=0, select bank1
  2138  0499  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2139  049A  00F3               	movwf	___flge@ff1+3
  2140  049B  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2141  049C  00F2               	movwf	___flge@ff1+2
  2142  049D  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2143  049E  00F1               	movwf	___flge@ff1+1
  2144  049F  0837               	movf	sprintf@tmpval^(0+128),w
  2145  04A0  00F0               	movwf	___flge@ff1
  2146  04A1  3040               	movlw	64
  2147  04A2  00F7               	movwf	___flge@ff2+3
  2148  04A3  3089               	movlw	137
  2149  04A4  00F6               	movwf	___flge@ff2+2
  2150  04A5  3070               	movlw	112
  2151  04A6  00F5               	movwf	___flge@ff2+1
  2152  04A7  305F               	movlw	95
  2153  04A8  00F4               	movwf	___flge@ff2
  2154  04A9  160A  118A  2407  120A  118A  	fcall	___flge
  2155  04AE  1803               	btfsc	3,0
  2156  04AF  2CB2               	goto	l3381
  2157                           
  2158                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 1140:       eexp -= 
      +                          (sizeof dpowers/sizeof dpowers[0])-1;
  2159  04B0  30F7               	movlw	247
  2160  04B1  2CB3               	goto	L2
  2161  04B2                     l3381:	
  2162                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 1141:      }else{
  2163                           
  2164                           
  2165                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 1142:       eexp -= 
      +                          (sizeof dpowers/sizeof dpowers[0])-2;
  2166  04B2  30F8               	movlw	248
  2167  04B3                     L2:	
  2168  04B3  1683               	bsf	3,5	;RP0=1, select bank1
  2169  04B4  1303               	bcf	3,6	;RP1=0, select bank1
  2170  04B5  07B5               	addwf	sprintf@eexp^(0+128),f
  2171  04B6  1803               	skipnc
  2172  04B7  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2173  04B8  30FF               	movlw	255
  2174  04B9  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2175                           
  2176                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 1145:      val = ((s
      +                          izeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  2177  04BA  0835               	movf	sprintf@eexp^(0+128),w
  2178  04BB  120A  158A  24B7  120A  118A  	fcall	_scale
  2179  04C0  1283               	bcf	3,5	;RP0=0, select bank0
  2180  04C1  1303               	bcf	3,6	;RP1=0, select bank0
  2181  04C2  0841               	movf	?_scale+3,w
  2182  04C3  1683               	bsf	3,5	;RP0=1, select bank1
  2183  04C4  1303               	bcf	3,6	;RP1=0, select bank1
  2184  04C5  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2185  04C6  1283               	bcf	3,5	;RP0=0, select bank0
  2186  04C7  1303               	bcf	3,6	;RP1=0, select bank0
  2187  04C8  0840               	movf	?_scale+2,w
  2188  04C9  1683               	bsf	3,5	;RP0=1, select bank1
  2189  04CA  1303               	bcf	3,6	;RP1=0, select bank1
  2190  04CB  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2191  04CC  1283               	bcf	3,5	;RP0=0, select bank0
  2192  04CD  1303               	bcf	3,6	;RP1=0, select bank0
  2193  04CE  083F               	movf	?_scale+1,w
  2194  04CF  1683               	bsf	3,5	;RP0=1, select bank1
  2195  04D0  1303               	bcf	3,6	;RP1=0, select bank1
  2196  04D1  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2197  04D2  1283               	bcf	3,5	;RP0=0, select bank0
  2198  04D3  1303               	bcf	3,6	;RP1=0, select bank0
  2199  04D4  083E               	movf	?_scale,w
  2200  04D5  1683               	bsf	3,5	;RP0=1, select bank1
  2201  04D6  1303               	bcf	3,6	;RP1=0, select bank1
  2202  04D7  00B7               	movwf	sprintf@tmpval^(0+128)
  2203  04D8  0841               	movf	(sprintf@fval+3)^(0+128),w
  2204  04D9  00F3               	movwf	__div_to_l_@f1+3
  2205  04DA  0840               	movf	(sprintf@fval+2)^(0+128),w
  2206  04DB  00F2               	movwf	__div_to_l_@f1+2
  2207  04DC  083F               	movf	(sprintf@fval+1)^(0+128),w
  2208  04DD  00F1               	movwf	__div_to_l_@f1+1
  2209  04DE  083E               	movf	sprintf@fval^(0+128),w
  2210  04DF  00F0               	movwf	__div_to_l_@f1
  2211  04E0  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2212  04E1  00F7               	movwf	__div_to_l_@f2+3
  2213  04E2  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2214  04E3  00F6               	movwf	__div_to_l_@f2+2
  2215  04E4  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2216  04E5  00F5               	movwf	__div_to_l_@f2+1
  2217  04E6  0837               	movf	sprintf@tmpval^(0+128),w
  2218  04E7  00F4               	movwf	__div_to_l_@f2
  2219  04E8  120A  158A  20F8  120A  118A  	fcall	__div_to_l_
  2220  04ED  0873               	movf	?__div_to_l_+3,w
  2221  04EE  1683               	bsf	3,5	;RP0=1, select bank1
  2222  04EF  1303               	bcf	3,6	;RP1=0, select bank1
  2223  04F0  00B4               	movwf	(sprintf@val+3)^(0+128)
  2224  04F1  0872               	movf	?__div_to_l_+2,w
  2225  04F2  00B3               	movwf	(sprintf@val+2)^(0+128)
  2226  04F3  0871               	movf	?__div_to_l_+1,w
  2227  04F4  00B2               	movwf	(sprintf@val+1)^(0+128)
  2228  04F5  0870               	movf	?__div_to_l_,w
  2229  04F6  00B1               	movwf	sprintf@val^(0+128)
  2230                           
  2231                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 1148:      fval = 0.
      +                          0;
  2232  04F7  3000               	movlw	0
  2233  04F8  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2234  04F9  3000               	movlw	0
  2235  04FA  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2236  04FB  3000               	movlw	0
  2237  04FC  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2238  04FD  3000               	movlw	0
  2239  04FE  00BE               	movwf	sprintf@fval^(0+128)
  2240                           
  2241                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 1149:     } else {
  2242  04FF  2D84               	goto	l3397
  2243  0500                     l3391:	
  2244                           
  2245                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 1150:      val = (un
      +                          signed long)fval;
  2246  0500  1683               	bsf	3,5	;RP0=1, select bank1
  2247  0501  1303               	bcf	3,6	;RP1=0, select bank1
  2248  0502  0841               	movf	(sprintf@fval+3)^(0+128),w
  2249  0503  1283               	bcf	3,5	;RP0=0, select bank0
  2250  0504  1303               	bcf	3,6	;RP1=0, select bank0
  2251  0505  00D4               	movwf	___fltol@f1+3
  2252  0506  1683               	bsf	3,5	;RP0=1, select bank1
  2253  0507  1303               	bcf	3,6	;RP1=0, select bank1
  2254  0508  0840               	movf	(sprintf@fval+2)^(0+128),w
  2255  0509  1283               	bcf	3,5	;RP0=0, select bank0
  2256  050A  1303               	bcf	3,6	;RP1=0, select bank0
  2257  050B  00D3               	movwf	___fltol@f1+2
  2258  050C  1683               	bsf	3,5	;RP0=1, select bank1
  2259  050D  1303               	bcf	3,6	;RP1=0, select bank1
  2260  050E  083F               	movf	(sprintf@fval+1)^(0+128),w
  2261  050F  1283               	bcf	3,5	;RP0=0, select bank0
  2262  0510  1303               	bcf	3,6	;RP1=0, select bank0
  2263  0511  00D2               	movwf	___fltol@f1+1
  2264  0512  1683               	bsf	3,5	;RP0=1, select bank1
  2265  0513  1303               	bcf	3,6	;RP1=0, select bank1
  2266  0514  083E               	movf	sprintf@fval^(0+128),w
  2267  0515  1283               	bcf	3,5	;RP0=0, select bank0
  2268  0516  1303               	bcf	3,6	;RP1=0, select bank0
  2269  0517  00D1               	movwf	___fltol@f1
  2270  0518  160A  118A  239A  120A  118A  	fcall	___fltol
  2271  051D  1283               	bcf	3,5	;RP0=0, select bank0
  2272  051E  1303               	bcf	3,6	;RP1=0, select bank0
  2273  051F  0854               	movf	?___fltol+3,w
  2274  0520  1683               	bsf	3,5	;RP0=1, select bank1
  2275  0521  1303               	bcf	3,6	;RP1=0, select bank1
  2276  0522  00B4               	movwf	(sprintf@val+3)^(0+128)
  2277  0523  1283               	bcf	3,5	;RP0=0, select bank0
  2278  0524  1303               	bcf	3,6	;RP1=0, select bank0
  2279  0525  0853               	movf	?___fltol+2,w
  2280  0526  1683               	bsf	3,5	;RP0=1, select bank1
  2281  0527  1303               	bcf	3,6	;RP1=0, select bank1
  2282  0528  00B3               	movwf	(sprintf@val+2)^(0+128)
  2283  0529  1283               	bcf	3,5	;RP0=0, select bank0
  2284  052A  1303               	bcf	3,6	;RP1=0, select bank0
  2285  052B  0852               	movf	?___fltol+1,w
  2286  052C  1683               	bsf	3,5	;RP0=1, select bank1
  2287  052D  1303               	bcf	3,6	;RP1=0, select bank1
  2288  052E  00B2               	movwf	(sprintf@val+1)^(0+128)
  2289  052F  1283               	bcf	3,5	;RP0=0, select bank0
  2290  0530  1303               	bcf	3,6	;RP1=0, select bank0
  2291  0531  0851               	movf	?___fltol,w
  2292  0532  1683               	bsf	3,5	;RP0=1, select bank1
  2293  0533  1303               	bcf	3,6	;RP1=0, select bank1
  2294  0534  00B1               	movwf	sprintf@val^(0+128)
  2295                           
  2296                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 1151:      fval -= (
      +                          double)val;
  2297  0535  0834               	movf	(sprintf@val+3)^(0+128),w
  2298  0536  00F3               	movwf	___xxtofl@val+3
  2299  0537  0833               	movf	(sprintf@val+2)^(0+128),w
  2300  0538  00F2               	movwf	___xxtofl@val+2
  2301  0539  0832               	movf	(sprintf@val+1)^(0+128),w
  2302  053A  00F1               	movwf	___xxtofl@val+1
  2303  053B  0831               	movf	sprintf@val^(0+128),w
  2304  053C  00F0               	movwf	___xxtofl@val
  2305  053D  3000               	movlw	0
  2306  053E  160A  118A  252E  120A  118A  	fcall	___xxtofl
  2307  0543  0873               	movf	?___xxtofl+3,w
  2308  0544  1283               	bcf	3,5	;RP0=0, select bank0
  2309  0545  1303               	bcf	3,6	;RP1=0, select bank0
  2310  0546  00E9               	movwf	___flsub@a+3
  2311  0547  0872               	movf	?___xxtofl+2,w
  2312  0548  00E8               	movwf	___flsub@a+2
  2313  0549  0871               	movf	?___xxtofl+1,w
  2314  054A  00E7               	movwf	___flsub@a+1
  2315  054B  0870               	movf	?___xxtofl,w
  2316  054C  00E6               	movwf	___flsub@a
  2317  054D  1683               	bsf	3,5	;RP0=1, select bank1
  2318  054E  1303               	bcf	3,6	;RP1=0, select bank1
  2319  054F  0841               	movf	(sprintf@fval+3)^(0+128),w
  2320  0550  1283               	bcf	3,5	;RP0=0, select bank0
  2321  0551  1303               	bcf	3,6	;RP1=0, select bank0
  2322  0552  00ED               	movwf	___flsub@b+3
  2323  0553  1683               	bsf	3,5	;RP0=1, select bank1
  2324  0554  1303               	bcf	3,6	;RP1=0, select bank1
  2325  0555  0840               	movf	(sprintf@fval+2)^(0+128),w
  2326  0556  1283               	bcf	3,5	;RP0=0, select bank0
  2327  0557  1303               	bcf	3,6	;RP1=0, select bank0
  2328  0558  00EC               	movwf	___flsub@b+2
  2329  0559  1683               	bsf	3,5	;RP0=1, select bank1
  2330  055A  1303               	bcf	3,6	;RP1=0, select bank1
  2331  055B  083F               	movf	(sprintf@fval+1)^(0+128),w
  2332  055C  1283               	bcf	3,5	;RP0=0, select bank0
  2333  055D  1303               	bcf	3,6	;RP1=0, select bank0
  2334  055E  00EB               	movwf	___flsub@b+1
  2335  055F  1683               	bsf	3,5	;RP0=1, select bank1
  2336  0560  1303               	bcf	3,6	;RP1=0, select bank1
  2337  0561  083E               	movf	sprintf@fval^(0+128),w
  2338  0562  1283               	bcf	3,5	;RP0=0, select bank0
  2339  0563  1303               	bcf	3,6	;RP1=0, select bank0
  2340  0564  00EA               	movwf	___flsub@b
  2341  0565  160A  158A  27B5  120A  118A  	fcall	___flsub
  2342  056A  1283               	bcf	3,5	;RP0=0, select bank0
  2343  056B  1303               	bcf	3,6	;RP1=0, select bank0
  2344  056C  0869               	movf	?___flsub+3,w
  2345  056D  1683               	bsf	3,5	;RP0=1, select bank1
  2346  056E  1303               	bcf	3,6	;RP1=0, select bank1
  2347  056F  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2348  0570  1283               	bcf	3,5	;RP0=0, select bank0
  2349  0571  1303               	bcf	3,6	;RP1=0, select bank0
  2350  0572  0868               	movf	?___flsub+2,w
  2351  0573  1683               	bsf	3,5	;RP0=1, select bank1
  2352  0574  1303               	bcf	3,6	;RP1=0, select bank1
  2353  0575  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2354  0576  1283               	bcf	3,5	;RP0=0, select bank0
  2355  0577  1303               	bcf	3,6	;RP1=0, select bank0
  2356  0578  0867               	movf	?___flsub+1,w
  2357  0579  1683               	bsf	3,5	;RP0=1, select bank1
  2358  057A  1303               	bcf	3,6	;RP1=0, select bank1
  2359  057B  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2360  057C  1283               	bcf	3,5	;RP0=0, select bank0
  2361  057D  1303               	bcf	3,6	;RP1=0, select bank0
  2362  057E  0866               	movf	?___flsub,w
  2363  057F  1683               	bsf	3,5	;RP0=1, select bank1
  2364  0580  1303               	bcf	3,6	;RP1=0, select bank1
  2365  0581  00BE               	movwf	sprintf@fval^(0+128)
  2366                           
  2367                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 1152:      eexp = 0;
  2368  0582  01B5               	clrf	sprintf@eexp^(0+128)
  2369  0583  01B6               	clrf	(sprintf@eexp+1)^(0+128)
  2370  0584                     l3397:	
  2371                           
  2372                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 1155:     for(c = 1 
      +                          ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2373  0584  01C2               	clrf	sprintf@c^(0+128)
  2374  0585  0AC2               	incf	sprintf@c^(0+128),f
  2375  0586                     l3403:	
  2376                           
  2377                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 1156:      if(val < 
      +                          dpowers[c])
  2378  0586  0842               	movf	sprintf@c^(0+128),w
  2379  0587  00A5               	movwf	??_sprintf^(0+128)
  2380  0588  3001               	movlw	1
  2381  0589                     u5395:	
  2382  0589  1003               	clrc
  2383  058A  0DA5               	rlf	??_sprintf^(0+128),f
  2384  058B  3EFF               	addlw	-1
  2385  058C  1D03               	skipz
  2386  058D  2D89               	goto	u5395
  2387  058E  1003               	clrc
  2388  058F  0D25               	rlf	??_sprintf^(0+128),w
  2389  0590  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2390  0591  0084               	movwf	4
  2391  0592  160A  118A  2000  120A  118A  	fcall	stringdir
  2392  0597  00A6               	movwf	(??_sprintf+1)^(0+128)
  2393  0598  160A  118A  2000  120A  118A  	fcall	stringdir
  2394  059D  00A7               	movwf	((??_sprintf+1)^(0+128)+1)
  2395  059E  160A  118A  2000  120A  118A  	fcall	stringdir
  2396  05A3  00A8               	movwf	((??_sprintf+1)^(0+128)+2)
  2397  05A4  160A  118A  2000  120A  118A  	fcall	stringdir
  2398  05A9  00A9               	movwf	((??_sprintf+1)^(0+128)+3)
  2399  05AA  0829               	movf	(??_sprintf+4)^(0+128),w
  2400  05AB  0234               	subwf	(sprintf@val+3)^(0+128),w
  2401  05AC  1D03               	skipz
  2402  05AD  2DB8               	goto	u5405
  2403  05AE  0828               	movf	(??_sprintf+3)^(0+128),w
  2404  05AF  0233               	subwf	(sprintf@val+2)^(0+128),w
  2405  05B0  1D03               	skipz
  2406  05B1  2DB8               	goto	u5405
  2407  05B2  0827               	movf	(??_sprintf+2)^(0+128),w
  2408  05B3  0232               	subwf	(sprintf@val+1)^(0+128),w
  2409  05B4  1D03               	skipz
  2410  05B5  2DB8               	goto	u5405
  2411  05B6  0826               	movf	(??_sprintf+1)^(0+128),w
  2412  05B7  0231               	subwf	sprintf@val^(0+128),w
  2413  05B8                     u5405:	
  2414  05B8  1C03               	btfss	3,0
  2415  05B9  2DC2               	goto	l3409
  2416  05BA  3001               	movlw	1
  2417  05BB  00A5               	movwf	??_sprintf^(0+128)
  2418  05BC  0825               	movf	??_sprintf^(0+128),w
  2419  05BD  07C2               	addwf	sprintf@c^(0+128),f
  2420  05BE  300A               	movlw	10
  2421  05BF  0642               	xorwf	sprintf@c^(0+128),w
  2422  05C0  1D03               	btfss	3,2
  2423  05C1  2D86               	goto	l3403
  2424  05C2                     l3409:	
  2425                           
  2426                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 1194:     {;D:\PROGR
      +                          AM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 1207:     if(flag & 0x03)
  2427  05C2  3003               	movlw	3
  2428  05C3  052F               	andwf	sprintf@flag^(0+128),w
  2429  05C4  00A5               	movwf	??_sprintf^(0+128)
  2430  05C5  3000               	movlw	0
  2431  05C6  0530               	andwf	(sprintf@flag+1)^(0+128),w
  2432  05C7  00A6               	movwf	(??_sprintf+1)^(0+128)
  2433  05C8  0825               	movf	??_sprintf^(0+128),w
  2434  05C9  0426               	iorwf	(??_sprintf^(0+128)+1),w
  2435  05CA  1903               	btfsc	3,2
  2436  05CB  2DD7               	goto	l373
  2437                           
  2438                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 1209:      ((*sp++ =
      +                           ('-')));
  2439  05CC  302D               	movlw	45
  2440  05CD                     L3:	
  2441  05CD  00A5               	movwf	??_sprintf^(0+128)
  2442  05CE  083B               	movf	sprintf@sp^(0+128),w
  2443  05CF  0084               	movwf	4
  2444  05D0  0825               	movf	??_sprintf^(0+128),w
  2445  05D1  1383               	bcf	3,7	;select IRP bank0
  2446  05D2  0080               	movwf	0
  2447  05D3  3001               	movlw	1
  2448  05D4  00A5               	movwf	??_sprintf^(0+128)
  2449  05D5  0825               	movf	??_sprintf^(0+128),w
  2450  05D6  07BB               	addwf	sprintf@sp^(0+128),f
  2451  05D7                     l373:	
  2452                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 1223:     };D:\PROGR
      +                          AM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 1225:    }
  2453                           
  2454                           
  2455                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 1215:    while(c--) 
      +                          {
  2456  05D7  3001               	movlw	1
  2457  05D8  02C2               	subwf	sprintf@c^(0+128),f
  2458  05D9  0A42               	incf	sprintf@c^(0+128),w
  2459  05DA  1903               	btfsc	3,2
  2460  05DB  2E4C               	goto	l3427
  2461                           
  2462                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 1219:     {;D:\PROGR
      +                          AM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 1220:      tmpval.vd = val/dp
      +                          owers[c];
  2463  05DC  0842               	movf	sprintf@c^(0+128),w
  2464  05DD  00A5               	movwf	??_sprintf^(0+128)
  2465  05DE  3001               	movlw	1
  2466  05DF                     u5435:	
  2467  05DF  1003               	clrc
  2468  05E0  0DA5               	rlf	??_sprintf^(0+128),f
  2469  05E1  3EFF               	addlw	-1
  2470  05E2  1D03               	skipz
  2471  05E3  2DDF               	goto	u5435
  2472  05E4  1003               	clrc
  2473  05E5  0D25               	rlf	??_sprintf^(0+128),w
  2474  05E6  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2475  05E7  0084               	movwf	4
  2476  05E8  160A  118A  2000  120A  118A  	fcall	stringdir
  2477  05ED  00F0               	movwf	___lldiv@divisor
  2478  05EE  160A  118A  2000  120A  118A  	fcall	stringdir
  2479  05F3  00F1               	movwf	___lldiv@divisor+1
  2480  05F4  160A  118A  2000  120A  118A  	fcall	stringdir
  2481  05F9  00F2               	movwf	___lldiv@divisor+2
  2482  05FA  160A  118A  2000  120A  118A  	fcall	stringdir
  2483  05FF  00F3               	movwf	___lldiv@divisor+3
  2484  0600  0834               	movf	(sprintf@val+3)^(0+128),w
  2485  0601  00F7               	movwf	___lldiv@dividend+3
  2486  0602  0833               	movf	(sprintf@val+2)^(0+128),w
  2487  0603  00F6               	movwf	___lldiv@dividend+2
  2488  0604  0832               	movf	(sprintf@val+1)^(0+128),w
  2489  0605  00F5               	movwf	___lldiv@dividend+1
  2490  0606  0831               	movf	sprintf@val^(0+128),w
  2491  0607  00F4               	movwf	___lldiv@dividend
  2492  0608  160A  118A  233C  120A  118A  	fcall	___lldiv
  2493  060D  0873               	movf	?___lldiv+3,w
  2494  060E  1683               	bsf	3,5	;RP0=1, select bank1
  2495  060F  1303               	bcf	3,6	;RP1=0, select bank1
  2496  0610  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2497  0611  0872               	movf	?___lldiv+2,w
  2498  0612  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2499  0613  0871               	movf	?___lldiv+1,w
  2500  0614  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2501  0615  0870               	movf	?___lldiv,w
  2502  0616  00B7               	movwf	sprintf@tmpval^(0+128)
  2503                           
  2504                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 1221:      tmpval.vd
      +                           %= 10;
  2505  0617  3000               	movlw	0
  2506  0618  00F3               	movwf	___llmod@divisor+3
  2507  0619  3000               	movlw	0
  2508  061A  00F2               	movwf	___llmod@divisor+2
  2509  061B  3000               	movlw	0
  2510  061C  00F1               	movwf	___llmod@divisor+1
  2511  061D  300A               	movlw	10
  2512  061E  00F0               	movwf	___llmod@divisor
  2513  061F  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2514  0620  00F7               	movwf	___llmod@dividend+3
  2515  0621  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2516  0622  00F6               	movwf	___llmod@dividend+2
  2517  0623  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2518  0624  00F5               	movwf	___llmod@dividend+1
  2519  0625  0837               	movf	sprintf@tmpval^(0+128),w
  2520  0626  00F4               	movwf	___llmod@dividend
  2521  0627  120A  158A  2003  120A  118A  	fcall	___llmod
  2522  062C  0873               	movf	?___llmod+3,w
  2523  062D  1683               	bsf	3,5	;RP0=1, select bank1
  2524  062E  1303               	bcf	3,6	;RP1=0, select bank1
  2525  062F  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2526  0630  0872               	movf	?___llmod+2,w
  2527  0631  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2528  0632  0871               	movf	?___llmod+1,w
  2529  0633  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2530  0634  0870               	movf	?___llmod,w
  2531  0635  00B7               	movwf	sprintf@tmpval^(0+128)
  2532                           
  2533                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 1222:      ((*sp++ =
      +                           ('0' + tmpval.vd)));
  2534  0636  0837               	movf	sprintf@tmpval^(0+128),w
  2535  0637  3E30               	addlw	48
  2536  0638  2DCD               	goto	L3
  2537  0639                     l3421:	
  2538                           
  2539                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 1227:     ((*sp++ = 
      +                          ('0')));
  2540  0639  3030               	movlw	48
  2541  063A  1683               	bsf	3,5	;RP0=1, select bank1
  2542  063B  1303               	bcf	3,6	;RP1=0, select bank1
  2543  063C  00A5               	movwf	??_sprintf^(0+128)
  2544  063D  083B               	movf	sprintf@sp^(0+128),w
  2545  063E  0084               	movwf	4
  2546  063F  0825               	movf	??_sprintf^(0+128),w
  2547  0640  1383               	bcf	3,7	;select IRP bank0
  2548  0641  0080               	movwf	0
  2549  0642  3001               	movlw	1
  2550  0643  00A5               	movwf	??_sprintf^(0+128)
  2551  0644  0825               	movf	??_sprintf^(0+128),w
  2552  0645  07BB               	addwf	sprintf@sp^(0+128),f
  2553                           
  2554                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 1228:     eexp--;
  2555  0646  30FF               	movlw	255
  2556  0647  07B5               	addwf	sprintf@eexp^(0+128),f
  2557  0648  1803               	skipnc
  2558  0649  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2559  064A  30FF               	movlw	255
  2560  064B  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2561  064C                     l3427:	
  2562                           
  2563                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 1226:    while(eexp 
      +                          > 0) {
  2564  064C  0836               	movf	(sprintf@eexp+1)^(0+128),w
  2565  064D  3A80               	xorlw	128
  2566  064E  00FF               	movwf	127
  2567  064F  3080               	movlw	128
  2568  0650  027F               	subwf	127,w
  2569  0651  1D03               	skipz
  2570  0652  2E55               	goto	u5455
  2571  0653  3001               	movlw	1
  2572  0654  0235               	subwf	sprintf@eexp^(0+128),w
  2573  0655                     u5455:	
  2574  0655  1803               	skipnc
  2575  0656  2E39               	goto	l3421
  2576                           
  2577                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 1230:    if(prec > (
      +                          int)((sizeof dpowers/sizeof dpowers[0])-2))
  2578  0657  1683               	bsf	3,5	;RP0=1, select bank1
  2579  0658  1303               	bcf	3,6	;RP1=0, select bank1
  2580  0659  083D               	movf	(sprintf@prec+1)^(0+128),w
  2581  065A  3A80               	xorlw	128
  2582  065B  00FF               	movwf	127
  2583  065C  3080               	movlw	128
  2584  065D  027F               	subwf	127,w
  2585  065E  1D03               	skipz
  2586  065F  2E62               	goto	u5465
  2587  0660  3009               	movlw	9
  2588  0661  023C               	subwf	sprintf@prec^(0+128),w
  2589  0662                     u5465:	
  2590  0662  1C03               	skipc
  2591  0663  2E68               	goto	l3433
  2592                           
  2593                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 1231:     c = (sizeo
      +                          f dpowers/sizeof dpowers[0])-2;
  2594  0664  3008               	movlw	8
  2595  0665  1683               	bsf	3,5	;RP0=1, select bank1
  2596  0666  1303               	bcf	3,6	;RP1=0, select bank1
  2597  0667  2E6B               	goto	L4
  2598  0668                     l3433:	
  2599                           
  2600                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 1233:     c = (char)
      +                          prec;
  2601  0668  1683               	bsf	3,5	;RP0=1, select bank1
  2602  0669  1303               	bcf	3,6	;RP1=0, select bank1
  2603  066A  083C               	movf	sprintf@prec^(0+128),w
  2604  066B                     L4:	
  2605  066B  00A5               	movwf	??_sprintf^(0+128)
  2606  066C  0825               	movf	??_sprintf^(0+128),w
  2607  066D  00C2               	movwf	sprintf@c^(0+128)
  2608                           
  2609                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 1234:    prec -= (in
      +                          t)c;
  2610  066E  0842               	movf	sprintf@c^(0+128),w
  2611  066F  00A5               	movwf	??_sprintf^(0+128)
  2612  0670  01A6               	clrf	(??_sprintf^(0+128)+1)
  2613  0671  0825               	movf	??_sprintf^(0+128),w
  2614  0672  02BC               	subwf	sprintf@prec^(0+128),f
  2615  0673  0826               	movf	(??_sprintf+1)^(0+128),w
  2616  0674  1C03               	skipc
  2617  0675  03BD               	decf	(sprintf@prec+1)^(0+128),f
  2618  0676  02BD               	subwf	(sprintf@prec+1)^(0+128),f
  2619                           
  2620                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 1238:    if(c)
  2621  0677  0842               	movf	sprintf@c^(0+128),w
  2622  0678  1903               	btfsc	3,2
  2623  0679  2E85               	goto	l3441
  2624                           
  2625                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 1240:     ((*sp++ = 
      +                          ('.')));
  2626  067A  302E               	movlw	46
  2627  067B  00A5               	movwf	??_sprintf^(0+128)
  2628  067C  083B               	movf	sprintf@sp^(0+128),w
  2629  067D  0084               	movwf	4
  2630  067E  0825               	movf	??_sprintf^(0+128),w
  2631  067F  1383               	bcf	3,7	;select IRP bank0
  2632  0680  0080               	movwf	0
  2633  0681  3001               	movlw	1
  2634  0682  00A5               	movwf	??_sprintf^(0+128)
  2635  0683  0825               	movf	??_sprintf^(0+128),w
  2636  0684  07BB               	addwf	sprintf@sp^(0+128),f
  2637  0685                     l3441:	
  2638                           
  2639                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 1246:    val = (unsi
      +                          gned long)(fval * scale((signed char)c));
  2640  0685  0842               	movf	sprintf@c^(0+128),w
  2641  0686  120A  158A  24B7  120A  118A  	fcall	_scale
  2642  068B  1283               	bcf	3,5	;RP0=0, select bank0
  2643  068C  1303               	bcf	3,6	;RP1=0, select bank0
  2644  068D  0841               	movf	?_scale+3,w
  2645  068E  1683               	bsf	3,5	;RP0=1, select bank1
  2646  068F  1303               	bcf	3,6	;RP1=0, select bank1
  2647  0690  00AD               	movwf	(_sprintf$1003+3)^(0+128)
  2648  0691  1283               	bcf	3,5	;RP0=0, select bank0
  2649  0692  1303               	bcf	3,6	;RP1=0, select bank0
  2650  0693  0840               	movf	?_scale+2,w
  2651  0694  1683               	bsf	3,5	;RP0=1, select bank1
  2652  0695  1303               	bcf	3,6	;RP1=0, select bank1
  2653  0696  00AC               	movwf	(_sprintf$1003+2)^(0+128)
  2654  0697  1283               	bcf	3,5	;RP0=0, select bank0
  2655  0698  1303               	bcf	3,6	;RP1=0, select bank0
  2656  0699  083F               	movf	?_scale+1,w
  2657  069A  1683               	bsf	3,5	;RP0=1, select bank1
  2658  069B  1303               	bcf	3,6	;RP1=0, select bank1
  2659  069C  00AB               	movwf	(_sprintf$1003+1)^(0+128)
  2660  069D  1283               	bcf	3,5	;RP0=0, select bank0
  2661  069E  1303               	bcf	3,6	;RP1=0, select bank0
  2662  069F  083E               	movf	?_scale,w
  2663  06A0  1683               	bsf	3,5	;RP0=1, select bank1
  2664  06A1  1303               	bcf	3,6	;RP1=0, select bank1
  2665  06A2  00AA               	movwf	_sprintf$1003^(0+128)
  2666                           
  2667                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 1246:    val = (unsi
      +                          gned long)(fval * scale((signed char)c));
  2668  06A3  082D               	movf	(_sprintf$1003+3)^(0+128),w
  2669  06A4  1283               	bcf	3,5	;RP0=0, select bank0
  2670  06A5  1303               	bcf	3,6	;RP1=0, select bank0
  2671  06A6  00AB               	movwf	___flmul@a+3
  2672  06A7  1683               	bsf	3,5	;RP0=1, select bank1
  2673  06A8  1303               	bcf	3,6	;RP1=0, select bank1
  2674  06A9  082C               	movf	(_sprintf$1003+2)^(0+128),w
  2675  06AA  1283               	bcf	3,5	;RP0=0, select bank0
  2676  06AB  1303               	bcf	3,6	;RP1=0, select bank0
  2677  06AC  00AA               	movwf	___flmul@a+2
  2678  06AD  1683               	bsf	3,5	;RP0=1, select bank1
  2679  06AE  1303               	bcf	3,6	;RP1=0, select bank1
  2680  06AF  082B               	movf	(_sprintf$1003+1)^(0+128),w
  2681  06B0  1283               	bcf	3,5	;RP0=0, select bank0
  2682  06B1  1303               	bcf	3,6	;RP1=0, select bank0
  2683  06B2  00A9               	movwf	___flmul@a+1
  2684  06B3  1683               	bsf	3,5	;RP0=1, select bank1
  2685  06B4  1303               	bcf	3,6	;RP1=0, select bank1
  2686  06B5  082A               	movf	_sprintf$1003^(0+128),w
  2687  06B6  1283               	bcf	3,5	;RP0=0, select bank0
  2688  06B7  1303               	bcf	3,6	;RP1=0, select bank0
  2689  06B8  00A8               	movwf	___flmul@a
  2690  06B9  1683               	bsf	3,5	;RP0=1, select bank1
  2691  06BA  1303               	bcf	3,6	;RP1=0, select bank1
  2692  06BB  0841               	movf	(sprintf@fval+3)^(0+128),w
  2693  06BC  1283               	bcf	3,5	;RP0=0, select bank0
  2694  06BD  1303               	bcf	3,6	;RP1=0, select bank0
  2695  06BE  00A7               	movwf	___flmul@b+3
  2696  06BF  1683               	bsf	3,5	;RP0=1, select bank1
  2697  06C0  1303               	bcf	3,6	;RP1=0, select bank1
  2698  06C1  0840               	movf	(sprintf@fval+2)^(0+128),w
  2699  06C2  1283               	bcf	3,5	;RP0=0, select bank0
  2700  06C3  1303               	bcf	3,6	;RP1=0, select bank0
  2701  06C4  00A6               	movwf	___flmul@b+2
  2702  06C5  1683               	bsf	3,5	;RP0=1, select bank1
  2703  06C6  1303               	bcf	3,6	;RP1=0, select bank1
  2704  06C7  083F               	movf	(sprintf@fval+1)^(0+128),w
  2705  06C8  1283               	bcf	3,5	;RP0=0, select bank0
  2706  06C9  1303               	bcf	3,6	;RP1=0, select bank0
  2707  06CA  00A5               	movwf	___flmul@b+1
  2708  06CB  1683               	bsf	3,5	;RP0=1, select bank1
  2709  06CC  1303               	bcf	3,6	;RP1=0, select bank1
  2710  06CD  083E               	movf	sprintf@fval^(0+128),w
  2711  06CE  1283               	bcf	3,5	;RP0=0, select bank0
  2712  06CF  1303               	bcf	3,6	;RP1=0, select bank0
  2713  06D0  00A4               	movwf	___flmul@b
  2714  06D1  120A  158A  21A2  120A  118A  	fcall	___flmul
  2715  06D6  1283               	bcf	3,5	;RP0=0, select bank0
  2716  06D7  1303               	bcf	3,6	;RP1=0, select bank0
  2717  06D8  0827               	movf	?___flmul+3,w
  2718  06D9  00D4               	movwf	___fltol@f1+3
  2719  06DA  0826               	movf	?___flmul+2,w
  2720  06DB  00D3               	movwf	___fltol@f1+2
  2721  06DC  0825               	movf	?___flmul+1,w
  2722  06DD  00D2               	movwf	___fltol@f1+1
  2723  06DE  0824               	movf	?___flmul,w
  2724  06DF  00D1               	movwf	___fltol@f1
  2725  06E0  160A  118A  239A  120A  118A  	fcall	___fltol
  2726  06E5  1283               	bcf	3,5	;RP0=0, select bank0
  2727  06E6  1303               	bcf	3,6	;RP1=0, select bank0
  2728  06E7  0854               	movf	?___fltol+3,w
  2729  06E8  1683               	bsf	3,5	;RP0=1, select bank1
  2730  06E9  1303               	bcf	3,6	;RP1=0, select bank1
  2731  06EA  00B4               	movwf	(sprintf@val+3)^(0+128)
  2732  06EB  1283               	bcf	3,5	;RP0=0, select bank0
  2733  06EC  1303               	bcf	3,6	;RP1=0, select bank0
  2734  06ED  0853               	movf	?___fltol+2,w
  2735  06EE  1683               	bsf	3,5	;RP0=1, select bank1
  2736  06EF  1303               	bcf	3,6	;RP1=0, select bank1
  2737  06F0  00B3               	movwf	(sprintf@val+2)^(0+128)
  2738  06F1  1283               	bcf	3,5	;RP0=0, select bank0
  2739  06F2  1303               	bcf	3,6	;RP1=0, select bank0
  2740  06F3  0852               	movf	?___fltol+1,w
  2741  06F4  1683               	bsf	3,5	;RP0=1, select bank1
  2742  06F5  1303               	bcf	3,6	;RP1=0, select bank1
  2743  06F6  00B2               	movwf	(sprintf@val+1)^(0+128)
  2744  06F7  1283               	bcf	3,5	;RP0=0, select bank0
  2745  06F8  1303               	bcf	3,6	;RP1=0, select bank0
  2746  06F9  0851               	movf	?___fltol,w
  2747  06FA  1683               	bsf	3,5	;RP0=1, select bank1
  2748  06FB  1303               	bcf	3,6	;RP1=0, select bank1
  2749  06FC                     L5:	
  2750  06FC  00B1               	movwf	sprintf@val^(0+128)
  2751                           
  2752                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 1247:    while(c--) 
      +                          {
  2753  06FD  3001               	movlw	1
  2754  06FE  02C2               	subwf	sprintf@c^(0+128),f
  2755  06FF  0A42               	incf	sprintf@c^(0+128),w
  2756  0700  1903               	btfsc	3,2
  2757  0701  2FB4               	goto	l3461
  2758                           
  2759                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 1248:     tmpval.vd 
      +                          = val/dpowers[c];
  2760                           
  2761                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 1247:    while(c--) 
      +                          {
  2762  0702  0842               	movf	sprintf@c^(0+128),w
  2763  0703  00A5               	movwf	??_sprintf^(0+128)
  2764  0704  3001               	movlw	1
  2765  0705                     u5485:	
  2766  0705  1003               	clrc
  2767  0706  0DA5               	rlf	??_sprintf^(0+128),f
  2768  0707  3EFF               	addlw	-1
  2769  0708  1D03               	skipz
  2770  0709  2F05               	goto	u5485
  2771  070A  1003               	clrc
  2772  070B  0D25               	rlf	??_sprintf^(0+128),w
  2773  070C  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2774  070D  0084               	movwf	4
  2775  070E  160A  118A  2000  120A  118A  	fcall	stringdir
  2776  0713  00F0               	movwf	___lldiv@divisor
  2777  0714  160A  118A  2000  120A  118A  	fcall	stringdir
  2778  0719  00F1               	movwf	___lldiv@divisor+1
  2779  071A  160A  118A  2000  120A  118A  	fcall	stringdir
  2780  071F  00F2               	movwf	___lldiv@divisor+2
  2781  0720  160A  118A  2000  120A  118A  	fcall	stringdir
  2782  0725  00F3               	movwf	___lldiv@divisor+3
  2783  0726  0834               	movf	(sprintf@val+3)^(0+128),w
  2784  0727  00F7               	movwf	___lldiv@dividend+3
  2785  0728  0833               	movf	(sprintf@val+2)^(0+128),w
  2786  0729  00F6               	movwf	___lldiv@dividend+2
  2787  072A  0832               	movf	(sprintf@val+1)^(0+128),w
  2788  072B  00F5               	movwf	___lldiv@dividend+1
  2789  072C  0831               	movf	sprintf@val^(0+128),w
  2790  072D  00F4               	movwf	___lldiv@dividend
  2791  072E  160A  118A  233C  120A  118A  	fcall	___lldiv
  2792  0733  0873               	movf	?___lldiv+3,w
  2793  0734  1683               	bsf	3,5	;RP0=1, select bank1
  2794  0735  1303               	bcf	3,6	;RP1=0, select bank1
  2795  0736  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2796  0737  0872               	movf	?___lldiv+2,w
  2797  0738  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2798  0739  0871               	movf	?___lldiv+1,w
  2799  073A  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2800  073B  0870               	movf	?___lldiv,w
  2801  073C  00B7               	movwf	sprintf@tmpval^(0+128)
  2802                           
  2803                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 1249:     tmpval.vd 
      +                          %= 10;
  2804  073D  3000               	movlw	0
  2805  073E  00F3               	movwf	___llmod@divisor+3
  2806  073F  3000               	movlw	0
  2807  0740  00F2               	movwf	___llmod@divisor+2
  2808  0741  3000               	movlw	0
  2809  0742  00F1               	movwf	___llmod@divisor+1
  2810  0743  300A               	movlw	10
  2811  0744  00F0               	movwf	___llmod@divisor
  2812  0745  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2813  0746  00F7               	movwf	___llmod@dividend+3
  2814  0747  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2815  0748  00F6               	movwf	___llmod@dividend+2
  2816  0749  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2817  074A  00F5               	movwf	___llmod@dividend+1
  2818  074B  0837               	movf	sprintf@tmpval^(0+128),w
  2819  074C  00F4               	movwf	___llmod@dividend
  2820  074D  120A  158A  2003  120A  118A  	fcall	___llmod
  2821  0752  0873               	movf	?___llmod+3,w
  2822  0753  1683               	bsf	3,5	;RP0=1, select bank1
  2823  0754  1303               	bcf	3,6	;RP1=0, select bank1
  2824  0755  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2825  0756  0872               	movf	?___llmod+2,w
  2826  0757  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2827  0758  0871               	movf	?___llmod+1,w
  2828  0759  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2829  075A  0870               	movf	?___llmod,w
  2830  075B  00B7               	movwf	sprintf@tmpval^(0+128)
  2831                           
  2832                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 1250:     ((*sp++ = 
      +                          ('0' + tmpval.vd)));
  2833  075C  0837               	movf	sprintf@tmpval^(0+128),w
  2834  075D  3E30               	addlw	48
  2835  075E  00A5               	movwf	??_sprintf^(0+128)
  2836  075F  083B               	movf	sprintf@sp^(0+128),w
  2837  0760  0084               	movwf	4
  2838  0761  0825               	movf	??_sprintf^(0+128),w
  2839  0762  1383               	bcf	3,7	;select IRP bank0
  2840  0763  0080               	movwf	0
  2841  0764  3001               	movlw	1
  2842  0765  00A5               	movwf	??_sprintf^(0+128)
  2843  0766  0825               	movf	??_sprintf^(0+128),w
  2844  0767  07BB               	addwf	sprintf@sp^(0+128),f
  2845                           
  2846                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 1251:     val %= dpo
      +                          wers[c];
  2847  0768  0842               	movf	sprintf@c^(0+128),w
  2848  0769  00A5               	movwf	??_sprintf^(0+128)
  2849  076A  3001               	movlw	1
  2850  076B                     u5495:	
  2851  076B  1003               	clrc
  2852  076C  0DA5               	rlf	??_sprintf^(0+128),f
  2853  076D  3EFF               	addlw	-1
  2854  076E  1D03               	skipz
  2855  076F  2F6B               	goto	u5495
  2856  0770  1003               	clrc
  2857  0771  0D25               	rlf	??_sprintf^(0+128),w
  2858  0772  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2859  0773  0084               	movwf	4
  2860  0774  160A  118A  2000  120A  118A  	fcall	stringdir
  2861  0779  00F0               	movwf	___llmod@divisor
  2862  077A  160A  118A  2000  120A  118A  	fcall	stringdir
  2863  077F  00F1               	movwf	___llmod@divisor+1
  2864  0780  160A  118A  2000  120A  118A  	fcall	stringdir
  2865  0785  00F2               	movwf	___llmod@divisor+2
  2866  0786  160A  118A  2000  120A  118A  	fcall	stringdir
  2867  078B  00F3               	movwf	___llmod@divisor+3
  2868  078C  0834               	movf	(sprintf@val+3)^(0+128),w
  2869  078D  00F7               	movwf	___llmod@dividend+3
  2870  078E  0833               	movf	(sprintf@val+2)^(0+128),w
  2871  078F  00F6               	movwf	___llmod@dividend+2
  2872  0790  0832               	movf	(sprintf@val+1)^(0+128),w
  2873  0791  00F5               	movwf	___llmod@dividend+1
  2874  0792  0831               	movf	sprintf@val^(0+128),w
  2875  0793  00F4               	movwf	___llmod@dividend
  2876  0794  120A  158A  2003  120A  118A  	fcall	___llmod
  2877  0799  0873               	movf	?___llmod+3,w
  2878  079A  1683               	bsf	3,5	;RP0=1, select bank1
  2879  079B  1303               	bcf	3,6	;RP1=0, select bank1
  2880  079C  00B4               	movwf	(sprintf@val+3)^(0+128)
  2881  079D  0872               	movf	?___llmod+2,w
  2882  079E  00B3               	movwf	(sprintf@val+2)^(0+128)
  2883  079F  0871               	movf	?___llmod+1,w
  2884  07A0  00B2               	movwf	(sprintf@val+1)^(0+128)
  2885  07A1  0870               	movf	?___llmod,w
  2886  07A2  2EFC               	goto	L5
  2887  07A3                     l3455:	
  2888                           
  2889                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 1255:     ((*sp++ = 
      +                          ('0')));
  2890  07A3  3030               	movlw	48
  2891  07A4  00A5               	movwf	??_sprintf^(0+128)
  2892  07A5  083B               	movf	sprintf@sp^(0+128),w
  2893  07A6  0084               	movwf	4
  2894  07A7  0825               	movf	??_sprintf^(0+128),w
  2895  07A8  1383               	bcf	3,7	;select IRP bank0
  2896  07A9  0080               	movwf	0
  2897  07AA  3001               	movlw	1
  2898  07AB  00A5               	movwf	??_sprintf^(0+128)
  2899  07AC  0825               	movf	??_sprintf^(0+128),w
  2900  07AD  07BB               	addwf	sprintf@sp^(0+128),f
  2901                           
  2902                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 1256:     prec--;
  2903  07AE  30FF               	movlw	255
  2904  07AF  07BC               	addwf	sprintf@prec^(0+128),f
  2905  07B0  1803               	skipnc
  2906  07B1  0ABD               	incf	(sprintf@prec+1)^(0+128),f
  2907  07B2  30FF               	movlw	255
  2908  07B3  07BD               	addwf	(sprintf@prec+1)^(0+128),f
  2909  07B4                     l3461:	
  2910                           
  2911                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 1254:    while(prec)
      +                           {
  2912  07B4  083C               	movf	sprintf@prec^(0+128),w
  2913  07B5  043D               	iorwf	(sprintf@prec+1)^(0+128),w
  2914  07B6  1903               	btfsc	3,2
  2915  07B7  2A0C               	goto	l3481
  2916  07B8  2FA3               	goto	l3455
  2917  07B9                     l3463:	
  2918                           
  2919                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 1309:   if(prec == 0
      +                           && val == 0)
  2920  07B9  083C               	movf	sprintf@prec^(0+128),w
  2921  07BA  043D               	iorwf	(sprintf@prec+1)^(0+128),w
  2922  07BB  1D03               	btfss	3,2
  2923  07BC  2FC9               	goto	l388
  2924  07BD  0834               	movf	(sprintf@val+3)^(0+128),w
  2925  07BE  0433               	iorwf	(sprintf@val+2)^(0+128),w
  2926  07BF  0432               	iorwf	(sprintf@val+1)^(0+128),w
  2927  07C0  0431               	iorwf	sprintf@val^(0+128),w
  2928  07C1  1D03               	skipz
  2929  07C2  2FC9               	goto	l388
  2930                           
  2931                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 1310:    prec++;
  2932  07C3  3001               	movlw	1
  2933  07C4  07BC               	addwf	sprintf@prec^(0+128),f
  2934  07C5  1803               	skipnc
  2935  07C6  0ABD               	incf	(sprintf@prec+1)^(0+128),f
  2936  07C7  3000               	movlw	0
  2937  07C8  07BD               	addwf	(sprintf@prec+1)^(0+128),f
  2938  07C9                     l388:	
  2939                           
  2940                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 1358:   if(c < prec)
  2941  07C9  083D               	movf	(sprintf@prec+1)^(0+128),w
  2942  07CA  3A80               	xorlw	128
  2943  07CB  3C80               	sublw	128
  2944  07CC  1D03               	skipz
  2945  07CD  2FD0               	goto	u5545
  2946  07CE  083C               	movf	sprintf@prec^(0+128),w
  2947  07CF  0242               	subwf	sprintf@c^(0+128),w
  2948  07D0                     u5545:	
  2949  07D0  1C03               	btfss	3,0
  2950  07D1  2FDF               	goto	l3475
  2951  07D2  1683               	bsf	3,5	;RP0=1, select bank1
  2952  07D3  1303               	bcf	3,6	;RP1=0, select bank1
  2953  07D4  083D               	movf	(sprintf@prec+1)^(0+128),w
  2954  07D5  3A80               	xorlw	128
  2955  07D6  00A5               	movwf	??_sprintf^(0+128)
  2956  07D7  3080               	movlw	128
  2957  07D8  0225               	subwf	??_sprintf^(0+128),w
  2958  07D9  1D03               	skipz
  2959  07DA  2FDD               	goto	u5555
  2960  07DB  0842               	movf	sprintf@c^(0+128),w
  2961  07DC  023C               	subwf	sprintf@prec^(0+128),w
  2962  07DD                     u5555:	
  2963  07DD  1C03               	btfss	3,0
  2964  07DE  2FDF               	goto	l3475
  2965  07DF                     l3475:	
  2966                           
  2967                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 1441:   {;D:\PROGRAM
      +                          \MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 1457:    if(flag & 0x03)
  2968  07DF  3003               	movlw	3
  2969  07E0  1683               	bsf	3,5	;RP0=1, select bank1
  2970  07E1  1303               	bcf	3,6	;RP1=0, select bank1
  2971  07E2  052F               	andwf	sprintf@flag^(0+128),w
  2972  07E3  00A5               	movwf	??_sprintf^(0+128)
  2973  07E4  3000               	movlw	0
  2974  07E5  0530               	andwf	(sprintf@flag+1)^(0+128),w
  2975  07E6  00A6               	movwf	(??_sprintf+1)^(0+128)
  2976  07E7  0825               	movf	??_sprintf^(0+128),w
  2977  07E8  0426               	iorwf	(??_sprintf^(0+128)+1),w
  2978  07E9  1903               	btfsc	3,2
  2979  07EA  2A0C               	goto	l3481
  2980                           
  2981                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 1458:     ((*sp++ = 
      +                          ('-')));
  2982  07EB  302D               	movlw	45
  2983  07EC                     L6:	
  2984  07EC  00A5               	movwf	??_sprintf^(0+128)
  2985  07ED  083B               	movf	sprintf@sp^(0+128),w
  2986  07EE  0084               	movwf	4
  2987  07EF  0825               	movf	??_sprintf^(0+128),w
  2988  07F0  1383               	bcf	3,7	;select IRP bank0
  2989  07F1  0080               	movwf	0
  2990  07F2  3001               	movlw	1
  2991  07F3  00A5               	movwf	??_sprintf^(0+128)
  2992  07F4  0825               	movf	??_sprintf^(0+128),w
  2993  07F5  07BB               	addwf	sprintf@sp^(0+128),f
  2994  07F6  2A0C               	goto	l3481
  2995  07F7                     l3483:	
  2996                           
  2997                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 1557:  *sp = 0;
  2998  07F7  083B               	movf	sprintf@sp^(0+128),w
  2999  07F8  0084               	movwf	4
  3000  07F9  1383               	bcf	3,7	;select IRP bank0
  3001  07FA  0180               	clrf	0
  3002  07FB  0008               	return
  3003  07FC                     __end_of_sprintf:	
  3004                           
  3005                           	psect	text2
  3006  0CB7                     __ptext2:	
  3007 ;; *************** function _scale *****************
  3008 ;; Defined at:
  3009 ;;		line 433 in file "D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c"
  3010 ;; Parameters:    Size  Location     Type
  3011 ;;  scl             1    wreg     char 
  3012 ;; Auto vars:     Size  Location     Type
  3013 ;;  scl             1   48[BANK0 ] char 
  3014 ;; Return value:  Size  Location     Type
  3015 ;;                  4   30[BANK0 ] char 
  3016 ;; Registers used:
  3017 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3018 ;; Tracked objects:
  3019 ;;		On entry : 0/0
  3020 ;;		On exit  : 0/0
  3021 ;;		Unchanged: 0/0
  3022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3023 ;;      Params:         0       4       0       0       0
  3024 ;;      Locals:         0       5       0       0       0
  3025 ;;      Temps:          0      10       0       0       0
  3026 ;;      Totals:         0      19       0       0       0
  3027 ;;Total ram usage:       19 bytes
  3028 ;; Hardware stack levels used:    1
  3029 ;; Hardware stack levels required when called:    2
  3030 ;; This function calls:
  3031 ;;		___awdiv
  3032 ;;		___awmod
  3033 ;;		___flmul
  3034 ;; This function is called by:
  3035 ;;		_sprintf
  3036 ;; This function uses a non-reentrant model
  3037 ;;
  3038                           
  3039                           
  3040                           ;psect for function _scale
  3041  0CB7                     _scale:	
  3042                           
  3043                           ;incstack = 0
  3044                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3045                           ;scale@scl stored from wreg
  3046  0CB7  1283               	bcf	3,5	;RP0=0, select bank0
  3047  0CB8  1303               	bcf	3,6	;RP1=0, select bank0
  3048  0CB9  00D0               	movwf	scale@scl
  3049                           
  3050                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 433: scale(signed ch
      +                          ar scl);D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 434: {;D:\PRO
      +                          GRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) {
  3051  0CBA  1FD0               	btfss	scale@scl,7
  3052  0CBB  2E5F               	goto	l2897
  3053                           
  3054                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 437:   scl = -scl;
  3055  0CBC  09D0               	comf	scale@scl,f
  3056  0CBD  0AD0               	incf	scale@scl,f
  3057                           
  3058                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 438:   if(scl>=110)
  3059  0CBE  0850               	movf	scale@scl,w
  3060  0CBF  3A80               	xorlw	128
  3061  0CC0  3E12               	addlw	-238
  3062  0CC1  1C03               	skipc
  3063  0CC2  2DA9               	goto	l2887
  3064                           
  3065                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 439:    return _npow
      +                          ers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npower
      +                          s_[(unsigned char)(scl%10)];
  3066  0CC3  300A               	movlw	10
  3067  0CC4  00F7               	movwf	___awdiv@divisor
  3068  0CC5  3000               	movlw	0
  3069  0CC6  00F8               	movwf	___awdiv@divisor+1
  3070  0CC7  0850               	movf	scale@scl,w
  3071  0CC8  00F2               	movwf	___awmod@dividend
  3072  0CC9  01F3               	clrf	___awmod@dividend+1
  3073  0CCA  1BF2               	btfsc	___awmod@dividend,7
  3074  0CCB  03F3               	decf	___awmod@dividend+1,f
  3075  0CCC  3064               	movlw	100
  3076  0CCD  00F0               	movwf	___awmod@divisor
  3077  0CCE  3000               	movlw	0
  3078  0CCF  00F1               	movwf	___awmod@divisor+1
  3079  0CD0  160A  118A  223A  120A  158A  	fcall	___awmod
  3080  0CD5  0871               	movf	?___awmod+1,w
  3081  0CD6  00FA               	movwf	___awdiv@dividend+1
  3082  0CD7  0870               	movf	?___awmod,w
  3083  0CD8  00F9               	movwf	___awdiv@dividend
  3084  0CD9  160A  118A  2285  120A  158A  	fcall	___awdiv
  3085  0CDE  0877               	movf	?___awdiv,w
  3086  0CDF  1283               	bcf	3,5	;RP0=0, select bank0
  3087  0CE0  1303               	bcf	3,6	;RP1=0, select bank0
  3088  0CE1  00C2               	movwf	??_scale
  3089  0CE2  3001               	movlw	1
  3090  0CE3                     u4265:	
  3091  0CE3  1003               	clrc
  3092  0CE4  0DC2               	rlf	??_scale,f
  3093  0CE5  3EFF               	addlw	-1
  3094  0CE6  1D03               	skipz
  3095  0CE7  2CE3               	goto	u4265
  3096  0CE8  1003               	clrc
  3097  0CE9  0D42               	rlf	??_scale,w
  3098  0CEA  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3099  0CEB  0084               	movwf	4
  3100  0CEC  160A  118A  2000  120A  158A  	fcall	stringdir
  3101  0CF1  00C3               	movwf	??_scale+1
  3102  0CF2  160A  118A  2000  120A  158A  	fcall	stringdir
  3103  0CF7  00C4               	movwf	??_scale+2
  3104  0CF8  160A  118A  2000  120A  158A  	fcall	stringdir
  3105  0CFD  00C5               	movwf	??_scale+3
  3106  0CFE  160A  118A  2000  120A  158A  	fcall	stringdir
  3107  0D03  00C6               	movwf	??_scale+4
  3108  0D04  0846               	movf	??_scale+4,w
  3109  0D05  00A7               	movwf	___flmul@b+3
  3110  0D06  0845               	movf	??_scale+3,w
  3111  0D07  00A6               	movwf	___flmul@b+2
  3112  0D08  0844               	movf	??_scale+2,w
  3113  0D09  00A5               	movwf	___flmul@b+1
  3114  0D0A  0843               	movf	??_scale+1,w
  3115  0D0B  00A4               	movwf	___flmul@b
  3116  0D0C  3064               	movlw	100
  3117  0D0D  00F7               	movwf	___awdiv@divisor
  3118  0D0E  3000               	movlw	0
  3119  0D0F  00F8               	movwf	___awdiv@divisor+1
  3120  0D10  0850               	movf	scale@scl,w
  3121  0D11  00F9               	movwf	___awdiv@dividend
  3122  0D12  01FA               	clrf	___awdiv@dividend+1
  3123  0D13  1BF9               	btfsc	___awdiv@dividend,7
  3124  0D14  03FA               	decf	___awdiv@dividend+1,f
  3125  0D15  160A  118A  2285  120A  158A  	fcall	___awdiv
  3126  0D1A  0877               	movf	?___awdiv,w
  3127  0D1B  1283               	bcf	3,5	;RP0=0, select bank0
  3128  0D1C  1303               	bcf	3,6	;RP1=0, select bank0
  3129  0D1D  00C7               	movwf	??_scale+5
  3130  0D1E  3001               	movlw	1
  3131  0D1F                     u4275:	
  3132  0D1F  1003               	clrc
  3133  0D20  0DC7               	rlf	??_scale+5,f
  3134  0D21  3EFF               	addlw	-1
  3135  0D22  1D03               	skipz
  3136  0D23  2D1F               	goto	u4275
  3137  0D24  1003               	clrc
  3138  0D25  0D47               	rlf	??_scale+5,w
  3139  0D26  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3140  0D27  0084               	movwf	4
  3141  0D28  160A  118A  2000  120A  158A  	fcall	stringdir
  3142  0D2D  00C8               	movwf	??_scale+6
  3143  0D2E  160A  118A  2000  120A  158A  	fcall	stringdir
  3144  0D33  00C9               	movwf	??_scale+7
  3145  0D34  160A  118A  2000  120A  158A  	fcall	stringdir
  3146  0D39  00CA               	movwf	??_scale+8
  3147  0D3A  160A  118A  2000  120A  158A  	fcall	stringdir
  3148  0D3F  00CB               	movwf	??_scale+9
  3149  0D40  084B               	movf	??_scale+9,w
  3150  0D41  00AB               	movwf	___flmul@a+3
  3151  0D42  084A               	movf	??_scale+8,w
  3152  0D43  00AA               	movwf	___flmul@a+2
  3153  0D44  0849               	movf	??_scale+7,w
  3154  0D45  00A9               	movwf	___flmul@a+1
  3155  0D46  0848               	movf	??_scale+6,w
  3156  0D47  00A8               	movwf	___flmul@a
  3157  0D48  120A  158A  21A2  120A  158A  	fcall	___flmul
  3158  0D4D  1283               	bcf	3,5	;RP0=0, select bank0
  3159  0D4E  1303               	bcf	3,6	;RP1=0, select bank0
  3160  0D4F  0827               	movf	?___flmul+3,w
  3161  0D50  00CF               	movwf	_scale$1002+3
  3162  0D51  0826               	movf	?___flmul+2,w
  3163  0D52  00CE               	movwf	_scale$1002+2
  3164  0D53  0825               	movf	?___flmul+1,w
  3165  0D54  00CD               	movwf	_scale$1002+1
  3166  0D55  0824               	movf	?___flmul,w
  3167  0D56  00CC               	movwf	_scale$1002
  3168                           
  3169                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 439:    return _npow
      +                          ers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npower
      +                          s_[(unsigned char)(scl%10)];
  3170  0D57  300A               	movlw	10
  3171  0D58  00F0               	movwf	___awmod@divisor
  3172  0D59  3000               	movlw	0
  3173  0D5A  00F1               	movwf	___awmod@divisor+1
  3174  0D5B  0850               	movf	scale@scl,w
  3175  0D5C  00F2               	movwf	___awmod@dividend
  3176  0D5D  01F3               	clrf	___awmod@dividend+1
  3177  0D5E  1BF2               	btfsc	___awmod@dividend,7
  3178  0D5F  03F3               	decf	___awmod@dividend+1,f
  3179  0D60  160A  118A  223A  120A  158A  	fcall	___awmod
  3180  0D65  0870               	movf	?___awmod,w
  3181  0D66  1283               	bcf	3,5	;RP0=0, select bank0
  3182  0D67  1303               	bcf	3,6	;RP1=0, select bank0
  3183  0D68  00C2               	movwf	??_scale
  3184  0D69  3001               	movlw	1
  3185  0D6A                     u4285:	
  3186  0D6A  1003               	clrc
  3187  0D6B  0DC2               	rlf	??_scale,f
  3188  0D6C  3EFF               	addlw	-1
  3189  0D6D  1D03               	skipz
  3190  0D6E  2D6A               	goto	u4285
  3191  0D6F  1003               	clrc
  3192  0D70  0D42               	rlf	??_scale,w
  3193  0D71  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3194  0D72  0084               	movwf	4
  3195  0D73  160A  118A  2000  120A  158A  	fcall	stringdir
  3196  0D78  00C3               	movwf	??_scale+1
  3197  0D79  160A  118A  2000  120A  158A  	fcall	stringdir
  3198  0D7E  00C4               	movwf	??_scale+2
  3199  0D7F  160A  118A  2000  120A  158A  	fcall	stringdir
  3200  0D84  00C5               	movwf	??_scale+3
  3201  0D85  160A  118A  2000  120A  158A  	fcall	stringdir
  3202  0D8A  00C6               	movwf	??_scale+4
  3203  0D8B  0846               	movf	??_scale+4,w
  3204  0D8C  00A7               	movwf	___flmul@b+3
  3205  0D8D  0845               	movf	??_scale+3,w
  3206  0D8E  00A6               	movwf	___flmul@b+2
  3207  0D8F  0844               	movf	??_scale+2,w
  3208  0D90  00A5               	movwf	___flmul@b+1
  3209  0D91  0843               	movf	??_scale+1,w
  3210  0D92  00A4               	movwf	___flmul@b
  3211  0D93  084F               	movf	_scale$1002+3,w
  3212  0D94  00AB               	movwf	___flmul@a+3
  3213  0D95  084E               	movf	_scale$1002+2,w
  3214  0D96  00AA               	movwf	___flmul@a+2
  3215  0D97  084D               	movf	_scale$1002+1,w
  3216  0D98  00A9               	movwf	___flmul@a+1
  3217  0D99  084C               	movf	_scale$1002,w
  3218  0D9A  00A8               	movwf	___flmul@a
  3219  0D9B  120A  158A  21A2   	fcall	___flmul
  3220  0D9E  1283               	bcf	3,5	;RP0=0, select bank0
  3221  0D9F  1303               	bcf	3,6	;RP1=0, select bank0
  3222  0DA0  0827               	movf	?___flmul+3,w
  3223  0DA1  00C1               	movwf	?_scale+3
  3224  0DA2  0826               	movf	?___flmul+2,w
  3225  0DA3  00C0               	movwf	?_scale+2
  3226  0DA4  0825               	movf	?___flmul+1,w
  3227  0DA5  00BF               	movwf	?_scale+1
  3228  0DA6  0824               	movf	?___flmul,w
  3229  0DA7  00BE               	movwf	?_scale
  3230  0DA8  0008               	return
  3231  0DA9                     l2887:	
  3232  0DA9  0850               	movf	scale@scl,w
  3233  0DAA  3A80               	xorlw	128
  3234  0DAB  3E75               	addlw	-139
  3235  0DAC  1C03               	skipc
  3236  0DAD  2E34               	goto	l2893
  3237                           
  3238                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 441:    return _npow
      +                          ers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3239  0DAE  300A               	movlw	10
  3240  0DAF  00F0               	movwf	___awmod@divisor
  3241  0DB0  3000               	movlw	0
  3242  0DB1  00F1               	movwf	___awmod@divisor+1
  3243  0DB2  0850               	movf	scale@scl,w
  3244  0DB3  00F2               	movwf	___awmod@dividend
  3245  0DB4  01F3               	clrf	___awmod@dividend+1
  3246  0DB5  1BF2               	btfsc	___awmod@dividend,7
  3247  0DB6  03F3               	decf	___awmod@dividend+1,f
  3248  0DB7  160A  118A  223A  120A  158A  	fcall	___awmod
  3249  0DBC  0870               	movf	?___awmod,w
  3250  0DBD  1283               	bcf	3,5	;RP0=0, select bank0
  3251  0DBE  1303               	bcf	3,6	;RP1=0, select bank0
  3252  0DBF  00C2               	movwf	??_scale
  3253  0DC0  3001               	movlw	1
  3254  0DC1                     u4305:	
  3255  0DC1  1003               	clrc
  3256  0DC2  0DC2               	rlf	??_scale,f
  3257  0DC3  3EFF               	addlw	-1
  3258  0DC4  1D03               	skipz
  3259  0DC5  2DC1               	goto	u4305
  3260  0DC6  1003               	clrc
  3261  0DC7  0D42               	rlf	??_scale,w
  3262  0DC8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3263  0DC9  0084               	movwf	4
  3264  0DCA  160A  118A  2000  120A  158A  	fcall	stringdir
  3265  0DCF  00C3               	movwf	??_scale+1
  3266  0DD0  160A  118A  2000  120A  158A  	fcall	stringdir
  3267  0DD5  00C4               	movwf	??_scale+2
  3268  0DD6  160A  118A  2000  120A  158A  	fcall	stringdir
  3269  0DDB  00C5               	movwf	??_scale+3
  3270  0DDC  160A  118A  2000  120A  158A  	fcall	stringdir
  3271  0DE1  00C6               	movwf	??_scale+4
  3272  0DE2  0846               	movf	??_scale+4,w
  3273  0DE3  00A7               	movwf	___flmul@b+3
  3274  0DE4  0845               	movf	??_scale+3,w
  3275  0DE5  00A6               	movwf	___flmul@b+2
  3276  0DE6  0844               	movf	??_scale+2,w
  3277  0DE7  00A5               	movwf	___flmul@b+1
  3278  0DE8  0843               	movf	??_scale+1,w
  3279  0DE9  00A4               	movwf	___flmul@b
  3280  0DEA  300A               	movlw	10
  3281  0DEB  00F7               	movwf	___awdiv@divisor
  3282  0DEC  3000               	movlw	0
  3283  0DED  00F8               	movwf	___awdiv@divisor+1
  3284  0DEE  0850               	movf	scale@scl,w
  3285  0DEF  00F9               	movwf	___awdiv@dividend
  3286  0DF0  01FA               	clrf	___awdiv@dividend+1
  3287  0DF1  1BF9               	btfsc	___awdiv@dividend,7
  3288  0DF2  03FA               	decf	___awdiv@dividend+1,f
  3289  0DF3  160A  118A  2285  120A  158A  	fcall	___awdiv
  3290  0DF8  0877               	movf	?___awdiv,w
  3291  0DF9  1283               	bcf	3,5	;RP0=0, select bank0
  3292  0DFA  1303               	bcf	3,6	;RP1=0, select bank0
  3293  0DFB  00C7               	movwf	??_scale+5
  3294  0DFC  3001               	movlw	1
  3295  0DFD                     u4315:	
  3296  0DFD  1003               	clrc
  3297  0DFE  0DC7               	rlf	??_scale+5,f
  3298  0DFF  3EFF               	addlw	-1
  3299  0E00  1D03               	skipz
  3300  0E01  2DFD               	goto	u4315
  3301  0E02  1003               	clrc
  3302  0E03  0D47               	rlf	??_scale+5,w
  3303  0E04  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3304  0E05  0084               	movwf	4
  3305  0E06  160A  118A  2000  120A  158A  	fcall	stringdir
  3306  0E0B  00C8               	movwf	??_scale+6
  3307  0E0C  160A  118A  2000  120A  158A  	fcall	stringdir
  3308  0E11  00C9               	movwf	??_scale+7
  3309  0E12  160A  118A  2000  120A  158A  	fcall	stringdir
  3310  0E17  00CA               	movwf	??_scale+8
  3311  0E18  160A  118A  2000  120A  158A  	fcall	stringdir
  3312  0E1D  00CB               	movwf	??_scale+9
  3313  0E1E  084B               	movf	??_scale+9,w
  3314  0E1F  00AB               	movwf	___flmul@a+3
  3315  0E20  084A               	movf	??_scale+8,w
  3316  0E21  00AA               	movwf	___flmul@a+2
  3317  0E22  0849               	movf	??_scale+7,w
  3318  0E23  00A9               	movwf	___flmul@a+1
  3319  0E24  0848               	movf	??_scale+6,w
  3320  0E25  00A8               	movwf	___flmul@a
  3321  0E26  120A  158A  21A2   	fcall	___flmul
  3322  0E29  1283               	bcf	3,5	;RP0=0, select bank0
  3323  0E2A  1303               	bcf	3,6	;RP1=0, select bank0
  3324  0E2B  0827               	movf	?___flmul+3,w
  3325  0E2C  00C1               	movwf	?_scale+3
  3326  0E2D  0826               	movf	?___flmul+2,w
  3327  0E2E  00C0               	movwf	?_scale+2
  3328  0E2F  0825               	movf	?___flmul+1,w
  3329  0E30  00BF               	movwf	?_scale+1
  3330  0E31  0824               	movf	?___flmul,w
  3331  0E32  00BE               	movwf	?_scale
  3332  0E33  0008               	return
  3333  0E34                     l2893:	
  3334                           
  3335                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 442:   return _npowe
      +                          rs_[(unsigned char)scl];
  3336  0E34  0850               	movf	scale@scl,w
  3337  0E35  00C2               	movwf	??_scale
  3338  0E36  3001               	movlw	1
  3339  0E37                     u4325:	
  3340  0E37  1003               	clrc
  3341  0E38  0DC2               	rlf	??_scale,f
  3342  0E39  3EFF               	addlw	-1
  3343  0E3A  1D03               	skipz
  3344  0E3B  2E37               	goto	u4325
  3345  0E3C  1003               	clrc
  3346  0E3D  0D42               	rlf	??_scale,w
  3347  0E3E  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3348  0E3F  0084               	movwf	4
  3349  0E40  160A  118A  2000  120A  158A  	fcall	stringdir
  3350  0E45  00C3               	movwf	??_scale+1
  3351  0E46  160A  118A  2000  120A  158A  	fcall	stringdir
  3352  0E4B  00C4               	movwf	??_scale+2
  3353  0E4C  160A  118A  2000  120A  158A  	fcall	stringdir
  3354  0E51  00C5               	movwf	??_scale+3
  3355  0E52  160A  118A  2000   	fcall	stringdir
  3356  0E55  00C6               	movwf	??_scale+4
  3357  0E56  0846               	movf	??_scale+4,w
  3358  0E57  00C1               	movwf	?_scale+3
  3359  0E58  0845               	movf	??_scale+3,w
  3360  0E59  00C0               	movwf	?_scale+2
  3361  0E5A  0844               	movf	??_scale+2,w
  3362  0E5B  00BF               	movwf	?_scale+1
  3363  0E5C  0843               	movf	??_scale+1,w
  3364  0E5D  00BE               	movwf	?_scale
  3365  0E5E  0008               	return
  3366  0E5F                     l2897:	
  3367                           
  3368                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110)
  3369  0E5F  0850               	movf	scale@scl,w
  3370  0E60  3A80               	xorlw	128
  3371  0E61  3E12               	addlw	-238
  3372  0E62  1C03               	skipc
  3373  0E63  2F4A               	goto	l2905
  3374                           
  3375                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 445:   return _power
      +                          s_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers_[(
      +                          unsigned char)(scl%10)];
  3376  0E64  300A               	movlw	10
  3377  0E65  00F7               	movwf	___awdiv@divisor
  3378  0E66  3000               	movlw	0
  3379  0E67  00F8               	movwf	___awdiv@divisor+1
  3380  0E68  0850               	movf	scale@scl,w
  3381  0E69  00F2               	movwf	___awmod@dividend
  3382  0E6A  01F3               	clrf	___awmod@dividend+1
  3383  0E6B  1BF2               	btfsc	___awmod@dividend,7
  3384  0E6C  03F3               	decf	___awmod@dividend+1,f
  3385  0E6D  3064               	movlw	100
  3386  0E6E  00F0               	movwf	___awmod@divisor
  3387  0E6F  3000               	movlw	0
  3388  0E70  00F1               	movwf	___awmod@divisor+1
  3389  0E71  160A  118A  223A  120A  158A  	fcall	___awmod
  3390  0E76  0871               	movf	?___awmod+1,w
  3391  0E77  00FA               	movwf	___awdiv@dividend+1
  3392  0E78  0870               	movf	?___awmod,w
  3393  0E79  00F9               	movwf	___awdiv@dividend
  3394  0E7A  160A  118A  2285  120A  158A  	fcall	___awdiv
  3395  0E7F  0877               	movf	?___awdiv,w
  3396  0E80  1283               	bcf	3,5	;RP0=0, select bank0
  3397  0E81  1303               	bcf	3,6	;RP1=0, select bank0
  3398  0E82  00C2               	movwf	??_scale
  3399  0E83  3001               	movlw	1
  3400  0E84                     u4345:	
  3401  0E84  1003               	clrc
  3402  0E85  0DC2               	rlf	??_scale,f
  3403  0E86  3EFF               	addlw	-1
  3404  0E87  1D03               	skipz
  3405  0E88  2E84               	goto	u4345
  3406  0E89  1003               	clrc
  3407  0E8A  0D42               	rlf	??_scale,w
  3408  0E8B  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3409  0E8C  0084               	movwf	4
  3410  0E8D  160A  118A  2000  120A  158A  	fcall	stringdir
  3411  0E92  00C3               	movwf	??_scale+1
  3412  0E93  160A  118A  2000  120A  158A  	fcall	stringdir
  3413  0E98  00C4               	movwf	??_scale+2
  3414  0E99  160A  118A  2000  120A  158A  	fcall	stringdir
  3415  0E9E  00C5               	movwf	??_scale+3
  3416  0E9F  160A  118A  2000  120A  158A  	fcall	stringdir
  3417  0EA4  00C6               	movwf	??_scale+4
  3418  0EA5  0846               	movf	??_scale+4,w
  3419  0EA6  00A7               	movwf	___flmul@b+3
  3420  0EA7  0845               	movf	??_scale+3,w
  3421  0EA8  00A6               	movwf	___flmul@b+2
  3422  0EA9  0844               	movf	??_scale+2,w
  3423  0EAA  00A5               	movwf	___flmul@b+1
  3424  0EAB  0843               	movf	??_scale+1,w
  3425  0EAC  00A4               	movwf	___flmul@b
  3426  0EAD  3064               	movlw	100
  3427  0EAE  00F7               	movwf	___awdiv@divisor
  3428  0EAF  3000               	movlw	0
  3429  0EB0  00F8               	movwf	___awdiv@divisor+1
  3430  0EB1  0850               	movf	scale@scl,w
  3431  0EB2  00F9               	movwf	___awdiv@dividend
  3432  0EB3  01FA               	clrf	___awdiv@dividend+1
  3433  0EB4  1BF9               	btfsc	___awdiv@dividend,7
  3434  0EB5  03FA               	decf	___awdiv@dividend+1,f
  3435  0EB6  160A  118A  2285  120A  158A  	fcall	___awdiv
  3436  0EBB  0877               	movf	?___awdiv,w
  3437  0EBC  1283               	bcf	3,5	;RP0=0, select bank0
  3438  0EBD  1303               	bcf	3,6	;RP1=0, select bank0
  3439  0EBE  00C7               	movwf	??_scale+5
  3440  0EBF  3001               	movlw	1
  3441  0EC0                     u4355:	
  3442  0EC0  1003               	clrc
  3443  0EC1  0DC7               	rlf	??_scale+5,f
  3444  0EC2  3EFF               	addlw	-1
  3445  0EC3  1D03               	skipz
  3446  0EC4  2EC0               	goto	u4355
  3447  0EC5  1003               	clrc
  3448  0EC6  0D47               	rlf	??_scale+5,w
  3449  0EC7  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  3450  0EC8  0084               	movwf	4
  3451  0EC9  160A  118A  2000  120A  158A  	fcall	stringdir
  3452  0ECE  00C8               	movwf	??_scale+6
  3453  0ECF  160A  118A  2000  120A  158A  	fcall	stringdir
  3454  0ED4  00C9               	movwf	??_scale+7
  3455  0ED5  160A  118A  2000  120A  158A  	fcall	stringdir
  3456  0EDA  00CA               	movwf	??_scale+8
  3457  0EDB  160A  118A  2000  120A  158A  	fcall	stringdir
  3458  0EE0  00CB               	movwf	??_scale+9
  3459  0EE1  084B               	movf	??_scale+9,w
  3460  0EE2  00AB               	movwf	___flmul@a+3
  3461  0EE3  084A               	movf	??_scale+8,w
  3462  0EE4  00AA               	movwf	___flmul@a+2
  3463  0EE5  0849               	movf	??_scale+7,w
  3464  0EE6  00A9               	movwf	___flmul@a+1
  3465  0EE7  0848               	movf	??_scale+6,w
  3466  0EE8  00A8               	movwf	___flmul@a
  3467  0EE9  120A  158A  21A2  120A  158A  	fcall	___flmul
  3468  0EEE  1283               	bcf	3,5	;RP0=0, select bank0
  3469  0EEF  1303               	bcf	3,6	;RP1=0, select bank0
  3470  0EF0  0827               	movf	?___flmul+3,w
  3471  0EF1  00CF               	movwf	_scale$1002+3
  3472  0EF2  0826               	movf	?___flmul+2,w
  3473  0EF3  00CE               	movwf	_scale$1002+2
  3474  0EF4  0825               	movf	?___flmul+1,w
  3475  0EF5  00CD               	movwf	_scale$1002+1
  3476  0EF6  0824               	movf	?___flmul,w
  3477  0EF7  00CC               	movwf	_scale$1002
  3478                           
  3479                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 445:   return _power
      +                          s_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers_[(
      +                          unsigned char)(scl%10)];
  3480  0EF8  300A               	movlw	10
  3481  0EF9  00F0               	movwf	___awmod@divisor
  3482  0EFA  3000               	movlw	0
  3483  0EFB  00F1               	movwf	___awmod@divisor+1
  3484  0EFC  0850               	movf	scale@scl,w
  3485  0EFD  00F2               	movwf	___awmod@dividend
  3486  0EFE  01F3               	clrf	___awmod@dividend+1
  3487  0EFF  1BF2               	btfsc	___awmod@dividend,7
  3488  0F00  03F3               	decf	___awmod@dividend+1,f
  3489  0F01  160A  118A  223A  120A  158A  	fcall	___awmod
  3490  0F06  0870               	movf	?___awmod,w
  3491  0F07  1283               	bcf	3,5	;RP0=0, select bank0
  3492  0F08  1303               	bcf	3,6	;RP1=0, select bank0
  3493  0F09  00C2               	movwf	??_scale
  3494  0F0A  3001               	movlw	1
  3495  0F0B                     u4365:	
  3496  0F0B  1003               	clrc
  3497  0F0C  0DC2               	rlf	??_scale,f
  3498  0F0D  3EFF               	addlw	-1
  3499  0F0E  1D03               	skipz
  3500  0F0F  2F0B               	goto	u4365
  3501  0F10  1003               	clrc
  3502  0F11  0D42               	rlf	??_scale,w
  3503  0F12  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3504  0F13  0084               	movwf	4
  3505  0F14  160A  118A  2000  120A  158A  	fcall	stringdir
  3506  0F19  00C3               	movwf	??_scale+1
  3507  0F1A  160A  118A  2000  120A  158A  	fcall	stringdir
  3508  0F1F  00C4               	movwf	??_scale+2
  3509  0F20  160A  118A  2000  120A  158A  	fcall	stringdir
  3510  0F25  00C5               	movwf	??_scale+3
  3511  0F26  160A  118A  2000  120A  158A  	fcall	stringdir
  3512  0F2B  00C6               	movwf	??_scale+4
  3513  0F2C  0846               	movf	??_scale+4,w
  3514  0F2D  00A7               	movwf	___flmul@b+3
  3515  0F2E  0845               	movf	??_scale+3,w
  3516  0F2F  00A6               	movwf	___flmul@b+2
  3517  0F30  0844               	movf	??_scale+2,w
  3518  0F31  00A5               	movwf	___flmul@b+1
  3519  0F32  0843               	movf	??_scale+1,w
  3520  0F33  00A4               	movwf	___flmul@b
  3521  0F34  084F               	movf	_scale$1002+3,w
  3522  0F35  00AB               	movwf	___flmul@a+3
  3523  0F36  084E               	movf	_scale$1002+2,w
  3524  0F37  00AA               	movwf	___flmul@a+2
  3525  0F38  084D               	movf	_scale$1002+1,w
  3526  0F39  00A9               	movwf	___flmul@a+1
  3527  0F3A  084C               	movf	_scale$1002,w
  3528  0F3B  00A8               	movwf	___flmul@a
  3529  0F3C  120A  158A  21A2   	fcall	___flmul
  3530  0F3F  1283               	bcf	3,5	;RP0=0, select bank0
  3531  0F40  1303               	bcf	3,6	;RP1=0, select bank0
  3532  0F41  0827               	movf	?___flmul+3,w
  3533  0F42  00C1               	movwf	?_scale+3
  3534  0F43  0826               	movf	?___flmul+2,w
  3535  0F44  00C0               	movwf	?_scale+2
  3536  0F45  0825               	movf	?___flmul+1,w
  3537  0F46  00BF               	movwf	?_scale+1
  3538  0F47  0824               	movf	?___flmul,w
  3539  0F48  00BE               	movwf	?_scale
  3540  0F49  0008               	return
  3541  0F4A                     l2905:	
  3542  0F4A  0850               	movf	scale@scl,w
  3543  0F4B  3A80               	xorlw	128
  3544  0F4C  3E75               	addlw	-139
  3545  0F4D  1C03               	skipc
  3546  0F4E  2FD5               	goto	l2911
  3547                           
  3548                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 447:   return _power
      +                          s_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3549  0F4F  300A               	movlw	10
  3550  0F50  00F0               	movwf	___awmod@divisor
  3551  0F51  3000               	movlw	0
  3552  0F52  00F1               	movwf	___awmod@divisor+1
  3553  0F53  0850               	movf	scale@scl,w
  3554  0F54  00F2               	movwf	___awmod@dividend
  3555  0F55  01F3               	clrf	___awmod@dividend+1
  3556  0F56  1BF2               	btfsc	___awmod@dividend,7
  3557  0F57  03F3               	decf	___awmod@dividend+1,f
  3558  0F58  160A  118A  223A  120A  158A  	fcall	___awmod
  3559  0F5D  0870               	movf	?___awmod,w
  3560  0F5E  1283               	bcf	3,5	;RP0=0, select bank0
  3561  0F5F  1303               	bcf	3,6	;RP1=0, select bank0
  3562  0F60  00C2               	movwf	??_scale
  3563  0F61  3001               	movlw	1
  3564  0F62                     u4385:	
  3565  0F62  1003               	clrc
  3566  0F63  0DC2               	rlf	??_scale,f
  3567  0F64  3EFF               	addlw	-1
  3568  0F65  1D03               	skipz
  3569  0F66  2F62               	goto	u4385
  3570  0F67  1003               	clrc
  3571  0F68  0D42               	rlf	??_scale,w
  3572  0F69  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3573  0F6A  0084               	movwf	4
  3574  0F6B  160A  118A  2000  120A  158A  	fcall	stringdir
  3575  0F70  00C3               	movwf	??_scale+1
  3576  0F71  160A  118A  2000  120A  158A  	fcall	stringdir
  3577  0F76  00C4               	movwf	??_scale+2
  3578  0F77  160A  118A  2000  120A  158A  	fcall	stringdir
  3579  0F7C  00C5               	movwf	??_scale+3
  3580  0F7D  160A  118A  2000  120A  158A  	fcall	stringdir
  3581  0F82  00C6               	movwf	??_scale+4
  3582  0F83  0846               	movf	??_scale+4,w
  3583  0F84  00A7               	movwf	___flmul@b+3
  3584  0F85  0845               	movf	??_scale+3,w
  3585  0F86  00A6               	movwf	___flmul@b+2
  3586  0F87  0844               	movf	??_scale+2,w
  3587  0F88  00A5               	movwf	___flmul@b+1
  3588  0F89  0843               	movf	??_scale+1,w
  3589  0F8A  00A4               	movwf	___flmul@b
  3590  0F8B  300A               	movlw	10
  3591  0F8C  00F7               	movwf	___awdiv@divisor
  3592  0F8D  3000               	movlw	0
  3593  0F8E  00F8               	movwf	___awdiv@divisor+1
  3594  0F8F  0850               	movf	scale@scl,w
  3595  0F90  00F9               	movwf	___awdiv@dividend
  3596  0F91  01FA               	clrf	___awdiv@dividend+1
  3597  0F92  1BF9               	btfsc	___awdiv@dividend,7
  3598  0F93  03FA               	decf	___awdiv@dividend+1,f
  3599  0F94  160A  118A  2285  120A  158A  	fcall	___awdiv
  3600  0F99  0877               	movf	?___awdiv,w
  3601  0F9A  1283               	bcf	3,5	;RP0=0, select bank0
  3602  0F9B  1303               	bcf	3,6	;RP1=0, select bank0
  3603  0F9C  00C7               	movwf	??_scale+5
  3604  0F9D  3001               	movlw	1
  3605  0F9E                     u4395:	
  3606  0F9E  1003               	clrc
  3607  0F9F  0DC7               	rlf	??_scale+5,f
  3608  0FA0  3EFF               	addlw	-1
  3609  0FA1  1D03               	skipz
  3610  0FA2  2F9E               	goto	u4395
  3611  0FA3  1003               	clrc
  3612  0FA4  0D47               	rlf	??_scale+5,w
  3613  0FA5  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3614  0FA6  0084               	movwf	4
  3615  0FA7  160A  118A  2000  120A  158A  	fcall	stringdir
  3616  0FAC  00C8               	movwf	??_scale+6
  3617  0FAD  160A  118A  2000  120A  158A  	fcall	stringdir
  3618  0FB2  00C9               	movwf	??_scale+7
  3619  0FB3  160A  118A  2000  120A  158A  	fcall	stringdir
  3620  0FB8  00CA               	movwf	??_scale+8
  3621  0FB9  160A  118A  2000  120A  158A  	fcall	stringdir
  3622  0FBE  00CB               	movwf	??_scale+9
  3623  0FBF  084B               	movf	??_scale+9,w
  3624  0FC0  00AB               	movwf	___flmul@a+3
  3625  0FC1  084A               	movf	??_scale+8,w
  3626  0FC2  00AA               	movwf	___flmul@a+2
  3627  0FC3  0849               	movf	??_scale+7,w
  3628  0FC4  00A9               	movwf	___flmul@a+1
  3629  0FC5  0848               	movf	??_scale+6,w
  3630  0FC6  00A8               	movwf	___flmul@a
  3631  0FC7  120A  158A  21A2   	fcall	___flmul
  3632  0FCA  1283               	bcf	3,5	;RP0=0, select bank0
  3633  0FCB  1303               	bcf	3,6	;RP1=0, select bank0
  3634  0FCC  0827               	movf	?___flmul+3,w
  3635  0FCD  00C1               	movwf	?_scale+3
  3636  0FCE  0826               	movf	?___flmul+2,w
  3637  0FCF  00C0               	movwf	?_scale+2
  3638  0FD0  0825               	movf	?___flmul+1,w
  3639  0FD1  00BF               	movwf	?_scale+1
  3640  0FD2  0824               	movf	?___flmul,w
  3641  0FD3  00BE               	movwf	?_scale
  3642  0FD4  0008               	return
  3643  0FD5                     l2911:	
  3644                           
  3645                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 448:  return _powers
      +                          _[(unsigned char)scl];
  3646  0FD5  0850               	movf	scale@scl,w
  3647  0FD6  00C2               	movwf	??_scale
  3648  0FD7  3001               	movlw	1
  3649  0FD8                     u4405:	
  3650  0FD8  1003               	clrc
  3651  0FD9  0DC2               	rlf	??_scale,f
  3652  0FDA  3EFF               	addlw	-1
  3653  0FDB  1D03               	skipz
  3654  0FDC  2FD8               	goto	u4405
  3655  0FDD  1003               	clrc
  3656  0FDE  0D42               	rlf	??_scale,w
  3657  0FDF  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3658  0FE0  0084               	movwf	4
  3659  0FE1  160A  118A  2000  120A  158A  	fcall	stringdir
  3660  0FE6  00C3               	movwf	??_scale+1
  3661  0FE7  160A  118A  2000  120A  158A  	fcall	stringdir
  3662  0FEC  00C4               	movwf	??_scale+2
  3663  0FED  160A  118A  2000  120A  158A  	fcall	stringdir
  3664  0FF2  00C5               	movwf	??_scale+3
  3665  0FF3  160A  118A  2000   	fcall	stringdir
  3666  0FF6  00C6               	movwf	??_scale+4
  3667  0FF7  0846               	movf	??_scale+4,w
  3668  0FF8  00C1               	movwf	?_scale+3
  3669  0FF9  0845               	movf	??_scale+3,w
  3670  0FFA  00C0               	movwf	?_scale+2
  3671  0FFB  0844               	movf	??_scale+2,w
  3672  0FFC  00BF               	movwf	?_scale+1
  3673  0FFD  0843               	movf	??_scale+1,w
  3674  0FFE  00BE               	movwf	?_scale
  3675  0FFF  0008               	return
  3676  1000                     __end_of_scale:	
  3677                           
  3678                           	psect	text3
  3679  123A                     __ptext3:	
  3680 ;; *************** function ___awmod *****************
  3681 ;; Defined at:
  3682 ;;		line 5 in file "D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\awmod.c"
  3683 ;; Parameters:    Size  Location     Type
  3684 ;;  divisor         2    0[COMMON] int 
  3685 ;;  dividend        2    2[COMMON] int 
  3686 ;; Auto vars:     Size  Location     Type
  3687 ;;  sign            1    6[COMMON] unsigned char 
  3688 ;;  counter         1    5[COMMON] unsigned char 
  3689 ;; Return value:  Size  Location     Type
  3690 ;;                  2    0[COMMON] int 
  3691 ;; Registers used:
  3692 ;;		wreg, status,2, status,0
  3693 ;; Tracked objects:
  3694 ;;		On entry : 0/0
  3695 ;;		On exit  : 0/0
  3696 ;;		Unchanged: 0/0
  3697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3698 ;;      Params:         4       0       0       0       0
  3699 ;;      Locals:         2       0       0       0       0
  3700 ;;      Temps:          1       0       0       0       0
  3701 ;;      Totals:         7       0       0       0       0
  3702 ;;Total ram usage:        7 bytes
  3703 ;; Hardware stack levels used:    1
  3704 ;; This function calls:
  3705 ;;		Nothing
  3706 ;; This function is called by:
  3707 ;;		_scale
  3708 ;; This function uses a non-reentrant model
  3709 ;;
  3710                           
  3711                           
  3712                           ;psect for function ___awmod
  3713  123A                     ___awmod:	
  3714                           
  3715                           ;incstack = 0
  3716                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3717  123A  01F6               	clrf	___awmod@sign
  3718  123B  1FF3               	btfss	___awmod@dividend+1,7
  3719  123C  2A44               	goto	l2391
  3720  123D  09F2               	comf	___awmod@dividend,f
  3721  123E  09F3               	comf	___awmod@dividend+1,f
  3722  123F  0AF2               	incf	___awmod@dividend,f
  3723  1240  1903               	skipnz
  3724  1241  0AF3               	incf	___awmod@dividend+1,f
  3725  1242  01F6               	clrf	___awmod@sign
  3726  1243  0AF6               	incf	___awmod@sign,f
  3727  1244                     l2391:	
  3728  1244  1FF1               	btfss	___awmod@divisor+1,7
  3729  1245  2A4B               	goto	l2395
  3730  1246  09F0               	comf	___awmod@divisor,f
  3731  1247  09F1               	comf	___awmod@divisor+1,f
  3732  1248  0AF0               	incf	___awmod@divisor,f
  3733  1249  1903               	skipnz
  3734  124A  0AF1               	incf	___awmod@divisor+1,f
  3735  124B                     l2395:	
  3736  124B  0870               	movf	___awmod@divisor,w
  3737  124C  0471               	iorwf	___awmod@divisor+1,w
  3738  124D  1903               	btfsc	3,2
  3739  124E  2A78               	goto	l2413
  3740  124F  01F5               	clrf	___awmod@counter
  3741  1250  0AF5               	incf	___awmod@counter,f
  3742  1251                     l2403:	
  3743  1251  1BF1               	btfsc	___awmod@divisor+1,7
  3744  1252  2A5F               	goto	l2405
  3745  1253  3001               	movlw	1
  3746  1254                     u3065:	
  3747  1254  1003               	clrc
  3748  1255  0DF0               	rlf	___awmod@divisor,f
  3749  1256  0DF1               	rlf	___awmod@divisor+1,f
  3750  1257  3EFF               	addlw	-1
  3751  1258  1D03               	skipz
  3752  1259  2A54               	goto	u3065
  3753  125A  3001               	movlw	1
  3754  125B  00F4               	movwf	??___awmod
  3755  125C  0874               	movf	??___awmod,w
  3756  125D  07F5               	addwf	___awmod@counter,f
  3757  125E  2A51               	goto	l2403
  3758  125F                     l2405:	
  3759  125F  0871               	movf	___awmod@divisor+1,w
  3760  1260  0273               	subwf	___awmod@dividend+1,w
  3761  1261  1D03               	skipz
  3762  1262  2A65               	goto	u3085
  3763  1263  0870               	movf	___awmod@divisor,w
  3764  1264  0272               	subwf	___awmod@dividend,w
  3765  1265                     u3085:	
  3766  1265  1C03               	skipc
  3767  1266  2A6D               	goto	l2409
  3768  1267  0870               	movf	___awmod@divisor,w
  3769  1268  02F2               	subwf	___awmod@dividend,f
  3770  1269  0871               	movf	___awmod@divisor+1,w
  3771  126A  1C03               	skipc
  3772  126B  03F3               	decf	___awmod@dividend+1,f
  3773  126C  02F3               	subwf	___awmod@dividend+1,f
  3774  126D                     l2409:	
  3775  126D  3001               	movlw	1
  3776  126E                     u3095:	
  3777  126E  1003               	clrc
  3778  126F  0CF1               	rrf	___awmod@divisor+1,f
  3779  1270  0CF0               	rrf	___awmod@divisor,f
  3780  1271  3EFF               	addlw	-1
  3781  1272  1D03               	skipz
  3782  1273  2A6E               	goto	u3095
  3783  1274  3001               	movlw	1
  3784  1275  02F5               	subwf	___awmod@counter,f
  3785  1276  1D03               	btfss	3,2
  3786  1277  2A5F               	goto	l2405
  3787  1278                     l2413:	
  3788  1278  0876               	movf	___awmod@sign,w
  3789  1279  1903               	btfsc	3,2
  3790  127A  2A80               	goto	l2417
  3791  127B  09F2               	comf	___awmod@dividend,f
  3792  127C  09F3               	comf	___awmod@dividend+1,f
  3793  127D  0AF2               	incf	___awmod@dividend,f
  3794  127E  1903               	skipnz
  3795  127F  0AF3               	incf	___awmod@dividend+1,f
  3796  1280                     l2417:	
  3797  1280  0873               	movf	___awmod@dividend+1,w
  3798  1281  00F1               	movwf	?___awmod+1
  3799  1282  0872               	movf	___awmod@dividend,w
  3800  1283  00F0               	movwf	?___awmod
  3801  1284  0008               	return
  3802  1285                     __end_of___awmod:	
  3803                           
  3804                           	psect	text4
  3805  1285                     __ptext4:	
  3806 ;; *************** function ___awdiv *****************
  3807 ;; Defined at:
  3808 ;;		line 5 in file "D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\awdiv.c"
  3809 ;; Parameters:    Size  Location     Type
  3810 ;;  divisor         2    7[COMMON] int 
  3811 ;;  dividend        2    9[COMMON] int 
  3812 ;; Auto vars:     Size  Location     Type
  3813 ;;  quotient        2    2[BANK0 ] int 
  3814 ;;  sign            1    1[BANK0 ] unsigned char 
  3815 ;;  counter         1    0[BANK0 ] unsigned char 
  3816 ;; Return value:  Size  Location     Type
  3817 ;;                  2    7[COMMON] int 
  3818 ;; Registers used:
  3819 ;;		wreg, status,2, status,0
  3820 ;; Tracked objects:
  3821 ;;		On entry : 0/0
  3822 ;;		On exit  : 0/0
  3823 ;;		Unchanged: 0/0
  3824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3825 ;;      Params:         4       0       0       0       0
  3826 ;;      Locals:         0       4       0       0       0
  3827 ;;      Temps:          1       0       0       0       0
  3828 ;;      Totals:         5       4       0       0       0
  3829 ;;Total ram usage:        9 bytes
  3830 ;; Hardware stack levels used:    1
  3831 ;; This function calls:
  3832 ;;		Nothing
  3833 ;; This function is called by:
  3834 ;;		_scale
  3835 ;;		_sprintf
  3836 ;; This function uses a non-reentrant model
  3837 ;;
  3838                           
  3839                           
  3840                           ;psect for function ___awdiv
  3841  1285                     ___awdiv:	
  3842                           
  3843                           ;incstack = 0
  3844                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3845  1285  1283               	bcf	3,5	;RP0=0, select bank0
  3846  1286  1303               	bcf	3,6	;RP1=0, select bank0
  3847  1287  01A1               	clrf	___awdiv@sign
  3848  1288  1FF8               	btfss	___awdiv@divisor+1,7
  3849  1289  2A91               	goto	l2347
  3850  128A  09F7               	comf	___awdiv@divisor,f
  3851  128B  09F8               	comf	___awdiv@divisor+1,f
  3852  128C  0AF7               	incf	___awdiv@divisor,f
  3853  128D  1903               	skipnz
  3854  128E  0AF8               	incf	___awdiv@divisor+1,f
  3855  128F  01A1               	clrf	___awdiv@sign
  3856  1290  0AA1               	incf	___awdiv@sign,f
  3857  1291                     l2347:	
  3858  1291  1FFA               	btfss	___awdiv@dividend+1,7
  3859  1292  2A9C               	goto	l2353
  3860  1293  09F9               	comf	___awdiv@dividend,f
  3861  1294  09FA               	comf	___awdiv@dividend+1,f
  3862  1295  0AF9               	incf	___awdiv@dividend,f
  3863  1296  1903               	skipnz
  3864  1297  0AFA               	incf	___awdiv@dividend+1,f
  3865  1298  3001               	movlw	1
  3866  1299  00FB               	movwf	??___awdiv
  3867  129A  087B               	movf	??___awdiv,w
  3868  129B  06A1               	xorwf	___awdiv@sign,f
  3869  129C                     l2353:	
  3870  129C  01A2               	clrf	___awdiv@quotient
  3871  129D  01A3               	clrf	___awdiv@quotient+1
  3872  129E  0877               	movf	___awdiv@divisor,w
  3873  129F  0478               	iorwf	___awdiv@divisor+1,w
  3874  12A0  1903               	btfsc	3,2
  3875  12A1  2AD3               	goto	l2375
  3876  12A2  01A0               	clrf	___awdiv@counter
  3877  12A3  0AA0               	incf	___awdiv@counter,f
  3878  12A4                     l2363:	
  3879  12A4  1BF8               	btfsc	___awdiv@divisor+1,7
  3880  12A5  2AB2               	goto	l2365
  3881  12A6  3001               	movlw	1
  3882  12A7                     u2965:	
  3883  12A7  1003               	clrc
  3884  12A8  0DF7               	rlf	___awdiv@divisor,f
  3885  12A9  0DF8               	rlf	___awdiv@divisor+1,f
  3886  12AA  3EFF               	addlw	-1
  3887  12AB  1D03               	skipz
  3888  12AC  2AA7               	goto	u2965
  3889  12AD  3001               	movlw	1
  3890  12AE  00FB               	movwf	??___awdiv
  3891  12AF  087B               	movf	??___awdiv,w
  3892  12B0  07A0               	addwf	___awdiv@counter,f
  3893  12B1  2AA4               	goto	l2363
  3894  12B2                     l2365:	
  3895  12B2  3001               	movlw	1
  3896  12B3                     u2985:	
  3897  12B3  1003               	clrc
  3898  12B4  0DA2               	rlf	___awdiv@quotient,f
  3899  12B5  0DA3               	rlf	___awdiv@quotient+1,f
  3900  12B6  3EFF               	addlw	-1
  3901  12B7  1D03               	skipz
  3902  12B8  2AB3               	goto	u2985
  3903  12B9  0878               	movf	___awdiv@divisor+1,w
  3904  12BA  027A               	subwf	___awdiv@dividend+1,w
  3905  12BB  1D03               	skipz
  3906  12BC  2ABF               	goto	u2995
  3907  12BD  0877               	movf	___awdiv@divisor,w
  3908  12BE  0279               	subwf	___awdiv@dividend,w
  3909  12BF                     u2995:	
  3910  12BF  1C03               	skipc
  3911  12C0  2AC8               	goto	l2371
  3912  12C1  0877               	movf	___awdiv@divisor,w
  3913  12C2  02F9               	subwf	___awdiv@dividend,f
  3914  12C3  0878               	movf	___awdiv@divisor+1,w
  3915  12C4  1C03               	skipc
  3916  12C5  03FA               	decf	___awdiv@dividend+1,f
  3917  12C6  02FA               	subwf	___awdiv@dividend+1,f
  3918  12C7  1422               	bsf	___awdiv@quotient,0
  3919  12C8                     l2371:	
  3920  12C8  3001               	movlw	1
  3921  12C9                     u3005:	
  3922  12C9  1003               	clrc
  3923  12CA  0CF8               	rrf	___awdiv@divisor+1,f
  3924  12CB  0CF7               	rrf	___awdiv@divisor,f
  3925  12CC  3EFF               	addlw	-1
  3926  12CD  1D03               	skipz
  3927  12CE  2AC9               	goto	u3005
  3928  12CF  3001               	movlw	1
  3929  12D0  02A0               	subwf	___awdiv@counter,f
  3930  12D1  1D03               	btfss	3,2
  3931  12D2  2AB2               	goto	l2365
  3932  12D3                     l2375:	
  3933  12D3  0821               	movf	___awdiv@sign,w
  3934  12D4  1903               	btfsc	3,2
  3935  12D5  2ADB               	goto	l2379
  3936  12D6  09A2               	comf	___awdiv@quotient,f
  3937  12D7  09A3               	comf	___awdiv@quotient+1,f
  3938  12D8  0AA2               	incf	___awdiv@quotient,f
  3939  12D9  1903               	skipnz
  3940  12DA  0AA3               	incf	___awdiv@quotient+1,f
  3941  12DB                     l2379:	
  3942  12DB  0823               	movf	___awdiv@quotient+1,w
  3943  12DC  00F8               	movwf	?___awdiv+1
  3944  12DD  0822               	movf	___awdiv@quotient,w
  3945  12DE  00F7               	movwf	?___awdiv
  3946  12DF  0008               	return
  3947  12E0                     __end_of___awdiv:	
  3948                           
  3949                           	psect	text5
  3950  1EAF                     __ptext5:	
  3951 ;; *************** function _isdigit *****************
  3952 ;; Defined at:
  3953 ;;		line 8 in file "D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\isdigit.c"
  3954 ;; Parameters:    Size  Location     Type
  3955 ;;  c               1    wreg     unsigned char 
  3956 ;; Auto vars:     Size  Location     Type
  3957 ;;  c               1    1[COMMON] unsigned char 
  3958 ;; Return value:  Size  Location     Type
  3959 ;;		None               void
  3960 ;; Registers used:
  3961 ;;		wreg, status,2, status,0
  3962 ;; Tracked objects:
  3963 ;;		On entry : 0/0
  3964 ;;		On exit  : 0/0
  3965 ;;		Unchanged: 0/0
  3966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3967 ;;      Params:         0       0       0       0       0
  3968 ;;      Locals:         2       0       0       0       0
  3969 ;;      Temps:          0       0       0       0       0
  3970 ;;      Totals:         2       0       0       0       0
  3971 ;;Total ram usage:        2 bytes
  3972 ;; Hardware stack levels used:    1
  3973 ;; This function calls:
  3974 ;;		Nothing
  3975 ;; This function is called by:
  3976 ;;		_sprintf
  3977 ;; This function uses a non-reentrant model
  3978 ;;
  3979                           
  3980                           
  3981                           ;psect for function _isdigit
  3982  1EAF                     _isdigit:	
  3983                           
  3984                           ;incstack = 0
  3985                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3986                           ;isdigit@c stored from wreg
  3987  1EAF  00F1               	movwf	isdigit@c
  3988  1EB0  01F0               	clrf	_isdigit$803
  3989  1EB1  303A               	movlw	58
  3990  1EB2  0271               	subwf	isdigit@c,w
  3991  1EB3  1803               	skipnc
  3992  1EB4  2EBB               	goto	l2923
  3993  1EB5  3030               	movlw	48
  3994  1EB6  0271               	subwf	isdigit@c,w
  3995  1EB7  1C03               	skipc
  3996  1EB8  2EBB               	goto	l2923
  3997  1EB9  01F0               	clrf	_isdigit$803
  3998  1EBA  0AF0               	incf	_isdigit$803,f
  3999  1EBB                     l2923:	
  4000  1EBB  0C70               	rrf	_isdigit$803,w
  4001  1EBC  0008               	return
  4002  1EBD                     __end_of_isdigit:	
  4003                           
  4004                           	psect	text6
  4005  0004                     __ptext6:	
  4006 ;; *************** function _fround *****************
  4007 ;; Defined at:
  4008 ;;		line 417 in file "D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c"
  4009 ;; Parameters:    Size  Location     Type
  4010 ;;  prec            1    wreg     unsigned char 
  4011 ;; Auto vars:     Size  Location     Type
  4012 ;;  prec            1   49[BANK0 ] unsigned char 
  4013 ;; Return value:  Size  Location     Type
  4014 ;;                  4   30[BANK0 ] unsigned char 
  4015 ;; Registers used:
  4016 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4017 ;; Tracked objects:
  4018 ;;		On entry : 0/0
  4019 ;;		On exit  : 0/0
  4020 ;;		Unchanged: 0/0
  4021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4022 ;;      Params:         0       4       0       0       0
  4023 ;;      Locals:         0       9       0       0       0
  4024 ;;      Temps:          0       7       0       0       0
  4025 ;;      Totals:         0      20       0       0       0
  4026 ;;Total ram usage:       20 bytes
  4027 ;; Hardware stack levels used:    1
  4028 ;; Hardware stack levels required when called:    2
  4029 ;; This function calls:
  4030 ;;		___flmul
  4031 ;;		___lwdiv
  4032 ;;		___lwmod
  4033 ;; This function is called by:
  4034 ;;		_sprintf
  4035 ;; This function uses a non-reentrant model
  4036 ;;
  4037                           
  4038                           
  4039                           ;psect for function _fround
  4040  0004                     _fround:	
  4041                           
  4042                           ;incstack = 0
  4043                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4044                           ;fround@prec stored from wreg
  4045  0004  1283               	bcf	3,5	;RP0=0, select bank0
  4046  0005  1303               	bcf	3,6	;RP1=0, select bank0
  4047  0006  00D1               	movwf	fround@prec
  4048                           
  4049                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 417: fround(unsigned
      +                           char prec);D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 418: {;D:
      +                          \PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 421:  if(prec>=110)
  4050  0007  306E               	movlw	110
  4051  0008  0251               	subwf	fround@prec,w
  4052  0009  1C03               	skipc
  4053  000A  2916               	goto	l2865
  4054                           
  4055                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 422:   return 0.5 * 
      +                          _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4056  000B  303F               	movlw	63
  4057  000C  00A7               	movwf	___flmul@b+3
  4058  000D  3000               	movlw	0
  4059  000E  00A6               	movwf	___flmul@b+2
  4060  000F  3000               	movlw	0
  4061  0010  00A5               	movwf	___flmul@b+1
  4062  0011  3000               	movlw	0
  4063  0012  00A4               	movwf	___flmul@b
  4064  0013  3064               	movlw	100
  4065  0014  00F6               	movwf	___lwdiv@divisor
  4066  0015  3000               	movlw	0
  4067  0016  00F7               	movwf	___lwdiv@divisor+1
  4068  0017  0851               	movf	fround@prec,w
  4069  0018  00C2               	movwf	??_fround
  4070  0019  01C3               	clrf	??_fround+1
  4071  001A  0842               	movf	??_fround,w
  4072  001B  00F8               	movwf	___lwdiv@dividend
  4073  001C  0843               	movf	??_fround+1,w
  4074  001D  00F9               	movwf	___lwdiv@dividend+1
  4075  001E  160A  118A  216C  120A  118A  	fcall	___lwdiv
  4076  0023  0876               	movf	?___lwdiv,w
  4077  0024  1283               	bcf	3,5	;RP0=0, select bank0
  4078  0025  1303               	bcf	3,6	;RP1=0, select bank0
  4079  0026  00C4               	movwf	??_fround+2
  4080  0027  3001               	movlw	1
  4081  0028                     u4175:	
  4082  0028  1003               	clrc
  4083  0029  0DC4               	rlf	??_fround+2,f
  4084  002A  3EFF               	addlw	-1
  4085  002B  1D03               	skipz
  4086  002C  2828               	goto	u4175
  4087  002D  1003               	clrc
  4088  002E  0D44               	rlf	??_fround+2,w
  4089  002F  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4090  0030  0084               	movwf	4
  4091  0031  160A  118A  2000  120A  118A  	fcall	stringdir
  4092  0036  00C5               	movwf	??_fround+3
  4093  0037  160A  118A  2000  120A  118A  	fcall	stringdir
  4094  003C  00C6               	movwf	??_fround+4
  4095  003D  160A  118A  2000  120A  118A  	fcall	stringdir
  4096  0042  00C7               	movwf	??_fround+5
  4097  0043  160A  118A  2000  120A  118A  	fcall	stringdir
  4098  0048  00C8               	movwf	??_fround+6
  4099  0049  0848               	movf	??_fround+6,w
  4100  004A  00AB               	movwf	___flmul@a+3
  4101  004B  0847               	movf	??_fround+5,w
  4102  004C  00AA               	movwf	___flmul@a+2
  4103  004D  0846               	movf	??_fround+4,w
  4104  004E  00A9               	movwf	___flmul@a+1
  4105  004F  0845               	movf	??_fround+3,w
  4106  0050  00A8               	movwf	___flmul@a
  4107  0051  120A  158A  21A2  120A  118A  	fcall	___flmul
  4108  0056  1283               	bcf	3,5	;RP0=0, select bank0
  4109  0057  1303               	bcf	3,6	;RP1=0, select bank0
  4110  0058  0827               	movf	?___flmul+3,w
  4111  0059  00D0               	movwf	_fround$1000+3
  4112  005A  0826               	movf	?___flmul+2,w
  4113  005B  00CF               	movwf	_fround$1000+2
  4114  005C  0825               	movf	?___flmul+1,w
  4115  005D  00CE               	movwf	_fround$1000+1
  4116  005E  0824               	movf	?___flmul,w
  4117  005F  00CD               	movwf	_fround$1000
  4118                           
  4119                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 422:   return 0.5 * 
      +                          _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4120  0060  300A               	movlw	10
  4121  0061  00F6               	movwf	___lwdiv@divisor
  4122  0062  3000               	movlw	0
  4123  0063  00F7               	movwf	___lwdiv@divisor+1
  4124  0064  0851               	movf	fround@prec,w
  4125  0065  00C2               	movwf	??_fround
  4126  0066  01C3               	clrf	??_fround+1
  4127  0067  0842               	movf	??_fround,w
  4128  0068  00F2               	movwf	___lwmod@dividend
  4129  0069  0843               	movf	??_fround+1,w
  4130  006A  00F3               	movwf	___lwmod@dividend+1
  4131  006B  3064               	movlw	100
  4132  006C  00F0               	movwf	___lwmod@divisor
  4133  006D  3000               	movlw	0
  4134  006E  00F1               	movwf	___lwmod@divisor+1
  4135  006F  160A  118A  20C7  120A  118A  	fcall	___lwmod
  4136  0074  0871               	movf	?___lwmod+1,w
  4137  0075  00F9               	movwf	___lwdiv@dividend+1
  4138  0076  0870               	movf	?___lwmod,w
  4139  0077  00F8               	movwf	___lwdiv@dividend
  4140  0078  160A  118A  216C  120A  118A  	fcall	___lwdiv
  4141  007D  0876               	movf	?___lwdiv,w
  4142  007E  1283               	bcf	3,5	;RP0=0, select bank0
  4143  007F  1303               	bcf	3,6	;RP1=0, select bank0
  4144  0080  00C4               	movwf	??_fround+2
  4145  0081  3001               	movlw	1
  4146  0082                     u4185:	
  4147  0082  1003               	clrc
  4148  0083  0DC4               	rlf	??_fround+2,f
  4149  0084  3EFF               	addlw	-1
  4150  0085  1D03               	skipz
  4151  0086  2882               	goto	u4185
  4152  0087  1003               	clrc
  4153  0088  0D44               	rlf	??_fround+2,w
  4154  0089  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4155  008A  0084               	movwf	4
  4156  008B  160A  118A  2000  120A  118A  	fcall	stringdir
  4157  0090  00C5               	movwf	??_fround+3
  4158  0091  160A  118A  2000  120A  118A  	fcall	stringdir
  4159  0096  00C6               	movwf	??_fround+4
  4160  0097  160A  118A  2000  120A  118A  	fcall	stringdir
  4161  009C  00C7               	movwf	??_fround+5
  4162  009D  160A  118A  2000  120A  118A  	fcall	stringdir
  4163  00A2  00C8               	movwf	??_fround+6
  4164  00A3  0848               	movf	??_fround+6,w
  4165  00A4  00A7               	movwf	___flmul@b+3
  4166  00A5  0847               	movf	??_fround+5,w
  4167  00A6  00A6               	movwf	___flmul@b+2
  4168  00A7  0846               	movf	??_fround+4,w
  4169  00A8  00A5               	movwf	___flmul@b+1
  4170  00A9  0845               	movf	??_fround+3,w
  4171  00AA  00A4               	movwf	___flmul@b
  4172  00AB  0850               	movf	_fround$1000+3,w
  4173  00AC  00AB               	movwf	___flmul@a+3
  4174  00AD  084F               	movf	_fround$1000+2,w
  4175  00AE  00AA               	movwf	___flmul@a+2
  4176  00AF  084E               	movf	_fround$1000+1,w
  4177  00B0  00A9               	movwf	___flmul@a+1
  4178  00B1  084D               	movf	_fround$1000,w
  4179  00B2  00A8               	movwf	___flmul@a
  4180  00B3  120A  158A  21A2  120A  118A  	fcall	___flmul
  4181  00B8  1283               	bcf	3,5	;RP0=0, select bank0
  4182  00B9  1303               	bcf	3,6	;RP1=0, select bank0
  4183  00BA  0827               	movf	?___flmul+3,w
  4184  00BB  00CC               	movwf	_fround$1001+3
  4185  00BC  0826               	movf	?___flmul+2,w
  4186  00BD  00CB               	movwf	_fround$1001+2
  4187  00BE  0825               	movf	?___flmul+1,w
  4188  00BF  00CA               	movwf	_fround$1001+1
  4189  00C0  0824               	movf	?___flmul,w
  4190  00C1  00C9               	movwf	_fround$1001
  4191                           
  4192                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 422:   return 0.5 * 
      +                          _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4193  00C2  300A               	movlw	10
  4194  00C3  00F0               	movwf	___lwmod@divisor
  4195  00C4  3000               	movlw	0
  4196  00C5  00F1               	movwf	___lwmod@divisor+1
  4197  00C6  0851               	movf	fround@prec,w
  4198  00C7  00C2               	movwf	??_fround
  4199  00C8  01C3               	clrf	??_fround+1
  4200  00C9  0842               	movf	??_fround,w
  4201  00CA  00F2               	movwf	___lwmod@dividend
  4202  00CB  0843               	movf	??_fround+1,w
  4203  00CC  00F3               	movwf	___lwmod@dividend+1
  4204  00CD  160A  118A  20C7  120A  118A  	fcall	___lwmod
  4205  00D2  0870               	movf	?___lwmod,w
  4206  00D3  1283               	bcf	3,5	;RP0=0, select bank0
  4207  00D4  1303               	bcf	3,6	;RP1=0, select bank0
  4208  00D5  00C4               	movwf	??_fround+2
  4209  00D6  3001               	movlw	1
  4210  00D7                     u4195:	
  4211  00D7  1003               	clrc
  4212  00D8  0DC4               	rlf	??_fround+2,f
  4213  00D9  3EFF               	addlw	-1
  4214  00DA  1D03               	skipz
  4215  00DB  28D7               	goto	u4195
  4216  00DC  1003               	clrc
  4217  00DD  0D44               	rlf	??_fround+2,w
  4218  00DE  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4219  00DF  0084               	movwf	4
  4220  00E0  160A  118A  2000  120A  118A  	fcall	stringdir
  4221  00E5  00C5               	movwf	??_fround+3
  4222  00E6  160A  118A  2000  120A  118A  	fcall	stringdir
  4223  00EB  00C6               	movwf	??_fround+4
  4224  00EC  160A  118A  2000  120A  118A  	fcall	stringdir
  4225  00F1  00C7               	movwf	??_fround+5
  4226  00F2  160A  118A  2000  120A  118A  	fcall	stringdir
  4227  00F7  00C8               	movwf	??_fround+6
  4228  00F8  0848               	movf	??_fround+6,w
  4229  00F9  00A7               	movwf	___flmul@b+3
  4230  00FA  0847               	movf	??_fround+5,w
  4231  00FB  00A6               	movwf	___flmul@b+2
  4232  00FC  0846               	movf	??_fround+4,w
  4233  00FD  00A5               	movwf	___flmul@b+1
  4234  00FE  0845               	movf	??_fround+3,w
  4235  00FF  00A4               	movwf	___flmul@b
  4236  0100  084C               	movf	_fround$1001+3,w
  4237  0101  00AB               	movwf	___flmul@a+3
  4238  0102  084B               	movf	_fround$1001+2,w
  4239  0103  00AA               	movwf	___flmul@a+2
  4240  0104  084A               	movf	_fround$1001+1,w
  4241  0105  00A9               	movwf	___flmul@a+1
  4242  0106  0849               	movf	_fround$1001,w
  4243  0107  00A8               	movwf	___flmul@a
  4244  0108  120A  158A  21A2   	fcall	___flmul
  4245  010B  1283               	bcf	3,5	;RP0=0, select bank0
  4246  010C  1303               	bcf	3,6	;RP1=0, select bank0
  4247  010D  0827               	movf	?___flmul+3,w
  4248  010E  00C1               	movwf	?_fround+3
  4249  010F  0826               	movf	?___flmul+2,w
  4250  0110  00C0               	movwf	?_fround+2
  4251  0111  0825               	movf	?___flmul+1,w
  4252  0112  00BF               	movwf	?_fround+1
  4253  0113  0824               	movf	?___flmul,w
  4254  0114  00BE               	movwf	?_fround
  4255  0115  0008               	return
  4256  0116                     l2865:	
  4257  0116  300B               	movlw	11
  4258  0117  0251               	subwf	fround@prec,w
  4259  0118  1C03               	skipc
  4260  0119  29C3               	goto	l2871
  4261                           
  4262                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 424:   return 0.5 * 
      +                          _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4263  011A  303F               	movlw	63
  4264  011B  00A7               	movwf	___flmul@b+3
  4265  011C  3000               	movlw	0
  4266  011D  00A6               	movwf	___flmul@b+2
  4267  011E  3000               	movlw	0
  4268  011F  00A5               	movwf	___flmul@b+1
  4269  0120  3000               	movlw	0
  4270  0121  00A4               	movwf	___flmul@b
  4271  0122  300A               	movlw	10
  4272  0123  00F6               	movwf	___lwdiv@divisor
  4273  0124  3000               	movlw	0
  4274  0125  00F7               	movwf	___lwdiv@divisor+1
  4275  0126  0851               	movf	fround@prec,w
  4276  0127  00C2               	movwf	??_fround
  4277  0128  01C3               	clrf	??_fround+1
  4278  0129  0842               	movf	??_fround,w
  4279  012A  00F8               	movwf	___lwdiv@dividend
  4280  012B  0843               	movf	??_fround+1,w
  4281  012C  00F9               	movwf	___lwdiv@dividend+1
  4282  012D  160A  118A  216C  120A  118A  	fcall	___lwdiv
  4283  0132  0876               	movf	?___lwdiv,w
  4284  0133  1283               	bcf	3,5	;RP0=0, select bank0
  4285  0134  1303               	bcf	3,6	;RP1=0, select bank0
  4286  0135  00C4               	movwf	??_fround+2
  4287  0136  3001               	movlw	1
  4288  0137                     u4215:	
  4289  0137  1003               	clrc
  4290  0138  0DC4               	rlf	??_fround+2,f
  4291  0139  3EFF               	addlw	-1
  4292  013A  1D03               	skipz
  4293  013B  2937               	goto	u4215
  4294  013C  1003               	clrc
  4295  013D  0D44               	rlf	??_fround+2,w
  4296  013E  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4297  013F  0084               	movwf	4
  4298  0140  160A  118A  2000  120A  118A  	fcall	stringdir
  4299  0145  00C5               	movwf	??_fround+3
  4300  0146  160A  118A  2000  120A  118A  	fcall	stringdir
  4301  014B  00C6               	movwf	??_fround+4
  4302  014C  160A  118A  2000  120A  118A  	fcall	stringdir
  4303  0151  00C7               	movwf	??_fround+5
  4304  0152  160A  118A  2000  120A  118A  	fcall	stringdir
  4305  0157  00C8               	movwf	??_fround+6
  4306  0158  0848               	movf	??_fround+6,w
  4307  0159  00AB               	movwf	___flmul@a+3
  4308  015A  0847               	movf	??_fround+5,w
  4309  015B  00AA               	movwf	___flmul@a+2
  4310  015C  0846               	movf	??_fround+4,w
  4311  015D  00A9               	movwf	___flmul@a+1
  4312  015E  0845               	movf	??_fround+3,w
  4313  015F  00A8               	movwf	___flmul@a
  4314  0160  120A  158A  21A2  120A  118A  	fcall	___flmul
  4315  0165  1283               	bcf	3,5	;RP0=0, select bank0
  4316  0166  1303               	bcf	3,6	;RP1=0, select bank0
  4317  0167  0827               	movf	?___flmul+3,w
  4318  0168  00D0               	movwf	_fround$1000+3
  4319  0169  0826               	movf	?___flmul+2,w
  4320  016A  00CF               	movwf	_fround$1000+2
  4321  016B  0825               	movf	?___flmul+1,w
  4322  016C  00CE               	movwf	_fround$1000+1
  4323  016D  0824               	movf	?___flmul,w
  4324  016E  00CD               	movwf	_fround$1000
  4325                           
  4326                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 424:   return 0.5 * 
      +                          _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4327  016F  300A               	movlw	10
  4328  0170  00F0               	movwf	___lwmod@divisor
  4329  0171  3000               	movlw	0
  4330  0172  00F1               	movwf	___lwmod@divisor+1
  4331  0173  0851               	movf	fround@prec,w
  4332  0174  00C2               	movwf	??_fround
  4333  0175  01C3               	clrf	??_fround+1
  4334  0176  0842               	movf	??_fround,w
  4335  0177  00F2               	movwf	___lwmod@dividend
  4336  0178  0843               	movf	??_fround+1,w
  4337  0179  00F3               	movwf	___lwmod@dividend+1
  4338  017A  160A  118A  20C7  120A  118A  	fcall	___lwmod
  4339  017F  0870               	movf	?___lwmod,w
  4340  0180  1283               	bcf	3,5	;RP0=0, select bank0
  4341  0181  1303               	bcf	3,6	;RP1=0, select bank0
  4342  0182  00C4               	movwf	??_fround+2
  4343  0183  3001               	movlw	1
  4344  0184                     u4225:	
  4345  0184  1003               	clrc
  4346  0185  0DC4               	rlf	??_fround+2,f
  4347  0186  3EFF               	addlw	-1
  4348  0187  1D03               	skipz
  4349  0188  2984               	goto	u4225
  4350  0189  1003               	clrc
  4351  018A  0D44               	rlf	??_fround+2,w
  4352  018B  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4353  018C  0084               	movwf	4
  4354  018D  160A  118A  2000  120A  118A  	fcall	stringdir
  4355  0192  00C5               	movwf	??_fround+3
  4356  0193  160A  118A  2000  120A  118A  	fcall	stringdir
  4357  0198  00C6               	movwf	??_fround+4
  4358  0199  160A  118A  2000  120A  118A  	fcall	stringdir
  4359  019E  00C7               	movwf	??_fround+5
  4360  019F  160A  118A  2000  120A  118A  	fcall	stringdir
  4361  01A4  00C8               	movwf	??_fround+6
  4362  01A5  0848               	movf	??_fround+6,w
  4363  01A6  00A7               	movwf	___flmul@b+3
  4364  01A7  0847               	movf	??_fround+5,w
  4365  01A8  00A6               	movwf	___flmul@b+2
  4366  01A9  0846               	movf	??_fround+4,w
  4367  01AA  00A5               	movwf	___flmul@b+1
  4368  01AB  0845               	movf	??_fround+3,w
  4369  01AC  00A4               	movwf	___flmul@b
  4370  01AD  0850               	movf	_fround$1000+3,w
  4371  01AE  00AB               	movwf	___flmul@a+3
  4372  01AF  084F               	movf	_fround$1000+2,w
  4373  01B0  00AA               	movwf	___flmul@a+2
  4374  01B1  084E               	movf	_fround$1000+1,w
  4375  01B2  00A9               	movwf	___flmul@a+1
  4376  01B3  084D               	movf	_fround$1000,w
  4377  01B4  00A8               	movwf	___flmul@a
  4378  01B5  120A  158A  21A2   	fcall	___flmul
  4379  01B8  1283               	bcf	3,5	;RP0=0, select bank0
  4380  01B9  1303               	bcf	3,6	;RP1=0, select bank0
  4381  01BA  0827               	movf	?___flmul+3,w
  4382  01BB  00C1               	movwf	?_fround+3
  4383  01BC  0826               	movf	?___flmul+2,w
  4384  01BD  00C0               	movwf	?_fround+2
  4385  01BE  0825               	movf	?___flmul+1,w
  4386  01BF  00BF               	movwf	?_fround+1
  4387  01C0  0824               	movf	?___flmul,w
  4388  01C1  00BE               	movwf	?_fround
  4389  01C2  0008               	return
  4390  01C3                     l2871:	
  4391                           
  4392                           ;D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\doprnt.c: 425:  return 0.5 * _
      +                          npowers_[prec];
  4393  01C3  303F               	movlw	63
  4394  01C4  00A7               	movwf	___flmul@b+3
  4395  01C5  3000               	movlw	0
  4396  01C6  00A6               	movwf	___flmul@b+2
  4397  01C7  3000               	movlw	0
  4398  01C8  00A5               	movwf	___flmul@b+1
  4399  01C9  3000               	movlw	0
  4400  01CA  00A4               	movwf	___flmul@b
  4401  01CB  0851               	movf	fround@prec,w
  4402  01CC  00C2               	movwf	??_fround
  4403  01CD  3001               	movlw	1
  4404  01CE                     u4235:	
  4405  01CE  1003               	clrc
  4406  01CF  0DC2               	rlf	??_fround,f
  4407  01D0  3EFF               	addlw	-1
  4408  01D1  1D03               	skipz
  4409  01D2  29CE               	goto	u4235
  4410  01D3  1003               	clrc
  4411  01D4  0D42               	rlf	??_fround,w
  4412  01D5  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4413  01D6  0084               	movwf	4
  4414  01D7  160A  118A  2000  120A  118A  	fcall	stringdir
  4415  01DC  00C3               	movwf	??_fround+1
  4416  01DD  160A  118A  2000  120A  118A  	fcall	stringdir
  4417  01E2  00C4               	movwf	??_fround+2
  4418  01E3  160A  118A  2000  120A  118A  	fcall	stringdir
  4419  01E8  00C5               	movwf	??_fround+3
  4420  01E9  160A  118A  2000  120A  118A  	fcall	stringdir
  4421  01EE  00C6               	movwf	??_fround+4
  4422  01EF  0846               	movf	??_fround+4,w
  4423  01F0  00AB               	movwf	___flmul@a+3
  4424  01F1  0845               	movf	??_fround+3,w
  4425  01F2  00AA               	movwf	___flmul@a+2
  4426  01F3  0844               	movf	??_fround+2,w
  4427  01F4  00A9               	movwf	___flmul@a+1
  4428  01F5  0843               	movf	??_fround+1,w
  4429  01F6  00A8               	movwf	___flmul@a
  4430  01F7  120A  158A  21A2   	fcall	___flmul
  4431  01FA  1283               	bcf	3,5	;RP0=0, select bank0
  4432  01FB  1303               	bcf	3,6	;RP1=0, select bank0
  4433  01FC  0827               	movf	?___flmul+3,w
  4434  01FD  00C1               	movwf	?_fround+3
  4435  01FE  0826               	movf	?___flmul+2,w
  4436  01FF  00C0               	movwf	?_fround+2
  4437  0200  0825               	movf	?___flmul+1,w
  4438  0201  00BF               	movwf	?_fround+1
  4439  0202  0824               	movf	?___flmul,w
  4440  0203  00BE               	movwf	?_fround
  4441  0204  0008               	return
  4442  0205                     __end_of_fround:	
  4443                           
  4444                           	psect	text7
  4445  10C7                     __ptext7:	
  4446 ;; *************** function ___lwmod *****************
  4447 ;; Defined at:
  4448 ;;		line 5 in file "D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\lwmod.c"
  4449 ;; Parameters:    Size  Location     Type
  4450 ;;  divisor         2    0[COMMON] unsigned int 
  4451 ;;  dividend        2    2[COMMON] unsigned int 
  4452 ;; Auto vars:     Size  Location     Type
  4453 ;;  counter         1    5[COMMON] unsigned char 
  4454 ;; Return value:  Size  Location     Type
  4455 ;;                  2    0[COMMON] unsigned int 
  4456 ;; Registers used:
  4457 ;;		wreg, status,2, status,0
  4458 ;; Tracked objects:
  4459 ;;		On entry : 0/0
  4460 ;;		On exit  : 0/0
  4461 ;;		Unchanged: 0/0
  4462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4463 ;;      Params:         4       0       0       0       0
  4464 ;;      Locals:         1       0       0       0       0
  4465 ;;      Temps:          1       0       0       0       0
  4466 ;;      Totals:         6       0       0       0       0
  4467 ;;Total ram usage:        6 bytes
  4468 ;; Hardware stack levels used:    1
  4469 ;; This function calls:
  4470 ;;		Nothing
  4471 ;; This function is called by:
  4472 ;;		_fround
  4473 ;; This function uses a non-reentrant model
  4474 ;;
  4475                           
  4476                           
  4477                           ;psect for function ___lwmod
  4478  10C7                     ___lwmod:	
  4479                           
  4480                           ;incstack = 0
  4481                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4482  10C7  0870               	movf	___lwmod@divisor,w
  4483  10C8  0471               	iorwf	___lwmod@divisor+1,w
  4484  10C9  1903               	btfsc	3,2
  4485  10CA  28F4               	goto	l2465
  4486  10CB  01F5               	clrf	___lwmod@counter
  4487  10CC  0AF5               	incf	___lwmod@counter,f
  4488  10CD                     l2455:	
  4489  10CD  1BF1               	btfsc	___lwmod@divisor+1,7
  4490  10CE  28DB               	goto	l2457
  4491  10CF  3001               	movlw	1
  4492  10D0                     u3205:	
  4493  10D0  1003               	clrc
  4494  10D1  0DF0               	rlf	___lwmod@divisor,f
  4495  10D2  0DF1               	rlf	___lwmod@divisor+1,f
  4496  10D3  3EFF               	addlw	-1
  4497  10D4  1D03               	skipz
  4498  10D5  28D0               	goto	u3205
  4499  10D6  3001               	movlw	1
  4500  10D7  00F4               	movwf	??___lwmod
  4501  10D8  0874               	movf	??___lwmod,w
  4502  10D9  07F5               	addwf	___lwmod@counter,f
  4503  10DA  28CD               	goto	l2455
  4504  10DB                     l2457:	
  4505  10DB  0871               	movf	___lwmod@divisor+1,w
  4506  10DC  0273               	subwf	___lwmod@dividend+1,w
  4507  10DD  1D03               	skipz
  4508  10DE  28E1               	goto	u3225
  4509  10DF  0870               	movf	___lwmod@divisor,w
  4510  10E0  0272               	subwf	___lwmod@dividend,w
  4511  10E1                     u3225:	
  4512  10E1  1C03               	skipc
  4513  10E2  28E9               	goto	l2461
  4514  10E3  0870               	movf	___lwmod@divisor,w
  4515  10E4  02F2               	subwf	___lwmod@dividend,f
  4516  10E5  0871               	movf	___lwmod@divisor+1,w
  4517  10E6  1C03               	skipc
  4518  10E7  03F3               	decf	___lwmod@dividend+1,f
  4519  10E8  02F3               	subwf	___lwmod@dividend+1,f
  4520  10E9                     l2461:	
  4521  10E9  3001               	movlw	1
  4522  10EA                     u3235:	
  4523  10EA  1003               	clrc
  4524  10EB  0CF1               	rrf	___lwmod@divisor+1,f
  4525  10EC  0CF0               	rrf	___lwmod@divisor,f
  4526  10ED  3EFF               	addlw	-1
  4527  10EE  1D03               	skipz
  4528  10EF  28EA               	goto	u3235
  4529  10F0  3001               	movlw	1
  4530  10F1  02F5               	subwf	___lwmod@counter,f
  4531  10F2  1D03               	btfss	3,2
  4532  10F3  28DB               	goto	l2457
  4533  10F4                     l2465:	
  4534  10F4  0873               	movf	___lwmod@dividend+1,w
  4535  10F5  00F1               	movwf	?___lwmod+1
  4536  10F6  0872               	movf	___lwmod@dividend,w
  4537  10F7  00F0               	movwf	?___lwmod
  4538  10F8  0008               	return
  4539  10F9                     __end_of___lwmod:	
  4540                           
  4541                           	psect	text8
  4542  116C                     __ptext8:	
  4543 ;; *************** function ___lwdiv *****************
  4544 ;; Defined at:
  4545 ;;		line 5 in file "D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\lwdiv.c"
  4546 ;; Parameters:    Size  Location     Type
  4547 ;;  divisor         2    6[COMMON] unsigned int 
  4548 ;;  dividend        2    8[COMMON] unsigned int 
  4549 ;; Auto vars:     Size  Location     Type
  4550 ;;  quotient        2   11[COMMON] unsigned int 
  4551 ;;  counter         1   13[COMMON] unsigned char 
  4552 ;; Return value:  Size  Location     Type
  4553 ;;                  2    6[COMMON] unsigned int 
  4554 ;; Registers used:
  4555 ;;		wreg, status,2, status,0
  4556 ;; Tracked objects:
  4557 ;;		On entry : 0/0
  4558 ;;		On exit  : 0/0
  4559 ;;		Unchanged: 0/0
  4560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4561 ;;      Params:         4       0       0       0       0
  4562 ;;      Locals:         3       0       0       0       0
  4563 ;;      Temps:          1       0       0       0       0
  4564 ;;      Totals:         8       0       0       0       0
  4565 ;;Total ram usage:        8 bytes
  4566 ;; Hardware stack levels used:    1
  4567 ;; This function calls:
  4568 ;;		Nothing
  4569 ;; This function is called by:
  4570 ;;		_fround
  4571 ;; This function uses a non-reentrant model
  4572 ;;
  4573                           
  4574                           
  4575                           ;psect for function ___lwdiv
  4576  116C                     ___lwdiv:	
  4577                           
  4578                           ;incstack = 0
  4579                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4580  116C  01FB               	clrf	___lwdiv@quotient
  4581  116D  01FC               	clrf	___lwdiv@quotient+1
  4582  116E  0876               	movf	___lwdiv@divisor,w
  4583  116F  0477               	iorwf	___lwdiv@divisor+1,w
  4584  1170  1903               	btfsc	3,2
  4585  1171  29A3               	goto	l2443
  4586  1172  01FD               	clrf	___lwdiv@counter
  4587  1173  0AFD               	incf	___lwdiv@counter,f
  4588  1174                     l2431:	
  4589  1174  1BF7               	btfsc	___lwdiv@divisor+1,7
  4590  1175  2982               	goto	l2433
  4591  1176  3001               	movlw	1
  4592  1177                     u3135:	
  4593  1177  1003               	clrc
  4594  1178  0DF6               	rlf	___lwdiv@divisor,f
  4595  1179  0DF7               	rlf	___lwdiv@divisor+1,f
  4596  117A  3EFF               	addlw	-1
  4597  117B  1D03               	skipz
  4598  117C  2977               	goto	u3135
  4599  117D  3001               	movlw	1
  4600  117E  00FA               	movwf	??___lwdiv
  4601  117F  087A               	movf	??___lwdiv,w
  4602  1180  07FD               	addwf	___lwdiv@counter,f
  4603  1181  2974               	goto	l2431
  4604  1182                     l2433:	
  4605  1182  3001               	movlw	1
  4606  1183                     u3155:	
  4607  1183  1003               	clrc
  4608  1184  0DFB               	rlf	___lwdiv@quotient,f
  4609  1185  0DFC               	rlf	___lwdiv@quotient+1,f
  4610  1186  3EFF               	addlw	-1
  4611  1187  1D03               	skipz
  4612  1188  2983               	goto	u3155
  4613  1189  0877               	movf	___lwdiv@divisor+1,w
  4614  118A  0279               	subwf	___lwdiv@dividend+1,w
  4615  118B  1D03               	skipz
  4616  118C  298F               	goto	u3165
  4617  118D  0876               	movf	___lwdiv@divisor,w
  4618  118E  0278               	subwf	___lwdiv@dividend,w
  4619  118F                     u3165:	
  4620  118F  1C03               	skipc
  4621  1190  2998               	goto	l2439
  4622  1191  0876               	movf	___lwdiv@divisor,w
  4623  1192  02F8               	subwf	___lwdiv@dividend,f
  4624  1193  0877               	movf	___lwdiv@divisor+1,w
  4625  1194  1C03               	skipc
  4626  1195  03F9               	decf	___lwdiv@dividend+1,f
  4627  1196  02F9               	subwf	___lwdiv@dividend+1,f
  4628  1197  147B               	bsf	___lwdiv@quotient,0
  4629  1198                     l2439:	
  4630  1198  3001               	movlw	1
  4631  1199                     u3175:	
  4632  1199  1003               	clrc
  4633  119A  0CF7               	rrf	___lwdiv@divisor+1,f
  4634  119B  0CF6               	rrf	___lwdiv@divisor,f
  4635  119C  3EFF               	addlw	-1
  4636  119D  1D03               	skipz
  4637  119E  2999               	goto	u3175
  4638  119F  3001               	movlw	1
  4639  11A0  02FD               	subwf	___lwdiv@counter,f
  4640  11A1  1D03               	btfss	3,2
  4641  11A2  2982               	goto	l2433
  4642  11A3                     l2443:	
  4643  11A3  087C               	movf	___lwdiv@quotient+1,w
  4644  11A4  00F7               	movwf	?___lwdiv+1
  4645  11A5  087B               	movf	___lwdiv@quotient,w
  4646  11A6  00F6               	movwf	?___lwdiv
  4647  11A7  0008               	return
  4648  11A8                     __end_of___lwdiv:	
  4649                           
  4650                           	psect	text9
  4651  09A2                     __ptext9:	
  4652 ;; *************** function ___flmul *****************
  4653 ;; Defined at:
  4654 ;;		line 8 in file "D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\sprcmul.c"
  4655 ;; Parameters:    Size  Location     Type
  4656 ;;  b               4    4[BANK0 ] unsigned int 
  4657 ;;  a               4    8[BANK0 ] unsigned int 
  4658 ;; Auto vars:     Size  Location     Type
  4659 ;;  prod            4   24[BANK0 ] struct .
  4660 ;;  grs             4   18[BANK0 ] unsigned long 
  4661 ;;  temp            2   28[BANK0 ] struct .
  4662 ;;  bexp            1   23[BANK0 ] unsigned char 
  4663 ;;  aexp            1   22[BANK0 ] unsigned char 
  4664 ;;  sign            1   17[BANK0 ] unsigned char 
  4665 ;; Return value:  Size  Location     Type
  4666 ;;                  4    4[BANK0 ] unsigned char 
  4667 ;; Registers used:
  4668 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4669 ;; Tracked objects:
  4670 ;;		On entry : 0/0
  4671 ;;		On exit  : 0/0
  4672 ;;		Unchanged: 0/0
  4673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4674 ;;      Params:         0       8       0       0       0
  4675 ;;      Locals:         0      13       0       0       0
  4676 ;;      Temps:          0       5       0       0       0
  4677 ;;      Totals:         0      26       0       0       0
  4678 ;;Total ram usage:       26 bytes
  4679 ;; Hardware stack levels used:    1
  4680 ;; Hardware stack levels required when called:    1
  4681 ;; This function calls:
  4682 ;;		__Umul8_16
  4683 ;; This function is called by:
  4684 ;;		_fround
  4685 ;;		_scale
  4686 ;;		_sprintf
  4687 ;; This function uses a non-reentrant model
  4688 ;;
  4689                           
  4690                           
  4691                           ;psect for function ___flmul
  4692  09A2                     ___flmul:	
  4693                           
  4694                           ;incstack = 0
  4695                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4696  09A2  1283               	bcf	3,5	;RP0=0, select bank0
  4697  09A3  1303               	bcf	3,6	;RP1=0, select bank0
  4698  09A4  0827               	movf	___flmul@b+3,w
  4699  09A5  3980               	andlw	128
  4700  09A6  00AC               	movwf	??___flmul
  4701  09A7  082C               	movf	??___flmul,w
  4702  09A8  00B1               	movwf	___flmul@sign
  4703  09A9  0827               	movf	___flmul@b+3,w
  4704  09AA  00AC               	movwf	??___flmul
  4705  09AB  072C               	addwf	??___flmul,w
  4706  09AC  00AD               	movwf	??___flmul+1
  4707  09AD  082D               	movf	??___flmul+1,w
  4708  09AE  00B7               	movwf	___flmul@bexp
  4709  09AF  1BA6               	btfsc	___flmul@b+2,7
  4710  09B0  1437               	bsf	___flmul@bexp,0
  4711  09B1  0837               	movf	___flmul@bexp,w
  4712  09B2  1903               	btfsc	3,2
  4713  09B3  29C1               	goto	l2679
  4714  09B4  0A37               	incf	___flmul@bexp,w
  4715  09B5  1D03               	btfss	3,2
  4716  09B6  29BF               	goto	l2677
  4717  09B7  3000               	movlw	0
  4718  09B8  00A7               	movwf	___flmul@b+3
  4719  09B9  3000               	movlw	0
  4720  09BA  00A6               	movwf	___flmul@b+2
  4721  09BB  3000               	movlw	0
  4722  09BC  00A5               	movwf	___flmul@b+1
  4723  09BD  3000               	movlw	0
  4724  09BE  00A4               	movwf	___flmul@b
  4725  09BF                     l2677:	
  4726  09BF  17A6               	bsf	___flmul@b+2,7
  4727  09C0  29C9               	goto	l2681
  4728  09C1                     l2679:	
  4729  09C1  3000               	movlw	0
  4730  09C2  00A7               	movwf	___flmul@b+3
  4731  09C3  3000               	movlw	0
  4732  09C4  00A6               	movwf	___flmul@b+2
  4733  09C5  3000               	movlw	0
  4734  09C6  00A5               	movwf	___flmul@b+1
  4735  09C7  3000               	movlw	0
  4736  09C8  00A4               	movwf	___flmul@b
  4737  09C9                     l2681:	
  4738  09C9  082B               	movf	___flmul@a+3,w
  4739  09CA  3980               	andlw	128
  4740  09CB  00AC               	movwf	??___flmul
  4741  09CC  082C               	movf	??___flmul,w
  4742  09CD  06B1               	xorwf	___flmul@sign,f
  4743  09CE  082B               	movf	___flmul@a+3,w
  4744  09CF  00AC               	movwf	??___flmul
  4745  09D0  072C               	addwf	??___flmul,w
  4746  09D1  00AD               	movwf	??___flmul+1
  4747  09D2  082D               	movf	??___flmul+1,w
  4748  09D3  00B6               	movwf	___flmul@aexp
  4749  09D4  1BAA               	btfsc	___flmul@a+2,7
  4750  09D5  1436               	bsf	___flmul@aexp,0
  4751  09D6  0836               	movf	___flmul@aexp,w
  4752  09D7  1903               	btfsc	3,2
  4753  09D8  29E6               	goto	l2697
  4754  09D9  0A36               	incf	___flmul@aexp,w
  4755  09DA  1D03               	btfss	3,2
  4756  09DB  29E4               	goto	l2695
  4757  09DC  3000               	movlw	0
  4758  09DD  00AB               	movwf	___flmul@a+3
  4759  09DE  3000               	movlw	0
  4760  09DF  00AA               	movwf	___flmul@a+2
  4761  09E0  3000               	movlw	0
  4762  09E1  00A9               	movwf	___flmul@a+1
  4763  09E2  3000               	movlw	0
  4764  09E3  00A8               	movwf	___flmul@a
  4765  09E4                     l2695:	
  4766  09E4  17AA               	bsf	___flmul@a+2,7
  4767  09E5  29EE               	goto	l2699
  4768  09E6                     l2697:	
  4769  09E6  3000               	movlw	0
  4770  09E7  00AB               	movwf	___flmul@a+3
  4771  09E8  3000               	movlw	0
  4772  09E9  00AA               	movwf	___flmul@a+2
  4773  09EA  3000               	movlw	0
  4774  09EB  00A9               	movwf	___flmul@a+1
  4775  09EC  3000               	movlw	0
  4776  09ED  00A8               	movwf	___flmul@a
  4777  09EE                     l2699:	
  4778  09EE  0836               	movf	___flmul@aexp,w
  4779  09EF  1D03               	btfss	3,2
  4780  09F0  0837               	movf	___flmul@bexp,w
  4781  09F1  1D03               	btfss	3,2
  4782  09F2  29FC               	goto	l2707
  4783  09F3  3000               	movlw	0
  4784  09F4  00A7               	movwf	?___flmul+3
  4785  09F5  3000               	movlw	0
  4786  09F6  00A6               	movwf	?___flmul+2
  4787  09F7  3000               	movlw	0
  4788  09F8  00A5               	movwf	?___flmul+1
  4789  09F9  3000               	movlw	0
  4790  09FA  00A4               	movwf	?___flmul
  4791  09FB  0008               	return
  4792  09FC                     l2707:	
  4793  09FC  0824               	movf	___flmul@b,w
  4794  09FD  00AC               	movwf	??___flmul
  4795  09FE  082C               	movf	??___flmul,w
  4796  09FF  00F0               	movwf	__Umul8_16@multiplicand
  4797  0A00  082A               	movf	___flmul@a+2,w
  4798  0A01  160A  118A  20A4  120A  158A  	fcall	__Umul8_16
  4799  0A06  0871               	movf	?__Umul8_16+1,w
  4800  0A07  1283               	bcf	3,5	;RP0=0, select bank0
  4801  0A08  1303               	bcf	3,6	;RP1=0, select bank0
  4802  0A09  00BD               	movwf	___flmul@temp+1
  4803  0A0A  0870               	movf	?__Umul8_16,w
  4804  0A0B  00BC               	movwf	___flmul@temp
  4805  0A0C  083C               	movf	___flmul@temp,w
  4806  0A0D  00AC               	movwf	??___flmul
  4807  0A0E  01AD               	clrf	??___flmul+1
  4808  0A0F  01AE               	clrf	??___flmul+2
  4809  0A10  01AF               	clrf	??___flmul+3
  4810  0A11  082F               	movf	??___flmul+3,w
  4811  0A12  00B5               	movwf	___flmul@grs+3
  4812  0A13  082E               	movf	??___flmul+2,w
  4813  0A14  00B4               	movwf	___flmul@grs+2
  4814  0A15  082D               	movf	??___flmul+1,w
  4815  0A16  00B3               	movwf	___flmul@grs+1
  4816  0A17  082C               	movf	??___flmul,w
  4817  0A18  00B2               	movwf	___flmul@grs
  4818  0A19  083D               	movf	___flmul@temp+1,w
  4819  0A1A  00AC               	movwf	??___flmul
  4820  0A1B  01AD               	clrf	??___flmul+1
  4821  0A1C  01AE               	clrf	??___flmul+2
  4822  0A1D  01AF               	clrf	??___flmul+3
  4823  0A1E  082F               	movf	??___flmul+3,w
  4824  0A1F  00BB               	movwf	___flmul@prod+3
  4825  0A20  082E               	movf	??___flmul+2,w
  4826  0A21  00BA               	movwf	___flmul@prod+2
  4827  0A22  082D               	movf	??___flmul+1,w
  4828  0A23  00B9               	movwf	___flmul@prod+1
  4829  0A24  082C               	movf	??___flmul,w
  4830  0A25  00B8               	movwf	___flmul@prod
  4831  0A26  0825               	movf	___flmul@b+1,w
  4832  0A27  00AC               	movwf	??___flmul
  4833  0A28  082C               	movf	??___flmul,w
  4834  0A29  00F0               	movwf	__Umul8_16@multiplicand
  4835  0A2A  0829               	movf	___flmul@a+1,w
  4836  0A2B  160A  118A  20A4  120A  158A  	fcall	__Umul8_16
  4837  0A30  0871               	movf	?__Umul8_16+1,w
  4838  0A31  1283               	bcf	3,5	;RP0=0, select bank0
  4839  0A32  1303               	bcf	3,6	;RP1=0, select bank0
  4840  0A33  00BD               	movwf	___flmul@temp+1
  4841  0A34  0870               	movf	?__Umul8_16,w
  4842  0A35  00BC               	movwf	___flmul@temp
  4843  0A36  083C               	movf	___flmul@temp,w
  4844  0A37  00AC               	movwf	??___flmul
  4845  0A38  01AD               	clrf	??___flmul+1
  4846  0A39  01AE               	clrf	??___flmul+2
  4847  0A3A  01AF               	clrf	??___flmul+3
  4848  0A3B  082C               	movf	??___flmul,w
  4849  0A3C  07B2               	addwf	___flmul@grs,f
  4850  0A3D  082D               	movf	??___flmul+1,w
  4851  0A3E  1103               	clrz
  4852  0A3F  1803               	skipnc
  4853  0A40  3E01               	addlw	1
  4854  0A41  1D03               	btfss	3,2
  4855  0A42  07B3               	addwf	___flmul@grs+1,f
  4856  0A43  082E               	movf	??___flmul+2,w
  4857  0A44  1103               	clrz
  4858  0A45  1803               	skipnc
  4859  0A46  3E01               	addlw	1
  4860  0A47  1D03               	btfss	3,2
  4861  0A48  07B4               	addwf	___flmul@grs+2,f
  4862  0A49  082F               	movf	??___flmul+3,w
  4863  0A4A  1103               	clrz
  4864  0A4B  1803               	skipnc
  4865  0A4C  3E01               	addlw	1
  4866  0A4D  1D03               	btfss	3,2
  4867  0A4E  07B5               	addwf	___flmul@grs+3,f
  4868  0A4F  083D               	movf	___flmul@temp+1,w
  4869  0A50  00AC               	movwf	??___flmul
  4870  0A51  01AD               	clrf	??___flmul+1
  4871  0A52  01AE               	clrf	??___flmul+2
  4872  0A53  01AF               	clrf	??___flmul+3
  4873  0A54  082C               	movf	??___flmul,w
  4874  0A55  07B8               	addwf	___flmul@prod,f
  4875  0A56  082D               	movf	??___flmul+1,w
  4876  0A57  1103               	clrz
  4877  0A58  1803               	skipnc
  4878  0A59  3E01               	addlw	1
  4879  0A5A  1D03               	btfss	3,2
  4880  0A5B  07B9               	addwf	___flmul@prod+1,f
  4881  0A5C  082E               	movf	??___flmul+2,w
  4882  0A5D  1103               	clrz
  4883  0A5E  1803               	skipnc
  4884  0A5F  3E01               	addlw	1
  4885  0A60  1D03               	btfss	3,2
  4886  0A61  07BA               	addwf	___flmul@prod+2,f
  4887  0A62  082F               	movf	??___flmul+3,w
  4888  0A63  1103               	clrz
  4889  0A64  1803               	skipnc
  4890  0A65  3E01               	addlw	1
  4891  0A66  1D03               	btfss	3,2
  4892  0A67  07BB               	addwf	___flmul@prod+3,f
  4893  0A68  0826               	movf	___flmul@b+2,w
  4894  0A69  00AC               	movwf	??___flmul
  4895  0A6A  082C               	movf	??___flmul,w
  4896  0A6B  00F0               	movwf	__Umul8_16@multiplicand
  4897  0A6C  0828               	movf	___flmul@a,w
  4898  0A6D  160A  118A  20A4  120A  158A  	fcall	__Umul8_16
  4899  0A72  0871               	movf	?__Umul8_16+1,w
  4900  0A73  1283               	bcf	3,5	;RP0=0, select bank0
  4901  0A74  1303               	bcf	3,6	;RP1=0, select bank0
  4902  0A75  00BD               	movwf	___flmul@temp+1
  4903  0A76  0870               	movf	?__Umul8_16,w
  4904  0A77  00BC               	movwf	___flmul@temp
  4905  0A78  083C               	movf	___flmul@temp,w
  4906  0A79  00AC               	movwf	??___flmul
  4907  0A7A  01AD               	clrf	??___flmul+1
  4908  0A7B  01AE               	clrf	??___flmul+2
  4909  0A7C  01AF               	clrf	??___flmul+3
  4910  0A7D  082C               	movf	??___flmul,w
  4911  0A7E  07B2               	addwf	___flmul@grs,f
  4912  0A7F  082D               	movf	??___flmul+1,w
  4913  0A80  1103               	clrz
  4914  0A81  1803               	skipnc
  4915  0A82  3E01               	addlw	1
  4916  0A83  1D03               	btfss	3,2
  4917  0A84  07B3               	addwf	___flmul@grs+1,f
  4918  0A85  082E               	movf	??___flmul+2,w
  4919  0A86  1103               	clrz
  4920  0A87  1803               	skipnc
  4921  0A88  3E01               	addlw	1
  4922  0A89  1D03               	btfss	3,2
  4923  0A8A  07B4               	addwf	___flmul@grs+2,f
  4924  0A8B  082F               	movf	??___flmul+3,w
  4925  0A8C  1103               	clrz
  4926  0A8D  1803               	skipnc
  4927  0A8E  3E01               	addlw	1
  4928  0A8F  1D03               	btfss	3,2
  4929  0A90  07B5               	addwf	___flmul@grs+3,f
  4930  0A91  083D               	movf	___flmul@temp+1,w
  4931  0A92  00AC               	movwf	??___flmul
  4932  0A93  01AD               	clrf	??___flmul+1
  4933  0A94  01AE               	clrf	??___flmul+2
  4934  0A95  01AF               	clrf	??___flmul+3
  4935  0A96  082C               	movf	??___flmul,w
  4936  0A97  07B8               	addwf	___flmul@prod,f
  4937  0A98  082D               	movf	??___flmul+1,w
  4938  0A99  1103               	clrz
  4939  0A9A  1803               	skipnc
  4940  0A9B  3E01               	addlw	1
  4941  0A9C  1D03               	btfss	3,2
  4942  0A9D  07B9               	addwf	___flmul@prod+1,f
  4943  0A9E  082E               	movf	??___flmul+2,w
  4944  0A9F  1103               	clrz
  4945  0AA0  1803               	skipnc
  4946  0AA1  3E01               	addlw	1
  4947  0AA2  1D03               	btfss	3,2
  4948  0AA3  07BA               	addwf	___flmul@prod+2,f
  4949  0AA4  082F               	movf	??___flmul+3,w
  4950  0AA5  1103               	clrz
  4951  0AA6  1803               	skipnc
  4952  0AA7  3E01               	addlw	1
  4953  0AA8  1D03               	btfss	3,2
  4954  0AA9  07BB               	addwf	___flmul@prod+3,f
  4955  0AAA  3008               	movlw	8
  4956  0AAB  00AC               	movwf	??___flmul
  4957  0AAC                     u3835:	
  4958  0AAC  1003               	clrc
  4959  0AAD  0DB2               	rlf	___flmul@grs,f
  4960  0AAE  0DB3               	rlf	___flmul@grs+1,f
  4961  0AAF  0DB4               	rlf	___flmul@grs+2,f
  4962  0AB0  0DB5               	rlf	___flmul@grs+3,f
  4963  0AB1  0BAC               	decfsz	??___flmul,f
  4964  0AB2  2AAC               	goto	u3835
  4965  0AB3  0825               	movf	___flmul@b+1,w
  4966  0AB4  00AC               	movwf	??___flmul
  4967  0AB5  082C               	movf	??___flmul,w
  4968  0AB6  00F0               	movwf	__Umul8_16@multiplicand
  4969  0AB7  0828               	movf	___flmul@a,w
  4970  0AB8  160A  118A  20A4  120A  158A  	fcall	__Umul8_16
  4971  0ABD  0871               	movf	?__Umul8_16+1,w
  4972  0ABE  1283               	bcf	3,5	;RP0=0, select bank0
  4973  0ABF  1303               	bcf	3,6	;RP1=0, select bank0
  4974  0AC0  00BD               	movwf	___flmul@temp+1
  4975  0AC1  0870               	movf	?__Umul8_16,w
  4976  0AC2  00BC               	movwf	___flmul@temp
  4977  0AC3  083C               	movf	___flmul@temp,w
  4978  0AC4  00AC               	movwf	??___flmul
  4979  0AC5  083D               	movf	___flmul@temp+1,w
  4980  0AC6  00AD               	movwf	??___flmul+1
  4981  0AC7  01AE               	clrf	??___flmul+2
  4982  0AC8  01AF               	clrf	??___flmul+3
  4983  0AC9  082C               	movf	??___flmul,w
  4984  0ACA  07B2               	addwf	___flmul@grs,f
  4985  0ACB  082D               	movf	??___flmul+1,w
  4986  0ACC  1103               	clrz
  4987  0ACD  1803               	skipnc
  4988  0ACE  3E01               	addlw	1
  4989  0ACF  1D03               	btfss	3,2
  4990  0AD0  07B3               	addwf	___flmul@grs+1,f
  4991  0AD1  082E               	movf	??___flmul+2,w
  4992  0AD2  1103               	clrz
  4993  0AD3  1803               	skipnc
  4994  0AD4  3E01               	addlw	1
  4995  0AD5  1D03               	btfss	3,2
  4996  0AD6  07B4               	addwf	___flmul@grs+2,f
  4997  0AD7  082F               	movf	??___flmul+3,w
  4998  0AD8  1103               	clrz
  4999  0AD9  1803               	skipnc
  5000  0ADA  3E01               	addlw	1
  5001  0ADB  1D03               	btfss	3,2
  5002  0ADC  07B5               	addwf	___flmul@grs+3,f
  5003  0ADD  0824               	movf	___flmul@b,w
  5004  0ADE  00AC               	movwf	??___flmul
  5005  0ADF  082C               	movf	??___flmul,w
  5006  0AE0  00F0               	movwf	__Umul8_16@multiplicand
  5007  0AE1  0829               	movf	___flmul@a+1,w
  5008  0AE2  160A  118A  20A4  120A  158A  	fcall	__Umul8_16
  5009  0AE7  0871               	movf	?__Umul8_16+1,w
  5010  0AE8  1283               	bcf	3,5	;RP0=0, select bank0
  5011  0AE9  1303               	bcf	3,6	;RP1=0, select bank0
  5012  0AEA  00BD               	movwf	___flmul@temp+1
  5013  0AEB  0870               	movf	?__Umul8_16,w
  5014  0AEC  00BC               	movwf	___flmul@temp
  5015  0AED  083C               	movf	___flmul@temp,w
  5016  0AEE  00AC               	movwf	??___flmul
  5017  0AEF  083D               	movf	___flmul@temp+1,w
  5018  0AF0  00AD               	movwf	??___flmul+1
  5019  0AF1  01AE               	clrf	??___flmul+2
  5020  0AF2  01AF               	clrf	??___flmul+3
  5021  0AF3  082C               	movf	??___flmul,w
  5022  0AF4  07B2               	addwf	___flmul@grs,f
  5023  0AF5  082D               	movf	??___flmul+1,w
  5024  0AF6  1103               	clrz
  5025  0AF7  1803               	skipnc
  5026  0AF8  3E01               	addlw	1
  5027  0AF9  1D03               	btfss	3,2
  5028  0AFA  07B3               	addwf	___flmul@grs+1,f
  5029  0AFB  082E               	movf	??___flmul+2,w
  5030  0AFC  1103               	clrz
  5031  0AFD  1803               	skipnc
  5032  0AFE  3E01               	addlw	1
  5033  0AFF  1D03               	btfss	3,2
  5034  0B00  07B4               	addwf	___flmul@grs+2,f
  5035  0B01  082F               	movf	??___flmul+3,w
  5036  0B02  1103               	clrz
  5037  0B03  1803               	skipnc
  5038  0B04  3E01               	addlw	1
  5039  0B05  1D03               	btfss	3,2
  5040  0B06  07B5               	addwf	___flmul@grs+3,f
  5041  0B07  3008               	movlw	8
  5042  0B08  00AC               	movwf	??___flmul
  5043  0B09                     u3865:	
  5044  0B09  1003               	clrc
  5045  0B0A  0DB2               	rlf	___flmul@grs,f
  5046  0B0B  0DB3               	rlf	___flmul@grs+1,f
  5047  0B0C  0DB4               	rlf	___flmul@grs+2,f
  5048  0B0D  0DB5               	rlf	___flmul@grs+3,f
  5049  0B0E  0BAC               	decfsz	??___flmul,f
  5050  0B0F  2B09               	goto	u3865
  5051  0B10  0824               	movf	___flmul@b,w
  5052  0B11  00AC               	movwf	??___flmul
  5053  0B12  082C               	movf	??___flmul,w
  5054  0B13  00F0               	movwf	__Umul8_16@multiplicand
  5055  0B14  0828               	movf	___flmul@a,w
  5056  0B15  160A  118A  20A4  120A  158A  	fcall	__Umul8_16
  5057  0B1A  0871               	movf	?__Umul8_16+1,w
  5058  0B1B  1283               	bcf	3,5	;RP0=0, select bank0
  5059  0B1C  1303               	bcf	3,6	;RP1=0, select bank0
  5060  0B1D  00BD               	movwf	___flmul@temp+1
  5061  0B1E  0870               	movf	?__Umul8_16,w
  5062  0B1F  00BC               	movwf	___flmul@temp
  5063  0B20  083C               	movf	___flmul@temp,w
  5064  0B21  00AC               	movwf	??___flmul
  5065  0B22  083D               	movf	___flmul@temp+1,w
  5066  0B23  00AD               	movwf	??___flmul+1
  5067  0B24  01AE               	clrf	??___flmul+2
  5068  0B25  01AF               	clrf	??___flmul+3
  5069  0B26  082C               	movf	??___flmul,w
  5070  0B27  07B2               	addwf	___flmul@grs,f
  5071  0B28  082D               	movf	??___flmul+1,w
  5072  0B29  1103               	clrz
  5073  0B2A  1803               	skipnc
  5074  0B2B  3E01               	addlw	1
  5075  0B2C  1D03               	btfss	3,2
  5076  0B2D  07B3               	addwf	___flmul@grs+1,f
  5077  0B2E  082E               	movf	??___flmul+2,w
  5078  0B2F  1103               	clrz
  5079  0B30  1803               	skipnc
  5080  0B31  3E01               	addlw	1
  5081  0B32  1D03               	btfss	3,2
  5082  0B33  07B4               	addwf	___flmul@grs+2,f
  5083  0B34  082F               	movf	??___flmul+3,w
  5084  0B35  1103               	clrz
  5085  0B36  1803               	skipnc
  5086  0B37  3E01               	addlw	1
  5087  0B38  1D03               	btfss	3,2
  5088  0B39  07B5               	addwf	___flmul@grs+3,f
  5089  0B3A  0825               	movf	___flmul@b+1,w
  5090  0B3B  00AC               	movwf	??___flmul
  5091  0B3C  082C               	movf	??___flmul,w
  5092  0B3D  00F0               	movwf	__Umul8_16@multiplicand
  5093  0B3E  082A               	movf	___flmul@a+2,w
  5094  0B3F  160A  118A  20A4  120A  158A  	fcall	__Umul8_16
  5095  0B44  0871               	movf	?__Umul8_16+1,w
  5096  0B45  1283               	bcf	3,5	;RP0=0, select bank0
  5097  0B46  1303               	bcf	3,6	;RP1=0, select bank0
  5098  0B47  00BD               	movwf	___flmul@temp+1
  5099  0B48  0870               	movf	?__Umul8_16,w
  5100  0B49  00BC               	movwf	___flmul@temp
  5101  0B4A  083C               	movf	___flmul@temp,w
  5102  0B4B  00AC               	movwf	??___flmul
  5103  0B4C  083D               	movf	___flmul@temp+1,w
  5104  0B4D  00AD               	movwf	??___flmul+1
  5105  0B4E  01AE               	clrf	??___flmul+2
  5106  0B4F  01AF               	clrf	??___flmul+3
  5107  0B50  082C               	movf	??___flmul,w
  5108  0B51  07B8               	addwf	___flmul@prod,f
  5109  0B52  082D               	movf	??___flmul+1,w
  5110  0B53  1103               	clrz
  5111  0B54  1803               	skipnc
  5112  0B55  3E01               	addlw	1
  5113  0B56  1D03               	btfss	3,2
  5114  0B57  07B9               	addwf	___flmul@prod+1,f
  5115  0B58  082E               	movf	??___flmul+2,w
  5116  0B59  1103               	clrz
  5117  0B5A  1803               	skipnc
  5118  0B5B  3E01               	addlw	1
  5119  0B5C  1D03               	btfss	3,2
  5120  0B5D  07BA               	addwf	___flmul@prod+2,f
  5121  0B5E  082F               	movf	??___flmul+3,w
  5122  0B5F  1103               	clrz
  5123  0B60  1803               	skipnc
  5124  0B61  3E01               	addlw	1
  5125  0B62  1D03               	btfss	3,2
  5126  0B63  07BB               	addwf	___flmul@prod+3,f
  5127  0B64  0826               	movf	___flmul@b+2,w
  5128  0B65  00AC               	movwf	??___flmul
  5129  0B66  082C               	movf	??___flmul,w
  5130  0B67  00F0               	movwf	__Umul8_16@multiplicand
  5131  0B68  0829               	movf	___flmul@a+1,w
  5132  0B69  160A  118A  20A4  120A  158A  	fcall	__Umul8_16
  5133  0B6E  0871               	movf	?__Umul8_16+1,w
  5134  0B6F  1283               	bcf	3,5	;RP0=0, select bank0
  5135  0B70  1303               	bcf	3,6	;RP1=0, select bank0
  5136  0B71  00BD               	movwf	___flmul@temp+1
  5137  0B72  0870               	movf	?__Umul8_16,w
  5138  0B73  00BC               	movwf	___flmul@temp
  5139  0B74  083C               	movf	___flmul@temp,w
  5140  0B75  00AC               	movwf	??___flmul
  5141  0B76  083D               	movf	___flmul@temp+1,w
  5142  0B77  00AD               	movwf	??___flmul+1
  5143  0B78  01AE               	clrf	??___flmul+2
  5144  0B79  01AF               	clrf	??___flmul+3
  5145  0B7A  082C               	movf	??___flmul,w
  5146  0B7B  07B8               	addwf	___flmul@prod,f
  5147  0B7C  082D               	movf	??___flmul+1,w
  5148  0B7D  1103               	clrz
  5149  0B7E  1803               	skipnc
  5150  0B7F  3E01               	addlw	1
  5151  0B80  1D03               	btfss	3,2
  5152  0B81  07B9               	addwf	___flmul@prod+1,f
  5153  0B82  082E               	movf	??___flmul+2,w
  5154  0B83  1103               	clrz
  5155  0B84  1803               	skipnc
  5156  0B85  3E01               	addlw	1
  5157  0B86  1D03               	btfss	3,2
  5158  0B87  07BA               	addwf	___flmul@prod+2,f
  5159  0B88  082F               	movf	??___flmul+3,w
  5160  0B89  1103               	clrz
  5161  0B8A  1803               	skipnc
  5162  0B8B  3E01               	addlw	1
  5163  0B8C  1D03               	btfss	3,2
  5164  0B8D  07BB               	addwf	___flmul@prod+3,f
  5165  0B8E  0826               	movf	___flmul@b+2,w
  5166  0B8F  00AC               	movwf	??___flmul
  5167  0B90  082C               	movf	??___flmul,w
  5168  0B91  00F0               	movwf	__Umul8_16@multiplicand
  5169  0B92  082A               	movf	___flmul@a+2,w
  5170  0B93  160A  118A  20A4  120A  158A  	fcall	__Umul8_16
  5171  0B98  0871               	movf	?__Umul8_16+1,w
  5172  0B99  1283               	bcf	3,5	;RP0=0, select bank0
  5173  0B9A  1303               	bcf	3,6	;RP1=0, select bank0
  5174  0B9B  00BD               	movwf	___flmul@temp+1
  5175  0B9C  0870               	movf	?__Umul8_16,w
  5176  0B9D  00BC               	movwf	___flmul@temp
  5177  0B9E  083C               	movf	___flmul@temp,w
  5178  0B9F  00AC               	movwf	??___flmul
  5179  0BA0  083D               	movf	___flmul@temp+1,w
  5180  0BA1  00AD               	movwf	??___flmul+1
  5181  0BA2  01AE               	clrf	??___flmul+2
  5182  0BA3  01AF               	clrf	??___flmul+3
  5183  0BA4  3008               	movlw	8
  5184  0BA5                     u3905:	
  5185  0BA5  1003               	clrc
  5186  0BA6  0DAC               	rlf	??___flmul,f
  5187  0BA7  0DAD               	rlf	??___flmul+1,f
  5188  0BA8  0DAE               	rlf	??___flmul+2,f
  5189  0BA9  0DAF               	rlf	??___flmul+3,f
  5190  0BAA  3EFF               	addlw	-1
  5191  0BAB  1D03               	skipz
  5192  0BAC  2BA5               	goto	u3905
  5193  0BAD  082C               	movf	??___flmul,w
  5194  0BAE  07B8               	addwf	___flmul@prod,f
  5195  0BAF  082D               	movf	??___flmul+1,w
  5196  0BB0  1103               	clrz
  5197  0BB1  1803               	skipnc
  5198  0BB2  3E01               	addlw	1
  5199  0BB3  1D03               	btfss	3,2
  5200  0BB4  07B9               	addwf	___flmul@prod+1,f
  5201  0BB5  082E               	movf	??___flmul+2,w
  5202  0BB6  1103               	clrz
  5203  0BB7  1803               	skipnc
  5204  0BB8  3E01               	addlw	1
  5205  0BB9  1D03               	btfss	3,2
  5206  0BBA  07BA               	addwf	___flmul@prod+2,f
  5207  0BBB  082F               	movf	??___flmul+3,w
  5208  0BBC  1103               	clrz
  5209  0BBD  1803               	skipnc
  5210  0BBE  3E01               	addlw	1
  5211  0BBF  1D03               	btfss	3,2
  5212  0BC0  07BB               	addwf	___flmul@prod+3,f
  5213  0BC1  0832               	movf	___flmul@grs,w
  5214  0BC2  00AC               	movwf	??___flmul
  5215  0BC3  0833               	movf	___flmul@grs+1,w
  5216  0BC4  00AD               	movwf	??___flmul+1
  5217  0BC5  0834               	movf	___flmul@grs+2,w
  5218  0BC6  00AE               	movwf	??___flmul+2
  5219  0BC7  0835               	movf	___flmul@grs+3,w
  5220  0BC8  00AF               	movwf	??___flmul+3
  5221  0BC9  3018               	movlw	24
  5222  0BCA                     u3925:	
  5223  0BCA  1003               	clrc
  5224  0BCB  0CAF               	rrf	??___flmul+3,f
  5225  0BCC  0CAE               	rrf	??___flmul+2,f
  5226  0BCD  0CAD               	rrf	??___flmul+1,f
  5227  0BCE  0CAC               	rrf	??___flmul,f
  5228  0BCF  3EFF               	addlw	-1
  5229  0BD0  1D03               	skipz
  5230  0BD1  2BCA               	goto	u3925
  5231  0BD2  082C               	movf	??___flmul,w
  5232  0BD3  07B8               	addwf	___flmul@prod,f
  5233  0BD4  082D               	movf	??___flmul+1,w
  5234  0BD5  1103               	clrz
  5235  0BD6  1803               	skipnc
  5236  0BD7  3E01               	addlw	1
  5237  0BD8  1D03               	btfss	3,2
  5238  0BD9  07B9               	addwf	___flmul@prod+1,f
  5239  0BDA  082E               	movf	??___flmul+2,w
  5240  0BDB  1103               	clrz
  5241  0BDC  1803               	skipnc
  5242  0BDD  3E01               	addlw	1
  5243  0BDE  1D03               	btfss	3,2
  5244  0BDF  07BA               	addwf	___flmul@prod+2,f
  5245  0BE0  082F               	movf	??___flmul+3,w
  5246  0BE1  1103               	clrz
  5247  0BE2  1803               	skipnc
  5248  0BE3  3E01               	addlw	1
  5249  0BE4  1D03               	btfss	3,2
  5250  0BE5  07BB               	addwf	___flmul@prod+3,f
  5251  0BE6  3008               	movlw	8
  5252  0BE7  00AC               	movwf	??___flmul
  5253  0BE8                     u3945:	
  5254  0BE8  1003               	clrc
  5255  0BE9  0DB2               	rlf	___flmul@grs,f
  5256  0BEA  0DB3               	rlf	___flmul@grs+1,f
  5257  0BEB  0DB4               	rlf	___flmul@grs+2,f
  5258  0BEC  0DB5               	rlf	___flmul@grs+3,f
  5259  0BED  0BAC               	decfsz	??___flmul,f
  5260  0BEE  2BE8               	goto	u3945
  5261  0BEF  0837               	movf	___flmul@bexp,w
  5262  0BF0  0736               	addwf	___flmul@aexp,w
  5263  0BF1  00AC               	movwf	??___flmul
  5264  0BF2  01AD               	clrf	??___flmul+1
  5265  0BF3  0DAD               	rlf	??___flmul+1,f
  5266  0BF4  082C               	movf	??___flmul,w
  5267  0BF5  3E82               	addlw	130
  5268  0BF6  00BC               	movwf	___flmul@temp
  5269  0BF7  082D               	movf	??___flmul+1,w
  5270  0BF8  1803               	skipnc
  5271  0BF9  3E01               	addlw	1
  5272  0BFA  3EFF               	addlw	255
  5273  0BFB  00BD               	movwf	___flmul@temp+1
  5274  0BFC                     l2759:	
  5275  0BFC  1BBA               	btfsc	___flmul@prod+2,7
  5276  0BFD  2C19               	goto	l2761
  5277  0BFE  3001               	movlw	1
  5278  0BFF  00AC               	movwf	??___flmul
  5279  0C00                     u3955:	
  5280  0C00  1003               	clrc
  5281  0C01  0DB8               	rlf	___flmul@prod,f
  5282  0C02  0DB9               	rlf	___flmul@prod+1,f
  5283  0C03  0DBA               	rlf	___flmul@prod+2,f
  5284  0C04  0DBB               	rlf	___flmul@prod+3,f
  5285  0C05  0BAC               	decfsz	??___flmul,f
  5286  0C06  2C00               	goto	u3955
  5287  0C07  1BB5               	btfsc	___flmul@grs+3,7
  5288  0C08  1438               	bsf	___flmul@prod,0
  5289  0C09  3001               	movlw	1
  5290  0C0A  00AC               	movwf	??___flmul
  5291  0C0B                     u3975:	
  5292  0C0B  1003               	clrc
  5293  0C0C  0DB2               	rlf	___flmul@grs,f
  5294  0C0D  0DB3               	rlf	___flmul@grs+1,f
  5295  0C0E  0DB4               	rlf	___flmul@grs+2,f
  5296  0C0F  0DB5               	rlf	___flmul@grs+3,f
  5297  0C10  0BAC               	decfsz	??___flmul,f
  5298  0C11  2C0B               	goto	u3975
  5299  0C12  30FF               	movlw	255
  5300  0C13  07BC               	addwf	___flmul@temp,f
  5301  0C14  1803               	skipnc
  5302  0C15  0ABD               	incf	___flmul@temp+1,f
  5303  0C16  30FF               	movlw	255
  5304  0C17  07BD               	addwf	___flmul@temp+1,f
  5305  0C18  2BFC               	goto	l2759
  5306  0C19                     l2761:	
  5307  0C19  01B6               	clrf	___flmul@aexp
  5308  0C1A  1FB5               	btfss	___flmul@grs+3,7
  5309  0C1B  2C32               	goto	l2771
  5310  0C1C  30FF               	movlw	255
  5311  0C1D  0532               	andwf	___flmul@grs,w
  5312  0C1E  00AC               	movwf	??___flmul
  5313  0C1F  30FF               	movlw	255
  5314  0C20  0533               	andwf	___flmul@grs+1,w
  5315  0C21  00AD               	movwf	??___flmul+1
  5316  0C22  30FF               	movlw	255
  5317  0C23  0534               	andwf	___flmul@grs+2,w
  5318  0C24  00AE               	movwf	??___flmul+2
  5319  0C25  307F               	movlw	127
  5320  0C26  0535               	andwf	___flmul@grs+3,w
  5321  0C27  00AF               	movwf	??___flmul+3
  5322  0C28  082F               	movf	??___flmul+3,w
  5323  0C29  042E               	iorwf	??___flmul+2,w
  5324  0C2A  042D               	iorwf	??___flmul+1,w
  5325  0C2B  042C               	iorwf	??___flmul,w
  5326  0C2C  1903               	skipnz
  5327  0C2D  1838               	btfsc	___flmul@prod,0
  5328  0C2E  2C30               	goto	l2767
  5329  0C2F  2C32               	goto	l2771
  5330  0C30                     l2767:	
  5331  0C30  01B6               	clrf	___flmul@aexp
  5332  0C31  0AB6               	incf	___flmul@aexp,f
  5333  0C32                     l2771:	
  5334  0C32  0836               	movf	___flmul@aexp,w
  5335  0C33  1903               	btfsc	3,2
  5336  0C34  2C64               	goto	l2781
  5337  0C35  3001               	movlw	1
  5338  0C36  07B8               	addwf	___flmul@prod,f
  5339  0C37  3000               	movlw	0
  5340  0C38  1803               	skipnc
  5341  0C39  3001               	movlw	1
  5342  0C3A  07B9               	addwf	___flmul@prod+1,f
  5343  0C3B  3000               	movlw	0
  5344  0C3C  1803               	skipnc
  5345  0C3D  3001               	movlw	1
  5346  0C3E  07BA               	addwf	___flmul@prod+2,f
  5347  0C3F  3000               	movlw	0
  5348  0C40  1803               	skipnc
  5349  0C41  3001               	movlw	1
  5350  0C42  07BB               	addwf	___flmul@prod+3,f
  5351  0C43  1C3B               	btfss	___flmul@prod+3,0
  5352  0C44  2C64               	goto	l2781
  5353  0C45  0838               	movf	___flmul@prod,w
  5354  0C46  00AC               	movwf	??___flmul
  5355  0C47  0839               	movf	___flmul@prod+1,w
  5356  0C48  00AD               	movwf	??___flmul+1
  5357  0C49  083A               	movf	___flmul@prod+2,w
  5358  0C4A  00AE               	movwf	??___flmul+2
  5359  0C4B  083B               	movf	___flmul@prod+3,w
  5360  0C4C  00AF               	movwf	??___flmul+3
  5361  0C4D  3001               	movlw	1
  5362  0C4E  00B0               	movwf	??___flmul+4
  5363  0C4F                     u4045:	
  5364  0C4F  0D2F               	rlf	??___flmul+3,w
  5365  0C50  0CAF               	rrf	??___flmul+3,f
  5366  0C51  0CAE               	rrf	??___flmul+2,f
  5367  0C52  0CAD               	rrf	??___flmul+1,f
  5368  0C53  0CAC               	rrf	??___flmul,f
  5369  0C54  0BB0               	decfsz	??___flmul+4,f
  5370  0C55  2C4F               	goto	u4045
  5371  0C56  082F               	movf	??___flmul+3,w
  5372  0C57  00BB               	movwf	___flmul@prod+3
  5373  0C58  082E               	movf	??___flmul+2,w
  5374  0C59  00BA               	movwf	___flmul@prod+2
  5375  0C5A  082D               	movf	??___flmul+1,w
  5376  0C5B  00B9               	movwf	___flmul@prod+1
  5377  0C5C  082C               	movf	??___flmul,w
  5378  0C5D  00B8               	movwf	___flmul@prod
  5379  0C5E  3001               	movlw	1
  5380  0C5F  07BC               	addwf	___flmul@temp,f
  5381  0C60  1803               	skipnc
  5382  0C61  0ABD               	incf	___flmul@temp+1,f
  5383  0C62  3000               	movlw	0
  5384  0C63  07BD               	addwf	___flmul@temp+1,f
  5385  0C64                     l2781:	
  5386  0C64  083D               	movf	___flmul@temp+1,w
  5387  0C65  3A80               	xorlw	128
  5388  0C66  00FF               	movwf	127
  5389  0C67  3080               	movlw	128
  5390  0C68  027F               	subwf	127,w
  5391  0C69  1D03               	skipz
  5392  0C6A  2C6D               	goto	u4055
  5393  0C6B  30FF               	movlw	255
  5394  0C6C  023C               	subwf	___flmul@temp,w
  5395  0C6D                     u4055:	
  5396  0C6D  1C03               	skipc
  5397  0C6E  2C7A               	goto	l2785
  5398  0C6F  307F               	movlw	127
  5399  0C70  1283               	bcf	3,5	;RP0=0, select bank0
  5400  0C71  1303               	bcf	3,6	;RP1=0, select bank0
  5401  0C72  00BB               	movwf	___flmul@prod+3
  5402  0C73  3080               	movlw	128
  5403  0C74  00BA               	movwf	___flmul@prod+2
  5404  0C75  3000               	movlw	0
  5405  0C76  00B9               	movwf	___flmul@prod+1
  5406  0C77  3000               	movlw	0
  5407  0C78  00B8               	movwf	___flmul@prod
  5408  0C79  2CAA               	goto	l833
  5409  0C7A                     l2785:	
  5410  0C7A  1283               	bcf	3,5	;RP0=0, select bank0
  5411  0C7B  1303               	bcf	3,6	;RP1=0, select bank0
  5412  0C7C  083D               	movf	___flmul@temp+1,w
  5413  0C7D  3A80               	xorlw	128
  5414  0C7E  00FF               	movwf	127
  5415  0C7F  3080               	movlw	128
  5416  0C80  027F               	subwf	127,w
  5417  0C81  1D03               	skipz
  5418  0C82  2C85               	goto	u4065
  5419  0C83  3001               	movlw	1
  5420  0C84  023C               	subwf	___flmul@temp,w
  5421  0C85                     u4065:	
  5422  0C85  1803               	skipnc
  5423  0C86  2C93               	goto	l2791
  5424  0C87  3000               	movlw	0
  5425  0C88  1283               	bcf	3,5	;RP0=0, select bank0
  5426  0C89  1303               	bcf	3,6	;RP1=0, select bank0
  5427  0C8A  00BB               	movwf	___flmul@prod+3
  5428  0C8B  3000               	movlw	0
  5429  0C8C  00BA               	movwf	___flmul@prod+2
  5430  0C8D  3000               	movlw	0
  5431  0C8E  00B9               	movwf	___flmul@prod+1
  5432  0C8F  3000               	movlw	0
  5433  0C90  00B8               	movwf	___flmul@prod
  5434  0C91  01B1               	clrf	___flmul@sign
  5435  0C92  2CAA               	goto	l833
  5436  0C93                     l2791:	
  5437  0C93  1283               	bcf	3,5	;RP0=0, select bank0
  5438  0C94  1303               	bcf	3,6	;RP1=0, select bank0
  5439  0C95  083C               	movf	___flmul@temp,w
  5440  0C96  00AC               	movwf	??___flmul
  5441  0C97  082C               	movf	??___flmul,w
  5442  0C98  00B7               	movwf	___flmul@bexp
  5443  0C99  30FF               	movlw	255
  5444  0C9A  05B8               	andwf	___flmul@prod,f
  5445  0C9B  30FF               	movlw	255
  5446  0C9C  05B9               	andwf	___flmul@prod+1,f
  5447  0C9D  307F               	movlw	127
  5448  0C9E  05BA               	andwf	___flmul@prod+2,f
  5449  0C9F  3000               	movlw	0
  5450  0CA0  05BB               	andwf	___flmul@prod+3,f
  5451  0CA1  1837               	btfsc	___flmul@bexp,0
  5452  0CA2  17BA               	bsf	___flmul@prod+2,7
  5453  0CA3  0837               	movf	___flmul@bexp,w
  5454  0CA4  00AC               	movwf	??___flmul
  5455  0CA5  1003               	clrc
  5456  0CA6  0C2C               	rrf	??___flmul,w
  5457  0CA7  00AD               	movwf	??___flmul+1
  5458  0CA8  082D               	movf	??___flmul+1,w
  5459  0CA9  00BB               	movwf	___flmul@prod+3
  5460  0CAA                     l833:	
  5461  0CAA  0831               	movf	___flmul@sign,w
  5462  0CAB  00AC               	movwf	??___flmul
  5463  0CAC  082C               	movf	??___flmul,w
  5464  0CAD  04BB               	iorwf	___flmul@prod+3,f
  5465  0CAE  083B               	movf	___flmul@prod+3,w
  5466  0CAF  00A7               	movwf	?___flmul+3
  5467  0CB0  083A               	movf	___flmul@prod+2,w
  5468  0CB1  00A6               	movwf	?___flmul+2
  5469  0CB2  0839               	movf	___flmul@prod+1,w
  5470  0CB3  00A5               	movwf	?___flmul+1
  5471  0CB4  0838               	movf	___flmul@prod,w
  5472  0CB5  00A4               	movwf	?___flmul
  5473  0CB6  0008               	return
  5474  0CB7                     __end_of___flmul:	
  5475                           
  5476                           	psect	text10
  5477  10A4                     __ptext10:	
  5478 ;; *************** function __Umul8_16 *****************
  5479 ;; Defined at:
  5480 ;;		line 4 in file "D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\Umul8_16.c"
  5481 ;; Parameters:    Size  Location     Type
  5482 ;;  multiplier      1    wreg     unsigned char 
  5483 ;;  multiplicand    1    0[COMMON] unsigned char 
  5484 ;; Auto vars:     Size  Location     Type
  5485 ;;  multiplier      1    8[COMMON] unsigned char 
  5486 ;;  word_mpld       2    6[COMMON] unsigned int 
  5487 ;;  product         2    4[COMMON] unsigned int 
  5488 ;; Return value:  Size  Location     Type
  5489 ;;                  2    0[COMMON] unsigned int 
  5490 ;; Registers used:
  5491 ;;		wreg, status,2, status,0
  5492 ;; Tracked objects:
  5493 ;;		On entry : 0/0
  5494 ;;		On exit  : 0/0
  5495 ;;		Unchanged: 0/0
  5496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5497 ;;      Params:         2       0       0       0       0
  5498 ;;      Locals:         5       0       0       0       0
  5499 ;;      Temps:          2       0       0       0       0
  5500 ;;      Totals:         9       0       0       0       0
  5501 ;;Total ram usage:        9 bytes
  5502 ;; Hardware stack levels used:    1
  5503 ;; This function calls:
  5504 ;;		Nothing
  5505 ;; This function is called by:
  5506 ;;		___flmul
  5507 ;; This function uses a non-reentrant model
  5508 ;;
  5509                           
  5510                           
  5511                           ;psect for function __Umul8_16
  5512  10A4                     __Umul8_16:	
  5513                           
  5514                           ;incstack = 0
  5515                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5516                           ;__Umul8_16@multiplier stored from wreg
  5517  10A4  00F8               	movwf	__Umul8_16@multiplier
  5518  10A5  01F4               	clrf	__Umul8_16@product
  5519  10A6  01F5               	clrf	__Umul8_16@product+1
  5520  10A7  0870               	movf	__Umul8_16@multiplicand,w
  5521  10A8  00F2               	movwf	??__Umul8_16
  5522  10A9  01F3               	clrf	??__Umul8_16+1
  5523  10AA  0872               	movf	??__Umul8_16,w
  5524  10AB  00F6               	movwf	__Umul8_16@word_mpld
  5525  10AC  0873               	movf	??__Umul8_16+1,w
  5526  10AD  00F7               	movwf	__Umul8_16@word_mpld+1
  5527  10AE                     l2301:	
  5528  10AE  1C78               	btfss	__Umul8_16@multiplier,0
  5529  10AF  28B6               	goto	l887
  5530  10B0  0876               	movf	__Umul8_16@word_mpld,w
  5531  10B1  07F4               	addwf	__Umul8_16@product,f
  5532  10B2  1803               	skipnc
  5533  10B3  0AF5               	incf	__Umul8_16@product+1,f
  5534  10B4  0877               	movf	__Umul8_16@word_mpld+1,w
  5535  10B5  07F5               	addwf	__Umul8_16@product+1,f
  5536  10B6                     l887:	
  5537  10B6  3001               	movlw	1
  5538  10B7                     u2855:	
  5539  10B7  1003               	clrc
  5540  10B8  0DF6               	rlf	__Umul8_16@word_mpld,f
  5541  10B9  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  5542  10BA  3EFF               	addlw	-1
  5543  10BB  1D03               	skipz
  5544  10BC  28B7               	goto	u2855
  5545  10BD  1003               	clrc
  5546  10BE  0CF8               	rrf	__Umul8_16@multiplier,f
  5547  10BF  0878               	movf	__Umul8_16@multiplier,w
  5548  10C0  1D03               	btfss	3,2
  5549  10C1  28AE               	goto	l2301
  5550  10C2  0875               	movf	__Umul8_16@product+1,w
  5551  10C3  00F1               	movwf	?__Umul8_16+1
  5552  10C4  0874               	movf	__Umul8_16@product,w
  5553  10C5  00F0               	movwf	?__Umul8_16
  5554  10C6  0008               	return
  5555  10C7                     __end_of__Umul8_16:	
  5556                           
  5557                           	psect	text11
  5558  084F                     __ptext11:	
  5559 ;; *************** function __tdiv_to_l_ *****************
  5560 ;; Defined at:
  5561 ;;		line 60 in file "D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\ftdivl.c"
  5562 ;; Parameters:    Size  Location     Type
  5563 ;;  f1              4    0[COMMON] float 
  5564 ;;  f2              4    4[COMMON] float 
  5565 ;; Auto vars:     Size  Location     Type
  5566 ;;  quot            4    0[BANK0 ] unsigned long 
  5567 ;;  exp1            1    5[BANK0 ] unsigned char 
  5568 ;;  cntr            1    4[BANK0 ] unsigned char 
  5569 ;; Return value:  Size  Location     Type
  5570 ;;                  4    0[COMMON] unsigned long 
  5571 ;; Registers used:
  5572 ;;		wreg, status,2, status,0
  5573 ;; Tracked objects:
  5574 ;;		On entry : 0/0
  5575 ;;		On exit  : 0/0
  5576 ;;		Unchanged: 0/0
  5577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5578 ;;      Params:         8       0       0       0       0
  5579 ;;      Locals:         0       6       0       0       0
  5580 ;;      Temps:          4       0       0       0       0
  5581 ;;      Totals:        12       6       0       0       0
  5582 ;;Total ram usage:       18 bytes
  5583 ;; Hardware stack levels used:    1
  5584 ;; This function calls:
  5585 ;;		Nothing
  5586 ;; This function is called by:
  5587 ;;		_sprintf
  5588 ;; This function uses a non-reentrant model
  5589 ;;
  5590                           
  5591                           
  5592                           ;psect for function __tdiv_to_l_
  5593  084F                     __tdiv_to_l_:	
  5594                           
  5595                           ;incstack = 0
  5596                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  5597  084F  0870               	movf	__tdiv_to_l_@f1,w
  5598  0850  00F8               	movwf	??__tdiv_to_l_
  5599  0851  0871               	movf	__tdiv_to_l_@f1+1,w
  5600  0852  00F9               	movwf	??__tdiv_to_l_+1
  5601  0853  0872               	movf	__tdiv_to_l_@f1+2,w
  5602  0854  00FA               	movwf	??__tdiv_to_l_+2
  5603  0855  1003               	clrc
  5604  0856  0D79               	rlf	??__tdiv_to_l_+1,w
  5605  0857  0D7A               	rlf	??__tdiv_to_l_+2,w
  5606  0858  00FB               	movwf	??__tdiv_to_l_+3
  5607  0859  087B               	movf	??__tdiv_to_l_+3,w
  5608  085A  1283               	bcf	3,5	;RP0=0, select bank0
  5609  085B  1303               	bcf	3,6	;RP1=0, select bank0
  5610  085C  00A5               	movwf	__tdiv_to_l_@exp1
  5611  085D  0825               	movf	__tdiv_to_l_@exp1,w
  5612  085E  1D03               	btfss	3,2
  5613  085F  2869               	goto	l2933
  5614  0860                     l2929:	
  5615  0860  3000               	movlw	0
  5616  0861  00F3               	movwf	?__tdiv_to_l_+3
  5617  0862  3000               	movlw	0
  5618  0863  00F2               	movwf	?__tdiv_to_l_+2
  5619  0864  3000               	movlw	0
  5620  0865  00F1               	movwf	?__tdiv_to_l_+1
  5621  0866  3000               	movlw	0
  5622  0867  00F0               	movwf	?__tdiv_to_l_
  5623  0868  0008               	return
  5624  0869                     l2933:	
  5625  0869  0874               	movf	__tdiv_to_l_@f2,w
  5626  086A  00F8               	movwf	??__tdiv_to_l_
  5627  086B  0875               	movf	__tdiv_to_l_@f2+1,w
  5628  086C  00F9               	movwf	??__tdiv_to_l_+1
  5629  086D  0876               	movf	__tdiv_to_l_@f2+2,w
  5630  086E  00FA               	movwf	??__tdiv_to_l_+2
  5631  086F  1003               	clrc
  5632  0870  0D79               	rlf	??__tdiv_to_l_+1,w
  5633  0871  0D7A               	rlf	??__tdiv_to_l_+2,w
  5634  0872  00FB               	movwf	??__tdiv_to_l_+3
  5635  0873  087B               	movf	??__tdiv_to_l_+3,w
  5636  0874  00A4               	movwf	__tdiv_to_l_@cntr
  5637  0875  0824               	movf	__tdiv_to_l_@cntr,w
  5638  0876  1903               	btfsc	3,2
  5639  0877  2860               	goto	l2929
  5640  0878  17F1               	bsf	__tdiv_to_l_@f1+1,7
  5641  0879  30FF               	movlw	255
  5642  087A  05F0               	andwf	__tdiv_to_l_@f1,f
  5643  087B  30FF               	movlw	255
  5644  087C  05F1               	andwf	__tdiv_to_l_@f1+1,f
  5645  087D  3000               	movlw	0
  5646  087E  05F2               	andwf	__tdiv_to_l_@f1+2,f
  5647  087F  17F5               	bsf	__tdiv_to_l_@f2+1,7
  5648  0880  30FF               	movlw	255
  5649  0881  05F4               	andwf	__tdiv_to_l_@f2,f
  5650  0882  30FF               	movlw	255
  5651  0883  05F5               	andwf	__tdiv_to_l_@f2+1,f
  5652  0884  3000               	movlw	0
  5653  0885  05F6               	andwf	__tdiv_to_l_@f2+2,f
  5654  0886  3000               	movlw	0
  5655  0887  00A3               	movwf	__tdiv_to_l_@quot+3
  5656  0888  3000               	movlw	0
  5657  0889  00A2               	movwf	__tdiv_to_l_@quot+2
  5658  088A  3000               	movlw	0
  5659  088B  00A1               	movwf	__tdiv_to_l_@quot+1
  5660  088C  3000               	movlw	0
  5661  088D  00A0               	movwf	__tdiv_to_l_@quot
  5662  088E  307F               	movlw	127
  5663  088F  02A5               	subwf	__tdiv_to_l_@exp1,f
  5664  0890  3098               	movlw	152
  5665  0891  0724               	addwf	__tdiv_to_l_@cntr,w
  5666  0892  00F8               	movwf	??__tdiv_to_l_
  5667  0893  0878               	movf	??__tdiv_to_l_,w
  5668  0894  02A5               	subwf	__tdiv_to_l_@exp1,f
  5669  0895  3018               	movlw	24
  5670  0896  00F8               	movwf	??__tdiv_to_l_
  5671  0897  0878               	movf	??__tdiv_to_l_,w
  5672  0898  00A4               	movwf	__tdiv_to_l_@cntr
  5673  0899                     l2947:	
  5674  0899  3001               	movlw	1
  5675  089A  00F8               	movwf	??__tdiv_to_l_
  5676  089B                     u4455:	
  5677  089B  1003               	clrc
  5678  089C  0DA0               	rlf	__tdiv_to_l_@quot,f
  5679  089D  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5680  089E  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5681  089F  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5682  08A0  0BF8               	decfsz	??__tdiv_to_l_,f
  5683  08A1  289B               	goto	u4455
  5684  08A2  0876               	movf	__tdiv_to_l_@f2+2,w
  5685  08A3  0272               	subwf	__tdiv_to_l_@f1+2,w
  5686  08A4  1D03               	skipz
  5687  08A5  28AC               	goto	u4465
  5688  08A6  0875               	movf	__tdiv_to_l_@f2+1,w
  5689  08A7  0271               	subwf	__tdiv_to_l_@f1+1,w
  5690  08A8  1D03               	skipz
  5691  08A9  28AC               	goto	u4465
  5692  08AA  0874               	movf	__tdiv_to_l_@f2,w
  5693  08AB  0270               	subwf	__tdiv_to_l_@f1,w
  5694  08AC                     u4465:	
  5695  08AC  1C03               	skipc
  5696  08AD  28B9               	goto	l2955
  5697  08AE  0874               	movf	__tdiv_to_l_@f2,w
  5698  08AF  02F0               	subwf	__tdiv_to_l_@f1,f
  5699  08B0  0875               	movf	__tdiv_to_l_@f2+1,w
  5700  08B1  1C03               	skipc
  5701  08B2  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  5702  08B3  02F1               	subwf	__tdiv_to_l_@f1+1,f
  5703  08B4  0876               	movf	__tdiv_to_l_@f2+2,w
  5704  08B5  1C03               	skipc
  5705  08B6  0A76               	incf	__tdiv_to_l_@f2+2,w
  5706  08B7  02F2               	subwf	__tdiv_to_l_@f1+2,f
  5707  08B8  1420               	bsf	__tdiv_to_l_@quot,0
  5708  08B9                     l2955:	
  5709  08B9  3001               	movlw	1
  5710  08BA                     u4475:	
  5711  08BA  1003               	clrc
  5712  08BB  0DF0               	rlf	__tdiv_to_l_@f1,f
  5713  08BC  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  5714  08BD  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  5715  08BE  3EFF               	addlw	-1
  5716  08BF  1D03               	skipz
  5717  08C0  28BA               	goto	u4475
  5718  08C1  3001               	movlw	1
  5719  08C2  02A4               	subwf	__tdiv_to_l_@cntr,f
  5720  08C3  1D03               	btfss	3,2
  5721  08C4  2899               	goto	l2947
  5722  08C5  1FA5               	btfss	__tdiv_to_l_@exp1,7
  5723  08C6  28DC               	goto	l2967
  5724  08C7  0825               	movf	__tdiv_to_l_@exp1,w
  5725  08C8  3A80               	xorlw	128
  5726  08C9  3E97               	addlw	151
  5727  08CA  1C03               	btfss	3,0
  5728  08CB  2860               	goto	l2929
  5729  08CC                     l2965:	
  5730  08CC  3001               	movlw	1
  5731  08CD                     u4515:	
  5732  08CD  1003               	clrc
  5733  08CE  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  5734  08CF  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  5735  08D0  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  5736  08D1  0CA0               	rrf	__tdiv_to_l_@quot,f
  5737  08D2  3EFF               	addlw	-1
  5738  08D3  1D03               	skipz
  5739  08D4  28CD               	goto	u4515
  5740  08D5  3001               	movlw	1
  5741  08D6  00F8               	movwf	??__tdiv_to_l_
  5742  08D7  0878               	movf	??__tdiv_to_l_,w
  5743  08D8  07A5               	addwf	__tdiv_to_l_@exp1,f
  5744  08D9  1903               	btfsc	3,2
  5745  08DA  28EF               	goto	l2975
  5746  08DB  28CC               	goto	l2965
  5747  08DC                     l2967:	
  5748  08DC  3018               	movlw	24
  5749  08DD  0225               	subwf	__tdiv_to_l_@exp1,w
  5750  08DE  1803               	btfsc	3,0
  5751  08DF  2860               	goto	l2929
  5752  08E0                     l626:	
  5753  08E0  0825               	movf	__tdiv_to_l_@exp1,w
  5754  08E1  1903               	btfsc	3,2
  5755  08E2  28EF               	goto	l2975
  5756  08E3  3001               	movlw	1
  5757  08E4  00F8               	movwf	??__tdiv_to_l_
  5758  08E5                     u4545:	
  5759  08E5  1003               	clrc
  5760  08E6  0DA0               	rlf	__tdiv_to_l_@quot,f
  5761  08E7  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5762  08E8  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5763  08E9  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5764  08EA  0BF8               	decfsz	??__tdiv_to_l_,f
  5765  08EB  28E5               	goto	u4545
  5766  08EC  3001               	movlw	1
  5767  08ED  02A5               	subwf	__tdiv_to_l_@exp1,f
  5768  08EE  28E0               	goto	l626
  5769  08EF                     l2975:	
  5770  08EF  0823               	movf	__tdiv_to_l_@quot+3,w
  5771  08F0  00F3               	movwf	?__tdiv_to_l_+3
  5772  08F1  0822               	movf	__tdiv_to_l_@quot+2,w
  5773  08F2  00F2               	movwf	?__tdiv_to_l_+2
  5774  08F3  0821               	movf	__tdiv_to_l_@quot+1,w
  5775  08F4  00F1               	movwf	?__tdiv_to_l_+1
  5776  08F5  0820               	movf	__tdiv_to_l_@quot,w
  5777  08F6  00F0               	movwf	?__tdiv_to_l_
  5778  08F7  0008               	return
  5779  08F8                     __end_of__tdiv_to_l_:	
  5780                           
  5781                           	psect	text12
  5782  08F8                     __ptext12:	
  5783 ;; *************** function __div_to_l_ *****************
  5784 ;; Defined at:
  5785 ;;		line 60 in file "D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\fldivl.c"
  5786 ;; Parameters:    Size  Location     Type
  5787 ;;  f1              4    0[COMMON] unsigned long 
  5788 ;;  f2              4    4[COMMON] unsigned long 
  5789 ;; Auto vars:     Size  Location     Type
  5790 ;;  quot            4    0[BANK0 ] unsigned long 
  5791 ;;  exp1            1    5[BANK0 ] unsigned char 
  5792 ;;  cntr            1    4[BANK0 ] unsigned char 
  5793 ;; Return value:  Size  Location     Type
  5794 ;;                  4    0[COMMON] unsigned long 
  5795 ;; Registers used:
  5796 ;;		wreg, status,2, status,0
  5797 ;; Tracked objects:
  5798 ;;		On entry : 0/0
  5799 ;;		On exit  : 0/0
  5800 ;;		Unchanged: 0/0
  5801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5802 ;;      Params:         8       0       0       0       0
  5803 ;;      Locals:         0       6       0       0       0
  5804 ;;      Temps:          1       0       0       0       0
  5805 ;;      Totals:         9       6       0       0       0
  5806 ;;Total ram usage:       15 bytes
  5807 ;; Hardware stack levels used:    1
  5808 ;; This function calls:
  5809 ;;		Nothing
  5810 ;; This function is called by:
  5811 ;;		_sprintf
  5812 ;; This function uses a non-reentrant model
  5813 ;;
  5814                           
  5815                           
  5816                           ;psect for function __div_to_l_
  5817  08F8                     __div_to_l_:	
  5818                           
  5819                           ;incstack = 0
  5820                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  5821  08F8  1003               	clrc
  5822  08F9  0D72               	rlf	__div_to_l_@f1+2,w
  5823  08FA  0D73               	rlf	__div_to_l_@f1+3,w
  5824  08FB  00F8               	movwf	??__div_to_l_
  5825  08FC  0878               	movf	??__div_to_l_,w
  5826  08FD  1283               	bcf	3,5	;RP0=0, select bank0
  5827  08FE  1303               	bcf	3,6	;RP1=0, select bank0
  5828  08FF  00A5               	movwf	__div_to_l_@exp1
  5829  0900  0825               	movf	__div_to_l_@exp1,w
  5830  0901  1D03               	btfss	3,2
  5831  0902  290C               	goto	l2985
  5832  0903                     l2981:	
  5833  0903  3000               	movlw	0
  5834  0904  00F3               	movwf	?__div_to_l_+3
  5835  0905  3000               	movlw	0
  5836  0906  00F2               	movwf	?__div_to_l_+2
  5837  0907  3000               	movlw	0
  5838  0908  00F1               	movwf	?__div_to_l_+1
  5839  0909  3000               	movlw	0
  5840  090A  00F0               	movwf	?__div_to_l_
  5841  090B  0008               	return
  5842  090C                     l2985:	
  5843  090C  1003               	clrc
  5844  090D  0D76               	rlf	__div_to_l_@f2+2,w
  5845  090E  0D77               	rlf	__div_to_l_@f2+3,w
  5846  090F  00F8               	movwf	??__div_to_l_
  5847  0910  0878               	movf	??__div_to_l_,w
  5848  0911  00A4               	movwf	__div_to_l_@cntr
  5849  0912  0824               	movf	__div_to_l_@cntr,w
  5850  0913  1903               	btfsc	3,2
  5851  0914  2903               	goto	l2981
  5852  0915  17F2               	bsf	__div_to_l_@f1+2,7
  5853  0916  30FF               	movlw	255
  5854  0917  05F0               	andwf	__div_to_l_@f1,f
  5855  0918  30FF               	movlw	255
  5856  0919  05F1               	andwf	__div_to_l_@f1+1,f
  5857  091A  30FF               	movlw	255
  5858  091B  05F2               	andwf	__div_to_l_@f1+2,f
  5859  091C  3000               	movlw	0
  5860  091D  05F3               	andwf	__div_to_l_@f1+3,f
  5861  091E  17F6               	bsf	__div_to_l_@f2+2,7
  5862  091F  30FF               	movlw	255
  5863  0920  05F4               	andwf	__div_to_l_@f2,f
  5864  0921  30FF               	movlw	255
  5865  0922  05F5               	andwf	__div_to_l_@f2+1,f
  5866  0923  30FF               	movlw	255
  5867  0924  05F6               	andwf	__div_to_l_@f2+2,f
  5868  0925  3000               	movlw	0
  5869  0926  05F7               	andwf	__div_to_l_@f2+3,f
  5870  0927  3000               	movlw	0
  5871  0928  00A3               	movwf	__div_to_l_@quot+3
  5872  0929  3000               	movlw	0
  5873  092A  00A2               	movwf	__div_to_l_@quot+2
  5874  092B  3000               	movlw	0
  5875  092C  00A1               	movwf	__div_to_l_@quot+1
  5876  092D  3000               	movlw	0
  5877  092E  00A0               	movwf	__div_to_l_@quot
  5878  092F  307F               	movlw	127
  5879  0930  02A5               	subwf	__div_to_l_@exp1,f
  5880  0931  30A0               	movlw	160
  5881  0932  0724               	addwf	__div_to_l_@cntr,w
  5882  0933  00F8               	movwf	??__div_to_l_
  5883  0934  0878               	movf	??__div_to_l_,w
  5884  0935  02A5               	subwf	__div_to_l_@exp1,f
  5885  0936  3020               	movlw	32
  5886  0937  00F8               	movwf	??__div_to_l_
  5887  0938  0878               	movf	??__div_to_l_,w
  5888  0939  00A4               	movwf	__div_to_l_@cntr
  5889  093A                     l2999:	
  5890  093A  3001               	movlw	1
  5891  093B  00F8               	movwf	??__div_to_l_
  5892  093C                     u4585:	
  5893  093C  1003               	clrc
  5894  093D  0DA0               	rlf	__div_to_l_@quot,f
  5895  093E  0DA1               	rlf	__div_to_l_@quot+1,f
  5896  093F  0DA2               	rlf	__div_to_l_@quot+2,f
  5897  0940  0DA3               	rlf	__div_to_l_@quot+3,f
  5898  0941  0BF8               	decfsz	??__div_to_l_,f
  5899  0942  293C               	goto	u4585
  5900  0943  0877               	movf	__div_to_l_@f2+3,w
  5901  0944  0273               	subwf	__div_to_l_@f1+3,w
  5902  0945  1D03               	skipz
  5903  0946  2951               	goto	u4595
  5904  0947  0876               	movf	__div_to_l_@f2+2,w
  5905  0948  0272               	subwf	__div_to_l_@f1+2,w
  5906  0949  1D03               	skipz
  5907  094A  2951               	goto	u4595
  5908  094B  0875               	movf	__div_to_l_@f2+1,w
  5909  094C  0271               	subwf	__div_to_l_@f1+1,w
  5910  094D  1D03               	skipz
  5911  094E  2951               	goto	u4595
  5912  094F  0874               	movf	__div_to_l_@f2,w
  5913  0950  0270               	subwf	__div_to_l_@f1,w
  5914  0951                     u4595:	
  5915  0951  1C03               	skipc
  5916  0952  2962               	goto	l3007
  5917  0953  0874               	movf	__div_to_l_@f2,w
  5918  0954  02F0               	subwf	__div_to_l_@f1,f
  5919  0955  0875               	movf	__div_to_l_@f2+1,w
  5920  0956  1C03               	skipc
  5921  0957  0F75               	incfsz	__div_to_l_@f2+1,w
  5922  0958  02F1               	subwf	__div_to_l_@f1+1,f
  5923  0959  0876               	movf	__div_to_l_@f2+2,w
  5924  095A  1C03               	skipc
  5925  095B  0F76               	incfsz	__div_to_l_@f2+2,w
  5926  095C  02F2               	subwf	__div_to_l_@f1+2,f
  5927  095D  0877               	movf	__div_to_l_@f2+3,w
  5928  095E  1C03               	skipc
  5929  095F  0F77               	incfsz	__div_to_l_@f2+3,w
  5930  0960  02F3               	subwf	__div_to_l_@f1+3,f
  5931  0961  1420               	bsf	__div_to_l_@quot,0
  5932  0962                     l3007:	
  5933  0962  3001               	movlw	1
  5934  0963  00F8               	movwf	??__div_to_l_
  5935  0964                     u4605:	
  5936  0964  1003               	clrc
  5937  0965  0DF0               	rlf	__div_to_l_@f1,f
  5938  0966  0DF1               	rlf	__div_to_l_@f1+1,f
  5939  0967  0DF2               	rlf	__div_to_l_@f1+2,f
  5940  0968  0DF3               	rlf	__div_to_l_@f1+3,f
  5941  0969  0BF8               	decfsz	??__div_to_l_,f
  5942  096A  2964               	goto	u4605
  5943  096B  3001               	movlw	1
  5944  096C  02A4               	subwf	__div_to_l_@cntr,f
  5945  096D  1D03               	btfss	3,2
  5946  096E  293A               	goto	l2999
  5947  096F  1FA5               	btfss	__div_to_l_@exp1,7
  5948  0970  2986               	goto	l3019
  5949  0971  0825               	movf	__div_to_l_@exp1,w
  5950  0972  3A80               	xorlw	128
  5951  0973  3E9F               	addlw	159
  5952  0974  1C03               	btfss	3,0
  5953  0975  2903               	goto	l2981
  5954  0976                     l3017:	
  5955  0976  3001               	movlw	1
  5956  0977                     u4645:	
  5957  0977  1003               	clrc
  5958  0978  0CA3               	rrf	__div_to_l_@quot+3,f
  5959  0979  0CA2               	rrf	__div_to_l_@quot+2,f
  5960  097A  0CA1               	rrf	__div_to_l_@quot+1,f
  5961  097B  0CA0               	rrf	__div_to_l_@quot,f
  5962  097C  3EFF               	addlw	-1
  5963  097D  1D03               	skipz
  5964  097E  2977               	goto	u4645
  5965  097F  3001               	movlw	1
  5966  0980  00F8               	movwf	??__div_to_l_
  5967  0981  0878               	movf	??__div_to_l_,w
  5968  0982  07A5               	addwf	__div_to_l_@exp1,f
  5969  0983  1903               	btfsc	3,2
  5970  0984  2999               	goto	l3027
  5971  0985  2976               	goto	l3017
  5972  0986                     l3019:	
  5973  0986  3020               	movlw	32
  5974  0987  0225               	subwf	__div_to_l_@exp1,w
  5975  0988  1803               	btfsc	3,0
  5976  0989  2903               	goto	l2981
  5977  098A                     l579:	
  5978  098A  0825               	movf	__div_to_l_@exp1,w
  5979  098B  1903               	btfsc	3,2
  5980  098C  2999               	goto	l3027
  5981  098D  3001               	movlw	1
  5982  098E  00F8               	movwf	??__div_to_l_
  5983  098F                     u4675:	
  5984  098F  1003               	clrc
  5985  0990  0DA0               	rlf	__div_to_l_@quot,f
  5986  0991  0DA1               	rlf	__div_to_l_@quot+1,f
  5987  0992  0DA2               	rlf	__div_to_l_@quot+2,f
  5988  0993  0DA3               	rlf	__div_to_l_@quot+3,f
  5989  0994  0BF8               	decfsz	??__div_to_l_,f
  5990  0995  298F               	goto	u4675
  5991  0996  3001               	movlw	1
  5992  0997  02A5               	subwf	__div_to_l_@exp1,f
  5993  0998  298A               	goto	l579
  5994  0999                     l3027:	
  5995  0999  0823               	movf	__div_to_l_@quot+3,w
  5996  099A  00F3               	movwf	?__div_to_l_+3
  5997  099B  0822               	movf	__div_to_l_@quot+2,w
  5998  099C  00F2               	movwf	?__div_to_l_+2
  5999  099D  0821               	movf	__div_to_l_@quot+1,w
  6000  099E  00F1               	movwf	?__div_to_l_+1
  6001  099F  0820               	movf	__div_to_l_@quot,w
  6002  09A0  00F0               	movwf	?__div_to_l_
  6003  09A1  0008               	return
  6004  09A2                     __end_of__div_to_l_:	
  6005                           
  6006                           	psect	text13
  6007  152E                     __ptext13:	
  6008 ;; *************** function ___xxtofl *****************
  6009 ;; Defined at:
  6010 ;;		line 10 in file "D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\xxtofl.c"
  6011 ;; Parameters:    Size  Location     Type
  6012 ;;  sign            1    wreg     unsigned char 
  6013 ;;  val             4    0[COMMON] long 
  6014 ;; Auto vars:     Size  Location     Type
  6015 ;;  sign            1    8[COMMON] unsigned char 
  6016 ;;  arg             4   10[COMMON] unsigned long 
  6017 ;;  exp             1    9[COMMON] unsigned char 
  6018 ;; Return value:  Size  Location     Type
  6019 ;;                  4    0[COMMON] unsigned char 
  6020 ;; Registers used:
  6021 ;;		wreg, status,2, status,0
  6022 ;; Tracked objects:
  6023 ;;		On entry : 0/0
  6024 ;;		On exit  : 0/0
  6025 ;;		Unchanged: 0/0
  6026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6027 ;;      Params:         4       0       0       0       0
  6028 ;;      Locals:         6       0       0       0       0
  6029 ;;      Temps:          4       0       0       0       0
  6030 ;;      Totals:        14       0       0       0       0
  6031 ;;Total ram usage:       14 bytes
  6032 ;; Hardware stack levels used:    1
  6033 ;; This function calls:
  6034 ;;		Nothing
  6035 ;; This function is called by:
  6036 ;;		_main
  6037 ;;		_sprintf
  6038 ;; This function uses a non-reentrant model
  6039 ;;
  6040                           
  6041                           
  6042                           ;psect for function ___xxtofl
  6043  152E                     ___xxtofl:	
  6044                           
  6045                           ;incstack = 0
  6046                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  6047                           ;___xxtofl@sign stored from wreg
  6048  152E  00F8               	movwf	___xxtofl@sign
  6049  152F  0878               	movf	___xxtofl@sign,w
  6050  1530  1D03               	btfss	3,2
  6051  1531  1FF3               	btfss	___xxtofl@val+3,7
  6052  1532  2D43               	goto	l3177
  6053  1533  0970               	comf	___xxtofl@val,w
  6054  1534  00FA               	movwf	___xxtofl@arg
  6055  1535  0971               	comf	___xxtofl@val+1,w
  6056  1536  00FB               	movwf	___xxtofl@arg+1
  6057  1537  0972               	comf	___xxtofl@val+2,w
  6058  1538  00FC               	movwf	___xxtofl@arg+2
  6059  1539  0973               	comf	___xxtofl@val+3,w
  6060  153A  00FD               	movwf	___xxtofl@arg+3
  6061  153B  0AFA               	incf	___xxtofl@arg,f
  6062  153C  1903               	skipnz
  6063  153D  0AFB               	incf	___xxtofl@arg+1,f
  6064  153E  1903               	skipnz
  6065  153F  0AFC               	incf	___xxtofl@arg+2,f
  6066  1540  1903               	skipnz
  6067  1541  0AFD               	incf	___xxtofl@arg+3,f
  6068  1542  2D4B               	goto	l859
  6069  1543                     l3177:	
  6070  1543  0873               	movf	___xxtofl@val+3,w
  6071  1544  00FD               	movwf	___xxtofl@arg+3
  6072  1545  0872               	movf	___xxtofl@val+2,w
  6073  1546  00FC               	movwf	___xxtofl@arg+2
  6074  1547  0871               	movf	___xxtofl@val+1,w
  6075  1548  00FB               	movwf	___xxtofl@arg+1
  6076  1549  0870               	movf	___xxtofl@val,w
  6077  154A  00FA               	movwf	___xxtofl@arg
  6078  154B                     l859:	
  6079  154B  0873               	movf	___xxtofl@val+3,w
  6080  154C  0472               	iorwf	___xxtofl@val+2,w
  6081  154D  0471               	iorwf	___xxtofl@val+1,w
  6082  154E  0470               	iorwf	___xxtofl@val,w
  6083  154F  1D03               	skipz
  6084  1550  2D5A               	goto	l3183
  6085  1551  3000               	movlw	0
  6086  1552  00F3               	movwf	?___xxtofl+3
  6087  1553  3000               	movlw	0
  6088  1554  00F2               	movwf	?___xxtofl+2
  6089  1555  3000               	movlw	0
  6090  1556  00F1               	movwf	?___xxtofl+1
  6091  1557  3000               	movlw	0
  6092  1558  00F0               	movwf	?___xxtofl
  6093  1559  0008               	return
  6094  155A                     l3183:	
  6095  155A  3096               	movlw	150
  6096  155B  00F4               	movwf	??___xxtofl
  6097  155C  0874               	movf	??___xxtofl,w
  6098  155D  00F9               	movwf	___xxtofl@exp
  6099  155E                     l3187:	
  6100  155E  30FE               	movlw	254
  6101  155F  057D               	andwf	___xxtofl@arg+3,w
  6102  1560  1903               	btfsc	3,2
  6103  1561  2D8B               	goto	l865
  6104  1562  3001               	movlw	1
  6105  1563  00F4               	movwf	??___xxtofl
  6106  1564  0874               	movf	??___xxtofl,w
  6107  1565  07F9               	addwf	___xxtofl@exp,f
  6108  1566  3001               	movlw	1
  6109  1567                     u5105:	
  6110  1567  1003               	clrc
  6111  1568  0CFD               	rrf	___xxtofl@arg+3,f
  6112  1569  0CFC               	rrf	___xxtofl@arg+2,f
  6113  156A  0CFB               	rrf	___xxtofl@arg+1,f
  6114  156B  0CFA               	rrf	___xxtofl@arg,f
  6115  156C  3EFF               	addlw	-1
  6116  156D  1D03               	skipz
  6117  156E  2D67               	goto	u5105
  6118  156F  2D5E               	goto	l3187
  6119  1570                     l3189:	
  6120  1570  3001               	movlw	1
  6121  1571  00F4               	movwf	??___xxtofl
  6122  1572  0874               	movf	??___xxtofl,w
  6123  1573  07F9               	addwf	___xxtofl@exp,f
  6124  1574  3001               	movlw	1
  6125  1575  07FA               	addwf	___xxtofl@arg,f
  6126  1576  3000               	movlw	0
  6127  1577  1803               	skipnc
  6128  1578  3001               	movlw	1
  6129  1579  07FB               	addwf	___xxtofl@arg+1,f
  6130  157A  3000               	movlw	0
  6131  157B  1803               	skipnc
  6132  157C  3001               	movlw	1
  6133  157D  07FC               	addwf	___xxtofl@arg+2,f
  6134  157E  3000               	movlw	0
  6135  157F  1803               	skipnc
  6136  1580  3001               	movlw	1
  6137  1581  07FD               	addwf	___xxtofl@arg+3,f
  6138  1582  3001               	movlw	1
  6139  1583                     u5125:	
  6140  1583  1003               	clrc
  6141  1584  0CFD               	rrf	___xxtofl@arg+3,f
  6142  1585  0CFC               	rrf	___xxtofl@arg+2,f
  6143  1586  0CFB               	rrf	___xxtofl@arg+1,f
  6144  1587  0CFA               	rrf	___xxtofl@arg,f
  6145  1588  3EFF               	addlw	-1
  6146  1589  1D03               	skipz
  6147  158A  2D83               	goto	u5125
  6148  158B                     l865:	
  6149  158B  30FF               	movlw	255
  6150  158C  057D               	andwf	___xxtofl@arg+3,w
  6151  158D  1903               	btfsc	3,2
  6152  158E  2D9F               	goto	l3197
  6153  158F  2D70               	goto	l3189
  6154  1590                     l3199:	
  6155  1590  3002               	movlw	2
  6156  1591  0279               	subwf	___xxtofl@exp,w
  6157  1592  1C03               	btfss	3,0
  6158  1593  2DA1               	goto	l872
  6159  1594  3001               	movlw	1
  6160  1595  02F9               	subwf	___xxtofl@exp,f
  6161  1596  3001               	movlw	1
  6162  1597  00F4               	movwf	??___xxtofl
  6163  1598                     u5145:	
  6164  1598  1003               	clrc
  6165  1599  0DFA               	rlf	___xxtofl@arg,f
  6166  159A  0DFB               	rlf	___xxtofl@arg+1,f
  6167  159B  0DFC               	rlf	___xxtofl@arg+2,f
  6168  159C  0DFD               	rlf	___xxtofl@arg+3,f
  6169  159D  0BF4               	decfsz	??___xxtofl,f
  6170  159E  2D98               	goto	u5145
  6171  159F                     l3197:	
  6172  159F  1FFC               	btfss	___xxtofl@arg+2,7
  6173  15A0  2D90               	goto	l3199
  6174  15A1                     l872:	
  6175  15A1  1879               	btfsc	___xxtofl@exp,0
  6176  15A2  2DAB               	goto	l873
  6177  15A3  30FF               	movlw	255
  6178  15A4  05FA               	andwf	___xxtofl@arg,f
  6179  15A5  30FF               	movlw	255
  6180  15A6  05FB               	andwf	___xxtofl@arg+1,f
  6181  15A7  307F               	movlw	127
  6182  15A8  05FC               	andwf	___xxtofl@arg+2,f
  6183  15A9  30FF               	movlw	255
  6184  15AA  05FD               	andwf	___xxtofl@arg+3,f
  6185  15AB                     l873:	
  6186  15AB  1003               	clrc
  6187  15AC  0CF9               	rrf	___xxtofl@exp,f
  6188  15AD  0879               	movf	___xxtofl@exp,w
  6189  15AE  00F4               	movwf	??___xxtofl
  6190  15AF  01F5               	clrf	??___xxtofl+1
  6191  15B0  01F6               	clrf	??___xxtofl+2
  6192  15B1  01F7               	clrf	??___xxtofl+3
  6193  15B2  3018               	movlw	24
  6194  15B3                     u5185:	
  6195  15B3  1003               	clrc
  6196  15B4  0DF4               	rlf	??___xxtofl,f
  6197  15B5  0DF5               	rlf	??___xxtofl+1,f
  6198  15B6  0DF6               	rlf	??___xxtofl+2,f
  6199  15B7  0DF7               	rlf	??___xxtofl+3,f
  6200  15B8  3EFF               	addlw	-1
  6201  15B9  1D03               	skipz
  6202  15BA  2DB3               	goto	u5185
  6203  15BB  0874               	movf	??___xxtofl,w
  6204  15BC  04FA               	iorwf	___xxtofl@arg,f
  6205  15BD  0875               	movf	??___xxtofl+1,w
  6206  15BE  04FB               	iorwf	___xxtofl@arg+1,f
  6207  15BF  0876               	movf	??___xxtofl+2,w
  6208  15C0  04FC               	iorwf	___xxtofl@arg+2,f
  6209  15C1  0877               	movf	??___xxtofl+3,w
  6210  15C2  04FD               	iorwf	___xxtofl@arg+3,f
  6211  15C3  0878               	movf	___xxtofl@sign,w
  6212  15C4  1D03               	btfss	3,2
  6213  15C5  1FF3               	btfss	___xxtofl@val+3,7
  6214  15C6  2DC8               	goto	l3211
  6215  15C7  17FD               	bsf	___xxtofl@arg+3,7
  6216  15C8                     l3211:	
  6217  15C8  087D               	movf	___xxtofl@arg+3,w
  6218  15C9  00F3               	movwf	?___xxtofl+3
  6219  15CA  087C               	movf	___xxtofl@arg+2,w
  6220  15CB  00F2               	movwf	?___xxtofl+2
  6221  15CC  087B               	movf	___xxtofl@arg+1,w
  6222  15CD  00F1               	movwf	?___xxtofl+1
  6223  15CE  087A               	movf	___xxtofl@arg,w
  6224  15CF  00F0               	movwf	?___xxtofl
  6225  15D0  0008               	return
  6226  15D1                     __end_of___xxtofl:	
  6227                           
  6228                           	psect	text14
  6229  1F94                     __ptext14:	
  6230 ;; *************** function ___wmul *****************
  6231 ;; Defined at:
  6232 ;;		line 15 in file "D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\Umul16.c"
  6233 ;; Parameters:    Size  Location     Type
  6234 ;;  multiplier      2    0[COMMON] unsigned int 
  6235 ;;  multiplicand    2    2[COMMON] unsigned int 
  6236 ;; Auto vars:     Size  Location     Type
  6237 ;;  product         2    4[COMMON] unsigned int 
  6238 ;; Return value:  Size  Location     Type
  6239 ;;                  2    0[COMMON] unsigned int 
  6240 ;; Registers used:
  6241 ;;		wreg, status,2, status,0
  6242 ;; Tracked objects:
  6243 ;;		On entry : 0/0
  6244 ;;		On exit  : 0/0
  6245 ;;		Unchanged: 0/0
  6246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6247 ;;      Params:         4       0       0       0       0
  6248 ;;      Locals:         2       0       0       0       0
  6249 ;;      Temps:          0       0       0       0       0
  6250 ;;      Totals:         6       0       0       0       0
  6251 ;;Total ram usage:        6 bytes
  6252 ;; Hardware stack levels used:    1
  6253 ;; This function calls:
  6254 ;;		Nothing
  6255 ;; This function is called by:
  6256 ;;		_sprintf
  6257 ;; This function uses a non-reentrant model
  6258 ;;
  6259                           
  6260                           
  6261                           ;psect for function ___wmul
  6262  1F94                     ___wmul:	
  6263                           
  6264                           ;incstack = 0
  6265                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6266  1F94  01F4               	clrf	___wmul@product
  6267  1F95  01F5               	clrf	___wmul@product+1
  6268  1F96                     l3033:	
  6269  1F96  1C70               	btfss	___wmul@multiplier,0
  6270  1F97  2F9E               	goto	l398
  6271  1F98  0872               	movf	___wmul@multiplicand,w
  6272  1F99  07F4               	addwf	___wmul@product,f
  6273  1F9A  1803               	skipnc
  6274  1F9B  0AF5               	incf	___wmul@product+1,f
  6275  1F9C  0873               	movf	___wmul@multiplicand+1,w
  6276  1F9D  07F5               	addwf	___wmul@product+1,f
  6277  1F9E                     l398:	
  6278  1F9E  3001               	movlw	1
  6279  1F9F                     u4705:	
  6280  1F9F  1003               	clrc
  6281  1FA0  0DF2               	rlf	___wmul@multiplicand,f
  6282  1FA1  0DF3               	rlf	___wmul@multiplicand+1,f
  6283  1FA2  3EFF               	addlw	-1
  6284  1FA3  1D03               	skipz
  6285  1FA4  2F9F               	goto	u4705
  6286  1FA5  3001               	movlw	1
  6287  1FA6                     u4715:	
  6288  1FA6  1003               	clrc
  6289  1FA7  0CF1               	rrf	___wmul@multiplier+1,f
  6290  1FA8  0CF0               	rrf	___wmul@multiplier,f
  6291  1FA9  3EFF               	addlw	-1
  6292  1FAA  1D03               	skipz
  6293  1FAB  2FA6               	goto	u4715
  6294  1FAC  0870               	movf	___wmul@multiplier,w
  6295  1FAD  0471               	iorwf	___wmul@multiplier+1,w
  6296  1FAE  1D03               	btfss	3,2
  6297  1FAF  2F96               	goto	l3033
  6298  1FB0  0875               	movf	___wmul@product+1,w
  6299  1FB1  00F1               	movwf	?___wmul+1
  6300  1FB2  0874               	movf	___wmul@product,w
  6301  1FB3  00F0               	movwf	?___wmul
  6302  1FB4  0008               	return
  6303  1FB5                     __end_of___wmul:	
  6304                           
  6305                           	psect	text15
  6306  0803                     __ptext15:	
  6307 ;; *************** function ___llmod *****************
  6308 ;; Defined at:
  6309 ;;		line 5 in file "D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\llmod.c"
  6310 ;; Parameters:    Size  Location     Type
  6311 ;;  divisor         4    0[COMMON] unsigned long 
  6312 ;;  dividend        4    4[COMMON] unsigned long 
  6313 ;; Auto vars:     Size  Location     Type
  6314 ;;  counter         1    9[COMMON] unsigned char 
  6315 ;; Return value:  Size  Location     Type
  6316 ;;                  4    0[COMMON] unsigned long 
  6317 ;; Registers used:
  6318 ;;		wreg, status,2, status,0
  6319 ;; Tracked objects:
  6320 ;;		On entry : 0/0
  6321 ;;		On exit  : 0/0
  6322 ;;		Unchanged: 0/0
  6323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6324 ;;      Params:         8       0       0       0       0
  6325 ;;      Locals:         1       0       0       0       0
  6326 ;;      Temps:          1       0       0       0       0
  6327 ;;      Totals:        10       0       0       0       0
  6328 ;;Total ram usage:       10 bytes
  6329 ;; Hardware stack levels used:    1
  6330 ;; This function calls:
  6331 ;;		Nothing
  6332 ;; This function is called by:
  6333 ;;		_sprintf
  6334 ;; This function uses a non-reentrant model
  6335 ;;
  6336                           
  6337                           
  6338                           ;psect for function ___llmod
  6339  0803                     ___llmod:	
  6340                           
  6341                           ;incstack = 0
  6342                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  6343  0803  0873               	movf	___llmod@divisor+3,w
  6344  0804  0472               	iorwf	___llmod@divisor+2,w
  6345  0805  0471               	iorwf	___llmod@divisor+1,w
  6346  0806  0470               	iorwf	___llmod@divisor,w
  6347  0807  1903               	skipnz
  6348  0808  2846               	goto	l3161
  6349  0809  01F9               	clrf	___llmod@counter
  6350  080A  0AF9               	incf	___llmod@counter,f
  6351  080B                     l3151:	
  6352  080B  1BF3               	btfsc	___llmod@divisor+3,7
  6353  080C  281B               	goto	l3153
  6354  080D  3001               	movlw	1
  6355  080E  00F8               	movwf	??___llmod
  6356  080F                     u5025:	
  6357  080F  1003               	clrc
  6358  0810  0DF0               	rlf	___llmod@divisor,f
  6359  0811  0DF1               	rlf	___llmod@divisor+1,f
  6360  0812  0DF2               	rlf	___llmod@divisor+2,f
  6361  0813  0DF3               	rlf	___llmod@divisor+3,f
  6362  0814  0BF8               	decfsz	??___llmod,f
  6363  0815  280F               	goto	u5025
  6364  0816  3001               	movlw	1
  6365  0817  00F8               	movwf	??___llmod
  6366  0818  0878               	movf	??___llmod,w
  6367  0819  07F9               	addwf	___llmod@counter,f
  6368  081A  280B               	goto	l3151
  6369  081B                     l3153:	
  6370  081B  0873               	movf	___llmod@divisor+3,w
  6371  081C  0277               	subwf	___llmod@dividend+3,w
  6372  081D  1D03               	skipz
  6373  081E  2829               	goto	u5045
  6374  081F  0872               	movf	___llmod@divisor+2,w
  6375  0820  0276               	subwf	___llmod@dividend+2,w
  6376  0821  1D03               	skipz
  6377  0822  2829               	goto	u5045
  6378  0823  0871               	movf	___llmod@divisor+1,w
  6379  0824  0275               	subwf	___llmod@dividend+1,w
  6380  0825  1D03               	skipz
  6381  0826  2829               	goto	u5045
  6382  0827  0870               	movf	___llmod@divisor,w
  6383  0828  0274               	subwf	___llmod@dividend,w
  6384  0829                     u5045:	
  6385  0829  1C03               	skipc
  6386  082A  2839               	goto	l3157
  6387  082B  0870               	movf	___llmod@divisor,w
  6388  082C  02F4               	subwf	___llmod@dividend,f
  6389  082D  0871               	movf	___llmod@divisor+1,w
  6390  082E  1C03               	skipc
  6391  082F  0F71               	incfsz	___llmod@divisor+1,w
  6392  0830  02F5               	subwf	___llmod@dividend+1,f
  6393  0831  0872               	movf	___llmod@divisor+2,w
  6394  0832  1C03               	skipc
  6395  0833  0F72               	incfsz	___llmod@divisor+2,w
  6396  0834  02F6               	subwf	___llmod@dividend+2,f
  6397  0835  0873               	movf	___llmod@divisor+3,w
  6398  0836  1C03               	skipc
  6399  0837  0F73               	incfsz	___llmod@divisor+3,w
  6400  0838  02F7               	subwf	___llmod@dividend+3,f
  6401  0839                     l3157:	
  6402  0839  3001               	movlw	1
  6403  083A                     u5055:	
  6404  083A  1003               	clrc
  6405  083B  0CF3               	rrf	___llmod@divisor+3,f
  6406  083C  0CF2               	rrf	___llmod@divisor+2,f
  6407  083D  0CF1               	rrf	___llmod@divisor+1,f
  6408  083E  0CF0               	rrf	___llmod@divisor,f
  6409  083F  3EFF               	addlw	-1
  6410  0840  1D03               	skipz
  6411  0841  283A               	goto	u5055
  6412  0842  3001               	movlw	1
  6413  0843  02F9               	subwf	___llmod@counter,f
  6414  0844  1D03               	btfss	3,2
  6415  0845  281B               	goto	l3153
  6416  0846                     l3161:	
  6417  0846  0877               	movf	___llmod@dividend+3,w
  6418  0847  00F3               	movwf	?___llmod+3
  6419  0848  0876               	movf	___llmod@dividend+2,w
  6420  0849  00F2               	movwf	?___llmod+2
  6421  084A  0875               	movf	___llmod@dividend+1,w
  6422  084B  00F1               	movwf	?___llmod+1
  6423  084C  0874               	movf	___llmod@dividend,w
  6424  084D  00F0               	movwf	?___llmod
  6425  084E  0008               	return
  6426  084F                     __end_of___llmod:	
  6427                           
  6428                           	psect	text16
  6429  133C                     __ptext16:	
  6430 ;; *************** function ___lldiv *****************
  6431 ;; Defined at:
  6432 ;;		line 5 in file "D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\__lldiv.c"
  6433 ;; Parameters:    Size  Location     Type
  6434 ;;  divisor         4    0[COMMON] unsigned long 
  6435 ;;  dividend        4    4[COMMON] unsigned long 
  6436 ;; Auto vars:     Size  Location     Type
  6437 ;;  quotient        4    9[COMMON] unsigned long 
  6438 ;;  counter         1   13[COMMON] unsigned char 
  6439 ;; Return value:  Size  Location     Type
  6440 ;;                  4    0[COMMON] unsigned long 
  6441 ;; Registers used:
  6442 ;;		wreg, status,2, status,0
  6443 ;; Tracked objects:
  6444 ;;		On entry : 0/0
  6445 ;;		On exit  : 0/0
  6446 ;;		Unchanged: 0/0
  6447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6448 ;;      Params:         8       0       0       0       0
  6449 ;;      Locals:         5       0       0       0       0
  6450 ;;      Temps:          1       0       0       0       0
  6451 ;;      Totals:        14       0       0       0       0
  6452 ;;Total ram usage:       14 bytes
  6453 ;; Hardware stack levels used:    1
  6454 ;; This function calls:
  6455 ;;		Nothing
  6456 ;; This function is called by:
  6457 ;;		_sprintf
  6458 ;; This function uses a non-reentrant model
  6459 ;;
  6460                           
  6461                           
  6462                           ;psect for function ___lldiv
  6463  133C                     ___lldiv:	
  6464                           
  6465                           ;incstack = 0
  6466                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6467  133C  3000               	movlw	0
  6468  133D  00FC               	movwf	___lldiv@quotient+3
  6469  133E  3000               	movlw	0
  6470  133F  00FB               	movwf	___lldiv@quotient+2
  6471  1340  3000               	movlw	0
  6472  1341  00FA               	movwf	___lldiv@quotient+1
  6473  1342  3000               	movlw	0
  6474  1343  00F9               	movwf	___lldiv@quotient
  6475  1344  0873               	movf	___lldiv@divisor+3,w
  6476  1345  0472               	iorwf	___lldiv@divisor+2,w
  6477  1346  0471               	iorwf	___lldiv@divisor+1,w
  6478  1347  0470               	iorwf	___lldiv@divisor,w
  6479  1348  1903               	skipnz
  6480  1349  2B91               	goto	l3065
  6481  134A  01FD               	clrf	___lldiv@counter
  6482  134B  0AFD               	incf	___lldiv@counter,f
  6483  134C                     l3051:	
  6484  134C  1BF3               	btfsc	___lldiv@divisor+3,7
  6485  134D  2B5C               	goto	l3053
  6486  134E  3001               	movlw	1
  6487  134F  00F8               	movwf	??___lldiv
  6488  1350                     u4745:	
  6489  1350  1003               	clrc
  6490  1351  0DF0               	rlf	___lldiv@divisor,f
  6491  1352  0DF1               	rlf	___lldiv@divisor+1,f
  6492  1353  0DF2               	rlf	___lldiv@divisor+2,f
  6493  1354  0DF3               	rlf	___lldiv@divisor+3,f
  6494  1355  0BF8               	decfsz	??___lldiv,f
  6495  1356  2B50               	goto	u4745
  6496  1357  3001               	movlw	1
  6497  1358  00F8               	movwf	??___lldiv
  6498  1359  0878               	movf	??___lldiv,w
  6499  135A  07FD               	addwf	___lldiv@counter,f
  6500  135B  2B4C               	goto	l3051
  6501  135C                     l3053:	
  6502  135C  3001               	movlw	1
  6503  135D  00F8               	movwf	??___lldiv
  6504  135E                     u4765:	
  6505  135E  1003               	clrc
  6506  135F  0DF9               	rlf	___lldiv@quotient,f
  6507  1360  0DFA               	rlf	___lldiv@quotient+1,f
  6508  1361  0DFB               	rlf	___lldiv@quotient+2,f
  6509  1362  0DFC               	rlf	___lldiv@quotient+3,f
  6510  1363  0BF8               	decfsz	??___lldiv,f
  6511  1364  2B5E               	goto	u4765
  6512  1365  0873               	movf	___lldiv@divisor+3,w
  6513  1366  0277               	subwf	___lldiv@dividend+3,w
  6514  1367  1D03               	skipz
  6515  1368  2B73               	goto	u4775
  6516  1369  0872               	movf	___lldiv@divisor+2,w
  6517  136A  0276               	subwf	___lldiv@dividend+2,w
  6518  136B  1D03               	skipz
  6519  136C  2B73               	goto	u4775
  6520  136D  0871               	movf	___lldiv@divisor+1,w
  6521  136E  0275               	subwf	___lldiv@dividend+1,w
  6522  136F  1D03               	skipz
  6523  1370  2B73               	goto	u4775
  6524  1371  0870               	movf	___lldiv@divisor,w
  6525  1372  0274               	subwf	___lldiv@dividend,w
  6526  1373                     u4775:	
  6527  1373  1C03               	skipc
  6528  1374  2B84               	goto	l3061
  6529  1375  0870               	movf	___lldiv@divisor,w
  6530  1376  02F4               	subwf	___lldiv@dividend,f
  6531  1377  0871               	movf	___lldiv@divisor+1,w
  6532  1378  1C03               	skipc
  6533  1379  0F71               	incfsz	___lldiv@divisor+1,w
  6534  137A  02F5               	subwf	___lldiv@dividend+1,f
  6535  137B  0872               	movf	___lldiv@divisor+2,w
  6536  137C  1C03               	skipc
  6537  137D  0F72               	incfsz	___lldiv@divisor+2,w
  6538  137E  02F6               	subwf	___lldiv@dividend+2,f
  6539  137F  0873               	movf	___lldiv@divisor+3,w
  6540  1380  1C03               	skipc
  6541  1381  0F73               	incfsz	___lldiv@divisor+3,w
  6542  1382  02F7               	subwf	___lldiv@dividend+3,f
  6543  1383  1479               	bsf	___lldiv@quotient,0
  6544  1384                     l3061:	
  6545  1384  3001               	movlw	1
  6546  1385                     u4785:	
  6547  1385  1003               	clrc
  6548  1386  0CF3               	rrf	___lldiv@divisor+3,f
  6549  1387  0CF2               	rrf	___lldiv@divisor+2,f
  6550  1388  0CF1               	rrf	___lldiv@divisor+1,f
  6551  1389  0CF0               	rrf	___lldiv@divisor,f
  6552  138A  3EFF               	addlw	-1
  6553  138B  1D03               	skipz
  6554  138C  2B85               	goto	u4785
  6555  138D  3001               	movlw	1
  6556  138E  02FD               	subwf	___lldiv@counter,f
  6557  138F  1D03               	btfss	3,2
  6558  1390  2B5C               	goto	l3053
  6559  1391                     l3065:	
  6560  1391  087C               	movf	___lldiv@quotient+3,w
  6561  1392  00F3               	movwf	?___lldiv+3
  6562  1393  087B               	movf	___lldiv@quotient+2,w
  6563  1394  00F2               	movwf	?___lldiv+2
  6564  1395  087A               	movf	___lldiv@quotient+1,w
  6565  1396  00F1               	movwf	?___lldiv+1
  6566  1397  0879               	movf	___lldiv@quotient,w
  6567  1398  00F0               	movwf	?___lldiv
  6568  1399  0008               	return
  6569  139A                     __end_of___lldiv:	
  6570                           
  6571                           	psect	text17
  6572  139A                     __ptext17:	
  6573 ;; *************** function ___fltol *****************
  6574 ;; Defined at:
  6575 ;;		line 43 in file "D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\fltol.c"
  6576 ;; Parameters:    Size  Location     Type
  6577 ;;  f1              4   49[BANK0 ] unsigned long 
  6578 ;; Auto vars:     Size  Location     Type
  6579 ;;  exp1            1   59[BANK0 ] unsigned char 
  6580 ;;  sign1           1   58[BANK0 ] unsigned char 
  6581 ;; Return value:  Size  Location     Type
  6582 ;;                  4   49[BANK0 ] long 
  6583 ;; Registers used:
  6584 ;;		wreg, status,2, status,0
  6585 ;; Tracked objects:
  6586 ;;		On entry : 0/0
  6587 ;;		On exit  : 0/0
  6588 ;;		Unchanged: 0/0
  6589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6590 ;;      Params:         0       4       0       0       0
  6591 ;;      Locals:         0       2       0       0       0
  6592 ;;      Temps:          0       5       0       0       0
  6593 ;;      Totals:         0      11       0       0       0
  6594 ;;Total ram usage:       11 bytes
  6595 ;; Hardware stack levels used:    1
  6596 ;; This function calls:
  6597 ;;		Nothing
  6598 ;; This function is called by:
  6599 ;;		_sprintf
  6600 ;; This function uses a non-reentrant model
  6601 ;;
  6602                           
  6603                           
  6604                           ;psect for function ___fltol
  6605  139A                     ___fltol:	
  6606                           
  6607                           ;incstack = 0
  6608                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  6609  139A  1003               	clrc
  6610  139B  1283               	bcf	3,5	;RP0=0, select bank0
  6611  139C  1303               	bcf	3,6	;RP1=0, select bank0
  6612  139D  0D53               	rlf	___fltol@f1+2,w
  6613  139E  0D54               	rlf	___fltol@f1+3,w
  6614  139F  00D5               	movwf	??___fltol
  6615  13A0  0855               	movf	??___fltol,w
  6616  13A1  00DB               	movwf	___fltol@exp1
  6617  13A2  085B               	movf	___fltol@exp1,w
  6618  13A3  1D03               	btfss	3,2
  6619  13A4  2BAE               	goto	l3115
  6620  13A5                     l3111:	
  6621  13A5  3000               	movlw	0
  6622  13A6  00D4               	movwf	?___fltol+3
  6623  13A7  3000               	movlw	0
  6624  13A8  00D3               	movwf	?___fltol+2
  6625  13A9  3000               	movlw	0
  6626  13AA  00D2               	movwf	?___fltol+1
  6627  13AB  3000               	movlw	0
  6628  13AC  00D1               	movwf	?___fltol
  6629  13AD  0008               	return
  6630  13AE                     l3115:	
  6631  13AE  0851               	movf	___fltol@f1,w
  6632  13AF  00D5               	movwf	??___fltol
  6633  13B0  0852               	movf	___fltol@f1+1,w
  6634  13B1  00D6               	movwf	??___fltol+1
  6635  13B2  0853               	movf	___fltol@f1+2,w
  6636  13B3  00D7               	movwf	??___fltol+2
  6637  13B4  0854               	movf	___fltol@f1+3,w
  6638  13B5  00D8               	movwf	??___fltol+3
  6639  13B6  301F               	movlw	31
  6640  13B7                     u4925:	
  6641  13B7  1003               	clrc
  6642  13B8  0CD8               	rrf	??___fltol+3,f
  6643  13B9  0CD7               	rrf	??___fltol+2,f
  6644  13BA  0CD6               	rrf	??___fltol+1,f
  6645  13BB  0CD5               	rrf	??___fltol,f
  6646  13BC  3EFF               	addlw	-1
  6647  13BD  1D03               	skipz
  6648  13BE  2BB7               	goto	u4925
  6649  13BF  0855               	movf	??___fltol,w
  6650  13C0  00D9               	movwf	??___fltol+4
  6651  13C1  0859               	movf	??___fltol+4,w
  6652  13C2  00DA               	movwf	___fltol@sign1
  6653  13C3  17D3               	bsf	___fltol@f1+2,7
  6654  13C4  30FF               	movlw	255
  6655  13C5  05D1               	andwf	___fltol@f1,f
  6656  13C6  30FF               	movlw	255
  6657  13C7  05D2               	andwf	___fltol@f1+1,f
  6658  13C8  30FF               	movlw	255
  6659  13C9  05D3               	andwf	___fltol@f1+2,f
  6660  13CA  3000               	movlw	0
  6661  13CB  05D4               	andwf	___fltol@f1+3,f
  6662  13CC  3096               	movlw	150
  6663  13CD  02DB               	subwf	___fltol@exp1,f
  6664  13CE  1FDB               	btfss	___fltol@exp1,7
  6665  13CF  2BE5               	goto	l3133
  6666  13D0  085B               	movf	___fltol@exp1,w
  6667  13D1  3A80               	xorlw	128
  6668  13D2  3E97               	addlw	151
  6669  13D3  1C03               	btfss	3,0
  6670  13D4  2BA5               	goto	l3111
  6671  13D5                     l3131:	
  6672  13D5  3001               	movlw	1
  6673  13D6                     u4955:	
  6674  13D6  1003               	clrc
  6675  13D7  0CD4               	rrf	___fltol@f1+3,f
  6676  13D8  0CD3               	rrf	___fltol@f1+2,f
  6677  13D9  0CD2               	rrf	___fltol@f1+1,f
  6678  13DA  0CD1               	rrf	___fltol@f1,f
  6679  13DB  3EFF               	addlw	-1
  6680  13DC  1D03               	skipz
  6681  13DD  2BD6               	goto	u4955
  6682  13DE  3001               	movlw	1
  6683  13DF  00D5               	movwf	??___fltol
  6684  13E0  0855               	movf	??___fltol,w
  6685  13E1  07DB               	addwf	___fltol@exp1,f
  6686  13E2  1903               	btfsc	3,2
  6687  13E3  2BF8               	goto	l3141
  6688  13E4  2BD5               	goto	l3131
  6689  13E5                     l3133:	
  6690  13E5  3020               	movlw	32
  6691  13E6  025B               	subwf	___fltol@exp1,w
  6692  13E7  1803               	btfsc	3,0
  6693  13E8  2BA5               	goto	l3111
  6694  13E9                     l608:	
  6695  13E9  085B               	movf	___fltol@exp1,w
  6696  13EA  1903               	btfsc	3,2
  6697  13EB  2BF8               	goto	l3141
  6698  13EC  3001               	movlw	1
  6699  13ED  00D5               	movwf	??___fltol
  6700  13EE                     u4985:	
  6701  13EE  1003               	clrc
  6702  13EF  0DD1               	rlf	___fltol@f1,f
  6703  13F0  0DD2               	rlf	___fltol@f1+1,f
  6704  13F1  0DD3               	rlf	___fltol@f1+2,f
  6705  13F2  0DD4               	rlf	___fltol@f1+3,f
  6706  13F3  0BD5               	decfsz	??___fltol,f
  6707  13F4  2BEE               	goto	u4985
  6708  13F5  3001               	movlw	1
  6709  13F6  02DB               	subwf	___fltol@exp1,f
  6710  13F7  2BE9               	goto	l608
  6711  13F8                     l3141:	
  6712  13F8  085A               	movf	___fltol@sign1,w
  6713  13F9  1903               	btfsc	3,2
  6714  13FA  0008               	return
  6715  13FB  09D1               	comf	___fltol@f1,f
  6716  13FC  09D2               	comf	___fltol@f1+1,f
  6717  13FD  09D3               	comf	___fltol@f1+2,f
  6718  13FE  09D4               	comf	___fltol@f1+3,f
  6719  13FF  0AD1               	incf	___fltol@f1,f
  6720  1400  1903               	skipnz
  6721  1401  0AD2               	incf	___fltol@f1+1,f
  6722  1402  1903               	skipnz
  6723  1403  0AD3               	incf	___fltol@f1+2,f
  6724  1404  1903               	skipnz
  6725  1405  0AD4               	incf	___fltol@f1+3,f
  6726  1406  0008               	return
  6727  1407                     __end_of___fltol:	
  6728                           
  6729                           	psect	text18
  6730  1FB5                     __ptext18:	
  6731 ;; *************** function ___flsub *****************
  6732 ;; Defined at:
  6733 ;;		line 242 in file "D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\sprcadd.c"
  6734 ;; Parameters:    Size  Location     Type
  6735 ;;  a               4   70[BANK0 ] long 
  6736 ;;  b               4   74[BANK0 ] long 
  6737 ;; Auto vars:     Size  Location     Type
  6738 ;;		None
  6739 ;; Return value:  Size  Location     Type
  6740 ;;                  4   70[BANK0 ] long 
  6741 ;; Registers used:
  6742 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6743 ;; Tracked objects:
  6744 ;;		On entry : 0/0
  6745 ;;		On exit  : 0/0
  6746 ;;		Unchanged: 0/0
  6747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6748 ;;      Params:         0       8       0       0       0
  6749 ;;      Locals:         0       0       0       0       0
  6750 ;;      Temps:          0       0       0       0       0
  6751 ;;      Totals:         0       8       0       0       0
  6752 ;;Total ram usage:        8 bytes
  6753 ;; Hardware stack levels used:    1
  6754 ;; Hardware stack levels required when called:    1
  6755 ;; This function calls:
  6756 ;;		___fladd
  6757 ;; This function is called by:
  6758 ;;		_sprintf
  6759 ;; This function uses a non-reentrant model
  6760 ;;
  6761                           
  6762                           
  6763                           ;psect for function ___flsub
  6764  1FB5                     ___flsub:	
  6765                           
  6766                           ;incstack = 0
  6767                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6768  1FB5  3080               	movlw	128
  6769  1FB6  1283               	bcf	3,5	;RP0=0, select bank0
  6770  1FB7  1303               	bcf	3,6	;RP1=0, select bank0
  6771  1FB8  06E9               	xorwf	___flsub@a+3,f
  6772  1FB9  086D               	movf	___flsub@b+3,w
  6773  1FBA  00D5               	movwf	___fladd@b+3
  6774  1FBB  086C               	movf	___flsub@b+2,w
  6775  1FBC  00D4               	movwf	___fladd@b+2
  6776  1FBD  086B               	movf	___flsub@b+1,w
  6777  1FBE  00D3               	movwf	___fladd@b+1
  6778  1FBF  086A               	movf	___flsub@b,w
  6779  1FC0  00D2               	movwf	___fladd@b
  6780  1FC1  0869               	movf	___flsub@a+3,w
  6781  1FC2  00D9               	movwf	___fladd@a+3
  6782  1FC3  0868               	movf	___flsub@a+2,w
  6783  1FC4  00D8               	movwf	___fladd@a+2
  6784  1FC5  0867               	movf	___flsub@a+1,w
  6785  1FC6  00D7               	movwf	___fladd@a+1
  6786  1FC7  0866               	movf	___flsub@a,w
  6787  1FC8  00D6               	movwf	___fladd@a
  6788  1FC9  160A  118A  25D1   	fcall	___fladd
  6789  1FCC  1283               	bcf	3,5	;RP0=0, select bank0
  6790  1FCD  1303               	bcf	3,6	;RP1=0, select bank0
  6791  1FCE  0855               	movf	?___fladd+3,w
  6792  1FCF  00E9               	movwf	?___flsub+3
  6793  1FD0  0854               	movf	?___fladd+2,w
  6794  1FD1  00E8               	movwf	?___flsub+2
  6795  1FD2  0853               	movf	?___fladd+1,w
  6796  1FD3  00E7               	movwf	?___flsub+1
  6797  1FD4  0852               	movf	?___fladd,w
  6798  1FD5  00E6               	movwf	?___flsub
  6799  1FD6  0008               	return
  6800  1FD7                     __end_of___flsub:	
  6801                           
  6802                           	psect	text19
  6803  15D1                     __ptext19:	
  6804 ;; *************** function ___fladd *****************
  6805 ;; Defined at:
  6806 ;;		line 10 in file "D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\sprcadd.c"
  6807 ;; Parameters:    Size  Location     Type
  6808 ;;  b               4   50[BANK0 ] long 
  6809 ;;  a               4   54[BANK0 ] long 
  6810 ;; Auto vars:     Size  Location     Type
  6811 ;;  grs             1   69[BANK0 ] unsigned char 
  6812 ;;  bexp            1   68[BANK0 ] unsigned char 
  6813 ;;  aexp            1   67[BANK0 ] unsigned char 
  6814 ;;  signs           1   66[BANK0 ] unsigned char 
  6815 ;; Return value:  Size  Location     Type
  6816 ;;                  4   50[BANK0 ] unsigned char 
  6817 ;; Registers used:
  6818 ;;		wreg, status,2, status,0, btemp+1
  6819 ;; Tracked objects:
  6820 ;;		On entry : 0/0
  6821 ;;		On exit  : 0/0
  6822 ;;		Unchanged: 0/0
  6823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6824 ;;      Params:         0       8       0       0       0
  6825 ;;      Locals:         0       4       0       0       0
  6826 ;;      Temps:          0       8       0       0       0
  6827 ;;      Totals:         0      20       0       0       0
  6828 ;;Total ram usage:       20 bytes
  6829 ;; Hardware stack levels used:    1
  6830 ;; This function calls:
  6831 ;;		Nothing
  6832 ;; This function is called by:
  6833 ;;		_sprintf
  6834 ;;		___flsub
  6835 ;; This function uses a non-reentrant model
  6836 ;;
  6837                           
  6838                           
  6839                           ;psect for function ___fladd
  6840  15D1                     ___fladd:	
  6841                           
  6842                           ;incstack = 0
  6843                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  6844  15D1  1283               	bcf	3,5	;RP0=0, select bank0
  6845  15D2  1303               	bcf	3,6	;RP1=0, select bank0
  6846  15D3  0855               	movf	___fladd@b+3,w
  6847  15D4  3980               	andlw	128
  6848  15D5  00DA               	movwf	??___fladd
  6849  15D6  085A               	movf	??___fladd,w
  6850  15D7  00E2               	movwf	___fladd@signs
  6851  15D8  0855               	movf	___fladd@b+3,w
  6852  15D9  00DA               	movwf	??___fladd
  6853  15DA  075A               	addwf	??___fladd,w
  6854  15DB  00DB               	movwf	??___fladd+1
  6855  15DC  085B               	movf	??___fladd+1,w
  6856  15DD  00E4               	movwf	___fladd@bexp
  6857  15DE  1BD4               	btfsc	___fladd@b+2,7
  6858  15DF  1464               	bsf	___fladd@bexp,0
  6859  15E0  0864               	movf	___fladd@bexp,w
  6860  15E1  1903               	btfsc	3,2
  6861  15E2  2DF1               	goto	l2487
  6862  15E3  0A64               	incf	___fladd@bexp,w
  6863  15E4  1D03               	btfss	3,2
  6864  15E5  2DEE               	goto	l2483
  6865  15E6  3000               	movlw	0
  6866  15E7  00D5               	movwf	___fladd@b+3
  6867  15E8  3000               	movlw	0
  6868  15E9  00D4               	movwf	___fladd@b+2
  6869  15EA  3000               	movlw	0
  6870  15EB  00D3               	movwf	___fladd@b+1
  6871  15EC  3000               	movlw	0
  6872  15ED  00D2               	movwf	___fladd@b
  6873  15EE                     l2483:	
  6874  15EE  17D4               	bsf	___fladd@b+2,7
  6875  15EF  01D5               	clrf	___fladd@b+3
  6876  15F0  2DF9               	goto	l2489
  6877  15F1                     l2487:	
  6878  15F1  3000               	movlw	0
  6879  15F2  00D5               	movwf	___fladd@b+3
  6880  15F3  3000               	movlw	0
  6881  15F4  00D4               	movwf	___fladd@b+2
  6882  15F5  3000               	movlw	0
  6883  15F6  00D3               	movwf	___fladd@b+1
  6884  15F7  3000               	movlw	0
  6885  15F8  00D2               	movwf	___fladd@b
  6886  15F9                     l2489:	
  6887  15F9  0859               	movf	___fladd@a+3,w
  6888  15FA  3980               	andlw	128
  6889  15FB  00DA               	movwf	??___fladd
  6890  15FC  085A               	movf	??___fladd,w
  6891  15FD  00E3               	movwf	___fladd@aexp
  6892  15FE  0863               	movf	___fladd@aexp,w
  6893  15FF  0662               	xorwf	___fladd@signs,w
  6894  1600  1D03               	btfss	3,2
  6895  1601  1762               	bsf	___fladd@signs,6
  6896  1602  0859               	movf	___fladd@a+3,w
  6897  1603  00DA               	movwf	??___fladd
  6898  1604  075A               	addwf	??___fladd,w
  6899  1605  00DB               	movwf	??___fladd+1
  6900  1606  085B               	movf	??___fladd+1,w
  6901  1607  00E3               	movwf	___fladd@aexp
  6902  1608  1BD8               	btfsc	___fladd@a+2,7
  6903  1609  1463               	bsf	___fladd@aexp,0
  6904  160A  0863               	movf	___fladd@aexp,w
  6905  160B  1903               	btfsc	3,2
  6906  160C  2E1B               	goto	l2511
  6907  160D  0A63               	incf	___fladd@aexp,w
  6908  160E  1D03               	btfss	3,2
  6909  160F  2E18               	goto	l2507
  6910  1610  3000               	movlw	0
  6911  1611  00D9               	movwf	___fladd@a+3
  6912  1612  3000               	movlw	0
  6913  1613  00D8               	movwf	___fladd@a+2
  6914  1614  3000               	movlw	0
  6915  1615  00D7               	movwf	___fladd@a+1
  6916  1616  3000               	movlw	0
  6917  1617  00D6               	movwf	___fladd@a
  6918  1618                     l2507:	
  6919  1618  17D8               	bsf	___fladd@a+2,7
  6920  1619  01D9               	clrf	___fladd@a+3
  6921  161A  2E23               	goto	l725
  6922  161B                     l2511:	
  6923  161B  3000               	movlw	0
  6924  161C  00D9               	movwf	___fladd@a+3
  6925  161D  3000               	movlw	0
  6926  161E  00D8               	movwf	___fladd@a+2
  6927  161F  3000               	movlw	0
  6928  1620  00D7               	movwf	___fladd@a+1
  6929  1621  3000               	movlw	0
  6930  1622  00D6               	movwf	___fladd@a
  6931  1623                     l725:	
  6932  1623  0864               	movf	___fladd@bexp,w
  6933  1624  0263               	subwf	___fladd@aexp,w
  6934  1625  1803               	skipnc
  6935  1626  2E69               	goto	l2547
  6936  1627  1F62               	btfss	___fladd@signs,6
  6937  1628  2E2D               	goto	l2517
  6938  1629  3080               	movlw	128
  6939  162A  00DA               	movwf	??___fladd
  6940  162B  085A               	movf	??___fladd,w
  6941  162C  06E2               	xorwf	___fladd@signs,f
  6942  162D                     l2517:	
  6943  162D  0864               	movf	___fladd@bexp,w
  6944  162E  00DA               	movwf	??___fladd
  6945  162F  085A               	movf	??___fladd,w
  6946  1630  00E5               	movwf	___fladd@grs
  6947  1631  0863               	movf	___fladd@aexp,w
  6948  1632  00DA               	movwf	??___fladd
  6949  1633  085A               	movf	??___fladd,w
  6950  1634  00E4               	movwf	___fladd@bexp
  6951  1635  0865               	movf	___fladd@grs,w
  6952  1636  00DA               	movwf	??___fladd
  6953  1637  085A               	movf	??___fladd,w
  6954  1638  00E3               	movwf	___fladd@aexp
  6955  1639  0852               	movf	___fladd@b,w
  6956  163A  00DA               	movwf	??___fladd
  6957  163B  085A               	movf	??___fladd,w
  6958  163C  00E5               	movwf	___fladd@grs
  6959  163D  0856               	movf	___fladd@a,w
  6960  163E  00DA               	movwf	??___fladd
  6961  163F  085A               	movf	??___fladd,w
  6962  1640  00D2               	movwf	___fladd@b
  6963  1641  0865               	movf	___fladd@grs,w
  6964  1642  00DA               	movwf	??___fladd
  6965  1643  085A               	movf	??___fladd,w
  6966  1644  00D6               	movwf	___fladd@a
  6967  1645  0853               	movf	___fladd@b+1,w
  6968  1646  00DA               	movwf	??___fladd
  6969  1647  085A               	movf	??___fladd,w
  6970  1648  00E5               	movwf	___fladd@grs
  6971  1649  0857               	movf	___fladd@a+1,w
  6972  164A  00DA               	movwf	??___fladd
  6973  164B  085A               	movf	??___fladd,w
  6974  164C  00D3               	movwf	___fladd@b+1
  6975  164D  0865               	movf	___fladd@grs,w
  6976  164E  00DA               	movwf	??___fladd
  6977  164F  085A               	movf	??___fladd,w
  6978  1650  00D7               	movwf	___fladd@a+1
  6979  1651  0854               	movf	___fladd@b+2,w
  6980  1652  00DA               	movwf	??___fladd
  6981  1653  085A               	movf	??___fladd,w
  6982  1654  00E5               	movwf	___fladd@grs
  6983  1655  0858               	movf	___fladd@a+2,w
  6984  1656  00DA               	movwf	??___fladd
  6985  1657  085A               	movf	??___fladd,w
  6986  1658  00D4               	movwf	___fladd@b+2
  6987  1659  0865               	movf	___fladd@grs,w
  6988  165A  00DA               	movwf	??___fladd
  6989  165B  085A               	movf	??___fladd,w
  6990  165C  00D8               	movwf	___fladd@a+2
  6991  165D  0855               	movf	___fladd@b+3,w
  6992  165E  00DA               	movwf	??___fladd
  6993  165F  085A               	movf	??___fladd,w
  6994  1660  00E5               	movwf	___fladd@grs
  6995  1661  0859               	movf	___fladd@a+3,w
  6996  1662  00DA               	movwf	??___fladd
  6997  1663  085A               	movf	??___fladd,w
  6998  1664  00D5               	movwf	___fladd@b+3
  6999  1665  0865               	movf	___fladd@grs,w
  7000  1666  00DA               	movwf	??___fladd
  7001  1667  085A               	movf	??___fladd,w
  7002  1668  00D9               	movwf	___fladd@a+3
  7003  1669                     l2547:	
  7004  1669  01E5               	clrf	___fladd@grs
  7005  166A  0863               	movf	___fladd@aexp,w
  7006  166B  00DA               	movwf	??___fladd
  7007  166C  01DB               	clrf	??___fladd+1
  7008  166D  085B               	movf	??___fladd+1,w
  7009  166E  00DD               	movwf	??___fladd+3
  7010  166F  0864               	movf	___fladd@bexp,w
  7011  1670  025A               	subwf	??___fladd,w
  7012  1671  00DC               	movwf	??___fladd+2
  7013  1672  1C03               	skipc
  7014  1673  03DD               	decf	??___fladd+3,f
  7015  1674  085D               	movf	??___fladd+3,w
  7016  1675  3A80               	xorlw	128
  7017  1676  00FF               	movwf	127
  7018  1677  3080               	movlw	128
  7019  1678  027F               	subwf	127,w
  7020  1679  1D03               	skipz
  7021  167A  2E7D               	goto	u3345
  7022  167B  301A               	movlw	26
  7023  167C  025C               	subwf	??___fladd+2,w
  7024  167D                     u3345:	
  7025  167D  1C03               	skipc
  7026  167E  2EB6               	goto	l2565
  7027  167F  1283               	bcf	3,5	;RP0=0, select bank0
  7028  1680  1303               	bcf	3,6	;RP1=0, select bank0
  7029  1681  0855               	movf	___fladd@b+3,w
  7030  1682  0454               	iorwf	___fladd@b+2,w
  7031  1683  0453               	iorwf	___fladd@b+1,w
  7032  1684  0452               	iorwf	___fladd@b,w
  7033  1685  1903               	btfsc	3,2
  7034  1686  2E89               	goto	u3350
  7035  1687  3001               	movlw	1
  7036  1688  2E8A               	goto	u3360
  7037  1689                     u3350:	
  7038  1689  3000               	movlw	0
  7039  168A                     u3360:	
  7040  168A  00DA               	movwf	??___fladd
  7041  168B  085A               	movf	??___fladd,w
  7042  168C  00E5               	movwf	___fladd@grs
  7043  168D  3000               	movlw	0
  7044  168E  00D5               	movwf	___fladd@b+3
  7045  168F  3000               	movlw	0
  7046  1690  00D4               	movwf	___fladd@b+2
  7047  1691  3000               	movlw	0
  7048  1692  00D3               	movwf	___fladd@b+1
  7049  1693  3000               	movlw	0
  7050  1694  00D2               	movwf	___fladd@b
  7051  1695  0863               	movf	___fladd@aexp,w
  7052  1696  00DA               	movwf	??___fladd
  7053  1697  085A               	movf	??___fladd,w
  7054  1698  00E4               	movwf	___fladd@bexp
  7055  1699  2EBC               	goto	l729
  7056  169A                     l731:	
  7057  169A  1C65               	btfss	___fladd@grs,0
  7058  169B  2EA5               	goto	l2555
  7059  169C  0865               	movf	___fladd@grs,w
  7060  169D  00DA               	movwf	??___fladd
  7061  169E  1003               	clrc
  7062  169F  0C5A               	rrf	??___fladd,w
  7063  16A0  3801               	iorlw	1
  7064  16A1  00DB               	movwf	??___fladd+1
  7065  16A2  085B               	movf	??___fladd+1,w
  7066  16A3  00E5               	movwf	___fladd@grs
  7067  16A4  2EA7               	goto	l2557
  7068  16A5                     l2555:	
  7069  16A5  1003               	clrc
  7070  16A6  0CE5               	rrf	___fladd@grs,f
  7071  16A7                     l2557:	
  7072  16A7  1852               	btfsc	___fladd@b,0
  7073  16A8  17E5               	bsf	___fladd@grs,7
  7074  16A9  3001               	movlw	1
  7075  16AA  00DA               	movwf	??___fladd
  7076  16AB                     u3395:	
  7077  16AB  0D55               	rlf	___fladd@b+3,w
  7078  16AC  0CD5               	rrf	___fladd@b+3,f
  7079  16AD  0CD4               	rrf	___fladd@b+2,f
  7080  16AE  0CD3               	rrf	___fladd@b+1,f
  7081  16AF  0CD2               	rrf	___fladd@b,f
  7082  16B0  0BDA               	decfsz	??___fladd& (0+127),f
  7083  16B1  2EAB               	goto	u3395
  7084  16B2  3001               	movlw	1
  7085  16B3  00DA               	movwf	??___fladd
  7086  16B4  085A               	movf	??___fladd,w
  7087  16B5  07E4               	addwf	___fladd@bexp,f
  7088  16B6                     l2565:	
  7089  16B6  1283               	bcf	3,5	;RP0=0, select bank0
  7090  16B7  1303               	bcf	3,6	;RP1=0, select bank0
  7091  16B8  0863               	movf	___fladd@aexp,w
  7092  16B9  0264               	subwf	___fladd@bexp,w
  7093  16BA  1C03               	skipc
  7094  16BB  2E9A               	goto	l731
  7095  16BC                     l729:	
  7096  16BC  1B62               	btfsc	___fladd@signs,6
  7097  16BD  2EFD               	goto	l2591
  7098  16BE  0864               	movf	___fladd@bexp,w
  7099  16BF  1D03               	btfss	3,2
  7100  16C0  2ECA               	goto	l2573
  7101  16C1  3000               	movlw	0
  7102  16C2  00D5               	movwf	?___fladd+3
  7103  16C3  3000               	movlw	0
  7104  16C4  00D4               	movwf	?___fladd+2
  7105  16C5  3000               	movlw	0
  7106  16C6  00D3               	movwf	?___fladd+1
  7107  16C7  3000               	movlw	0
  7108  16C8  00D2               	movwf	?___fladd
  7109  16C9  0008               	return
  7110  16CA                     l2573:	
  7111  16CA  0856               	movf	___fladd@a,w
  7112  16CB  07D2               	addwf	___fladd@b,f
  7113  16CC  0857               	movf	___fladd@a+1,w
  7114  16CD  1103               	clrz
  7115  16CE  1803               	skipnc
  7116  16CF  3E01               	addlw	1
  7117  16D0  1D03               	btfss	3,2
  7118  16D1  07D3               	addwf	___fladd@b+1,f
  7119  16D2  0858               	movf	___fladd@a+2,w
  7120  16D3  1103               	clrz
  7121  16D4  1803               	skipnc
  7122  16D5  3E01               	addlw	1
  7123  16D6  1D03               	btfss	3,2
  7124  16D7  07D4               	addwf	___fladd@b+2,f
  7125  16D8  0859               	movf	___fladd@a+3,w
  7126  16D9  1103               	clrz
  7127  16DA  1803               	skipnc
  7128  16DB  3E01               	addlw	1
  7129  16DC  1D03               	btfss	3,2
  7130  16DD  07D5               	addwf	___fladd@b+3,f
  7131  16DE  1C55               	btfss	___fladd@b+3,0
  7132  16DF  2F9F               	goto	l2625
  7133  16E0  1C65               	btfss	___fladd@grs,0
  7134  16E1  2EEB               	goto	l2581
  7135  16E2  0865               	movf	___fladd@grs,w
  7136  16E3  00DA               	movwf	??___fladd
  7137  16E4  1003               	clrc
  7138  16E5  0C5A               	rrf	??___fladd,w
  7139  16E6  3801               	iorlw	1
  7140  16E7  00DB               	movwf	??___fladd+1
  7141  16E8  085B               	movf	??___fladd+1,w
  7142  16E9  00E5               	movwf	___fladd@grs
  7143  16EA  2EED               	goto	l2583
  7144  16EB                     l2581:	
  7145  16EB  1003               	clrc
  7146  16EC  0CE5               	rrf	___fladd@grs,f
  7147  16ED                     l2583:	
  7148  16ED  1852               	btfsc	___fladd@b,0
  7149  16EE  17E5               	bsf	___fladd@grs,7
  7150  16EF  3001               	movlw	1
  7151  16F0  00DA               	movwf	??___fladd
  7152  16F1                     u3475:	
  7153  16F1  0D55               	rlf	___fladd@b+3,w
  7154  16F2  0CD5               	rrf	___fladd@b+3,f
  7155  16F3  0CD4               	rrf	___fladd@b+2,f
  7156  16F4  0CD3               	rrf	___fladd@b+1,f
  7157  16F5  0CD2               	rrf	___fladd@b,f
  7158  16F6  0BDA               	decfsz	??___fladd& (0+127),f
  7159  16F7  2EF1               	goto	u3475
  7160  16F8  3001               	movlw	1
  7161  16F9  00DA               	movwf	??___fladd
  7162  16FA  085A               	movf	??___fladd,w
  7163  16FB  07E4               	addwf	___fladd@bexp,f
  7164  16FC  2F9F               	goto	l2625
  7165  16FD                     l2591:	
  7166  16FD  0855               	movf	___fladd@b+3,w
  7167  16FE  3A80               	xorlw	128
  7168  16FF  00FF               	movwf	127
  7169  1700  0859               	movf	___fladd@a+3,w
  7170  1701  3A80               	xorlw	128
  7171  1702  027F               	subwf	127,w
  7172  1703  1D03               	skipz
  7173  1704  2F0F               	goto	u3483
  7174  1705  0858               	movf	___fladd@a+2,w
  7175  1706  0254               	subwf	___fladd@b+2,w
  7176  1707  1D03               	skipz
  7177  1708  2F0F               	goto	u3483
  7178  1709  0857               	movf	___fladd@a+1,w
  7179  170A  0253               	subwf	___fladd@b+1,w
  7180  170B  1D03               	skipz
  7181  170C  2F0F               	goto	u3483
  7182  170D  0856               	movf	___fladd@a,w
  7183  170E  0252               	subwf	___fladd@b,w
  7184  170F                     u3483:	
  7185  170F  1803               	skipnc
  7186  1710  2F67               	goto	l2601
  7187  1711  30FF               	movlw	255
  7188  1712  00DA               	movwf	??___fladd
  7189  1713  30FF               	movlw	255
  7190  1714  00DB               	movwf	??___fladd+1
  7191  1715  30FF               	movlw	255
  7192  1716  00DC               	movwf	??___fladd+2
  7193  1717  30FF               	movlw	255
  7194  1718  00DD               	movwf	??___fladd+3
  7195  1719  0856               	movf	___fladd@a,w
  7196  171A  00DE               	movwf	??___fladd+4
  7197  171B  0857               	movf	___fladd@a+1,w
  7198  171C  00DF               	movwf	??___fladd+5
  7199  171D  0858               	movf	___fladd@a+2,w
  7200  171E  00E0               	movwf	??___fladd+6
  7201  171F  0859               	movf	___fladd@a+3,w
  7202  1720  00E1               	movwf	??___fladd+7
  7203  1721  0852               	movf	___fladd@b,w
  7204  1722  02DE               	subwf	??___fladd+4,f
  7205  1723  0853               	movf	___fladd@b+1,w
  7206  1724  1C03               	skipc
  7207  1725  0F53               	incfsz	___fladd@b+1,w
  7208  1726  2F28               	goto	u3491
  7209  1727  2F29               	goto	u3492
  7210  1728                     u3491:	
  7211  1728  02DF               	subwf	??___fladd+5,f
  7212  1729                     u3492:	
  7213  1729  0854               	movf	___fladd@b+2,w
  7214  172A  1C03               	skipc
  7215  172B  0F54               	incfsz	___fladd@b+2,w
  7216  172C  2F2E               	goto	u3493
  7217  172D  2F2F               	goto	u3494
  7218  172E                     u3493:	
  7219  172E  02E0               	subwf	??___fladd+6,f
  7220  172F                     u3494:	
  7221  172F  0855               	movf	___fladd@b+3,w
  7222  1730  1C03               	skipc
  7223  1731  0F55               	incfsz	___fladd@b+3,w
  7224  1732  2F34               	goto	u3495
  7225  1733  2F35               	goto	u3496
  7226  1734                     u3495:	
  7227  1734  02E1               	subwf	??___fladd+7,f
  7228  1735                     u3496:	
  7229  1735  085E               	movf	??___fladd+4,w
  7230  1736  07DA               	addwf	??___fladd,f
  7231  1737  085F               	movf	??___fladd+5,w
  7232  1738  1803               	skipnc
  7233  1739  0F5F               	incfsz	??___fladd+5,w
  7234  173A  2F3C               	goto	u3500
  7235  173B  2F3D               	goto	u3501
  7236  173C                     u3500:	
  7237  173C  07DB               	addwf	??___fladd+1,f
  7238  173D                     u3501:	
  7239  173D  0860               	movf	??___fladd+6,w
  7240  173E  1803               	skipnc
  7241  173F  0F60               	incfsz	??___fladd+6,w
  7242  1740  2F42               	goto	u3502
  7243  1741  2F43               	goto	u3503
  7244  1742                     u3502:	
  7245  1742  07DC               	addwf	??___fladd+2,f
  7246  1743                     u3503:	
  7247  1743  0861               	movf	??___fladd+7,w
  7248  1744  1803               	skipnc
  7249  1745  0A61               	incf	??___fladd+7,w
  7250  1746  07DD               	addwf	??___fladd+3,f
  7251  1747  085D               	movf	??___fladd+3,w
  7252  1748  00D5               	movwf	___fladd@b+3
  7253  1749  085C               	movf	??___fladd+2,w
  7254  174A  00D4               	movwf	___fladd@b+2
  7255  174B  085B               	movf	??___fladd+1,w
  7256  174C  00D3               	movwf	___fladd@b+1
  7257  174D  085A               	movf	??___fladd,w
  7258  174E  00D2               	movwf	___fladd@b
  7259  174F  3080               	movlw	128
  7260  1750  00DA               	movwf	??___fladd
  7261  1751  085A               	movf	??___fladd,w
  7262  1752  06E2               	xorwf	___fladd@signs,f
  7263  1753  09E5               	comf	___fladd@grs,f
  7264  1754  0AE5               	incf	___fladd@grs,f
  7265  1755  0865               	movf	___fladd@grs,w
  7266  1756  1D03               	btfss	3,2
  7267  1757  2F75               	goto	l746
  7268  1758  3001               	movlw	1
  7269  1759  07D2               	addwf	___fladd@b,f
  7270  175A  3000               	movlw	0
  7271  175B  1803               	skipnc
  7272  175C  3001               	movlw	1
  7273  175D  07D3               	addwf	___fladd@b+1,f
  7274  175E  3000               	movlw	0
  7275  175F  1803               	skipnc
  7276  1760  3001               	movlw	1
  7277  1761  07D4               	addwf	___fladd@b+2,f
  7278  1762  3000               	movlw	0
  7279  1763  1803               	skipnc
  7280  1764  3001               	movlw	1
  7281  1765  07D5               	addwf	___fladd@b+3,f
  7282  1766  2F75               	goto	l746
  7283  1767                     l2601:	
  7284  1767  0856               	movf	___fladd@a,w
  7285  1768  02D2               	subwf	___fladd@b,f
  7286  1769  0857               	movf	___fladd@a+1,w
  7287  176A  1C03               	skipc
  7288  176B  0F57               	incfsz	___fladd@a+1,w
  7289  176C  02D3               	subwf	___fladd@b+1,f
  7290  176D  0858               	movf	___fladd@a+2,w
  7291  176E  1C03               	skipc
  7292  176F  0F58               	incfsz	___fladd@a+2,w
  7293  1770  02D4               	subwf	___fladd@b+2,f
  7294  1771  0859               	movf	___fladd@a+3,w
  7295  1772  1C03               	skipc
  7296  1773  0F59               	incfsz	___fladd@a+3,w
  7297  1774  02D5               	subwf	___fladd@b+3,f
  7298  1775                     l746:	
  7299  1775  0855               	movf	___fladd@b+3,w
  7300  1776  0454               	iorwf	___fladd@b+2,w
  7301  1777  0453               	iorwf	___fladd@b+1,w
  7302  1778  0452               	iorwf	___fladd@b,w
  7303  1779  1D03               	skipz
  7304  177A  2F9D               	goto	l2623
  7305  177B  0865               	movf	___fladd@grs,w
  7306  177C  1D03               	btfss	3,2
  7307  177D  2F9D               	goto	l2623
  7308  177E  3000               	movlw	0
  7309  177F  00D5               	movwf	?___fladd+3
  7310  1780  3000               	movlw	0
  7311  1781  00D4               	movwf	?___fladd+2
  7312  1782  3000               	movlw	0
  7313  1783  00D3               	movwf	?___fladd+1
  7314  1784  3000               	movlw	0
  7315  1785  00D2               	movwf	?___fladd
  7316  1786  0008               	return
  7317  1787                     l2609:	
  7318  1787  3001               	movlw	1
  7319  1788  00DA               	movwf	??___fladd
  7320  1789                     u3545:	
  7321  1789  1003               	clrc
  7322  178A  0DD2               	rlf	___fladd@b,f
  7323  178B  0DD3               	rlf	___fladd@b+1,f
  7324  178C  0DD4               	rlf	___fladd@b+2,f
  7325  178D  0DD5               	rlf	___fladd@b+3,f
  7326  178E  0BDA               	decfsz	??___fladd,f
  7327  178F  2F89               	goto	u3545
  7328  1790  1BE5               	btfsc	___fladd@grs,7
  7329  1791  1452               	bsf	___fladd@b,0
  7330  1792  1C65               	btfss	___fladd@grs,0
  7331  1793  2F96               	goto	l2617
  7332  1794  1403               	setc
  7333  1795  2F97               	goto	L7
  7334  1796                     l2617:	
  7335  1796  1003               	clrc
  7336  1797                     L7:	
  7337  1797  0DE5               	rlf	___fladd@grs,f
  7338  1798  0864               	movf	___fladd@bexp,w
  7339  1799  1903               	btfsc	3,2
  7340  179A  2F9D               	goto	l2623
  7341  179B  3001               	movlw	1
  7342  179C  02E4               	subwf	___fladd@bexp,f
  7343  179D                     l2623:	
  7344  179D  1FD4               	btfss	___fladd@b+2,7
  7345  179E  2F87               	goto	l2609
  7346  179F                     l2625:	
  7347  179F  01E3               	clrf	___fladd@aexp
  7348  17A0  1FE5               	btfss	___fladd@grs,7
  7349  17A1  2FAA               	goto	l2635
  7350  17A2  0865               	movf	___fladd@grs,w
  7351  17A3  397F               	andlw	127
  7352  17A4  1903               	btfsc	3,2
  7353  17A5  1852               	btfsc	___fladd@b,0
  7354  17A6  2FA8               	goto	l2631
  7355  17A7  2FAA               	goto	l2635
  7356  17A8                     l2631:	
  7357  17A8  01E3               	clrf	___fladd@aexp
  7358  17A9  0AE3               	incf	___fladd@aexp,f
  7359  17AA                     l2635:	
  7360  17AA  0863               	movf	___fladd@aexp,w
  7361  17AB  1903               	btfsc	3,2
  7362  17AC  2FDD               	goto	l759
  7363  17AD  3001               	movlw	1
  7364  17AE  07D2               	addwf	___fladd@b,f
  7365  17AF  3000               	movlw	0
  7366  17B0  1803               	skipnc
  7367  17B1  3001               	movlw	1
  7368  17B2  07D3               	addwf	___fladd@b+1,f
  7369  17B3  3000               	movlw	0
  7370  17B4  1803               	skipnc
  7371  17B5  3001               	movlw	1
  7372  17B6  07D4               	addwf	___fladd@b+2,f
  7373  17B7  3000               	movlw	0
  7374  17B8  1803               	skipnc
  7375  17B9  3001               	movlw	1
  7376  17BA  07D5               	addwf	___fladd@b+3,f
  7377  17BB  1C55               	btfss	___fladd@b+3,0
  7378  17BC  2FDD               	goto	l759
  7379  17BD  0852               	movf	___fladd@b,w
  7380  17BE  00DA               	movwf	??___fladd
  7381  17BF  0853               	movf	___fladd@b+1,w
  7382  17C0  00DB               	movwf	??___fladd+1
  7383  17C1  0854               	movf	___fladd@b+2,w
  7384  17C2  00DC               	movwf	??___fladd+2
  7385  17C3  0855               	movf	___fladd@b+3,w
  7386  17C4  00DD               	movwf	??___fladd+3
  7387  17C5  3001               	movlw	1
  7388  17C6  00DE               	movwf	??___fladd+4
  7389  17C7                     u3645:	
  7390  17C7  0D5D               	rlf	??___fladd+3,w
  7391  17C8  0CDD               	rrf	??___fladd+3,f
  7392  17C9  0CDC               	rrf	??___fladd+2,f
  7393  17CA  0CDB               	rrf	??___fladd+1,f
  7394  17CB  0CDA               	rrf	??___fladd,f
  7395  17CC  0BDE               	decfsz	??___fladd+4,f
  7396  17CD  2FC7               	goto	u3645
  7397  17CE  085D               	movf	??___fladd+3,w
  7398  17CF  00D5               	movwf	___fladd@b+3
  7399  17D0  085C               	movf	??___fladd+2,w
  7400  17D1  00D4               	movwf	___fladd@b+2
  7401  17D2  085B               	movf	??___fladd+1,w
  7402  17D3  00D3               	movwf	___fladd@b+1
  7403  17D4  085A               	movf	??___fladd,w
  7404  17D5  00D2               	movwf	___fladd@b
  7405  17D6  0A64               	incf	___fladd@bexp,w
  7406  17D7  1903               	btfsc	3,2
  7407  17D8  2FDD               	goto	l759
  7408  17D9  3001               	movlw	1
  7409  17DA  00DA               	movwf	??___fladd
  7410  17DB  085A               	movf	??___fladd,w
  7411  17DC  07E4               	addwf	___fladd@bexp,f
  7412  17DD                     l759:	
  7413  17DD  0A64               	incf	___fladd@bexp,w
  7414  17DE  1D03               	btfss	3,2
  7415  17DF  0864               	movf	___fladd@bexp,w
  7416  17E0  1D03               	btfss	3,2
  7417  17E1  2FED               	goto	l2653
  7418  17E2  3000               	movlw	0
  7419  17E3  00D5               	movwf	___fladd@b+3
  7420  17E4  3000               	movlw	0
  7421  17E5  00D4               	movwf	___fladd@b+2
  7422  17E6  3000               	movlw	0
  7423  17E7  00D3               	movwf	___fladd@b+1
  7424  17E8  3000               	movlw	0
  7425  17E9  00D2               	movwf	___fladd@b
  7426  17EA  0864               	movf	___fladd@bexp,w
  7427  17EB  1903               	btfsc	3,2
  7428  17EC  01E2               	clrf	___fladd@signs
  7429  17ED                     l2653:	
  7430  17ED  1C64               	btfss	___fladd@bexp,0
  7431  17EE  2FF1               	goto	l2657
  7432  17EF  17D4               	bsf	___fladd@b+2,7
  7433  17F0  2FF5               	goto	l767
  7434  17F1                     l2657:	
  7435  17F1  307F               	movlw	127
  7436  17F2  00DA               	movwf	??___fladd
  7437  17F3  085A               	movf	??___fladd,w
  7438  17F4  05D4               	andwf	___fladd@b+2,f
  7439  17F5                     l767:	
  7440  17F5  0864               	movf	___fladd@bexp,w
  7441  17F6  00DA               	movwf	??___fladd
  7442  17F7  1003               	clrc
  7443  17F8  0C5A               	rrf	??___fladd,w
  7444  17F9  00DB               	movwf	??___fladd+1
  7445  17FA  085B               	movf	??___fladd+1,w
  7446  17FB  00D5               	movwf	___fladd@b+3
  7447  17FC  1FE2               	btfss	___fladd@signs,7
  7448  17FD  0008               	return
  7449  17FE  17D5               	bsf	___fladd@b+3,7
  7450  17FF  0008               	return
  7451  1800                     __end_of___fladd:	
  7452                           
  7453                           	psect	text20
  7454  1E9A                     __ptext20:	
  7455 ;; *************** function ___flneg *****************
  7456 ;; Defined at:
  7457 ;;		line 15 in file "D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\flneg.c"
  7458 ;; Parameters:    Size  Location     Type
  7459 ;;  f1              4    0[COMMON] unsigned char 
  7460 ;; Auto vars:     Size  Location     Type
  7461 ;;		None
  7462 ;; Return value:  Size  Location     Type
  7463 ;;                  4    0[COMMON] unsigned char 
  7464 ;; Registers used:
  7465 ;;		wreg
  7466 ;; Tracked objects:
  7467 ;;		On entry : 0/0
  7468 ;;		On exit  : 0/0
  7469 ;;		Unchanged: 0/0
  7470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7471 ;;      Params:         4       0       0       0       0
  7472 ;;      Locals:         0       0       0       0       0
  7473 ;;      Temps:          0       0       0       0       0
  7474 ;;      Totals:         4       0       0       0       0
  7475 ;;Total ram usage:        4 bytes
  7476 ;; Hardware stack levels used:    1
  7477 ;; This function calls:
  7478 ;;		Nothing
  7479 ;; This function is called by:
  7480 ;;		_sprintf
  7481 ;; This function uses a non-reentrant model
  7482 ;;
  7483                           
  7484                           
  7485                           ;psect for function ___flneg
  7486  1E9A                     ___flneg:	
  7487                           
  7488                           ;incstack = 0
  7489                           ; Regs used in ___flneg: [wreg]
  7490  1E9A  0873               	movf	___flneg@f1+3,w
  7491  1E9B  0472               	iorwf	___flneg@f1+2,w
  7492  1E9C  0471               	iorwf	___flneg@f1+1,w
  7493  1E9D  0470               	iorwf	___flneg@f1,w
  7494  1E9E  1903               	skipnz
  7495  1E9F  0008               	return
  7496  1EA0  3080               	movlw	128
  7497  1EA1  06F3               	xorwf	___flneg@f1+3,f
  7498  1EA2  0008               	return
  7499  1EA3                     __end_of___flneg:	
  7500                           
  7501                           	psect	text21
  7502  1407                     __ptext21:	
  7503 ;; *************** function ___flge *****************
  7504 ;; Defined at:
  7505 ;;		line 4 in file "D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\flge.c"
  7506 ;; Parameters:    Size  Location     Type
  7507 ;;  ff1             4    0[COMMON] unsigned char 
  7508 ;;  ff2             4    4[COMMON] unsigned char 
  7509 ;; Auto vars:     Size  Location     Type
  7510 ;;		None
  7511 ;; Return value:  Size  Location     Type
  7512 ;;		None               void
  7513 ;; Registers used:
  7514 ;;		wreg, status,2, status,0
  7515 ;; Tracked objects:
  7516 ;;		On entry : 0/0
  7517 ;;		On exit  : 0/0
  7518 ;;		Unchanged: 0/0
  7519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7520 ;;      Params:         8       0       0       0       0
  7521 ;;      Locals:         0       0       0       0       0
  7522 ;;      Temps:          4       0       0       0       0
  7523 ;;      Totals:        12       0       0       0       0
  7524 ;;Total ram usage:       12 bytes
  7525 ;; Hardware stack levels used:    1
  7526 ;; This function calls:
  7527 ;;		Nothing
  7528 ;; This function is called by:
  7529 ;;		_sprintf
  7530 ;; This function uses a non-reentrant model
  7531 ;;
  7532                           
  7533                           
  7534                           ;psect for function ___flge
  7535  1407                     ___flge:	
  7536                           
  7537                           ;incstack = 0
  7538                           ; Regs used in ___flge: [wreg+status,2+status,0]
  7539  1407  3000               	movlw	0
  7540  1408  0570               	andwf	___flge@ff1,w
  7541  1409  00F8               	movwf	??___flge
  7542  140A  3000               	movlw	0
  7543  140B  0571               	andwf	___flge@ff1+1,w
  7544  140C  00F9               	movwf	??___flge+1
  7545  140D  3080               	movlw	128
  7546  140E  0572               	andwf	___flge@ff1+2,w
  7547  140F  00FA               	movwf	??___flge+2
  7548  1410  307F               	movlw	127
  7549  1411  0573               	andwf	___flge@ff1+3,w
  7550  1412  00FB               	movwf	??___flge+3
  7551  1413  087B               	movf	??___flge+3,w
  7552  1414  047A               	iorwf	??___flge+2,w
  7553  1415  0479               	iorwf	??___flge+1,w
  7554  1416  0478               	iorwf	??___flge,w
  7555  1417  1D03               	skipz
  7556  1418  2C21               	goto	l589
  7557  1419  3000               	movlw	0
  7558  141A  00F3               	movwf	___flge@ff1+3
  7559  141B  3000               	movlw	0
  7560  141C  00F2               	movwf	___flge@ff1+2
  7561  141D  3000               	movlw	0
  7562  141E  00F1               	movwf	___flge@ff1+1
  7563  141F  3000               	movlw	0
  7564  1420  00F0               	movwf	___flge@ff1
  7565  1421                     l589:	
  7566  1421  3000               	movlw	0
  7567  1422  0574               	andwf	___flge@ff2,w
  7568  1423  00F8               	movwf	??___flge
  7569  1424  3000               	movlw	0
  7570  1425  0575               	andwf	___flge@ff2+1,w
  7571  1426  00F9               	movwf	??___flge+1
  7572  1427  3080               	movlw	128
  7573  1428  0576               	andwf	___flge@ff2+2,w
  7574  1429  00FA               	movwf	??___flge+2
  7575  142A  307F               	movlw	127
  7576  142B  0577               	andwf	___flge@ff2+3,w
  7577  142C  00FB               	movwf	??___flge+3
  7578  142D  087B               	movf	??___flge+3,w
  7579  142E  047A               	iorwf	??___flge+2,w
  7580  142F  0479               	iorwf	??___flge+1,w
  7581  1430  0478               	iorwf	??___flge,w
  7582  1431  1D03               	skipz
  7583  1432  2C3B               	goto	l3087
  7584  1433  3000               	movlw	0
  7585  1434  00F7               	movwf	___flge@ff2+3
  7586  1435  3000               	movlw	0
  7587  1436  00F6               	movwf	___flge@ff2+2
  7588  1437  3000               	movlw	0
  7589  1438  00F5               	movwf	___flge@ff2+1
  7590  1439  3000               	movlw	0
  7591  143A  00F4               	movwf	___flge@ff2
  7592  143B                     l3087:	
  7593  143B  1FF3               	btfss	___flge@ff1+3,7
  7594  143C  2C61               	goto	l3091
  7595  143D  3000               	movlw	0
  7596  143E  00F8               	movwf	??___flge
  7597  143F  3000               	movlw	0
  7598  1440  00F9               	movwf	??___flge+1
  7599  1441  3000               	movlw	0
  7600  1442  00FA               	movwf	??___flge+2
  7601  1443  3080               	movlw	128
  7602  1444  00FB               	movwf	??___flge+3
  7603  1445  0870               	movf	___flge@ff1,w
  7604  1446  02F8               	subwf	??___flge,f
  7605  1447  0871               	movf	___flge@ff1+1,w
  7606  1448  1C03               	skipc
  7607  1449  0F71               	incfsz	___flge@ff1+1,w
  7608  144A  2C4C               	goto	u4861
  7609  144B  2C4D               	goto	u4862
  7610  144C                     u4861:	
  7611  144C  02F9               	subwf	??___flge+1,f
  7612  144D                     u4862:	
  7613  144D  0872               	movf	___flge@ff1+2,w
  7614  144E  1C03               	skipc
  7615  144F  0F72               	incfsz	___flge@ff1+2,w
  7616  1450  2C52               	goto	u4863
  7617  1451  2C53               	goto	u4864
  7618  1452                     u4863:	
  7619  1452  02FA               	subwf	??___flge+2,f
  7620  1453                     u4864:	
  7621  1453  0873               	movf	___flge@ff1+3,w
  7622  1454  1C03               	skipc
  7623  1455  0F73               	incfsz	___flge@ff1+3,w
  7624  1456  2C58               	goto	u4865
  7625  1457  2C59               	goto	u4866
  7626  1458                     u4865:	
  7627  1458  02FB               	subwf	??___flge+3,f
  7628  1459                     u4866:	
  7629  1459  087B               	movf	??___flge+3,w
  7630  145A  00F3               	movwf	___flge@ff1+3
  7631  145B  087A               	movf	??___flge+2,w
  7632  145C  00F2               	movwf	___flge@ff1+2
  7633  145D  0879               	movf	??___flge+1,w
  7634  145E  00F1               	movwf	___flge@ff1+1
  7635  145F  0878               	movf	??___flge,w
  7636  1460  00F0               	movwf	___flge@ff1
  7637  1461                     l3091:	
  7638  1461  1FF7               	btfss	___flge@ff2+3,7
  7639  1462  2C87               	goto	l592
  7640  1463  3000               	movlw	0
  7641  1464  00F8               	movwf	??___flge
  7642  1465  3000               	movlw	0
  7643  1466  00F9               	movwf	??___flge+1
  7644  1467  3000               	movlw	0
  7645  1468  00FA               	movwf	??___flge+2
  7646  1469  3080               	movlw	128
  7647  146A  00FB               	movwf	??___flge+3
  7648  146B  0874               	movf	___flge@ff2,w
  7649  146C  02F8               	subwf	??___flge,f
  7650  146D  0875               	movf	___flge@ff2+1,w
  7651  146E  1C03               	skipc
  7652  146F  0F75               	incfsz	___flge@ff2+1,w
  7653  1470  2C72               	goto	u4881
  7654  1471  2C73               	goto	u4882
  7655  1472                     u4881:	
  7656  1472  02F9               	subwf	??___flge+1,f
  7657  1473                     u4882:	
  7658  1473  0876               	movf	___flge@ff2+2,w
  7659  1474  1C03               	skipc
  7660  1475  0F76               	incfsz	___flge@ff2+2,w
  7661  1476  2C78               	goto	u4883
  7662  1477  2C79               	goto	u4884
  7663  1478                     u4883:	
  7664  1478  02FA               	subwf	??___flge+2,f
  7665  1479                     u4884:	
  7666  1479  0877               	movf	___flge@ff2+3,w
  7667  147A  1C03               	skipc
  7668  147B  0F77               	incfsz	___flge@ff2+3,w
  7669  147C  2C7E               	goto	u4885
  7670  147D  2C7F               	goto	u4886
  7671  147E                     u4885:	
  7672  147E  02FB               	subwf	??___flge+3,f
  7673  147F                     u4886:	
  7674  147F  087B               	movf	??___flge+3,w
  7675  1480  00F7               	movwf	___flge@ff2+3
  7676  1481  087A               	movf	??___flge+2,w
  7677  1482  00F6               	movwf	___flge@ff2+2
  7678  1483  0879               	movf	??___flge+1,w
  7679  1484  00F5               	movwf	___flge@ff2+1
  7680  1485  0878               	movf	??___flge,w
  7681  1486  00F4               	movwf	___flge@ff2
  7682  1487                     l592:	
  7683  1487  3080               	movlw	128
  7684  1488  06F3               	xorwf	___flge@ff1+3,f
  7685  1489  3080               	movlw	128
  7686  148A  06F7               	xorwf	___flge@ff2+3,f
  7687  148B  0877               	movf	___flge@ff2+3,w
  7688  148C  0273               	subwf	___flge@ff1+3,w
  7689  148D  1D03               	skipz
  7690  148E  0008               	return
  7691  148F  0876               	movf	___flge@ff2+2,w
  7692  1490  0272               	subwf	___flge@ff1+2,w
  7693  1491  1D03               	skipz
  7694  1492  0008               	return
  7695  1493  0875               	movf	___flge@ff2+1,w
  7696  1494  0271               	subwf	___flge@ff1+1,w
  7697  1495  1D03               	skipz
  7698  1496  0008               	return
  7699  1497  0874               	movf	___flge@ff2,w
  7700  1498  0270               	subwf	___flge@ff1,w
  7701  1499  0008               	return
  7702  149A                     __end_of___flge:	
  7703                           
  7704                           	psect	text22
  7705  11A8                     __ptext22:	
  7706 ;; *************** function ___fleq *****************
  7707 ;; Defined at:
  7708 ;;		line 4 in file "D:\PROGRAM\MPLABX v5.20\XC8 v2.05\pic\sources\c90\common\fleq.c"
  7709 ;; Parameters:    Size  Location     Type
  7710 ;;  ff1             4    0[COMMON] unsigned char 
  7711 ;;  ff2             4    4[COMMON] unsigned char 
  7712 ;; Auto vars:     Size  Location     Type
  7713 ;;		None
  7714 ;; Return value:  Size  Location     Type
  7715 ;;		None               void
  7716 ;; Registers used:
  7717 ;;		wreg, status,2, status,0
  7718 ;; Tracked objects:
  7719 ;;		On entry : 0/0
  7720 ;;		On exit  : 0/0
  7721 ;;		Unchanged: 0/0
  7722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7723 ;;      Params:         8       0       0       0       0
  7724 ;;      Locals:         0       0       0       0       0
  7725 ;;      Temps:          4       0       0       0       0
  7726 ;;      Totals:        12       0       0       0       0
  7727 ;;Total ram usage:       12 bytes
  7728 ;; Hardware stack levels used:    1
  7729 ;; This function calls:
  7730 ;;		Nothing
  7731 ;; This function is called by:
  7732 ;;		_sprintf
  7733 ;; This function uses a non-reentrant model
  7734 ;;
  7735                           
  7736                           
  7737                           ;psect for function ___fleq
  7738  11A8                     ___fleq:	
  7739                           
  7740                           ;incstack = 0
  7741                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  7742  11A8  3000               	movlw	0
  7743  11A9  0570               	andwf	___fleq@ff1,w
  7744  11AA  00F8               	movwf	??___fleq
  7745  11AB  3000               	movlw	0
  7746  11AC  0571               	andwf	___fleq@ff1+1,w
  7747  11AD  00F9               	movwf	??___fleq+1
  7748  11AE  3080               	movlw	128
  7749  11AF  0572               	andwf	___fleq@ff1+2,w
  7750  11B0  00FA               	movwf	??___fleq+2
  7751  11B1  307F               	movlw	127
  7752  11B2  0573               	andwf	___fleq@ff1+3,w
  7753  11B3  00FB               	movwf	??___fleq+3
  7754  11B4  087B               	movf	??___fleq+3,w
  7755  11B5  047A               	iorwf	??___fleq+2,w
  7756  11B6  0479               	iorwf	??___fleq+1,w
  7757  11B7  0478               	iorwf	??___fleq,w
  7758  11B8  1D03               	skipz
  7759  11B9  29C2               	goto	l584
  7760  11BA  3000               	movlw	0
  7761  11BB  00F3               	movwf	___fleq@ff1+3
  7762  11BC  3000               	movlw	0
  7763  11BD  00F2               	movwf	___fleq@ff1+2
  7764  11BE  3000               	movlw	0
  7765  11BF  00F1               	movwf	___fleq@ff1+1
  7766  11C0  3000               	movlw	0
  7767  11C1  00F0               	movwf	___fleq@ff1
  7768  11C2                     l584:	
  7769  11C2  3000               	movlw	0
  7770  11C3  0574               	andwf	___fleq@ff2,w
  7771  11C4  00F8               	movwf	??___fleq
  7772  11C5  3000               	movlw	0
  7773  11C6  0575               	andwf	___fleq@ff2+1,w
  7774  11C7  00F9               	movwf	??___fleq+1
  7775  11C8  3080               	movlw	128
  7776  11C9  0576               	andwf	___fleq@ff2+2,w
  7777  11CA  00FA               	movwf	??___fleq+2
  7778  11CB  307F               	movlw	127
  7779  11CC  0577               	andwf	___fleq@ff2+3,w
  7780  11CD  00FB               	movwf	??___fleq+3
  7781  11CE  087B               	movf	??___fleq+3,w
  7782  11CF  047A               	iorwf	??___fleq+2,w
  7783  11D0  0479               	iorwf	??___fleq+1,w
  7784  11D1  0478               	iorwf	??___fleq,w
  7785  11D2  1D03               	skipz
  7786  11D3  29DC               	goto	l585
  7787  11D4  3000               	movlw	0
  7788  11D5  00F7               	movwf	___fleq@ff2+3
  7789  11D6  3000               	movlw	0
  7790  11D7  00F6               	movwf	___fleq@ff2+2
  7791  11D8  3000               	movlw	0
  7792  11D9  00F5               	movwf	___fleq@ff2+1
  7793  11DA  3000               	movlw	0
  7794  11DB  00F4               	movwf	___fleq@ff2
  7795  11DC                     l585:	
  7796  11DC  0877               	movf	___fleq@ff2+3,w
  7797  11DD  0673               	xorwf	___fleq@ff1+3,w
  7798  11DE  1D03               	skipz
  7799  11DF  29EA               	goto	u4825
  7800  11E0  0876               	movf	___fleq@ff2+2,w
  7801  11E1  0672               	xorwf	___fleq@ff1+2,w
  7802  11E2  1D03               	skipz
  7803  11E3  29EA               	goto	u4825
  7804  11E4  0875               	movf	___fleq@ff2+1,w
  7805  11E5  0671               	xorwf	___fleq@ff1+1,w
  7806  11E6  1D03               	skipz
  7807  11E7  29EA               	goto	u4825
  7808  11E8  0874               	movf	___fleq@ff2,w
  7809  11E9  0670               	xorwf	___fleq@ff1,w
  7810  11EA                     u4825:	
  7811  11EA  1903               	skipnz
  7812  11EB  29EE               	goto	l3077
  7813  11EC  1003               	clrc
  7814  11ED  0008               	return
  7815  11EE                     l3077:	
  7816  11EE  1403               	setc
  7817  11EF  0008               	return
  7818  11F0                     __end_of___fleq:	
  7819                           
  7820                           	psect	text23
  7821  1EBD                     __ptext23:	
  7822 ;; *************** function _MPU_Start_Loc *****************
  7823 ;; Defined at:
  7824 ;;		line 28 in file "MPU6050.c"
  7825 ;; Parameters:    Size  Location     Type
  7826 ;;		None
  7827 ;; Auto vars:     Size  Location     Type
  7828 ;;		None
  7829 ;; Return value:  Size  Location     Type
  7830 ;;                  1    wreg      void 
  7831 ;; Registers used:
  7832 ;;		wreg, status,2, status,0, pclath, cstack
  7833 ;; Tracked objects:
  7834 ;;		On entry : 0/0
  7835 ;;		On exit  : 0/0
  7836 ;;		Unchanged: 0/0
  7837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7838 ;;      Params:         0       0       0       0       0
  7839 ;;      Locals:         0       0       0       0       0
  7840 ;;      Temps:          0       0       0       0       0
  7841 ;;      Totals:         0       0       0       0       0
  7842 ;;Total ram usage:        0 bytes
  7843 ;; Hardware stack levels used:    1
  7844 ;; Hardware stack levels required when called:    3
  7845 ;; This function calls:
  7846 ;;		_I2C_Repeated_Start
  7847 ;;		_I2C_Start_Wait
  7848 ;;		_I2C_Write
  7849 ;; This function is called by:
  7850 ;;		_main
  7851 ;; This function uses a non-reentrant model
  7852 ;;
  7853                           
  7854                           
  7855                           ;psect for function _MPU_Start_Loc
  7856  1EBD                     _MPU_Start_Loc:	
  7857                           
  7858                           ;MPU6050.c: 30:  I2C_Start_Wait(0xD0);
  7859                           
  7860                           ;incstack = 0
  7861                           ; Regs used in _MPU_Start_Loc: [wreg+status,2+status,0+pclath+cstack]
  7862  1EBD  30D0               	movlw	208
  7863  1EBE  160A  158A  273A  160A  158A  	fcall	_I2C_Start_Wait
  7864                           
  7865                           ;MPU6050.c: 31:  I2C_Write(0x3B);
  7866  1EC3  303B               	movlw	59
  7867  1EC4  160A  158A  26CE  160A  158A  	fcall	_I2C_Write
  7868                           
  7869                           ;MPU6050.c: 32:  I2C_Repeated_Start(0xD1);
  7870  1EC9  30D1               	movlw	209
  7871  1ECA  160A  158A  26E0   	fcall	_I2C_Repeated_Start
  7872  1ECD  0008               	return
  7873  1ECE                     __end_of_MPU_Start_Loc:	
  7874                           
  7875                           	psect	text24
  7876  1EE0                     __ptext24:	
  7877 ;; *************** function _I2C_Repeated_Start *****************
  7878 ;; Defined at:
  7879 ;;		line 52 in file "I2C_Source_File.c"
  7880 ;; Parameters:    Size  Location     Type
  7881 ;;  slave_read_a    1    wreg     unsigned char 
  7882 ;; Auto vars:     Size  Location     Type
  7883 ;;  slave_read_a    1    1[COMMON] unsigned char 
  7884 ;; Return value:  Size  Location     Type
  7885 ;;                  1    wreg      unsigned char 
  7886 ;; Registers used:
  7887 ;;		wreg, status,2, status,0, pclath, cstack
  7888 ;; Tracked objects:
  7889 ;;		On entry : 0/0
  7890 ;;		On exit  : 0/0
  7891 ;;		Unchanged: 0/0
  7892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7893 ;;      Params:         0       0       0       0       0
  7894 ;;      Locals:         1       0       0       0       0
  7895 ;;      Temps:          0       0       0       0       0
  7896 ;;      Totals:         1       0       0       0       0
  7897 ;;Total ram usage:        1 bytes
  7898 ;; Hardware stack levels used:    1
  7899 ;; Hardware stack levels required when called:    2
  7900 ;; This function calls:
  7901 ;;		_I2C_Write
  7902 ;; This function is called by:
  7903 ;;		_MPU_Start_Loc
  7904 ;; This function uses a non-reentrant model
  7905 ;;
  7906                           
  7907                           
  7908                           ;psect for function _I2C_Repeated_Start
  7909  1EE0                     _I2C_Repeated_Start:	
  7910                           
  7911                           ;incstack = 0
  7912                           ; Regs used in _I2C_Repeated_Start: [wreg+status,2+status,0+pclath+cstack]
  7913                           ;I2C_Repeated_Start@slave_read_address stored from wreg
  7914  1EE0  00F1               	movwf	I2C_Repeated_Start@slave_read_address
  7915                           
  7916                           ;I2C_Source_File.c: 52: char I2C_Repeated_Start(char slave_read_address);I2C_Source_File
      +                          .c: 53: {;I2C_Source_File.c: 54:     RSEN = 1;
  7917  1EE1  1683               	bsf	3,5	;RP0=1, select bank1
  7918  1EE2  1303               	bcf	3,6	;RP1=0, select bank1
  7919  1EE3  1491               	bsf	17,1	;volatile
  7920  1EE4                     l175:	
  7921                           ;I2C_Source_File.c: 55:     while(SSPCON2bits.RSEN);
  7922                           
  7923  1EE4  1891               	btfsc	17,1	;volatile
  7924  1EE5  2EE4               	goto	l175
  7925                           
  7926                           ;I2C_Source_File.c: 56:     SSPIF = 0;
  7927  1EE6  1283               	bcf	3,5	;RP0=0, select bank0
  7928  1EE7  1303               	bcf	3,6	;RP1=0, select bank0
  7929  1EE8  118C               	bcf	12,3	;volatile
  7930                           
  7931                           ;I2C_Source_File.c: 57:     if(!SSPSTATbits.S)
  7932  1EE9  1683               	bsf	3,5	;RP0=1, select bank1
  7933  1EEA  1303               	bcf	3,6	;RP1=0, select bank1
  7934  1EEB  1D94               	btfss	20,3	;volatile
  7935  1EEC  0008               	return
  7936                           
  7937                           ;I2C_Source_File.c: 59:     I2C_Write(slave_read_address);
  7938  1EED  0871               	movf	I2C_Repeated_Start@slave_read_address,w
  7939  1EEE  160A  158A  26CE   	fcall	_I2C_Write
  7940                           
  7941                           ;I2C_Source_File.c: 60:     if (ACKSTAT)
  7942  1EF1  0008               	return
  7943  1EF2                     __end_of_I2C_Repeated_Start:	
  7944                           
  7945                           	psect	text25
  7946  1132                     __ptext25:	
  7947 ;; *************** function _MPU6050_Init *****************
  7948 ;; Defined at:
  7949 ;;		line 15 in file "MPU6050.c"
  7950 ;; Parameters:    Size  Location     Type
  7951 ;;		None
  7952 ;; Auto vars:     Size  Location     Type
  7953 ;;		None
  7954 ;; Return value:  Size  Location     Type
  7955 ;;                  1    wreg      void 
  7956 ;; Registers used:
  7957 ;;		wreg, status,2, status,0, pclath, cstack
  7958 ;; Tracked objects:
  7959 ;;		On entry : 0/0
  7960 ;;		On exit  : 0/0
  7961 ;;		Unchanged: 0/0
  7962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7963 ;;      Params:         0       0       0       0       0
  7964 ;;      Locals:         0       0       0       0       0
  7965 ;;      Temps:          3       0       0       0       0
  7966 ;;      Totals:         3       0       0       0       0
  7967 ;;Total ram usage:        3 bytes
  7968 ;; Hardware stack levels used:    1
  7969 ;; Hardware stack levels required when called:    3
  7970 ;; This function calls:
  7971 ;;		_I2C_Start_Wait
  7972 ;;		_I2C_Stop
  7973 ;;		_I2C_Write
  7974 ;; This function is called by:
  7975 ;;		_main
  7976 ;; This function uses a non-reentrant model
  7977 ;;
  7978                           
  7979                           
  7980                           ;psect for function _MPU6050_Init
  7981  1132                     _MPU6050_Init:	
  7982                           
  7983                           ;MPU6050.c: 17:  _delay((unsigned long)((150)*(20000000/4000.0)));
  7984                           
  7985                           ;incstack = 0
  7986                           ; Regs used in _MPU6050_Init: [wreg+status,2+status,0+pclath+cstack]
  7987  1132  3004               	movlw	4
  7988  1133  00F4               	movwf	??_MPU6050_Init+2
  7989  1134  30CF               	movlw	207
  7990  1135  00F3               	movwf	??_MPU6050_Init+1
  7991  1136  3001               	movlw	1
  7992  1137  00F2               	movwf	??_MPU6050_Init
  7993  1138                     u5677:	
  7994  1138  0BF2               	decfsz	??_MPU6050_Init,f
  7995  1139  2938               	goto	u5677
  7996  113A  0BF3               	decfsz	??_MPU6050_Init+1,f
  7997  113B  2938               	goto	u5677
  7998  113C  0BF4               	decfsz	??_MPU6050_Init+2,f
  7999  113D  2938               	goto	u5677
  8000  113E  293F               	nop2
  8001                           
  8002                           ;MPU6050.c: 18:  I2C_Start_Wait(0xD0);
  8003  113F  30D0               	movlw	208
  8004  1140  160A  158A  273A  160A  118A  	fcall	_I2C_Start_Wait
  8005                           
  8006                           ;MPU6050.c: 19:  I2C_Write(0x1B);
  8007  1145  301B               	movlw	27
  8008  1146  160A  158A  26CE  160A  118A  	fcall	_I2C_Write
  8009                           
  8010                           ;MPU6050.c: 20:  I2C_Write(0x18);
  8011  114B  3018               	movlw	24
  8012  114C  160A  158A  26CE  160A  118A  	fcall	_I2C_Write
  8013                           
  8014                           ;MPU6050.c: 21:  I2C_Stop();
  8015  1151  160A  158A  26A3  160A  118A  	fcall	_I2C_Stop
  8016                           
  8017                           ;MPU6050.c: 23:  I2C_Start_Wait(0xD0);
  8018  1156  30D0               	movlw	208
  8019  1157  160A  158A  273A  160A  118A  	fcall	_I2C_Start_Wait
  8020                           
  8021                           ;MPU6050.c: 24:  I2C_Write(0x38);
  8022  115C  3038               	movlw	56
  8023  115D  160A  158A  26CE  160A  118A  	fcall	_I2C_Write
  8024                           
  8025                           ;MPU6050.c: 25:  I2C_Write(0x01);
  8026  1162  3001               	movlw	1
  8027  1163  160A  158A  26CE  160A  118A  	fcall	_I2C_Write
  8028                           
  8029                           ;MPU6050.c: 26:  I2C_Stop();
  8030  1168  160A  158A  26A3   	fcall	_I2C_Stop
  8031  116B  0008               	return
  8032  116C                     __end_of_MPU6050_Init:	
  8033                           
  8034                           	psect	text26
  8035  1F3A                     __ptext26:	
  8036 ;; *************** function _I2C_Start_Wait *****************
  8037 ;; Defined at:
  8038 ;;		line 33 in file "I2C_Source_File.c"
  8039 ;; Parameters:    Size  Location     Type
  8040 ;;  slave_write_    1    wreg     unsigned char 
  8041 ;; Auto vars:     Size  Location     Type
  8042 ;;  slave_write_    1    1[COMMON] unsigned char 
  8043 ;; Return value:  Size  Location     Type
  8044 ;;                  1    wreg      void 
  8045 ;; Registers used:
  8046 ;;		wreg, status,2, status,0, pclath, cstack
  8047 ;; Tracked objects:
  8048 ;;		On entry : 0/0
  8049 ;;		On exit  : 0/0
  8050 ;;		Unchanged: 0/0
  8051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8052 ;;      Params:         0       0       0       0       0
  8053 ;;      Locals:         1       0       0       0       0
  8054 ;;      Temps:          0       0       0       0       0
  8055 ;;      Totals:         1       0       0       0       0
  8056 ;;Total ram usage:        1 bytes
  8057 ;; Hardware stack levels used:    1
  8058 ;; Hardware stack levels required when called:    2
  8059 ;; This function calls:
  8060 ;;		_I2C_Stop
  8061 ;;		_I2C_Write
  8062 ;; This function is called by:
  8063 ;;		_MPU6050_Init
  8064 ;;		_MPU_Start_Loc
  8065 ;; This function uses a non-reentrant model
  8066 ;;
  8067                           
  8068                           
  8069                           ;psect for function _I2C_Start_Wait
  8070  1F3A                     _I2C_Start_Wait:	
  8071                           
  8072                           ;incstack = 0
  8073                           ; Regs used in _I2C_Start_Wait: [wreg+status,2+status,0+pclath+cstack]
  8074                           ;I2C_Start_Wait@slave_write_address stored from wreg
  8075  1F3A  00F1               	movwf	I2C_Start_Wait@slave_write_address
  8076  1F3B                     l164:	
  8077                           ;I2C_Source_File.c: 33: void I2C_Start_Wait(char slave_write_address);I2C_Source_File.c:
      +                           34: {;I2C_Source_File.c: 35:   while(1)
  8078                           
  8079                           
  8080                           ;I2C_Source_File.c: 36:   {;I2C_Source_File.c: 37:     SSPCON2bits.SEN = 1;
  8081  1F3B  1683               	bsf	3,5	;RP0=1, select bank1
  8082  1F3C  1303               	bcf	3,6	;RP1=0, select bank1
  8083  1F3D  1411               	bsf	17,0	;volatile
  8084  1F3E                     l165:	
  8085                           ;I2C_Source_File.c: 38:     while(SSPCON2bits.SEN);
  8086                           
  8087  1F3E  1811               	btfsc	17,0	;volatile
  8088  1F3F  2F3E               	goto	l165
  8089                           
  8090                           ;I2C_Source_File.c: 39:     SSPIF = 0;
  8091  1F40  1283               	bcf	3,5	;RP0=0, select bank0
  8092  1F41  1303               	bcf	3,6	;RP1=0, select bank0
  8093  1F42  118C               	bcf	12,3	;volatile
  8094                           
  8095                           ;I2C_Source_File.c: 40:     if(!SSPSTATbits.S)
  8096  1F43  1683               	bsf	3,5	;RP0=1, select bank1
  8097  1F44  1303               	bcf	3,6	;RP1=0, select bank1
  8098  1F45  1D94               	btfss	20,3	;volatile
  8099  1F46  2F3B               	goto	l164
  8100                           
  8101                           ;I2C_Source_File.c: 42:     I2C_Write(slave_write_address);
  8102  1F47  0871               	movf	I2C_Start_Wait@slave_write_address,w
  8103  1F48  160A  158A  26CE  160A  158A  	fcall	_I2C_Write
  8104                           
  8105                           ;I2C_Source_File.c: 43:     if(ACKSTAT)
  8106  1F4D  1683               	bsf	3,5	;RP0=1, select bank1
  8107  1F4E  1303               	bcf	3,6	;RP1=0, select bank1
  8108  1F4F  1F11               	btfss	17,6	;volatile
  8109  1F50  0008               	return
  8110                           
  8111                           ;I2C_Source_File.c: 44:     {;I2C_Source_File.c: 45:         I2C_Stop();
  8112  1F51  160A  158A  26A3  160A  158A  	fcall	_I2C_Stop
  8113                           
  8114                           ;I2C_Source_File.c: 46:         continue;
  8115  1F56  2F3B               	goto	l164
  8116  1F57                     __end_of_I2C_Start_Wait:	
  8117                           
  8118                           	psect	text27
  8119  1ECE                     __ptext27:	
  8120 ;; *************** function _I2C_Write *****************
  8121 ;; Defined at:
  8122 ;;		line 66 in file "I2C_Source_File.c"
  8123 ;; Parameters:    Size  Location     Type
  8124 ;;  data            1    wreg     unsigned char 
  8125 ;; Auto vars:     Size  Location     Type
  8126 ;;  data            1    0[COMMON] unsigned char 
  8127 ;; Return value:  Size  Location     Type
  8128 ;;                  1    wreg      unsigned char 
  8129 ;; Registers used:
  8130 ;;		wreg, status,2, status,0, pclath, cstack
  8131 ;; Tracked objects:
  8132 ;;		On entry : 0/0
  8133 ;;		On exit  : 0/0
  8134 ;;		Unchanged: 0/0
  8135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8136 ;;      Params:         0       0       0       0       0
  8137 ;;      Locals:         1       0       0       0       0
  8138 ;;      Temps:          0       0       0       0       0
  8139 ;;      Totals:         1       0       0       0       0
  8140 ;;Total ram usage:        1 bytes
  8141 ;; Hardware stack levels used:    1
  8142 ;; Hardware stack levels required when called:    1
  8143 ;; This function calls:
  8144 ;;		_I2C_Ready
  8145 ;; This function is called by:
  8146 ;;		_MPU6050_Init
  8147 ;;		_MPU_Start_Loc
  8148 ;;		_I2C_Start_Wait
  8149 ;;		_I2C_Repeated_Start
  8150 ;;		_I2C_Start
  8151 ;; This function uses a non-reentrant model
  8152 ;;
  8153                           
  8154                           
  8155                           ;psect for function _I2C_Write
  8156  1ECE                     _I2C_Write:	
  8157                           
  8158                           ;incstack = 0
  8159                           ; Regs used in _I2C_Write: [wreg+status,2+status,0+pclath+cstack]
  8160                           ;I2C_Write@data stored from wreg
  8161  1ECE  00F0               	movwf	I2C_Write@data
  8162                           
  8163                           ;I2C_Source_File.c: 66: char I2C_Write(unsigned char data);I2C_Source_File.c: 67: {;I2C_
      +                          Source_File.c: 68:       SSPBUF = data;
  8164  1ECF  0870               	movf	I2C_Write@data,w
  8165  1ED0  1283               	bcf	3,5	;RP0=0, select bank0
  8166  1ED1  1303               	bcf	3,6	;RP1=0, select bank0
  8167  1ED2  0093               	movwf	19	;volatile
  8168                           
  8169                           ;I2C_Source_File.c: 69:       I2C_Ready();
  8170  1ED3  160A  158A  2686  160A  158A  	fcall	_I2C_Ready
  8171                           
  8172                           ;I2C_Source_File.c: 70:       if (ACKSTAT)
  8173  1ED8  1683               	bsf	3,5	;RP0=1, select bank1
  8174  1ED9  1303               	bcf	3,6	;RP1=0, select bank1
  8175  1EDA  1F11               	btfss	17,6	;volatile
  8176  1EDB  2EDE               	goto	l2323
  8177                           
  8178                           ;I2C_Source_File.c: 71:         return 1;
  8179  1EDC  3001               	movlw	1
  8180  1EDD  0008               	return
  8181  1EDE                     l2323:	
  8182                           
  8183                           ;I2C_Source_File.c: 73:         return 2;
  8184  1EDE  3002               	movlw	2
  8185  1EDF  0008               	return
  8186  1EE0                     __end_of_I2C_Write:	
  8187                           
  8188                           	psect	text28
  8189  1EA3                     __ptext28:	
  8190 ;; *************** function _I2C_Stop *****************
  8191 ;; Defined at:
  8192 ;;		line 103 in file "I2C_Source_File.c"
  8193 ;; Parameters:    Size  Location     Type
  8194 ;;		None
  8195 ;; Auto vars:     Size  Location     Type
  8196 ;;		None
  8197 ;; Return value:  Size  Location     Type
  8198 ;;                  1    wreg      unsigned char 
  8199 ;; Registers used:
  8200 ;;		wreg
  8201 ;; Tracked objects:
  8202 ;;		On entry : 0/0
  8203 ;;		On exit  : 0/0
  8204 ;;		Unchanged: 0/0
  8205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8206 ;;      Params:         0       0       0       0       0
  8207 ;;      Locals:         0       0       0       0       0
  8208 ;;      Temps:          0       0       0       0       0
  8209 ;;      Totals:         0       0       0       0       0
  8210 ;;Total ram usage:        0 bytes
  8211 ;; Hardware stack levels used:    1
  8212 ;; This function calls:
  8213 ;;		Nothing
  8214 ;; This function is called by:
  8215 ;;		_MPU6050_Init
  8216 ;;		_main
  8217 ;;		_I2C_Start_Wait
  8218 ;; This function uses a non-reentrant model
  8219 ;;
  8220                           
  8221                           
  8222                           ;psect for function _I2C_Stop
  8223  1EA3                     _I2C_Stop:	
  8224                           
  8225                           ;I2C_Source_File.c: 105:     PEN = 1;
  8226                           
  8227                           ;incstack = 0
  8228                           ; Regs used in _I2C_Stop: [wreg]
  8229  1EA3  1683               	bsf	3,5	;RP0=1, select bank1
  8230  1EA4  1303               	bcf	3,6	;RP1=0, select bank1
  8231  1EA5  1511               	bsf	17,2	;volatile
  8232  1EA6                     l209:	
  8233                           ;I2C_Source_File.c: 106:     while(PEN);
  8234                           
  8235  1EA6  1911               	btfsc	17,2	;volatile
  8236  1EA7  2EA6               	goto	l209
  8237                           
  8238                           ;I2C_Source_File.c: 107:     SSPIF = 0;
  8239  1EA8  1283               	bcf	3,5	;RP0=0, select bank0
  8240  1EA9  1303               	bcf	3,6	;RP1=0, select bank0
  8241  1EAA  118C               	bcf	12,3	;volatile
  8242                           
  8243                           ;I2C_Source_File.c: 108:     if(!SSPSTATbits.P);
  8244  1EAB  1683               	bsf	3,5	;RP0=1, select bank1
  8245  1EAC  1303               	bcf	3,6	;RP1=0, select bank1
  8246  1EAD  0814               	movf	20,w	;volatile
  8247  1EAE  0008               	return
  8248  1EAF                     __end_of_I2C_Stop:	
  8249                           
  8250                           	psect	text29
  8251  1F57                     __ptext29:	
  8252 ;; *************** function _Lcd_Write_String *****************
  8253 ;; Defined at:
  8254 ;;		line 98 in file "lcd4.c"
  8255 ;; Parameters:    Size  Location     Type
  8256 ;;  a               1    wreg     PTR unsigned char 
  8257 ;;		 -> main@buffer(20), 
  8258 ;; Auto vars:     Size  Location     Type
  8259 ;;  a               1    8[COMMON] PTR unsigned char 
  8260 ;;		 -> main@buffer(20), 
  8261 ;;  i               2    6[COMMON] int 
  8262 ;; Return value:  Size  Location     Type
  8263 ;;                  1    wreg      void 
  8264 ;; Registers used:
  8265 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8266 ;; Tracked objects:
  8267 ;;		On entry : 0/0
  8268 ;;		On exit  : 0/0
  8269 ;;		Unchanged: 0/0
  8270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8271 ;;      Params:         0       0       0       0       0
  8272 ;;      Locals:         3       0       0       0       0
  8273 ;;      Temps:          1       0       0       0       0
  8274 ;;      Totals:         4       0       0       0       0
  8275 ;;Total ram usage:        4 bytes
  8276 ;; Hardware stack levels used:    1
  8277 ;; Hardware stack levels required when called:    2
  8278 ;; This function calls:
  8279 ;;		_Lcd_Write_Char
  8280 ;; This function is called by:
  8281 ;;		_main
  8282 ;; This function uses a non-reentrant model
  8283 ;;
  8284                           
  8285                           
  8286                           ;psect for function _Lcd_Write_String
  8287  1F57                     _Lcd_Write_String:	
  8288                           
  8289                           ;incstack = 0
  8290                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8291                           ;Lcd_Write_String@a stored from wreg
  8292  1F57  00F8               	movwf	Lcd_Write_String@a
  8293                           
  8294                           ;lcd4.c: 98: void Lcd_Write_String(char *a);lcd4.c: 99: {;lcd4.c: 100:  int i;;lcd4.c: 1
      +                          01:  for(i=0;a[i]!='\0';i++)
  8295  1F58  01F6               	clrf	Lcd_Write_String@i
  8296  1F59  01F7               	clrf	Lcd_Write_String@i+1
  8297  1F5A                     l3519:	
  8298  1F5A  0876               	movf	Lcd_Write_String@i,w
  8299  1F5B  0778               	addwf	Lcd_Write_String@a,w
  8300  1F5C  00F5               	movwf	??_Lcd_Write_String
  8301  1F5D  0875               	movf	??_Lcd_Write_String,w
  8302  1F5E  0084               	movwf	4
  8303  1F5F  1383               	bcf	3,7	;select IRP bank0
  8304  1F60  0800               	movf	0,w
  8305  1F61  1903               	btfsc	3,2
  8306  1F62  0008               	return
  8307                           
  8308                           ;lcd4.c: 102:     Lcd_Write_Char(a[i]);
  8309  1F63  0876               	movf	Lcd_Write_String@i,w
  8310  1F64  0778               	addwf	Lcd_Write_String@a,w
  8311  1F65  00F5               	movwf	??_Lcd_Write_String
  8312  1F66  0875               	movf	??_Lcd_Write_String,w
  8313  1F67  0084               	movwf	4
  8314  1F68  0800               	movf	0,w
  8315  1F69  160A  118A  20F9  160A  158A  	fcall	_Lcd_Write_Char
  8316  1F6E  3001               	movlw	1
  8317  1F6F  07F6               	addwf	Lcd_Write_String@i,f
  8318  1F70  1803               	skipnc
  8319  1F71  0AF7               	incf	Lcd_Write_String@i+1,f
  8320  1F72  3000               	movlw	0
  8321  1F73  07F7               	addwf	Lcd_Write_String@i+1,f
  8322  1F74  2F5A               	goto	l3519
  8323  1F75                     __end_of_Lcd_Write_String:	
  8324                           
  8325                           	psect	text30
  8326  10F9                     __ptext30:	
  8327 ;; *************** function _Lcd_Write_Char *****************
  8328 ;; Defined at:
  8329 ;;		line 82 in file "lcd4.c"
  8330 ;; Parameters:    Size  Location     Type
  8331 ;;  a               1    wreg     unsigned char 
  8332 ;; Auto vars:     Size  Location     Type
  8333 ;;  a               1    4[COMMON] unsigned char 
  8334 ;;  y               1    3[COMMON] unsigned char 
  8335 ;;  temp            1    2[COMMON] unsigned char 
  8336 ;; Return value:  Size  Location     Type
  8337 ;;                  1    wreg      void 
  8338 ;; Registers used:
  8339 ;;		wreg, status,2, status,0, pclath, cstack
  8340 ;; Tracked objects:
  8341 ;;		On entry : 0/0
  8342 ;;		On exit  : 0/0
  8343 ;;		Unchanged: 0/0
  8344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8345 ;;      Params:         0       0       0       0       0
  8346 ;;      Locals:         3       0       0       0       0
  8347 ;;      Temps:          1       0       0       0       0
  8348 ;;      Totals:         4       0       0       0       0
  8349 ;;Total ram usage:        4 bytes
  8350 ;; Hardware stack levels used:    1
  8351 ;; Hardware stack levels required when called:    1
  8352 ;; This function calls:
  8353 ;;		_Lcd_Port
  8354 ;; This function is called by:
  8355 ;;		_Lcd_Write_String
  8356 ;; This function uses a non-reentrant model
  8357 ;;
  8358                           
  8359                           
  8360                           ;psect for function _Lcd_Write_Char
  8361  10F9                     _Lcd_Write_Char:	
  8362                           
  8363                           ;incstack = 0
  8364                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  8365                           ;Lcd_Write_Char@a stored from wreg
  8366  10F9  00F4               	movwf	Lcd_Write_Char@a
  8367                           
  8368                           ;lcd4.c: 82: void Lcd_Write_Char(char a);lcd4.c: 83: {;lcd4.c: 84:    char temp,y;;lcd4.
      +                          c: 85:    temp = a&0x0F;
  8369  10FA  0874               	movf	Lcd_Write_Char@a,w
  8370  10FB  390F               	andlw	15
  8371  10FC  00F1               	movwf	??_Lcd_Write_Char
  8372  10FD  0871               	movf	??_Lcd_Write_Char,w
  8373  10FE  00F2               	movwf	Lcd_Write_Char@temp
  8374                           
  8375                           ;lcd4.c: 86:    y = a&0xF0;
  8376  10FF  0874               	movf	Lcd_Write_Char@a,w
  8377  1100  39F0               	andlw	240
  8378  1101  00F1               	movwf	??_Lcd_Write_Char
  8379  1102  0871               	movf	??_Lcd_Write_Char,w
  8380  1103  00F3               	movwf	Lcd_Write_Char@y
  8381                           
  8382                           ;lcd4.c: 87:    RD0 = 1;
  8383  1104  1283               	bcf	3,5	;RP0=0, select bank0
  8384  1105  1303               	bcf	3,6	;RP1=0, select bank0
  8385  1106  1408               	bsf	8,0	;volatile
  8386                           
  8387                           ;lcd4.c: 88:    Lcd_Port(y>>4);
  8388  1107  0873               	movf	Lcd_Write_Char@y,w
  8389  1108  00F1               	movwf	??_Lcd_Write_Char
  8390  1109  3004               	movlw	4
  8391  110A                     u4135:	
  8392  110A  1003               	clrc
  8393  110B  0CF1               	rrf	??_Lcd_Write_Char,f
  8394  110C  3EFF               	addlw	-1
  8395  110D  1D03               	skipz
  8396  110E  290A               	goto	u4135
  8397  110F  0871               	movf	??_Lcd_Write_Char,w
  8398  1110  160A  158A  2706  160A  118A  	fcall	_Lcd_Port
  8399                           
  8400                           ;lcd4.c: 89:    RD1 = 1;
  8401  1115  1283               	bcf	3,5	;RP0=0, select bank0
  8402  1116  1303               	bcf	3,6	;RP1=0, select bank0
  8403  1117  1488               	bsf	8,1	;volatile
  8404                           
  8405                           ;lcd4.c: 90:    _delay((unsigned long)((40)*(20000000/4000000.0)));
  8406  1118  3042               	movlw	66
  8407  1119  00F1               	movwf	??_Lcd_Write_Char
  8408  111A                     u5687:	
  8409  111A  0BF1               	decfsz	??_Lcd_Write_Char,f
  8410  111B  291A               	goto	u5687
  8411  111C  0000               	nop
  8412                           
  8413                           ;lcd4.c: 91:    RD1 = 0;
  8414  111D  1283               	bcf	3,5	;RP0=0, select bank0
  8415  111E  1303               	bcf	3,6	;RP1=0, select bank0
  8416  111F  1088               	bcf	8,1	;volatile
  8417                           
  8418                           ;lcd4.c: 92:    Lcd_Port(temp);
  8419  1120  0872               	movf	Lcd_Write_Char@temp,w
  8420  1121  160A  158A  2706  160A  118A  	fcall	_Lcd_Port
  8421                           
  8422                           ;lcd4.c: 93:    RD1 = 1;
  8423  1126  1283               	bcf	3,5	;RP0=0, select bank0
  8424  1127  1303               	bcf	3,6	;RP1=0, select bank0
  8425  1128  1488               	bsf	8,1	;volatile
  8426                           
  8427                           ;lcd4.c: 94:    _delay((unsigned long)((40)*(20000000/4000000.0)));
  8428  1129  3042               	movlw	66
  8429  112A  00F1               	movwf	??_Lcd_Write_Char
  8430  112B                     u5697:	
  8431  112B  0BF1               	decfsz	??_Lcd_Write_Char,f
  8432  112C  292B               	goto	u5697
  8433  112D  0000               	nop
  8434                           
  8435                           ;lcd4.c: 95:    RD1 = 0;
  8436  112E  1283               	bcf	3,5	;RP0=0, select bank0
  8437  112F  1303               	bcf	3,6	;RP1=0, select bank0
  8438  1130  1088               	bcf	8,1	;volatile
  8439  1131  0008               	return
  8440  1132                     __end_of_Lcd_Write_Char:	
  8441                           
  8442                           	psect	text31
  8443  1FD7                     __ptext31:	
  8444 ;; *************** function _Lcd_Set_Port *****************
  8445 ;; Defined at:
  8446 ;;		line 116 in file "lcd4.c"
  8447 ;; Parameters:    Size  Location     Type
  8448 ;;  a               1    wreg     unsigned char 
  8449 ;; Auto vars:     Size  Location     Type
  8450 ;;  a               1    2[COMMON] unsigned char 
  8451 ;; Return value:  Size  Location     Type
  8452 ;;                  1    wreg      void 
  8453 ;; Registers used:
  8454 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8455 ;; Tracked objects:
  8456 ;;		On entry : 0/0
  8457 ;;		On exit  : 0/0
  8458 ;;		Unchanged: 0/0
  8459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8460 ;;      Params:         0       0       0       0       0
  8461 ;;      Locals:         1       0       0       0       0
  8462 ;;      Temps:          2       0       0       0       0
  8463 ;;      Totals:         3       0       0       0       0
  8464 ;;Total ram usage:        3 bytes
  8465 ;; Hardware stack levels used:    1
  8466 ;; This function calls:
  8467 ;;		Nothing
  8468 ;; This function is called by:
  8469 ;;		_main
  8470 ;; This function uses a non-reentrant model
  8471 ;;
  8472                           
  8473                           
  8474                           ;psect for function _Lcd_Set_Port
  8475  1FD7                     _Lcd_Set_Port:	
  8476                           
  8477                           ;incstack = 0
  8478                           ; Regs used in _Lcd_Set_Port: [wreg-fsr0h+status,2+status,0]
  8479                           ;Lcd_Set_Port@a stored from wreg
  8480  1FD7  00F2               	movwf	Lcd_Set_Port@a
  8481                           
  8482                           ;lcd4.c: 116: void Lcd_Set_Port(unsigned char a);lcd4.c: 117: {;lcd4.c: 118:     switch 
      +                          (a)
  8483  1FD8  2FE9               	goto	l3247
  8484  1FD9                     l3237:	
  8485                           
  8486                           ;lcd4.c: 121:             TRISA = 0x00;
  8487  1FD9  1683               	bsf	3,5	;RP0=1, select bank1
  8488  1FDA  1303               	bcf	3,6	;RP1=0, select bank1
  8489  1FDB  0185               	clrf	5	;volatile
  8490                           
  8491                           ;lcd4.c: 122:             break;
  8492  1FDC  0008               	return
  8493  1FDD                     l3239:	
  8494                           
  8495                           ;lcd4.c: 124:             TRISB = 0x00;
  8496  1FDD  1683               	bsf	3,5	;RP0=1, select bank1
  8497  1FDE  1303               	bcf	3,6	;RP1=0, select bank1
  8498  1FDF  0186               	clrf	6	;volatile
  8499                           
  8500                           ;lcd4.c: 125:             break;
  8501  1FE0  0008               	return
  8502  1FE1                     l3241:	
  8503                           
  8504                           ;lcd4.c: 127:             TRISC = 0x00;
  8505  1FE1  1683               	bsf	3,5	;RP0=1, select bank1
  8506  1FE2  1303               	bcf	3,6	;RP1=0, select bank1
  8507  1FE3  0187               	clrf	7	;volatile
  8508                           
  8509                           ;lcd4.c: 128:             break;
  8510  1FE4  0008               	return
  8511  1FE5                     l3243:	
  8512                           
  8513                           ;lcd4.c: 130:             TRISD = 0x00;
  8514  1FE5  1683               	bsf	3,5	;RP0=1, select bank1
  8515  1FE6  1303               	bcf	3,6	;RP1=0, select bank1
  8516  1FE7  0188               	clrf	8	;volatile
  8517                           
  8518                           ;lcd4.c: 131:             break;
  8519  1FE8  0008               	return
  8520  1FE9                     l3247:	
  8521  1FE9  0872               	movf	Lcd_Set_Port@a,w
  8522  1FEA  00F0               	movwf	??_Lcd_Set_Port
  8523  1FEB  01F1               	clrf	??_Lcd_Set_Port+1
  8524                           
  8525                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8526                           ; Switch size 1, requested type "simple"
  8527                           ; Number of cases is 1, Range of values is 0 to 0
  8528                           ; switch strategies available:
  8529                           ; Name         Instructions Cycles
  8530                           ; simple_byte            4     3 (average)
  8531                           ; direct_byte           11     8 (fixed)
  8532                           ; jumptable            260     6 (fixed)
  8533                           ;	Chosen strategy is simple_byte
  8534  1FEC  0871               	movf	??_Lcd_Set_Port+1,w
  8535  1FED  3A00               	xorlw	0	; case 0
  8536  1FEE  1903               	skipnz
  8537  1FEF  2FF1               	goto	l3613
  8538  1FF0  2FFF               	goto	l111
  8539  1FF1                     l3613:	
  8540                           
  8541                           ; Switch size 1, requested type "simple"
  8542                           ; Number of cases is 4, Range of values is 65 to 68
  8543                           ; switch strategies available:
  8544                           ; Name         Instructions Cycles
  8545                           ; simple_byte           13     7 (average)
  8546                           ; direct_byte           23    11 (fixed)
  8547                           ; jumptable            263     9 (fixed)
  8548                           ;	Chosen strategy is simple_byte
  8549  1FF1  0870               	movf	??_Lcd_Set_Port,w
  8550  1FF2  3A41               	xorlw	65	; case 65
  8551  1FF3  1903               	skipnz
  8552  1FF4  2FD9               	goto	l3237
  8553  1FF5  3A03               	xorlw	3	; case 66
  8554  1FF6  1903               	skipnz
  8555  1FF7  2FDD               	goto	l3239
  8556  1FF8  3A01               	xorlw	1	; case 67
  8557  1FF9  1903               	skipnz
  8558  1FFA  2FE1               	goto	l3241
  8559  1FFB  3A07               	xorlw	7	; case 68
  8560  1FFC  1903               	skipnz
  8561  1FFD  2FE5               	goto	l3243
  8562  1FFE  2FFF               	goto	l111
  8563  1FFF                     l111:	
  8564  1FFF  0008               	return
  8565  2000                     __end_of_Lcd_Set_Port:	
  8566                           
  8567                           	psect	text32
  8568  11F0                     __ptext32:	
  8569 ;; *************** function _Lcd_Set_Cursor *****************
  8570 ;; Defined at:
  8571 ;;		line 42 in file "lcd4.c"
  8572 ;; Parameters:    Size  Location     Type
  8573 ;;  a               1    wreg     unsigned char 
  8574 ;;  b               1    4[COMMON] unsigned char 
  8575 ;; Auto vars:     Size  Location     Type
  8576 ;;  a               1    7[COMMON] unsigned char 
  8577 ;;  temp            1   10[COMMON] unsigned char 
  8578 ;;  y               1    9[COMMON] unsigned char 
  8579 ;;  z               1    8[COMMON] unsigned char 
  8580 ;; Return value:  Size  Location     Type
  8581 ;;                  1    wreg      void 
  8582 ;; Registers used:
  8583 ;;		wreg, status,2, status,0, pclath, cstack
  8584 ;; Tracked objects:
  8585 ;;		On entry : 0/0
  8586 ;;		On exit  : 0/0
  8587 ;;		Unchanged: 0/0
  8588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8589 ;;      Params:         1       0       0       0       0
  8590 ;;      Locals:         4       0       0       0       0
  8591 ;;      Temps:          2       0       0       0       0
  8592 ;;      Totals:         7       0       0       0       0
  8593 ;;Total ram usage:        7 bytes
  8594 ;; Hardware stack levels used:    1
  8595 ;; Hardware stack levels required when called:    2
  8596 ;; This function calls:
  8597 ;;		_Lcd_Cmd
  8598 ;; This function is called by:
  8599 ;;		_main
  8600 ;; This function uses a non-reentrant model
  8601 ;;
  8602                           
  8603                           
  8604                           ;psect for function _Lcd_Set_Cursor
  8605  11F0                     _Lcd_Set_Cursor:	
  8606                           
  8607                           ;incstack = 0
  8608                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  8609                           ;Lcd_Set_Cursor@a stored from wreg
  8610  11F0  00F7               	movwf	Lcd_Set_Cursor@a
  8611                           
  8612                           ;lcd4.c: 42: void Lcd_Set_Cursor(char a, char b);lcd4.c: 43: {;lcd4.c: 44:  char temp,z,
      +                          y;;lcd4.c: 45:  if(a == 1)
  8613  11F1  0377               	decf	Lcd_Set_Cursor@a,w
  8614  11F2  1D03               	btfss	3,2
  8615  11F3  2A15               	goto	l3503
  8616                           
  8617                           ;lcd4.c: 46:  {;lcd4.c: 47:    temp = 0x80 + b - 1;
  8618  11F4  0874               	movf	Lcd_Set_Cursor@b,w
  8619  11F5  3E7F               	addlw	127
  8620  11F6  00F5               	movwf	??_Lcd_Set_Cursor
  8621  11F7  0875               	movf	??_Lcd_Set_Cursor,w
  8622  11F8  00FA               	movwf	Lcd_Set_Cursor@temp
  8623                           
  8624                           ;lcd4.c: 48:   z = temp>>4;
  8625  11F9  087A               	movf	Lcd_Set_Cursor@temp,w
  8626  11FA  00F5               	movwf	??_Lcd_Set_Cursor
  8627  11FB  3004               	movlw	4
  8628  11FC                     u5595:	
  8629  11FC  1003               	clrc
  8630  11FD  0CF5               	rrf	??_Lcd_Set_Cursor,f
  8631  11FE  3EFF               	addlw	-1
  8632  11FF  1D03               	skipz
  8633  1200  29FC               	goto	u5595
  8634  1201  0875               	movf	??_Lcd_Set_Cursor,w
  8635  1202  00F6               	movwf	??_Lcd_Set_Cursor+1
  8636  1203  0876               	movf	??_Lcd_Set_Cursor+1,w
  8637  1204  00F8               	movwf	Lcd_Set_Cursor@z
  8638                           
  8639                           ;lcd4.c: 49:   y = temp & 0x0F;
  8640  1205  087A               	movf	Lcd_Set_Cursor@temp,w
  8641  1206  390F               	andlw	15
  8642  1207  00F5               	movwf	??_Lcd_Set_Cursor
  8643  1208  0875               	movf	??_Lcd_Set_Cursor,w
  8644  1209  00F9               	movwf	Lcd_Set_Cursor@y
  8645                           
  8646                           ;lcd4.c: 50:   Lcd_Cmd(z);
  8647  120A  0878               	movf	Lcd_Set_Cursor@z,w
  8648  120B  160A  158A  2720  160A  118A  	fcall	_Lcd_Cmd
  8649                           
  8650                           ;lcd4.c: 51:   Lcd_Cmd(y);
  8651  1210  0879               	movf	Lcd_Set_Cursor@y,w
  8652  1211  160A  158A  2720   	fcall	_Lcd_Cmd
  8653                           
  8654                           ;lcd4.c: 52:  }
  8655  1214  0008               	return
  8656  1215                     l3503:	
  8657  1215  3002               	movlw	2
  8658  1216  0677               	xorwf	Lcd_Set_Cursor@a,w
  8659  1217  1D03               	btfss	3,2
  8660  1218  0008               	return
  8661                           
  8662                           ;lcd4.c: 54:  {;lcd4.c: 55:   temp = 0xC0 + b - 1;
  8663  1219  0874               	movf	Lcd_Set_Cursor@b,w
  8664  121A  3EBF               	addlw	191
  8665  121B  00F5               	movwf	??_Lcd_Set_Cursor
  8666  121C  0875               	movf	??_Lcd_Set_Cursor,w
  8667  121D  00FA               	movwf	Lcd_Set_Cursor@temp
  8668                           
  8669                           ;lcd4.c: 56:   z = temp>>4;
  8670  121E  087A               	movf	Lcd_Set_Cursor@temp,w
  8671  121F  00F5               	movwf	??_Lcd_Set_Cursor
  8672  1220  3004               	movlw	4
  8673  1221                     u5615:	
  8674  1221  1003               	clrc
  8675  1222  0CF5               	rrf	??_Lcd_Set_Cursor,f
  8676  1223  3EFF               	addlw	-1
  8677  1224  1D03               	skipz
  8678  1225  2A21               	goto	u5615
  8679  1226  0875               	movf	??_Lcd_Set_Cursor,w
  8680  1227  00F6               	movwf	??_Lcd_Set_Cursor+1
  8681  1228  0876               	movf	??_Lcd_Set_Cursor+1,w
  8682  1229  00F8               	movwf	Lcd_Set_Cursor@z
  8683                           
  8684                           ;lcd4.c: 57:   y = temp & 0x0F;
  8685  122A  087A               	movf	Lcd_Set_Cursor@temp,w
  8686  122B  390F               	andlw	15
  8687  122C  00F5               	movwf	??_Lcd_Set_Cursor
  8688  122D  0875               	movf	??_Lcd_Set_Cursor,w
  8689  122E  00F9               	movwf	Lcd_Set_Cursor@y
  8690                           
  8691                           ;lcd4.c: 58:   Lcd_Cmd(z);
  8692  122F  0878               	movf	Lcd_Set_Cursor@z,w
  8693  1230  160A  158A  2720  160A  118A  	fcall	_Lcd_Cmd
  8694                           
  8695                           ;lcd4.c: 59:   Lcd_Cmd(y);
  8696  1235  0879               	movf	Lcd_Set_Cursor@y,w
  8697  1236  160A  158A  2720   	fcall	_Lcd_Cmd
  8698  1239  0008               	return
  8699  123A                     __end_of_Lcd_Set_Cursor:	
  8700                           
  8701                           	psect	text33
  8702  12E0                     __ptext33:	
  8703 ;; *************** function _Lcd_Init *****************
  8704 ;; Defined at:
  8705 ;;		line 63 in file "lcd4.c"
  8706 ;; Parameters:    Size  Location     Type
  8707 ;;		None
  8708 ;; Auto vars:     Size  Location     Type
  8709 ;;		None
  8710 ;; Return value:  Size  Location     Type
  8711 ;;                  1    wreg      void 
  8712 ;; Registers used:
  8713 ;;		wreg, status,2, status,0, pclath, cstack
  8714 ;; Tracked objects:
  8715 ;;		On entry : 0/0
  8716 ;;		On exit  : 0/0
  8717 ;;		Unchanged: 0/0
  8718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8719 ;;      Params:         0       0       0       0       0
  8720 ;;      Locals:         0       0       0       0       0
  8721 ;;      Temps:          2       0       0       0       0
  8722 ;;      Totals:         2       0       0       0       0
  8723 ;;Total ram usage:        2 bytes
  8724 ;; Hardware stack levels used:    1
  8725 ;; Hardware stack levels required when called:    2
  8726 ;; This function calls:
  8727 ;;		_Lcd_Cmd
  8728 ;;		_Lcd_Port
  8729 ;; This function is called by:
  8730 ;;		_main
  8731 ;; This function uses a non-reentrant model
  8732 ;;
  8733                           
  8734                           
  8735                           ;psect for function _Lcd_Init
  8736  12E0                     _Lcd_Init:	
  8737                           
  8738                           ;lcd4.c: 65:   Lcd_Port(0x00);
  8739                           
  8740                           ;incstack = 0
  8741                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  8742  12E0  3000               	movlw	0
  8743  12E1  160A  158A  2706  160A  118A  	fcall	_Lcd_Port
  8744                           
  8745                           ;lcd4.c: 66:    _delay((unsigned long)((20)*(20000000/4000.0)));
  8746  12E6  3082               	movlw	130
  8747  12E7  00F5               	movwf	??_Lcd_Init+1
  8748  12E8  30DD               	movlw	221
  8749  12E9  00F4               	movwf	??_Lcd_Init
  8750  12EA                     u5707:	
  8751  12EA  0BF4               	decfsz	??_Lcd_Init,f
  8752  12EB  2AEA               	goto	u5707
  8753  12EC  0BF5               	decfsz	??_Lcd_Init+1,f
  8754  12ED  2AEA               	goto	u5707
  8755  12EE  2AEF               	nop2
  8756                           
  8757                           ;lcd4.c: 67:   Lcd_Cmd(0x03);
  8758  12EF  3003               	movlw	3
  8759  12F0  160A  158A  2720  160A  118A  	fcall	_Lcd_Cmd
  8760                           
  8761                           ;lcd4.c: 68:  _delay((unsigned long)((5)*(20000000/4000.0)));
  8762  12F5  3021               	movlw	33
  8763  12F6  00F5               	movwf	??_Lcd_Init+1
  8764  12F7  3076               	movlw	118
  8765  12F8  00F4               	movwf	??_Lcd_Init
  8766  12F9                     u5717:	
  8767  12F9  0BF4               	decfsz	??_Lcd_Init,f
  8768  12FA  2AF9               	goto	u5717
  8769  12FB  0BF5               	decfsz	??_Lcd_Init+1,f
  8770  12FC  2AF9               	goto	u5717
  8771  12FD  0000               	nop
  8772                           
  8773                           ;lcd4.c: 69:   Lcd_Cmd(0x03);
  8774  12FE  3003               	movlw	3
  8775  12FF  160A  158A  2720  160A  118A  	fcall	_Lcd_Cmd
  8776                           
  8777                           ;lcd4.c: 70:  _delay((unsigned long)((11)*(20000000/4000.0)));
  8778  1304  3048               	movlw	72
  8779  1305  00F5               	movwf	??_Lcd_Init+1
  8780  1306  306C               	movlw	108
  8781  1307  00F4               	movwf	??_Lcd_Init
  8782  1308                     u5727:	
  8783  1308  0BF4               	decfsz	??_Lcd_Init,f
  8784  1309  2B08               	goto	u5727
  8785  130A  0BF5               	decfsz	??_Lcd_Init+1,f
  8786  130B  2B08               	goto	u5727
  8787  130C  0000               	nop
  8788                           
  8789                           ;lcd4.c: 71:   Lcd_Cmd(0x03);
  8790  130D  3003               	movlw	3
  8791  130E  160A  158A  2720  160A  118A  	fcall	_Lcd_Cmd
  8792                           
  8793                           ;lcd4.c: 73:   Lcd_Cmd(0x02);
  8794  1313  3002               	movlw	2
  8795  1314  160A  158A  2720  160A  118A  	fcall	_Lcd_Cmd
  8796                           
  8797                           ;lcd4.c: 74:   Lcd_Cmd(0x02);
  8798  1319  3002               	movlw	2
  8799  131A  160A  158A  2720  160A  118A  	fcall	_Lcd_Cmd
  8800                           
  8801                           ;lcd4.c: 75:   Lcd_Cmd(0x08);
  8802  131F  3008               	movlw	8
  8803  1320  160A  158A  2720  160A  118A  	fcall	_Lcd_Cmd
  8804                           
  8805                           ;lcd4.c: 76:   Lcd_Cmd(0x00);
  8806  1325  3000               	movlw	0
  8807  1326  160A  158A  2720  160A  118A  	fcall	_Lcd_Cmd
  8808                           
  8809                           ;lcd4.c: 77:   Lcd_Cmd(0x0C);
  8810  132B  300C               	movlw	12
  8811  132C  160A  158A  2720  160A  118A  	fcall	_Lcd_Cmd
  8812                           
  8813                           ;lcd4.c: 78:   Lcd_Cmd(0x00);
  8814  1331  3000               	movlw	0
  8815  1332  160A  158A  2720  160A  118A  	fcall	_Lcd_Cmd
  8816                           
  8817                           ;lcd4.c: 79:   Lcd_Cmd(0x06);
  8818  1337  3006               	movlw	6
  8819  1338  160A  158A  2720   	fcall	_Lcd_Cmd
  8820  133B  0008               	return
  8821  133C                     __end_of_Lcd_Init:	
  8822                           
  8823                           	psect	text34
  8824  1F20                     __ptext34:	
  8825 ;; *************** function _Lcd_Cmd *****************
  8826 ;; Defined at:
  8827 ;;		line 27 in file "lcd4.c"
  8828 ;; Parameters:    Size  Location     Type
  8829 ;;  a               1    wreg     unsigned char 
  8830 ;; Auto vars:     Size  Location     Type
  8831 ;;  a               1    3[COMMON] unsigned char 
  8832 ;; Return value:  Size  Location     Type
  8833 ;;                  1    wreg      void 
  8834 ;; Registers used:
  8835 ;;		wreg, status,2, status,0, pclath, cstack
  8836 ;; Tracked objects:
  8837 ;;		On entry : 0/0
  8838 ;;		On exit  : 0/0
  8839 ;;		Unchanged: 0/0
  8840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8841 ;;      Params:         0       0       0       0       0
  8842 ;;      Locals:         1       0       0       0       0
  8843 ;;      Temps:          2       0       0       0       0
  8844 ;;      Totals:         3       0       0       0       0
  8845 ;;Total ram usage:        3 bytes
  8846 ;; Hardware stack levels used:    1
  8847 ;; Hardware stack levels required when called:    1
  8848 ;; This function calls:
  8849 ;;		_Lcd_Port
  8850 ;; This function is called by:
  8851 ;;		_Lcd_Set_Cursor
  8852 ;;		_Lcd_Init
  8853 ;;		_Lcd_Clear
  8854 ;;		_Lcd_Shift_Right
  8855 ;;		_Lcd_Shift_Left
  8856 ;; This function uses a non-reentrant model
  8857 ;;
  8858                           
  8859                           
  8860                           ;psect for function _Lcd_Cmd
  8861  1F20                     _Lcd_Cmd:	
  8862                           
  8863                           ;incstack = 0
  8864                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  8865                           ;Lcd_Cmd@a stored from wreg
  8866  1F20  00F3               	movwf	Lcd_Cmd@a
  8867                           
  8868                           ;lcd4.c: 27: void Lcd_Cmd(char a);lcd4.c: 28: {;lcd4.c: 29:  RD0 = 0;
  8869  1F21  1283               	bcf	3,5	;RP0=0, select bank0
  8870  1F22  1303               	bcf	3,6	;RP1=0, select bank0
  8871  1F23  1008               	bcf	8,0	;volatile
  8872                           
  8873                           ;lcd4.c: 30:  Lcd_Port(a);
  8874  1F24  0873               	movf	Lcd_Cmd@a,w
  8875  1F25  160A  158A  2706  160A  158A  	fcall	_Lcd_Port
  8876                           
  8877                           ;lcd4.c: 31:  RD1 = 1;
  8878  1F2A  1283               	bcf	3,5	;RP0=0, select bank0
  8879  1F2B  1303               	bcf	3,6	;RP1=0, select bank0
  8880  1F2C  1488               	bsf	8,1	;volatile
  8881                           
  8882                           ;lcd4.c: 32:         _delay((unsigned long)((4)*(20000000/4000.0)));
  8883  1F2D  301A               	movlw	26
  8884  1F2E  00F2               	movwf	??_Lcd_Cmd+1
  8885  1F2F  30F8               	movlw	248
  8886  1F30  00F1               	movwf	??_Lcd_Cmd
  8887  1F31                     u5737:	
  8888  1F31  0BF1               	decfsz	??_Lcd_Cmd,f
  8889  1F32  2F31               	goto	u5737
  8890  1F33  0BF2               	decfsz	??_Lcd_Cmd+1,f
  8891  1F34  2F31               	goto	u5737
  8892  1F35  0000               	nop
  8893                           
  8894                           ;lcd4.c: 33:         RD1 = 0;
  8895  1F36  1283               	bcf	3,5	;RP0=0, select bank0
  8896  1F37  1303               	bcf	3,6	;RP1=0, select bank0
  8897  1F38  1088               	bcf	8,1	;volatile
  8898  1F39  0008               	return
  8899  1F3A                     __end_of_Lcd_Cmd:	
  8900                           
  8901                           	psect	text35
  8902  1F06                     __ptext35:	
  8903 ;; *************** function _Lcd_Port *****************
  8904 ;; Defined at:
  8905 ;;		line 5 in file "lcd4.c"
  8906 ;; Parameters:    Size  Location     Type
  8907 ;;  a               1    wreg     unsigned char 
  8908 ;; Auto vars:     Size  Location     Type
  8909 ;;  a               1    0[COMMON] unsigned char 
  8910 ;; Return value:  Size  Location     Type
  8911 ;;                  1    wreg      void 
  8912 ;; Registers used:
  8913 ;;		wreg
  8914 ;; Tracked objects:
  8915 ;;		On entry : 0/0
  8916 ;;		On exit  : 0/0
  8917 ;;		Unchanged: 0/0
  8918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8919 ;;      Params:         0       0       0       0       0
  8920 ;;      Locals:         1       0       0       0       0
  8921 ;;      Temps:          0       0       0       0       0
  8922 ;;      Totals:         1       0       0       0       0
  8923 ;;Total ram usage:        1 bytes
  8924 ;; Hardware stack levels used:    1
  8925 ;; This function calls:
  8926 ;;		Nothing
  8927 ;; This function is called by:
  8928 ;;		_Lcd_Cmd
  8929 ;;		_Lcd_Init
  8930 ;;		_Lcd_Write_Char
  8931 ;; This function uses a non-reentrant model
  8932 ;;
  8933                           
  8934                           
  8935                           ;psect for function _Lcd_Port
  8936  1F06                     _Lcd_Port:	
  8937                           
  8938                           ;incstack = 0
  8939                           ; Regs used in _Lcd_Port: [wreg]
  8940                           ;Lcd_Port@a stored from wreg
  8941  1F06  00F0               	movwf	Lcd_Port@a
  8942                           
  8943                           ;lcd4.c: 5: void Lcd_Port(char a);lcd4.c: 6: {;lcd4.c: 7:  if(a & 1)
  8944  1F07  1C70               	btfss	Lcd_Port@a,0
  8945  1F08  2F0D               	goto	l63
  8946                           
  8947                           ;lcd4.c: 8:   RD2 = 1;
  8948  1F09  1283               	bcf	3,5	;RP0=0, select bank0
  8949  1F0A  1303               	bcf	3,6	;RP1=0, select bank0
  8950  1F0B  1508               	bsf	8,2	;volatile
  8951  1F0C  2F10               	goto	l64
  8952  1F0D                     l63:	
  8953                           ;lcd4.c: 9:  else
  8954                           
  8955                           
  8956                           ;lcd4.c: 10:   RD2 = 0;
  8957  1F0D  1283               	bcf	3,5	;RP0=0, select bank0
  8958  1F0E  1303               	bcf	3,6	;RP1=0, select bank0
  8959  1F0F  1108               	bcf	8,2	;volatile
  8960  1F10                     l64:	
  8961                           
  8962                           ;lcd4.c: 12:  if(a & 2)
  8963  1F10  1CF0               	btfss	Lcd_Port@a,1
  8964  1F11  2F14               	goto	l65
  8965                           
  8966                           ;lcd4.c: 13:   RD3 = 1;
  8967  1F12  1588               	bsf	8,3	;volatile
  8968  1F13  2F15               	goto	l66
  8969  1F14                     l65:	
  8970                           ;lcd4.c: 14:  else
  8971                           
  8972                           
  8973                           ;lcd4.c: 15:   RD3 = 0;
  8974  1F14  1188               	bcf	8,3	;volatile
  8975  1F15                     l66:	
  8976                           
  8977                           ;lcd4.c: 17:  if(a & 4)
  8978  1F15  1D70               	btfss	Lcd_Port@a,2
  8979  1F16  2F19               	goto	l67
  8980                           
  8981                           ;lcd4.c: 18:   RD4 = 1;
  8982  1F17  1608               	bsf	8,4	;volatile
  8983  1F18  2F1A               	goto	l68
  8984  1F19                     l67:	
  8985                           ;lcd4.c: 19:  else
  8986                           
  8987                           
  8988                           ;lcd4.c: 20:   RD4 = 0;
  8989  1F19  1208               	bcf	8,4	;volatile
  8990  1F1A                     l68:	
  8991                           
  8992                           ;lcd4.c: 22:  if(a & 8)
  8993  1F1A  1DF0               	btfss	Lcd_Port@a,3
  8994  1F1B  2F1E               	goto	l69
  8995                           
  8996                           ;lcd4.c: 23:   RD5 = 1;
  8997  1F1C  1688               	bsf	8,5	;volatile
  8998  1F1D  0008               	return
  8999  1F1E                     l69:	
  9000                           ;lcd4.c: 24:  else
  9001                           
  9002                           
  9003                           ;lcd4.c: 25:   RD5 = 0;
  9004  1F1E  1288               	bcf	8,5	;volatile
  9005  1F1F  0008               	return
  9006  1F20                     __end_of_Lcd_Port:	
  9007                           
  9008                           	psect	text36
  9009  1F75                     __ptext36:	
  9010 ;; *************** function _I2C_Read *****************
  9011 ;; Defined at:
  9012 ;;		line 89 in file "I2C_Source_File.c"
  9013 ;; Parameters:    Size  Location     Type
  9014 ;;  flag            1    wreg     unsigned char 
  9015 ;; Auto vars:     Size  Location     Type
  9016 ;;  flag            1    1[COMMON] unsigned char 
  9017 ;;  buffer          1    2[COMMON] unsigned char 
  9018 ;; Return value:  Size  Location     Type
  9019 ;;                  1    wreg      unsigned char 
  9020 ;; Registers used:
  9021 ;;		wreg, status,2, status,0, pclath, cstack
  9022 ;; Tracked objects:
  9023 ;;		On entry : 0/0
  9024 ;;		On exit  : 0/0
  9025 ;;		Unchanged: 0/0
  9026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9027 ;;      Params:         0       0       0       0       0
  9028 ;;      Locals:         2       0       0       0       0
  9029 ;;      Temps:          1       0       0       0       0
  9030 ;;      Totals:         3       0       0       0       0
  9031 ;;Total ram usage:        3 bytes
  9032 ;; Hardware stack levels used:    1
  9033 ;; Hardware stack levels required when called:    1
  9034 ;; This function calls:
  9035 ;;		_I2C_Ack
  9036 ;;		_I2C_Nack
  9037 ;;		_I2C_Ready
  9038 ;; This function is called by:
  9039 ;;		_main
  9040 ;; This function uses a non-reentrant model
  9041 ;;
  9042                           
  9043                           
  9044                           ;psect for function _I2C_Read
  9045  1F75                     _I2C_Read:	
  9046                           
  9047                           ;incstack = 0
  9048                           ; Regs used in _I2C_Read: [wreg+status,2+status,0+pclath+cstack]
  9049                           ;I2C_Read@flag stored from wreg
  9050  1F75  00F1               	movwf	I2C_Read@flag
  9051                           
  9052                           ;I2C_Source_File.c: 89: char I2C_Read(char flag);I2C_Source_File.c: 90: {;I2C_Source_Fil
      +                          e.c: 91:     char buffer;;I2C_Source_File.c: 92:     RCEN = 1;
  9053  1F76  1683               	bsf	3,5	;RP0=1, select bank1
  9054  1F77  1303               	bcf	3,6	;RP1=0, select bank1
  9055  1F78  1591               	bsf	17,3	;volatile
  9056  1F79                     l201:	
  9057                           ;I2C_Source_File.c: 93:     while(!SSPSTATbits.BF);
  9058                           
  9059  1F79  1C14               	btfss	20,0	;volatile
  9060  1F7A  2F79               	goto	l201
  9061                           
  9062                           ;I2C_Source_File.c: 94:     buffer = SSPBUF;
  9063  1F7B  1283               	bcf	3,5	;RP0=0, select bank0
  9064  1F7C  1303               	bcf	3,6	;RP1=0, select bank0
  9065  1F7D  0813               	movf	19,w	;volatile
  9066  1F7E  00F0               	movwf	??_I2C_Read
  9067  1F7F  0870               	movf	??_I2C_Read,w
  9068  1F80  00F2               	movwf	I2C_Read@buffer
  9069                           
  9070                           ;I2C_Source_File.c: 95:     if(flag==0)
  9071  1F81  0871               	movf	I2C_Read@flag,w
  9072  1F82  1D03               	btfss	3,2
  9073  1F83  2F8A               	goto	l3283
  9074                           
  9075                           ;I2C_Source_File.c: 96:         I2C_Ack();
  9076  1F84  160A  158A  268C  160A  158A  	fcall	_I2C_Ack
  9077  1F89  2F8F               	goto	l205
  9078  1F8A                     l3283:	
  9079                           
  9080                           ;I2C_Source_File.c: 98:         I2C_Nack();
  9081  1F8A  160A  158A  2693  160A  158A  	fcall	_I2C_Nack
  9082  1F8F                     l205:	
  9083                           
  9084                           ;I2C_Source_File.c: 99:     I2C_Ready();
  9085  1F8F  160A  158A  2686   	fcall	_I2C_Ready
  9086                           
  9087                           ;I2C_Source_File.c: 100:     return(buffer);
  9088  1F92  0872               	movf	I2C_Read@buffer,w
  9089  1F93  0008               	return
  9090  1F94                     __end_of_I2C_Read:	
  9091                           
  9092                           	psect	text37
  9093  1E86                     __ptext37:	
  9094 ;; *************** function _I2C_Ready *****************
  9095 ;; Defined at:
  9096 ;;		line 112 in file "I2C_Source_File.c"
  9097 ;; Parameters:    Size  Location     Type
  9098 ;;		None
  9099 ;; Auto vars:     Size  Location     Type
  9100 ;;		None
  9101 ;; Return value:  Size  Location     Type
  9102 ;;                  1    wreg      void 
  9103 ;; Registers used:
  9104 ;;		None
  9105 ;; Tracked objects:
  9106 ;;		On entry : 0/0
  9107 ;;		On exit  : 0/0
  9108 ;;		Unchanged: 0/0
  9109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9110 ;;      Params:         0       0       0       0       0
  9111 ;;      Locals:         0       0       0       0       0
  9112 ;;      Temps:          0       0       0       0       0
  9113 ;;      Totals:         0       0       0       0       0
  9114 ;;Total ram usage:        0 bytes
  9115 ;; Hardware stack levels used:    1
  9116 ;; This function calls:
  9117 ;;		Nothing
  9118 ;; This function is called by:
  9119 ;;		_I2C_Write
  9120 ;;		_I2C_Read
  9121 ;; This function uses a non-reentrant model
  9122 ;;
  9123                           
  9124                           
  9125                           ;psect for function _I2C_Ready
  9126  1E86                     _I2C_Ready:	
  9127  1E86                     l216:	
  9128                           ;I2C_Source_File.c: 114:     while(!SSPIF);
  9129                           
  9130                           ;incstack = 0
  9131                           ; Regs used in _I2C_Ready: []
  9132                           
  9133  1E86  1283               	bcf	3,5	;RP0=0, select bank0
  9134  1E87  1303               	bcf	3,6	;RP1=0, select bank0
  9135  1E88  1D8C               	btfss	12,3	;volatile
  9136  1E89  2E86               	goto	l216
  9137                           
  9138                           ;I2C_Source_File.c: 115:     SSPIF=0;
  9139  1E8A  118C               	bcf	12,3	;volatile
  9140  1E8B  0008               	return
  9141  1E8C                     __end_of_I2C_Ready:	
  9142                           
  9143                           	psect	text38
  9144  1E93                     __ptext38:	
  9145 ;; *************** function _I2C_Nack *****************
  9146 ;; Defined at:
  9147 ;;		line 83 in file "I2C_Source_File.c"
  9148 ;; Parameters:    Size  Location     Type
  9149 ;;		None
  9150 ;; Auto vars:     Size  Location     Type
  9151 ;;		None
  9152 ;; Return value:  Size  Location     Type
  9153 ;;                  1    wreg      void 
  9154 ;; Registers used:
  9155 ;;		None
  9156 ;; Tracked objects:
  9157 ;;		On entry : 0/0
  9158 ;;		On exit  : 0/0
  9159 ;;		Unchanged: 0/0
  9160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9161 ;;      Params:         0       0       0       0       0
  9162 ;;      Locals:         0       0       0       0       0
  9163 ;;      Temps:          0       0       0       0       0
  9164 ;;      Totals:         0       0       0       0       0
  9165 ;;Total ram usage:        0 bytes
  9166 ;; Hardware stack levels used:    1
  9167 ;; This function calls:
  9168 ;;		Nothing
  9169 ;; This function is called by:
  9170 ;;		_I2C_Read
  9171 ;; This function uses a non-reentrant model
  9172 ;;
  9173                           
  9174                           
  9175                           ;psect for function _I2C_Nack
  9176  1E93                     _I2C_Nack:	
  9177                           
  9178                           ;I2C_Source_File.c: 85:     ACKDT = 1;
  9179                           
  9180                           ;incstack = 0
  9181                           ; Regs used in _I2C_Nack: []
  9182  1E93  1683               	bsf	3,5	;RP0=1, select bank1
  9183  1E94  1303               	bcf	3,6	;RP1=0, select bank1
  9184  1E95  1691               	bsf	17,5	;volatile
  9185                           
  9186                           ;I2C_Source_File.c: 86:  ACKEN = 1;
  9187  1E96  1611               	bsf	17,4	;volatile
  9188  1E97                     l195:	
  9189                           ;I2C_Source_File.c: 87:     while(ACKEN);
  9190                           
  9191  1E97  1E11               	btfss	17,4	;volatile
  9192  1E98  0008               	return
  9193  1E99  2E97               	goto	l195
  9194  1E9A                     __end_of_I2C_Nack:	
  9195                           
  9196                           	psect	text39
  9197  1E8C                     __ptext39:	
  9198 ;; *************** function _I2C_Ack *****************
  9199 ;; Defined at:
  9200 ;;		line 76 in file "I2C_Source_File.c"
  9201 ;; Parameters:    Size  Location     Type
  9202 ;;		None
  9203 ;; Auto vars:     Size  Location     Type
  9204 ;;		None
  9205 ;; Return value:  Size  Location     Type
  9206 ;;                  1    wreg      void 
  9207 ;; Registers used:
  9208 ;;		None
  9209 ;; Tracked objects:
  9210 ;;		On entry : 0/0
  9211 ;;		On exit  : 0/0
  9212 ;;		Unchanged: 0/0
  9213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9214 ;;      Params:         0       0       0       0       0
  9215 ;;      Locals:         0       0       0       0       0
  9216 ;;      Temps:          0       0       0       0       0
  9217 ;;      Totals:         0       0       0       0       0
  9218 ;;Total ram usage:        0 bytes
  9219 ;; Hardware stack levels used:    1
  9220 ;; This function calls:
  9221 ;;		Nothing
  9222 ;; This function is called by:
  9223 ;;		_I2C_Read
  9224 ;; This function uses a non-reentrant model
  9225 ;;
  9226                           
  9227                           
  9228                           ;psect for function _I2C_Ack
  9229  1E8C                     _I2C_Ack:	
  9230                           
  9231                           ;I2C_Source_File.c: 78:     ACKDT = 0;
  9232                           
  9233                           ;incstack = 0
  9234                           ; Regs used in _I2C_Ack: []
  9235  1E8C  1683               	bsf	3,5	;RP0=1, select bank1
  9236  1E8D  1303               	bcf	3,6	;RP1=0, select bank1
  9237  1E8E  1291               	bcf	17,5	;volatile
  9238                           
  9239                           ;I2C_Source_File.c: 79:  ACKEN = 1;
  9240  1E8F  1611               	bsf	17,4	;volatile
  9241  1E90                     l189:	
  9242                           ;I2C_Source_File.c: 80:     while(ACKEN);
  9243                           
  9244  1E90  1E11               	btfss	17,4	;volatile
  9245  1E91  0008               	return
  9246  1E92  2E90               	goto	l189
  9247  1E93                     __end_of_I2C_Ack:	
  9248                           
  9249                           	psect	text40
  9250  1EF2                     __ptext40:	
  9251 ;; *************** function _I2C_Init *****************
  9252 ;; Defined at:
  9253 ;;		line 11 in file "I2C_Source_File.c"
  9254 ;; Parameters:    Size  Location     Type
  9255 ;;		None
  9256 ;; Auto vars:     Size  Location     Type
  9257 ;;		None
  9258 ;; Return value:  Size  Location     Type
  9259 ;;                  1    wreg      void 
  9260 ;; Registers used:
  9261 ;;		wreg, status,2
  9262 ;; Tracked objects:
  9263 ;;		On entry : 0/0
  9264 ;;		On exit  : 0/0
  9265 ;;		Unchanged: 0/0
  9266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9267 ;;      Params:         0       0       0       0       0
  9268 ;;      Locals:         0       0       0       0       0
  9269 ;;      Temps:          0       0       0       0       0
  9270 ;;      Totals:         0       0       0       0       0
  9271 ;;Total ram usage:        0 bytes
  9272 ;; Hardware stack levels used:    1
  9273 ;; This function calls:
  9274 ;;		Nothing
  9275 ;; This function is called by:
  9276 ;;		_main
  9277 ;; This function uses a non-reentrant model
  9278 ;;
  9279                           
  9280                           
  9281                           ;psect for function _I2C_Init
  9282  1EF2                     _I2C_Init:	
  9283                           
  9284                           ;I2C_Source_File.c: 13:     TRISC3 = 1;
  9285                           
  9286                           ;incstack = 0
  9287                           ; Regs used in _I2C_Init: [wreg+status,2]
  9288  1EF2  1683               	bsf	3,5	;RP0=1, select bank1
  9289  1EF3  1303               	bcf	3,6	;RP1=0, select bank1
  9290  1EF4  1587               	bsf	7,3	;volatile
  9291                           
  9292                           ;I2C_Source_File.c: 14:  TRISC4 = 1;
  9293  1EF5  1607               	bsf	7,4	;volatile
  9294                           
  9295                           ;I2C_Source_File.c: 15:  SSPSTAT = 80;
  9296  1EF6  3050               	movlw	80
  9297  1EF7  0094               	movwf	20	;volatile
  9298                           
  9299                           ;I2C_Source_File.c: 16:     SSPCON = 0x28;
  9300  1EF8  3028               	movlw	40
  9301  1EF9  1283               	bcf	3,5	;RP0=0, select bank0
  9302  1EFA  1303               	bcf	3,6	;RP1=0, select bank0
  9303  1EFB  0094               	movwf	20	;volatile
  9304                           
  9305                           ;I2C_Source_File.c: 17:  SSPCON2 = 0;
  9306  1EFC  1683               	bsf	3,5	;RP0=1, select bank1
  9307  1EFD  1303               	bcf	3,6	;RP1=0, select bank1
  9308  1EFE  0191               	clrf	17	;volatile
  9309                           
  9310                           ;I2C_Source_File.c: 18:     SSPADD = ((20000000/(4*100000))-1);
  9311  1EFF  3031               	movlw	49
  9312  1F00  0093               	movwf	19	;volatile
  9313                           
  9314                           ;I2C_Source_File.c: 19:     SSPIE = 1;
  9315  1F01  158C               	bsf	12,3	;volatile
  9316                           
  9317                           ;I2C_Source_File.c: 20:     SSPIF = 0;
  9318  1F02  1283               	bcf	3,5	;RP0=0, select bank0
  9319  1F03  1303               	bcf	3,6	;RP1=0, select bank0
  9320  1F04  118C               	bcf	12,3	;volatile
  9321  1F05  0008               	return
  9322  1F06                     __end_of_I2C_Init:	
  9323  007E                     btemp	set	126	;btemp
  9324  007E                     wtemp0	set	126


Data Sizes:
    Strings     10
    Constant    144
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     78      78
    BANK1            80     65      65
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 10
		 -> STR_1(CODE[10]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> main@buffer(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 20
		 -> main@buffer(BANK1[20]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _sprintf->___lldiv
    _sprintf->___xxtofl
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->___lwdiv
    ___flsub->___xxtofl
    _MPU_Start_Loc->_I2C_Repeated_Start
    _MPU_Start_Loc->_I2C_Start_Wait
    _I2C_Repeated_Start->_I2C_Write
    _MPU6050_Init->_I2C_Start_Wait
    _I2C_Start_Wait->_I2C_Write
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                30    30      0   32279
                                             35 BANK1     30    30      0
                           _I2C_Init
                           _I2C_Read
                           _I2C_Stop
                           _Lcd_Init
                     _Lcd_Set_Cursor
                       _Lcd_Set_Port
                   _Lcd_Write_String
                       _MPU6050_Init
                      _MPU_Start_Loc
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   30497
                                              0 BANK1     35    30      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7408
                                             30 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    5871
                                             30 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4393
                                              4 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     455
                                              0 COMMON    12     4      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     615
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             49 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                             70 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             50 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _MPU_Start_Loc                                        0     0      0     110
                 _I2C_Repeated_Start
                     _I2C_Start_Wait
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Repeated_Start                                   1     1      0      44
                                              1 COMMON     1     1      0
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (1) _MPU6050_Init                                         3     3      0      66
                                              2 COMMON     3     3      0
                     _I2C_Start_Wait
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Start_Wait                                       1     1      0      44
                                              1 COMMON     1     1      0
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Write                                            1     1      0      22
                                              0 COMMON     1     1      0
                          _I2C_Ready
 ---------------------------------------------------------------------------------
 (3) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     4     4      0     301
                                              5 COMMON     4     4      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Port                                         3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     456
                                              4 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Read                                             3     3      0      45
                                              0 COMMON     3     3      0
                            _I2C_Ack
                           _I2C_Nack
                          _I2C_Ready
 ---------------------------------------------------------------------------------
 (3) _I2C_Ready                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Nack                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Ack                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Init
   _I2C_Read
     _I2C_Ack
     _I2C_Nack
     _I2C_Ready
   _I2C_Stop
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Set_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _MPU6050_Init
     _I2C_Start_Wait
       _I2C_Stop
       _I2C_Write
         _I2C_Ready
     _I2C_Stop
     _I2C_Write
       _I2C_Ready
   _MPU_Start_Loc
     _I2C_Repeated_Start
       _I2C_Write
         _I2C_Ready
     _I2C_Start_Wait
       _I2C_Stop
       _I2C_Write
         _I2C_Ready
     _I2C_Write
       _I2C_Ready
   ___xxtofl
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      4E       5       97.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     41      41       7       81.3%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Mon Jun 03 23:58:42 2019

                                   pc 0002                    __size_of_I2C_Ready 0006  
                         __CFG_CP$OFF 0000                           _SSPSTATbits 0094  
                  __size_of_I2C_Write 0012                                    l63 1F0D  
                                  l64 1F10                                    l65 1F14  
                                  l66 1F15                                    l67 1F19  
                                  l68 1F1A                                    l69 1F1E  
                        ___awdiv@sign 0021                                    fsr 0004  
                 ___wmul@multiplicand 0072                   __Umul8_16@word_mpld 0076  
                                 l111 1FFF                                   l201 1F79  
                                 l205 1F8F                                   l216 1E86  
                                 l209 1EA6                                   l164 1F3B  
                                 l165 1F3E                                   l175 1EE4  
                                 l195 1E97                                   l347 0273  
                                 l189 1E90                                   l373 05D7  
                                 l608 13E9                                   l626 08E0  
                                 l731 169A                                   l388 07C9  
                                 l725 1623                                   l398 1F9E  
                                 l584 11C2                                   l592 1487  
                                 l585 11DC                                   l729 16BC  
                                 l833 0CAA                                   l746 1775  
                                 l579 098A                                   l589 1421  
                                 l767 17F5                                   l759 17DD  
                                 l872 15A1                                   l873 15AB  
                                 l865 158B                                   l859 154B  
                                 l887 10B6                                   _RD0 0040  
                                 _RD1 0041                                   _RD2 0042  
                                 _RD3 0043                                   _RD4 0044  
                                 _RD5 0045                                   _PEN 048A  
                        __CFG_CPD$OFF 0000                       __end_of_I2C_Ack 1E93  
                                 fsr0 0004                                   indf 0000  
                        ___awmod@sign 0076                          __CFG_FOSC$HS 0000  
                        ___flmul@aexp 0036                          ___flmul@bexp 0037  
                     ??_MPU_Start_Loc 0072                          ___flmul@sign 0031  
                        ___flmul@temp 003C                          ___flmul@prod 0038  
                        __CFG_LVP$OFF 0000                          ___fltol@exp1 005B  
                                l2301 10AE                                  l3111 13A5  
                                l3007 0962                                  l3033 1F96  
                                l3017 0976                                  l2323 1EDE  
                                l3131 13D5                                  l3115 13AE  
                                l3051 134C                                  l3211 15C8  
                                l3027 0999                                  l3019 0986  
                                l2403 1251                                  l3141 13F8  
                                l3133 13E5                                  l3061 1384  
                                l3053 135C                                  l2405 125F  
                                l2413 1278                                  l2511 161B  
                                l3151 080B                                  l2431 1174  
                                l3311 0235                                  l3241 1FE1  
                                l2601 1767                                  l3065 1391  
                                l3153 081B                                  l3161 0846  
                                l2433 1182                                  l2353 129C  
                                l2417 1280                                  l2409 126D  
                                l3321 0291                                  l3313 026F  
                                l3243 1FE5                                  l3091 1461  
                                l2507 1618                                  l2443 11A3  
                                l2371 12C8                                  l2363 12A4  
                                l2347 1291                                  l3403 0586  
                                l3237 1FD9                                  l3077 11EE  
                                l2517 162D                                  l3157 0839  
                                l2461 10E9                                  l2365 12B2  
                                l3421 0639                                  l3503 1215  
                                l3239 1FDD                                  l3247 1FE9  
                                l3087 143B                                  l2631 17A8  
                                l2623 179D                                  l3183 155A  
                                l2439 1198                                  l2455 10CD  
                                l2375 12D3                                  l2391 1244  
                                l3327 02A1                                  l3319 0275  
                                l2617 1796                                  l2609 1787  
                                l2625 179F                                  l3177 1543  
                                l2457 10DB                                  l2465 10F4  
                                l3441 0685                                  l3433 0668  
                                l3409 05C2                                  l3361 03CA  
                                l3353 0341                                  l3337 02E7  
                                l3283 1F8A                                  l2635 17AA  
                                l2555 16A5                                  l2547 1669  
                                l2483 15EE                                  l3187 155E  
                                l2707 09FC                                  l2379 12DB  
                                l2395 124B                                  l3427 064C  
                                l3611 0289                                  l3531 14BD  
                                l3613 1FF1                                  l2653 17ED  
                                l2581 16EB                                  l2573 16CA  
                                l2557 16A7                                  l2565 16B6  
                                l3197 159F                                  l3189 1570  
                                l3461 07B4                                  l3381 04B2  
                                l3365 03EB                                  l3519 1F5A  
                                l2583 16ED                                  l2591 16FD  
                                l2487 15F1                                  l3199 1590  
                                l2911 0FD5                                  l3455 07A3  
                                l3391 0500                                  l3463 07B9  
                                l2657 17F1                                  l2489 15F9  
                                l2761 0C19                                  l2681 09C9  
                                l2905 0F4A                                  l3377 0497  
                                l3369 043F                                  l3297 0222  
                                l3481 020C                                  l2771 0C32  
                                l2923 1EBB                                  l3475 07DF  
                                l3483 07F7                                  l2933 0869  
                                l2781 0C64                                  l2677 09BF  
                                l3397 0584                                  l2791 0C93  
                                l2767 0C30                                  l2759 0BFC  
                                l2695 09E4                                  l2679 09C1  
                                l2871 01C3                                  l2929 0860  
                                l2785 0C7A                                  l2697 09E6  
                                l2865 0116                                  l2955 08B9  
                                l2947 0899                                  l2699 09EE  
                                l2981 0903                                  l2965 08CC  
                                l2893 0E34                                  l2975 08EF  
                                l2967 08DC                                  l2887 0DA9  
                                l2985 090C                                  l2897 0E5F  
                                l2999 093A                                  STR_1 1096  
                                u3005 12C9                                  u3205 10D0  
                                u3135 1177                                  u3225 10E1  
                                u3065 1254                                  u3155 1183  
                                u3235 10EA                                  u3500 173C  
                                u3501 173D                                  u4045 0C4F  
                                u3165 118F                                  u3085 1265  
                                u3502 1742                                  u3350 1689  
                                u4135 110A                                  u3503 1743  
                                u4055 0C6D                                  u3175 1199  
                                u4215 0137                                  u3095 126E  
                                u3360 168A                                  u3345 167D  
                                u5025 080F                                  u5105 1567  
                                u4065 0C85                                  u4225 0184  
                                u4305 0DC1                                  u4235 01CE  
                                u4315 0DFD                                  u5045 0829  
                                u5125 1583                                  u4405 0FD8  
                                u4325 0E37                                  u5055 083A  
                                u4175 0028                                  u3545 1789  
                                u5145 1598                                  u4185 0082  
                                u4345 0E84                                  u4265 0CE3  
                                u3491 1728                                  u3483 170F  
                                u3475 16F1                                  u3395 16AB  
                                u4515 08CD                                  u4195 00D7  
                                u4355 0EC0                                  u4275 0D1F  
                                u3492 1729                                  u3645 17C7  
                                u3493 172E                                  u4605 0964  
                                u4365 0F0B                                  u4285 0D6A  
                                u5405 05B8                                  u3494 172F  
                                u3495 1734                                  u4455 089B  
                                u2855 10B7                                  u5335 03F6  
                                u3496 1735                                  u4705 1F9F  
                                u5185 15B3                                  u4545 08E5  
                                u4465 08AC                                  u3905 0BA5  
                                u4385 0F62                                  u5345 044A  
                                u4715 1FA6                                  u4475 08BA  
                                u3835 0AAC                                  u4395 0F9E  
                                u5435 05DF                                  _RCEN 048B  
                                u4645 0977                                  u3925 0BCA  
                                u2965 12A7                                  u5615 1221  
                                u5455 0655                                  u5375 0495  
                                u4825 11EA                                  u4745 1350  
                                u4585 093C                                  u3945 0BE8  
                                u3865 0B09                                  u2985 12B3  
                                u5545 07D0                                  u5465 0662  
                                u5707 12EA                                  u4675 098F  
                                u4595 0951                                  u3955 0C00  
                                u2995 12BF                                  u5555 07DD  
                                u5395 0589                                  u5717 12F9  
                                u4861 144C                                  u4925 13B7  
                                u4765 135E                                  u5485 0705  
                                u4862 144D                                  u5727 1308  
                                u4863 1452                                  u4775 1373  
                                u3975 0C0B                                  u5495 076B  
                                u4864 1453                                  u5737 1F31  
                                u4881 1472                                  u4865 1458  
                                u4785 1385                                  u5657 14B2  
                                u4882 1473                                  u4866 1459  
                                u5595 11FC                                  u4883 1478  
                                u4955 13D6                                  u5667 1527  
                                u4884 1479                                  u5677 1138  
                                u4885 147E                                  u4886 147F  
                                u5687 111A                                  u5697 112B  
                                u4985 13EE                                  _RSEN 0489  
                        __CFG_WRT$OFF 0000                     ?_Lcd_Write_String 0070  
                                _main 149A                      __end_of_I2C_Nack 1E9A  
                    __end_of_I2C_Init 1F06                      __end_of_I2C_Read 1F94  
                                btemp 007E                      __end_of_I2C_Stop 1EAF  
                                start 0000                    ??_Lcd_Write_String 0075  
                        _sprintf$1003 00AA                       __end_of_Lcd_Cmd 1F3A  
                       ___fltol@sign1 005A                       __end_of___fladd 1800  
                               ?_main 0070                                 _ACKEN 048C  
                               _ACKDT 048D                       __end_of___awdiv 12E0  
                     __end_of___flneg 1EA3                         __CFG_WDTE$OFF 0000  
                     __end_of___awmod 1285                       __end_of___flmul 0CB7  
                     __end_of___flsub 1FD7                       __end_of___fltol 1407  
                     __end_of___lldiv 139A                  __end_of_Lcd_Set_Port 2000  
                     ___awdiv@divisor 0077                       __end_of___llmod 084F  
                     __end_of___lwdiv 11A8                       __end_of___lwmod 10F9  
                     ___awdiv@counter 0020               __size_of_Lcd_Set_Cursor 004A  
                               _TRISA 0085                                 _TRISB 0086  
                               _TRISC 0087                                 _TRISD 0088  
                               _SSPIE 0463                                 _SSPIF 0063  
                       ?_MPU6050_Init 0070                       __end_of_dpowers 1096  
                               _scale 0CB7                       __end_of_isdigit 1EBD  
                   __end_of_I2C_Ready 1E8C                     __end_of_I2C_Write 1EE0  
                      __CFG_BOREN$OFF 0000                                 pclath 000A  
                               status 0003                                 wtemp0 007E  
                     __end_of_sprintf 07FC                      __end_of_Lcd_Init 133C  
                    __end_of_Lcd_Port 1F20                       __initialization 07FC  
                        __end_of_main 152E                             ??_I2C_Ack 0070  
                              ??_main 00C3                  __size_of__tdiv_to_l_ 00A9  
                      ??_MPU6050_Init 0072                      ___llmod@dividend 0074  
                              ?_scale 003E                      ___awdiv@dividend 0079  
                           ??_Lcd_Cmd 0071               __size_of_Lcd_Write_Char 0039  
                              _SSPADD 0093                                _TRISC3 043B  
                              _TRISC4 043C                                _SSPCON 0014  
                              _SSPBUF 0013                      __end_of___xxtofl 15D1  
                      __CFG_PWRTE$OFF 0000                      __end_of__powers_ 103A  
                              ___flge 1407                                ___fleq 11A8  
                           ??___fladd 005A                                ___wmul 1F94  
                           ??___awdiv 007B                             ??___flneg 0074  
                           ??___awmod 0074                             ??___flmul 002C  
                           ??___flsub 007E                             ??___fltol 0055  
                           ??___lldiv 0078                             ??___llmod 0078  
                           ??___lwdiv 007A                             ??___lwmod 0074  
                              _fround 0004                      ___awdiv@quotient 0022  
                     ___awmod@divisor 0070                       ___awmod@counter 0075  
                  _I2C_Repeated_Start 1EE0                                main@Ax 00DF  
                              main@Xa 00DB                             ?_I2C_Nack 0070  
                           ??_isdigit 0070                             ?_I2C_Init 0070  
                           ?_I2C_Read 0070                    __size_of__Umul8_16 0023  
                           ?_I2C_Stop 0070                   ?_I2C_Repeated_Start 0070  
                           ??_sprintf 00A5                       Lcd_Set_Cursor@a 0077  
                     Lcd_Set_Cursor@b 0074                       Lcd_Set_Cursor@y 0079  
                     Lcd_Set_Cursor@z 0078                            ___flge@ff1 0070  
                          ___flge@ff2 0074                          ___xxtofl@arg 007A  
                        ___xxtofl@exp 0079                          ___xxtofl@val 0070  
                          ___fleq@ff1 0070                            ___fleq@ff2 0074  
             __end_of__initialization 07FC                            ___flneg@f1 0070  
                          ___fltol@f1 0051                  ??_I2C_Repeated_Start 0071  
                      __pcstackCOMMON 0070                 __size_of_Lcd_Set_Port 0029  
                       __end_of_scale 1000                        _Lcd_Set_Cursor 11F0  
                          __div_to_l_ 08F8                            ??_I2C_Nack 0070  
                          ??_I2C_Init 0070                            ??_I2C_Read 0070  
                          ??_I2C_Stop 0070                             ?_Lcd_Init 0070  
                           ?_Lcd_Port 0070                       __div_to_l_@exp1 0025  
                     __div_to_l_@cntr 0024                               ??_scale 0042  
                     __div_to_l_@quot 0020               __size_of_I2C_Start_Wait 001D  
                        _Lcd_Set_Port 1FD7                         __div_to_l_@f1 0070  
                       __div_to_l_@f2 0074                     __end_of__Umul8_16 10C7  
                          __pmaintext 149A                          I2C_Read@flag 0071  
                             ?___flge 0070                               ?___fleq 0070  
                      I2C_Read@buffer 0072                  __end_of_MPU6050_Init 116C  
                             ?___wmul 0070                               _I2C_Ack 1E8C  
                             _ACKSTAT 048E                               ?_fround 003E  
           __size_of_Lcd_Write_String 001E                __end_of_Lcd_Set_Cursor 123A  
                           ?___xxtofl 0070                            ??_Lcd_Init 0074  
                          ??_Lcd_Port 0070                               _SSPCON2 0091  
               __end_of_MPU_Start_Loc 1ECE                               _SSPSTAT 0094  
                          __stringtab 1000                        _Lcd_Write_Char 10F9  
                             _Lcd_Cmd 1F20                             _I2C_Ready 1E86  
                           _I2C_Write 1ECE                     __end_of__npowers_ 106E  
                          _scale$1002 004C                       __size_of___flge 0093  
                     __size_of___fleq 0048                               ___fladd 15D1  
                             ___awdiv 1285                               ___flneg 1E9A  
                             ___awmod 123A                               ___flmul 09A2  
                             ___flsub 1FB5                               ___fltol 139A  
                             ___lldiv 133C                       __size_of___wmul 0021  
                             ___llmod 0803                               ___lwdiv 116C  
                             ___lwmod 10C7                       __size_of_fround 0201  
                     ?_Lcd_Set_Cursor 0074                               __ptext1 0205  
                             __ptext2 0CB7                               __ptext3 123A  
                             __ptext4 1285                               __ptext5 1EAF  
                             __ptext6 0004                               __ptext7 10C7  
                             __ptext8 116C                               __ptext9 09A2  
   I2C_Start_Wait@slave_write_address 0071                           ?__div_to_l_ 0070  
                             _dpowers 106E                               _isdigit 1EAF  
                          ??___xxtofl 0074                      ___awmod@dividend 0072  
                             _sprintf 0205                __end_of_Lcd_Write_Char 1132  
                end_of_initialization 07FC                            ?_I2C_Ready 0070  
                          ?_I2C_Write 0070                       ___lldiv@divisor 0070  
                     ___lldiv@counter 007D                             Lcd_Port@a 0070  
                      __tdiv_to_l_@f1 0070                        __tdiv_to_l_@f2 0074  
                       ??__tdiv_to_l_ 0078                           ___fladd@grs 0065  
                       ___xxtofl@sign 0078                     __size_of_I2C_Nack 0007  
                   __size_of_I2C_Init 0014                     __size_of_I2C_Read 001F  
                   __size_of_I2C_Stop 000C                        _I2C_Start_Wait 1F3A  
                     ?_Lcd_Write_Char 0070                     Lcd_Write_String@a 0078  
                   Lcd_Write_String@i 0076                           ___flmul@grs 0032  
                          main@buffer 00C7                 __size_of_MPU6050_Init 003A  
                 __size_of__div_to_l_ 00AA                        __end_of___flge 149A  
                      __end_of___fleq 11F0                        __end_of___wmul 1FB5  
                    _Lcd_Write_String 1F57                        __end_of_fround 0205  
                 start_initialization 07FC                         Lcd_Set_Port@a 0072  
              __end_of_I2C_Start_Wait 1F57                   __end_of__tdiv_to_l_ 08F8  
                        _MPU6050_Init 1132  I2C_Repeated_Start@slave_read_address 0071  
                   __size_of_Lcd_Init 005C                     __size_of_Lcd_Port 001A  
                         ??_I2C_Ready 0070                       ___llmod@divisor 0070  
                     ___llmod@counter 0079                           ??_I2C_Write 0070  
         __size_of_I2C_Repeated_Start 0012                              ??___flge 0078  
                            ??___fleq 0078                              ??___wmul 0074  
                           __Umul8_16 10A4                              ?_I2C_Ack 0070  
                     Lcd_Write_Char@a 0074                       Lcd_Write_Char@y 0073  
                            ??_fround 0042                         sprintf@tmpval 00B7  
                           ___fladd@a 0056                             ___fladd@b 0052  
                          fround@prec 0051                             ___flmul@a 0028  
                           ___flmul@b 0024                             ___flsub@a 0066  
                           ___flsub@b 006A                             ___latbits 0002  
                       __pcstackBANK0 0020                         __pcstackBANK1 00A0  
                     ?_I2C_Start_Wait 0070                     __size_of___xxtofl 00A3  
                            ?_Lcd_Cmd 0070                           sprintf@flag 00AF  
                         sprintf@eexp 00B5                           sprintf@fval 00BE  
                         sprintf@prec 00BC                      ___lwdiv@dividend 0078  
                    ??_Lcd_Set_Cursor 0075                              ?___fladd 0052  
                            ?___awdiv 0077                              ?___flneg 0070  
                            ?___awmod 0070                              ?___flmul 0024  
                            ?___flsub 0066                              ?___fltol 0051  
                            ?___lldiv 0070                              ?___llmod 0070  
                           __npowers_ 103A                            ?__Umul8_16 0070  
                            ?___lwdiv 0076                              ?___lwmod 0070  
                           __pstrings 1000                           __tdiv_to_l_ 084F  
                        ??__div_to_l_ 0078                              _I2C_Nack 1E93  
                            ?_isdigit 0070                              _I2C_Init 1EF2  
                            _I2C_Read 1F75                              _I2C_Stop 1EA3  
                    ___lwdiv@quotient 007B                              ?_sprintf 00A0  
                      __size_of_scale 0349                        ___wmul@product 0074  
                            Lcd_Cmd@a 0073                    __end_of__div_to_l_ 09A2  
              __size_of_MPU_Start_Loc 0011                      __size_of_I2C_Ack 0007  
                         __stringbase 1005                     ___wmul@multiplier 0070  
                    ??_Lcd_Write_Char 0071                              _Lcd_Init 12E0  
                            _Lcd_Port 1F06              __end_of_Lcd_Write_String 1F75  
                    __size_of_Lcd_Cmd 001A                         I2C_Write@data 0070  
                         ??__Umul8_16 0072                      __size_of___fladd 022F  
                    __size_of___awdiv 005B                      __size_of___flneg 0009  
                    __size_of___awmod 004B                      __size_of___flmul 0315  
                    __size_of___flsub 0022                      __size_of___fltol 006D  
                    __size_of___lldiv 005E                      __size_of___llmod 004C  
                    __size_of___lwdiv 003C                      __size_of___lwmod 0032  
                         _fround$1000 004D                           _fround$1001 0049  
                  __end_of__stringtab 1006                           _isdigit$803 0070  
                          sprintf@val 00B1                              ___xxtofl 152E  
                    __size_of_isdigit 000E                       ___lwdiv@divisor 0076  
                     ___lwdiv@counter 007D                              __ptext10 10A4  
                            __ptext11 084F                              __ptext20 1E9A  
                            __ptext12 08F8                              __ptext21 1407  
                            __ptext13 152E                              __ptext30 10F9  
                            __ptext22 11A8                              __ptext14 1F94  
                            __ptext31 1FD7                              __ptext23 1EBD  
                            __ptext15 0803                              __ptext40 1EF2  
                            __ptext32 11F0                              __ptext24 1EE0  
                            __ptext16 133C                              __ptext33 12E0  
                            __ptext25 1132                              __ptext17 139A  
                            __ptext34 1F20                              __ptext26 1F3A  
                            __ptext18 1FB5                              __ptext35 1F06  
                            __ptext27 1ECE                              __ptext19 15D1  
                            __ptext36 1F75                              __ptext28 1EA3  
                            __ptext37 1E86                              __ptext29 1F57  
                            __ptext38 1E93                              __ptext39 1E8C  
                            __powers_ 1006                         _MPU_Start_Loc 1EBD  
                    __size_of_sprintf 05F7                         __size_of_main 0094  
                       ?_Lcd_Set_Port 0070                      ??_I2C_Start_Wait 0071  
                            isdigit@c 0071                              scale@scl 0050  
                      ?_MPU_Start_Loc 0070                    Lcd_Write_Char@temp 0072  
                           sprintf@ap 00AE                      __tdiv_to_l_@exp1 0025  
                    __tdiv_to_l_@cntr 0024                             sprintf@sp 00BB  
                    __tdiv_to_l_@quot 0020                        ??_Lcd_Set_Port 0070  
                    ___lwmod@dividend 0072                      ___lldiv@dividend 0074  
          __end_of_I2C_Repeated_Start 1EF2                             stringcode 1000  
                  Lcd_Set_Cursor@temp 007A                          ?__tdiv_to_l_ 0070  
              __Umul8_16@multiplicand 0070                              sprintf@c 00C2  
                            sprintf@f 00A0                      ___lldiv@quotient 0079  
                     ___lwmod@divisor 0070                       ___lwmod@counter 0075  
                            stringdir 1000                              stringtab 1000  
                         _SSPCON2bits 0091                         ___fladd@signs 0062  
                        ___fladd@aexp 0063                          ___fladd@bexp 0064  
                __Umul8_16@multiplier 0078                     __Umul8_16@product 0074  
