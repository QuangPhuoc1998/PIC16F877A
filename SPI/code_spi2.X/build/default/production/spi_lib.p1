Version 4.0 HI-TECH Software Intermediate Code
"12 spi_lib.c
[; ;spi_lib.c: 12: void Spi_Init(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sClockIdle, Spi_Transmit_Edge sTransmitEdge)
[c E850 32 33 34 35 36 37 .. ]
[n E850 . SPI_MASTER_OSC_DIV4 SPI_MASTER_OSC_DIV16 SPI_MASTER_OSC_DIV64 SPI_MASTER_TMR2 SPI_SLAVE_SS_EN SPI_SLAVE_SS_DIS  ]
[c E858 0 128 .. ]
[n E858 . SPI_DATA_SAMPLE_MIDDLE SPI_DATA_SAMPLE_END  ]
[c E862 16 0 .. ]
[n E862 . SPI_CLOCK_IDLE_HIGH SPI_CLOCK_IDLE_LOW  ]
[c E866 0 64 .. ]
[n E866 . SPI_IDLE_2_ACTIVE SPI_ACTIVE_2_IDLE  ]
"2974 D:\Mplab X\xc8\pic\include\pic16f877a.h
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2974: extern volatile __bit TRISC5 __attribute__((address(0x43D)));
[v _TRISC5 `Vb ~T0 @X0 0 e@1085 ]
"1830
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 1830: extern volatile unsigned char SSPSTAT __attribute__((address(0x094)));
[v _SSPSTAT `Vuc ~T0 @X0 0 e@148 ]
"2968
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2968: extern volatile __bit TRISC3 __attribute__((address(0x43B)));
[v _TRISC3 `Vb ~T0 @X0 0 e@1083 ]
"815
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 815: extern volatile unsigned char SSPCON __attribute__((address(0x014)));
[v _SSPCON `Vuc ~T0 @X0 0 e@20 ]
"1836
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 1836:     struct {
[s S73 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S73 . BF UA R_nW S P D_nA CKE SMP ]
"1846
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 1846:     struct {
[s S74 :2 `uc 1 :1 `uc 1 :2 `uc 1 :1 `uc 1 ]
[n S74 . . R . D ]
"1852
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 1852:     struct {
[s S75 :2 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S75 . . I2C_READ I2C_START I2C_STOP I2C_DATA ]
"1859
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 1859:     struct {
[s S76 :2 `uc 1 :1 `uc 1 :2 `uc 1 :1 `uc 1 ]
[n S76 . . nW . nA ]
"1865
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 1865:     struct {
[s S77 :2 `uc 1 :1 `uc 1 :2 `uc 1 :1 `uc 1 ]
[n S77 . . nWRITE . nADDRESS ]
"1871
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 1871:     struct {
[s S78 :2 `uc 1 :1 `uc 1 :2 `uc 1 :1 `uc 1 ]
[n S78 . . R_W . D_A ]
"1877
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 1877:     struct {
[s S79 :2 `uc 1 :1 `uc 1 :2 `uc 1 :1 `uc 1 ]
[n S79 . . READ_WRITE . DATA_ADDRESS ]
"1835
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 1835: typedef union {
[u S72 `S73 1 `S74 1 `S75 1 `S76 1 `S77 1 `S78 1 `S79 1 ]
[n S72 . . . . . . . . ]
"1884
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 1884: extern volatile SSPSTATbits_t SSPSTATbits __attribute__((address(0x094)));
[v _SSPSTATbits `VS72 ~T0 @X0 0 e@148 ]
"808
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 808: extern volatile unsigned char SSPBUF __attribute__((address(0x013)));
[v _SSPBUF `Vuc ~T0 @X0 0 e@19 ]
"54 D:\Mplab X\xc8\pic\include\pic16f877a.h
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 54: __asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
"61
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 61: __asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
"68
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 68: __asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
"75
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 75: __asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
"161
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 161: __asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
"168
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 168: __asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
"218
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 218: __asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
"280
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 280: __asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
"342
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 342: __asm("PORTD equ 08h");
[; <" PORTD equ 08h ;# ">
"404
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 404: __asm("PORTE equ 09h");
[; <" PORTE equ 09h ;# ">
"436
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 436: __asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
"456
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 456: __asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
"534
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 534: __asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
"596
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 596: __asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
"636
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 636: __asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
"643
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 643: __asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
"650
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 650: __asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
"657
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 657: __asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
"732
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 732: __asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
"739
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 739: __asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
"810
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 810: __asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
"817
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 817: __asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
"887
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 887: __asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
"894
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 894: __asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
"901
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 901: __asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
"908
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 908: __asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
"966
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 966: __asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
"1061
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 1061: __asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
"1068
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 1068: __asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
"1075
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 1075: __asm("CCPR2 equ 01Bh");
[; <" CCPR2 equ 01Bh ;# ">
"1082
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 1082: __asm("CCPR2L equ 01Bh");
[; <" CCPR2L equ 01Bh ;# ">
"1089
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 1089: __asm("CCPR2H equ 01Ch");
[; <" CCPR2H equ 01Ch ;# ">
"1096
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 1096: __asm("CCP2CON equ 01Dh");
[; <" CCP2CON equ 01Dh ;# ">
"1154
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 1154: __asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
"1161
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 1161: __asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
"1257
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 1257: __asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
"1327
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 1327: __asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
"1377
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 1377: __asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
"1439
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 1439: __asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
"1501
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 1501: __asm("TRISD equ 088h");
[; <" TRISD equ 088h ;# ">
"1563
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 1563: __asm("TRISE equ 089h");
[; <" TRISE equ 089h ;# ">
"1620
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 1620: __asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
"1682
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 1682: __asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
"1722
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 1722: __asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
"1756
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 1756: __asm("SSPCON2 equ 091h");
[; <" SSPCON2 equ 091h ;# ">
"1818
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 1818: __asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
"1825
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 1825: __asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
"1832
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 1832: __asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
"2001
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2001: __asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
"2082
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2082: __asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
"2089
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2089: __asm("CMCON equ 09Ch");
[; <" CMCON equ 09Ch ;# ">
"2159
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2159: __asm("CVRCON equ 09Dh");
[; <" CVRCON equ 09Dh ;# ">
"2224
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2224: __asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
"2231
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2231: __asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
"2290
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2290: __asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
"2297
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2297: __asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
"2304
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2304: __asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
"2311
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2311: __asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
"2318
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2318: __asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
"2363
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2363: __asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
"12 spi_lib.c
[; ;spi_lib.c: 12: void Spi_Init(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sClockIdle, Spi_Transmit_Edge sTransmitEdge)
[v _Spi_Init `(v ~T0 @X0 1 ef4`E850`E858`E862`E866 ]
"13
[; ;spi_lib.c: 13: {
{
[e :U _Spi_Init ]
"12
[; ;spi_lib.c: 12: void Spi_Init(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sClockIdle, Spi_Transmit_Edge sTransmitEdge)
[v _sType `E850 ~T0 @X0 1 r1 ]
[v _sDataSample `E858 ~T0 @X0 1 r2 ]
[v _sClockIdle `E862 ~T0 @X0 1 r3 ]
[v _sTransmitEdge `E866 ~T0 @X0 1 r4 ]
"13
[; ;spi_lib.c: 13: {
[f ]
"14
[; ;spi_lib.c: 14:     TRISC5 = 0;
[e = _TRISC5 -> -> 0 `i `b ]
"15
[; ;spi_lib.c: 15:     if(sType & 0b00000100)
[e $ ! != & -> _sType `ui -> -> 4 `i `ui -> -> 0 `i `ui 96  ]
"16
[; ;spi_lib.c: 16:     {
{
"17
[; ;spi_lib.c: 17:         SSPSTAT = sTransmitEdge;
[e = _SSPSTAT -> _sTransmitEdge `uc ]
"18
[; ;spi_lib.c: 18:         TRISC3 = 1;
[e = _TRISC3 -> -> 1 `i `b ]
"19
[; ;spi_lib.c: 19:     }
}
[e $U 97  ]
"20
[; ;spi_lib.c: 20:     else
[e :U 96 ]
"21
[; ;spi_lib.c: 21:     {
{
"22
[; ;spi_lib.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
[e = _SSPSTAT -> | -> _sDataSample `ui -> _sTransmitEdge `ui `uc ]
"23
[; ;spi_lib.c: 23:         TRISC3 = 0;
[e = _TRISC3 -> -> 0 `i `b ]
"24
[; ;spi_lib.c: 24:     }
}
[e :U 97 ]
"25
[; ;spi_lib.c: 25:     SSPCON = sType | sClockIdle;
[e = _SSPCON -> | -> _sType `ui -> _sClockIdle `ui `uc ]
"26
[; ;spi_lib.c: 26: }
[e :UE 95 ]
}
"28
[; ;spi_lib.c: 28: static void spiReceiveWait()
[v _spiReceiveWait `(v ~T0 @X0 1 sf ]
"29
[; ;spi_lib.c: 29: {
{
[e :U _spiReceiveWait ]
[f ]
"30
[; ;spi_lib.c: 30:     while ( !SSPSTATbits.BF );
[e $U 99  ]
[e :U 100 ]
[e :U 99 ]
[e $ ! != -> . . _SSPSTATbits 0 0 `i -> 0 `i 100  ]
[e :U 101 ]
"31
[; ;spi_lib.c: 31: }
[e :UE 98 ]
}
"33
[; ;spi_lib.c: 33: void Spi_Write(char dat)
[v _Spi_Write `(v ~T0 @X0 1 ef1`uc ]
"34
[; ;spi_lib.c: 34: {
{
[e :U _Spi_Write ]
"33
[; ;spi_lib.c: 33: void Spi_Write(char dat)
[v _dat `uc ~T0 @X0 1 r1 ]
"34
[; ;spi_lib.c: 34: {
[f ]
"35
[; ;spi_lib.c: 35:     SSPBUF = dat;
[e = _SSPBUF -> _dat `uc ]
"36
[; ;spi_lib.c: 36: }
[e :UE 102 ]
}
"37
[; ;spi_lib.c: 37: void Spi_Write_Text(char text[])
[v _Spi_Write_Text `(v ~T0 @X0 1 ef1`*uc ]
"38
[; ;spi_lib.c: 38: {
{
[e :U _Spi_Write_Text ]
"37
[; ;spi_lib.c: 37: void Spi_Write_Text(char text[])
[v _text `*uc ~T0 @X0 1 r1 ]
"38
[; ;spi_lib.c: 38: {
[f ]
"39
[; ;spi_lib.c: 39:  int i;
[v _i `i ~T0 @X0 1 a ]
"40
[; ;spi_lib.c: 40:  for(i=0;text[i]!='\0';i++)
{
[e = _i -> 0 `i ]
[e $U 107  ]
[e :U 104 ]
"41
[; ;spi_lib.c: 41:  Spi_Write(text[i]);
[e ( _Spi_Write (1 *U + _text * -> _i `x -> -> # *U _text `i `x ]
[e ++ _i -> 1 `i ]
[e :U 107 ]
[e $ != -> *U + _text * -> _i `x -> -> # *U _text `i `x `ui -> 0 `ui 104  ]
[e :U 105 ]
}
"42
[; ;spi_lib.c: 42: }
[e :UE 103 ]
}
"43
[; ;spi_lib.c: 43: unsigned Spi_Data_Ready()
[v _Spi_Data_Ready `(ui ~T0 @X0 1 ef ]
"44
[; ;spi_lib.c: 44: {
{
[e :U _Spi_Data_Ready ]
[f ]
"45
[; ;spi_lib.c: 45:     if(SSPSTATbits.BF)
[e $ ! != -> . . _SSPSTATbits 0 0 `i -> 0 `i 109  ]
"46
[; ;spi_lib.c: 46:         return 1;
[e ) -> -> 1 `i `ui ]
[e $UE 108  ]
[e $U 110  ]
"47
[; ;spi_lib.c: 47:     else
[e :U 109 ]
"48
[; ;spi_lib.c: 48:         return 0;
[e ) -> -> 0 `i `ui ]
[e $UE 108  ]
[e :U 110 ]
"49
[; ;spi_lib.c: 49: }
[e :UE 108 ]
}
"51
[; ;spi_lib.c: 51: char Spi_Read()
[v _Spi_Read `(uc ~T0 @X0 1 ef ]
"52
[; ;spi_lib.c: 52: {
{
[e :U _Spi_Read ]
[f ]
"53
[; ;spi_lib.c: 53:     spiReceiveWait();
[e ( _spiReceiveWait ..  ]
"54
[; ;spi_lib.c: 54:     return(SSPBUF);
[e ) -> _SSPBUF `uc ]
[e $UE 111  ]
"55
[; ;spi_lib.c: 55: }
[e :UE 111 ]
}
"56
[; ;spi_lib.c: 56: void Spi_Read_Text(char *Output, unsigned int length)
[v _Spi_Read_Text `(v ~T0 @X0 1 ef2`*uc`ui ]
"57
[; ;spi_lib.c: 57: {
{
[e :U _Spi_Read_Text ]
"56
[; ;spi_lib.c: 56: void Spi_Read_Text(char *Output, unsigned int length)
[v _Output `*uc ~T0 @X0 1 r1 ]
[v _length `ui ~T0 @X0 1 r2 ]
"57
[; ;spi_lib.c: 57: {
[f ]
"58
[; ;spi_lib.c: 58:  int i;
[v _i `i ~T0 @X0 1 a ]
"59
[; ;spi_lib.c: 59:  for(i=0;i<length;i++)
{
[e = _i -> 0 `i ]
[e $U 116  ]
[e :U 113 ]
"60
[; ;spi_lib.c: 60:  Output[i] = Spi_Read();
[e = *U + _Output * -> _i `x -> -> # *U _Output `i `x ( _Spi_Read ..  ]
[e ++ _i -> 1 `i ]
[e :U 116 ]
[e $ < -> _i `ui _length 113  ]
[e :U 114 ]
}
"61
[; ;spi_lib.c: 61: }
[e :UE 112 ]
}
