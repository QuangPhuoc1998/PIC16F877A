

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Apr 10 08:38:28 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	intentry,global,class=CODE,delta=2
    44                           	dabs	1,0x7E,2
    45  0000                     
    46                           ; Version 2.05
    47                           ; Generated 20/12/2018 GMT
    48                           ; 
    49                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC16F877A Definitions
    78                           ; 
    79                           ; SFR Addresses
    80  0000                     	;# 
    81  0001                     	;# 
    82  0002                     	;# 
    83  0003                     	;# 
    84  0004                     	;# 
    85  0005                     	;# 
    86  0006                     	;# 
    87  0007                     	;# 
    88  0008                     	;# 
    89  0009                     	;# 
    90  000A                     	;# 
    91  000B                     	;# 
    92  000C                     	;# 
    93  000D                     	;# 
    94  000E                     	;# 
    95  000E                     	;# 
    96  000F                     	;# 
    97  0010                     	;# 
    98  0011                     	;# 
    99  0012                     	;# 
   100  0013                     	;# 
   101  0014                     	;# 
   102  0015                     	;# 
   103  0015                     	;# 
   104  0016                     	;# 
   105  0017                     	;# 
   106  0018                     	;# 
   107  0019                     	;# 
   108  001A                     	;# 
   109  001B                     	;# 
   110  001B                     	;# 
   111  001C                     	;# 
   112  001D                     	;# 
   113  001E                     	;# 
   114  001F                     	;# 
   115  0081                     	;# 
   116  0085                     	;# 
   117  0086                     	;# 
   118  0087                     	;# 
   119  0088                     	;# 
   120  0089                     	;# 
   121  008C                     	;# 
   122  008D                     	;# 
   123  008E                     	;# 
   124  0091                     	;# 
   125  0092                     	;# 
   126  0093                     	;# 
   127  0094                     	;# 
   128  0098                     	;# 
   129  0099                     	;# 
   130  009C                     	;# 
   131  009D                     	;# 
   132  009E                     	;# 
   133  009F                     	;# 
   134  010C                     	;# 
   135  010D                     	;# 
   136  010E                     	;# 
   137  010F                     	;# 
   138  018C                     	;# 
   139  018D                     	;# 
   140  0000                     	;# 
   141  0001                     	;# 
   142  0002                     	;# 
   143  0003                     	;# 
   144  0004                     	;# 
   145  0005                     	;# 
   146  0006                     	;# 
   147  0007                     	;# 
   148  0008                     	;# 
   149  0009                     	;# 
   150  000A                     	;# 
   151  000B                     	;# 
   152  000C                     	;# 
   153  000D                     	;# 
   154  000E                     	;# 
   155  000E                     	;# 
   156  000F                     	;# 
   157  0010                     	;# 
   158  0011                     	;# 
   159  0012                     	;# 
   160  0013                     	;# 
   161  0014                     	;# 
   162  0015                     	;# 
   163  0015                     	;# 
   164  0016                     	;# 
   165  0017                     	;# 
   166  0018                     	;# 
   167  0019                     	;# 
   168  001A                     	;# 
   169  001B                     	;# 
   170  001B                     	;# 
   171  001C                     	;# 
   172  001D                     	;# 
   173  001E                     	;# 
   174  001F                     	;# 
   175  0081                     	;# 
   176  0085                     	;# 
   177  0086                     	;# 
   178  0087                     	;# 
   179  0088                     	;# 
   180  0089                     	;# 
   181  008C                     	;# 
   182  008D                     	;# 
   183  008E                     	;# 
   184  0091                     	;# 
   185  0092                     	;# 
   186  0093                     	;# 
   187  0094                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009C                     	;# 
   191  009D                     	;# 
   192  009E                     	;# 
   193  009F                     	;# 
   194  010C                     	;# 
   195  010D                     	;# 
   196  010E                     	;# 
   197  010F                     	;# 
   198  018C                     	;# 
   199  018D                     	;# 
   200  0000                     	;# 
   201  0001                     	;# 
   202  0002                     	;# 
   203  0003                     	;# 
   204  0004                     	;# 
   205  0005                     	;# 
   206  0006                     	;# 
   207  0007                     	;# 
   208  0008                     	;# 
   209  0009                     	;# 
   210  000A                     	;# 
   211  000B                     	;# 
   212  000C                     	;# 
   213  000D                     	;# 
   214  000E                     	;# 
   215  000E                     	;# 
   216  000F                     	;# 
   217  0010                     	;# 
   218  0011                     	;# 
   219  0012                     	;# 
   220  0013                     	;# 
   221  0014                     	;# 
   222  0015                     	;# 
   223  0015                     	;# 
   224  0016                     	;# 
   225  0017                     	;# 
   226  0018                     	;# 
   227  0019                     	;# 
   228  001A                     	;# 
   229  001B                     	;# 
   230  001B                     	;# 
   231  001C                     	;# 
   232  001D                     	;# 
   233  001E                     	;# 
   234  001F                     	;# 
   235  0081                     	;# 
   236  0085                     	;# 
   237  0086                     	;# 
   238  0087                     	;# 
   239  0088                     	;# 
   240  0089                     	;# 
   241  008C                     	;# 
   242  008D                     	;# 
   243  008E                     	;# 
   244  0091                     	;# 
   245  0092                     	;# 
   246  0093                     	;# 
   247  0094                     	;# 
   248  0098                     	;# 
   249  0099                     	;# 
   250  009C                     	;# 
   251  009D                     	;# 
   252  009E                     	;# 
   253  009F                     	;# 
   254  010C                     	;# 
   255  010D                     	;# 
   256  010E                     	;# 
   257  010F                     	;# 
   258  018C                     	;# 
   259  018D                     	;# 
   260  0000                     	;# 
   261  0001                     	;# 
   262  0002                     	;# 
   263  0003                     	;# 
   264  0004                     	;# 
   265  0005                     	;# 
   266  0006                     	;# 
   267  0007                     	;# 
   268  0008                     	;# 
   269  0009                     	;# 
   270  000A                     	;# 
   271  000B                     	;# 
   272  000C                     	;# 
   273  000D                     	;# 
   274  000E                     	;# 
   275  000E                     	;# 
   276  000F                     	;# 
   277  0010                     	;# 
   278  0011                     	;# 
   279  0012                     	;# 
   280  0013                     	;# 
   281  0014                     	;# 
   282  0015                     	;# 
   283  0015                     	;# 
   284  0016                     	;# 
   285  0017                     	;# 
   286  0018                     	;# 
   287  0019                     	;# 
   288  001A                     	;# 
   289  001B                     	;# 
   290  001B                     	;# 
   291  001C                     	;# 
   292  001D                     	;# 
   293  001E                     	;# 
   294  001F                     	;# 
   295  0081                     	;# 
   296  0085                     	;# 
   297  0086                     	;# 
   298  0087                     	;# 
   299  0088                     	;# 
   300  0089                     	;# 
   301  008C                     	;# 
   302  008D                     	;# 
   303  008E                     	;# 
   304  0091                     	;# 
   305  0092                     	;# 
   306  0093                     	;# 
   307  0094                     	;# 
   308  0098                     	;# 
   309  0099                     	;# 
   310  009C                     	;# 
   311  009D                     	;# 
   312  009E                     	;# 
   313  009F                     	;# 
   314  010C                     	;# 
   315  010D                     	;# 
   316  010E                     	;# 
   317  010F                     	;# 
   318  018C                     	;# 
   319  018D                     	;# 
   320                           
   321                           	psect	idataBANK1
   322  0800                     __pidataBANK1:	
   323                           
   324                           ;initializer for _time
   325  0800  349D               	retlw	157
   326  0801  34D1               	retlw	209
   327  000E                     _TMR1	set	14
   328  0019                     _TXREG	set	25
   329  001A                     _RCREG	set	26
   330  000E                     _TMR1L	set	14
   331  000F                     _TMR1H	set	15
   332  001E                     _ADRESH	set	30
   333  001F                     _ADCON0	set	31
   334  0065                     _RCIF	set	101
   335  00C4                     _CREN	set	196
   336  00C7                     _SPEN	set	199
   337  0041                     _RD1	set	65
   338  0040                     _RD0	set	64
   339  0045                     _RD5	set	69
   340  0044                     _RD4	set	68
   341  0043                     _RD3	set	67
   342  0042                     _RD2	set	66
   343  0060                     _TMR1IF	set	96
   344  0038                     _RC0	set	56
   345  0059                     _INTF	set	89
   346  005C                     _INTE	set	92
   347  005E                     _PEIE	set	94
   348  005F                     _GIE	set	95
   349  0080                     _TMR1ON	set	128
   350  0081                     _TMR1CS	set	129
   351  0082                     _T1SYNC	set	130
   352  0083                     _T1OSCEN	set	131
   353  0084                     _T1CKPS0	set	132
   354  0085                     _T1CKPS1	set	133
   355  00FA                     _GO_nDONE	set	250
   356  0066                     _ADIF	set	102
   357  00F8                     _ADON	set	248
   358  00FF                     _ADCS1	set	255
   359  00FE                     _ADCS0	set	254
   360  0037                     _RB7	set	55
   361  0099                     _SPBRG	set	153
   362  009E                     _ADRESL	set	158
   363  0088                     _TRISD	set	136
   364  04C1                     _TRMT	set	1217
   365  04C5                     _TXEN	set	1221
   366  043E                     _TRISC6	set	1086
   367  043F                     _TRISC7	set	1087
   368  04C4                     _SYNC	set	1220
   369  04C2                     _BRGH	set	1218
   370  040E                     _INTEDG	set	1038
   371  0460                     _TMR1IE	set	1120
   372  042B                     _TRISA3	set	1067
   373  042A                     _TRISA2	set	1066
   374  0429                     _TRISA1	set	1065
   375  0428                     _TRISA0	set	1064
   376  0466                     _ADIE	set	1126
   377  04FF                     _ADFM	set	1279
   378  04FE                     _ADCS2	set	1278
   379  04FB                     _PCFG3	set	1275
   380  04FA                     _PCFG2	set	1274
   381  04F9                     _PCFG1	set	1273
   382  04F8                     _PCFG0	set	1272
   383  0437                     _TRISB7	set	1079
   384  0430                     _TRISB0	set	1072
   385  0438                     _TRISC0	set	1080
   386                           
   387                           	psect	strings
   388  1000                     __pstrings:	
   389  1000                     stringtab:	
   390  1000                     __stringtab:	
   391  1000                     stringcode:	
   392                           ;	String table - string pointers are 1 byte each
   393                           
   394  1000                     stringdir:	
   395  1000  3010               	movlw	high stringdir
   396  1001  008A               	movwf	10
   397  1002  0804               	movf	4,w
   398  1003  0A84               	incf	4,f
   399  1004  0782               	addwf	2,f
   400  1005                     __stringbase:	
   401  1005  3400               	retlw	0
   402  1006                     __end_of__stringtab:	
   403  1006                     STR_1:	
   404  1006  3454               	retlw	84	;'T'
   405  1007  3465               	retlw	101	;'e'
   406  1008  346D               	retlw	109	;'m'
   407  1009  3470               	retlw	112	;'p'
   408  100A  3420               	retlw	32	;' '
   409  100B  346C               	retlw	108	;'l'
   410  100C  346F               	retlw	111	;'o'
   411  100D  3461               	retlw	97	;'a'
   412  100E  3464               	retlw	100	;'d'
   413  100F  343A               	retlw	58	;':'
   414  1010  3420               	retlw	32	;' '
   415  1011  3400               	retlw	0
   416  1012                     STR_2:	
   417  1012  3454               	retlw	84	;'T'
   418  1013  3465               	retlw	101	;'e'
   419  1014  346D               	retlw	109	;'m'
   420  1015  3470               	retlw	112	;'p'
   421  1016  343A               	retlw	58	;':'
   422  1017  3420               	retlw	32	;' '
   423  1018  3400               	retlw	0
   424                           
   425                           ; #config settings
   426  0000                     
   427                           	psect	cinit
   428  000F                     start_initialization:	
   429  000F                     __initialization:	
   430                           
   431                           ; Initialize objects allocated to BANK1
   432  000F  1683               	bsf	3,5	;RP0=1, select bank1
   433  0010  1303               	bcf	3,6	;RP1=0, select bank1
   434  0011  120A  158A  2000  120A  118A  	fcall	__pidataBANK1	;fetch initializer
   435  0016  00EC               	movwf	__pdataBANK1& (0+127)
   436  0017  120A  158A  2001  120A  118A  	fcall	__pidataBANK1+1	;fetch initializer
   437  001C  00ED               	movwf	(__pdataBANK1+1)& (0+127)
   438                           
   439                           ; Clear objects allocated to BANK3
   440  001D  1783               	bsf	3,7	;select IRP bank2
   441  001E  3090               	movlw	low __pbssBANK3
   442  001F  0084               	movwf	4
   443  0020  30B4               	movlw	low (__pbssBANK3+36)
   444  0021  160A  118A  2319  120A  118A  	fcall	clear_ram0
   445                           
   446                           ; Clear objects allocated to BANK1
   447  0026  1383               	bcf	3,7	;select IRP bank0
   448  0027  30D4               	movlw	low __pbssBANK1
   449  0028  0084               	movwf	4
   450  0029  30EC               	movlw	low (__pbssBANK1+24)
   451  002A  160A  118A  2319   	fcall	clear_ram0
   452  002D                     end_of_initialization:	
   453                           ;End of C runtime variable initialization code
   454                           
   455  002D                     __end_of__initialization:	
   456  002D  0183               	clrf	3
   457  002E  120A  118A  2D32   	ljmp	_main	;jump to C main() function
   458                           
   459                           	psect	bssBANK1
   460  00D4                     __pbssBANK1:	
   461  00D4                     _out:	
   462  00D4                     	ds	4
   463  00D8                     _Kd:	
   464  00D8                     	ds	4
   465  00DC                     _Kp:	
   466  00DC                     	ds	4
   467  00E0                     _T:	
   468  00E0                     	ds	4
   469  00E4                     _E1:	
   470  00E4                     	ds	4
   471  00E8                     _E:	
   472  00E8                     	ds	4
   473                           
   474                           	psect	dataBANK1
   475  00EC                     __pdataBANK1:	
   476  00EC                     _time:	
   477  00EC                     	ds	2
   478                           
   479                           	psect	bssBANK3
   480  0190                     __pbssBANK3:	
   481  0190                     _chot:	
   482  0190                     	ds	4
   483  0194                     _pre_out:	
   484  0194                     	ds	4
   485  0198                     _Ki:	
   486  0198                     	ds	4
   487  019C                     _gamma:	
   488  019C                     	ds	4
   489  01A0                     _beta:	
   490  01A0                     	ds	4
   491  01A4                     _a3:	
   492  01A4                     	ds	4
   493  01A8                     _a2:	
   494  01A8                     	ds	4
   495  01AC                     _a1:	
   496  01AC                     	ds	4
   497  01B0                     _E2:	
   498  01B0                     	ds	4
   499                           
   500                           	psect	clrtext
   501  1319                     clear_ram0:	
   502                           ;	Called with FSR containing the base address, and
   503                           ;	W with the last address+1
   504                           
   505  1319  0064               	clrwdt	;clear the watchdog before getting into this loop
   506  131A                     clrloop0:	
   507  131A  0180               	clrf	0	;clear RAM location pointed to by FSR
   508  131B  0A84               	incf	4,f	;increment pointer
   509  131C  0604               	xorwf	4,w	;XOR with final address
   510  131D  1903               	btfsc	3,2	;have we reached the end yet?
   511  131E  3400               	retlw	0	;all done for this memory range, return
   512  131F  0604               	xorwf	4,w	;XOR again to restore value
   513  1320  2B1A               	goto	clrloop0	;do the next byte
   514                           
   515                           	psect	cstackBANK1
   516  00A0                     __pcstackBANK1:	
   517  00A0                     ?___flsub:	
   518  00A0                     ___flsub@a:	
   519                           ; 4 bytes @ 0x0
   520                           
   521                           
   522                           ; 4 bytes @ 0x0
   523  00A0                     	ds	4
   524  00A4                     ___flsub@b:	
   525                           
   526                           ; 4 bytes @ 0x4
   527  00A4                     	ds	4
   528  00A8                     ?___fltol:	
   529  00A8                     ___fltol@f1:	
   530                           ; 4 bytes @ 0x8
   531                           
   532                           
   533                           ; 4 bytes @ 0x8
   534  00A8                     	ds	4
   535  00AC                     ??___fltol:	
   536                           
   537                           ; 1 bytes @ 0xC
   538  00AC                     	ds	5
   539  00B1                     ?_PID_Init:	
   540  00B1                     PID_Init@nhietdo:	
   541                           ; 1 bytes @ 0x11
   542                           
   543                           
   544                           ; 2 bytes @ 0x11
   545  00B1                     	ds	2
   546  00B3                     PID_Init@nhietdodat:	
   547                           
   548                           ; 2 bytes @ 0x13
   549  00B3                     	ds	2
   550  00B5                     _PID_Init$862:	
   551                           
   552                           ; 4 bytes @ 0x15
   553  00B5                     	ds	4
   554  00B9                     _PID_Init$863:	
   555                           
   556                           ; 4 bytes @ 0x19
   557  00B9                     	ds	4
   558  00BD                     _PID_Init$864:	
   559                           
   560                           ; 4 bytes @ 0x1D
   561  00BD                     	ds	4
   562  00C1                     _PID_Init$861:	
   563                           
   564                           ; 4 bytes @ 0x21
   565  00C1                     	ds	4
   566  00C5                     ??_main:	
   567                           
   568                           ; 1 bytes @ 0x25
   569  00C5                     	ds	6
   570  00CB                     main@a:	
   571                           
   572                           ; 2 bytes @ 0x2B
   573  00CB                     	ds	2
   574  00CD                     main@start:	
   575                           
   576                           ; 1 bytes @ 0x2D
   577  00CD                     	ds	1
   578  00CE                     main@buffer:	
   579                           
   580                           ; 2 bytes @ 0x2E
   581  00CE                     	ds	2
   582  00D0                     main@t:	
   583                           
   584                           ; 2 bytes @ 0x30
   585  00D0                     	ds	2
   586  00D2                     main@t_load:	
   587                           
   588                           ; 2 bytes @ 0x32
   589  00D2                     	ds	2
   590                           
   591                           	psect	cstackCOMMON
   592  0070                     __pcstackCOMMON:	
   593  0070                     ?_ADC_Init:	
   594  0070                     ?_Lcd_Init:	
   595                           ; 1 bytes @ 0x0
   596                           
   597  0070                     ?_Timer1_Init:	
   598                           ; 1 bytes @ 0x0
   599                           
   600  0070                     ?_Interrupt_Init:	
   601                           ; 1 bytes @ 0x0
   602                           
   603  0070                     ?_Lcd_Write_String:	
   604                           ; 1 bytes @ 0x0
   605                           
   606  0070                     ?_UART_Read:	
   607                           ; 1 bytes @ 0x0
   608                           
   609  0070                     ?_Lcd_Write_Char:	
   610                           ; 1 bytes @ 0x0
   611                           
   612  0070                     ?_UART_Write:	
   613                           ; 1 bytes @ 0x0
   614                           
   615  0070                     ?_main:	
   616                           ; 1 bytes @ 0x0
   617                           
   618  0070                     ?_My_interrupt:	
   619                           ; 1 bytes @ 0x0
   620                           
   621  0070                     ??_My_interrupt:	
   622                           ; 1 bytes @ 0x0
   623                           
   624  0070                     ?_Lcd_Port:	
   625                           ; 1 bytes @ 0x0
   626                           
   627  0070                     ?_Lcd_Cmd:	
   628                           ; 1 bytes @ 0x0
   629                           
   630                           
   631                           ; 1 bytes @ 0x0
   632  0070                     	ds	2
   633  0072                     ?___flge:	
   634  0072                     ??_ADC_Init:	
   635                           ; 1 bit 
   636                           
   637  0072                     ??_Timer1_Init:	
   638                           ; 1 bytes @ 0x2
   639                           
   640  0072                     ??_Interrupt_Init:	
   641                           ; 1 bytes @ 0x2
   642                           
   643  0072                     ??_UART_Read:	
   644                           ; 1 bytes @ 0x2
   645                           
   646  0072                     ?_UART_Read_Text:	
   647                           ; 1 bytes @ 0x2
   648                           
   649  0072                     ??_UART_Write:	
   650                           ; 1 bytes @ 0x2
   651                           
   652  0072                     ??_Lcd_Port:	
   653                           ; 1 bytes @ 0x2
   654                           
   655  0072                     ?_Read_ADC:	
   656                           ; 1 bytes @ 0x2
   657                           
   658  0072                     ?__Umul8_16:	
   659                           ; 2 bytes @ 0x2
   660                           
   661  0072                     ?___wmul:	
   662                           ; 2 bytes @ 0x2
   663                           
   664  0072                     ?___lwmod:	
   665                           ; 2 bytes @ 0x2
   666                           
   667  0072                     ?___aldiv:	
   668                           ; 2 bytes @ 0x2
   669                           
   670  0072                     ?___xxtofl:	
   671                           ; 4 bytes @ 0x2
   672                           
   673  0072                     Lcd_Port@a:	
   674                           ; 4 bytes @ 0x2
   675                           
   676  0072                     UART_Write@data:	
   677                           ; 1 bytes @ 0x2
   678                           
   679  0072                     __Umul8_16@multiplicand:	
   680                           ; 1 bytes @ 0x2
   681                           
   682  0072                     UART_Read_Text@length:	
   683                           ; 1 bytes @ 0x2
   684                           
   685  0072                     ___wmul@multiplier:	
   686                           ; 2 bytes @ 0x2
   687                           
   688  0072                     ___lwmod@divisor:	
   689                           ; 2 bytes @ 0x2
   690                           
   691  0072                     ___aldiv@divisor:	
   692                           ; 2 bytes @ 0x2
   693                           
   694  0072                     ___flge@ff1:	
   695                           ; 4 bytes @ 0x2
   696                           
   697  0072                     ___xxtofl@val:	
   698                           ; 4 bytes @ 0x2
   699                           
   700                           
   701                           ; 4 bytes @ 0x2
   702  0072                     	ds	1
   703  0073                     ??_Lcd_Write_Char:	
   704  0073                     ??_Lcd_Cmd:	
   705                           ; 1 bytes @ 0x3
   706                           
   707                           
   708                           ; 1 bytes @ 0x3
   709  0073                     	ds	1
   710  0074                     ??_UART_Read_Text:	
   711  0074                     ??_Read_ADC:	
   712                           ; 1 bytes @ 0x4
   713                           
   714  0074                     ??__Umul8_16:	
   715                           ; 1 bytes @ 0x4
   716                           
   717  0074                     ADC_Init@channel:	
   718                           ; 1 bytes @ 0x4
   719                           
   720  0074                     Lcd_Write_Char@temp:	
   721                           ; 1 bytes @ 0x4
   722                           
   723  0074                     ___wmul@multiplicand:	
   724                           ; 1 bytes @ 0x4
   725                           
   726  0074                     ___lwmod@dividend:	
   727                           ; 2 bytes @ 0x4
   728                           
   729                           
   730                           ; 2 bytes @ 0x4
   731  0074                     	ds	1
   732  0075                     Lcd_Cmd@a:	
   733  0075                     Lcd_Write_Char@y:	
   734                           ; 1 bytes @ 0x5
   735                           
   736                           
   737                           ; 1 bytes @ 0x5
   738  0075                     	ds	1
   739  0076                     ??_Lcd_Init:	
   740  0076                     ?_Lcd_Set_Cursor:	
   741                           ; 1 bytes @ 0x6
   742                           
   743  0076                     ??___wmul:	
   744                           ; 1 bytes @ 0x6
   745                           
   746  0076                     ??___lwmod:	
   747                           ; 1 bytes @ 0x6
   748                           
   749  0076                     ??___xxtofl:	
   750                           ; 1 bytes @ 0x6
   751                           
   752  0076                     Lcd_Set_Cursor@b:	
   753                           ; 1 bytes @ 0x6
   754                           
   755  0076                     Lcd_Write_Char@a:	
   756                           ; 1 bytes @ 0x6
   757                           
   758  0076                     UART_Read_Text@Output:	
   759                           ; 1 bytes @ 0x6
   760                           
   761  0076                     ___wmul@product:	
   762                           ; 1 bytes @ 0x6
   763                           
   764  0076                     __Umul8_16@product:	
   765                           ; 2 bytes @ 0x6
   766                           
   767  0076                     ___aldiv@dividend:	
   768                           ; 2 bytes @ 0x6
   769                           
   770  0076                     ___flge@ff2:	
   771                           ; 4 bytes @ 0x6
   772                           
   773                           
   774                           ; 4 bytes @ 0x6
   775  0076                     	ds	1
   776  0077                     ??_Lcd_Write_String:	
   777  0077                     ??_Lcd_Set_Cursor:	
   778                           ; 1 bytes @ 0x7
   779                           
   780  0077                     ___lwmod@counter:	
   781                           ; 1 bytes @ 0x7
   782                           
   783  0077                     Lcd_Write_String@i:	
   784                           ; 1 bytes @ 0x7
   785                           
   786  0077                     UART_Read_Text@i_230:	
   787                           ; 2 bytes @ 0x7
   788                           
   789                           
   790                           ; 2 bytes @ 0x7
   791  0077                     	ds	1
   792  0078                     ?___lwdiv:	
   793  0078                     Read_ADC@N:	
   794                           ; 2 bytes @ 0x8
   795                           
   796  0078                     ___lwdiv@divisor:	
   797                           ; 2 bytes @ 0x8
   798                           
   799  0078                     __Umul8_16@word_mpld:	
   800                           ; 2 bytes @ 0x8
   801                           
   802                           
   803                           ; 2 bytes @ 0x8
   804  0078                     	ds	1
   805  0079                     Lcd_Write_String@a:	
   806                           
   807                           ; 1 bytes @ 0x9
   808  0079                     	ds	1
   809  007A                     ??___aldiv:	
   810  007A                     Read_ADC@channel:	
   811                           ; 1 bytes @ 0xA
   812                           
   813  007A                     __Umul8_16@multiplier:	
   814                           ; 1 bytes @ 0xA
   815                           
   816  007A                     ___lwdiv@dividend:	
   817                           ; 1 bytes @ 0xA
   818                           
   819                           
   820                           ; 2 bytes @ 0xA
   821  007A                     	ds	1
   822  007B                     ??_PID_Init:	
   823  007B                     ??___flsub:	
   824                           ; 1 bytes @ 0xB
   825                           
   826                           
   827                           ; 1 bytes @ 0xB
   828  007B                     	ds	1
   829                           
   830                           	psect	cstackBANK0
   831  0020                     __pcstackBANK0:	
   832  0020                     ??___flge:	
   833  0020                     ??___lwdiv:	
   834                           ; 1 bytes @ 0x0
   835                           
   836  0020                     Lcd_Set_Cursor@a:	
   837                           ; 1 bytes @ 0x0
   838                           
   839  0020                     ___aldiv@counter:	
   840                           ; 1 bytes @ 0x0
   841                           
   842  0020                     ___xxtofl@sign:	
   843                           ; 1 bytes @ 0x0
   844                           
   845                           
   846                           ; 1 bytes @ 0x0
   847  0020                     	ds	1
   848  0021                     Lcd_Set_Cursor@z:	
   849  0021                     ___aldiv@sign:	
   850                           ; 1 bytes @ 0x1
   851                           
   852  0021                     ___xxtofl@exp:	
   853                           ; 1 bytes @ 0x1
   854                           
   855  0021                     ___lwdiv@quotient:	
   856                           ; 1 bytes @ 0x1
   857                           
   858                           
   859                           ; 2 bytes @ 0x1
   860  0021                     	ds	1
   861  0022                     Lcd_Set_Cursor@y:	
   862  0022                     ___aldiv@quotient:	
   863                           ; 1 bytes @ 0x2
   864                           
   865  0022                     ___xxtofl@arg:	
   866                           ; 4 bytes @ 0x2
   867                           
   868                           
   869                           ; 4 bytes @ 0x2
   870  0022                     	ds	1
   871  0023                     Lcd_Set_Cursor@temp:	
   872  0023                     ___lwdiv@counter:	
   873                           ; 1 bytes @ 0x3
   874                           
   875                           
   876                           ; 1 bytes @ 0x3
   877  0023                     	ds	3
   878  0026                     ?_UART_Init:	
   879  0026                     ?___flmul:	
   880                           ; 1 bytes @ 0x6
   881                           
   882  0026                     UART_Init@baudrate:	
   883                           ; 4 bytes @ 0x6
   884                           
   885  0026                     ___flmul@b:	
   886                           ; 4 bytes @ 0x6
   887                           
   888                           
   889                           ; 4 bytes @ 0x6
   890  0026                     	ds	4
   891  002A                     ??_UART_Init:	
   892  002A                     ___flmul@a:	
   893                           ; 1 bytes @ 0xA
   894                           
   895                           
   896                           ; 4 bytes @ 0xA
   897  002A                     	ds	4
   898  002E                     ??___flmul:	
   899                           
   900                           ; 1 bytes @ 0xE
   901  002E                     	ds	5
   902  0033                     ___flmul@sign:	
   903                           
   904                           ; 1 bytes @ 0x13
   905  0033                     	ds	1
   906  0034                     ___flmul@grs:	
   907                           
   908                           ; 4 bytes @ 0x14
   909  0034                     	ds	2
   910  0036                     UART_Init@x:	
   911                           
   912                           ; 2 bytes @ 0x16
   913  0036                     	ds	2
   914  0038                     ___flmul@aexp:	
   915                           
   916                           ; 1 bytes @ 0x18
   917  0038                     	ds	1
   918  0039                     ___flmul@bexp:	
   919                           
   920                           ; 1 bytes @ 0x19
   921  0039                     	ds	1
   922  003A                     ___flmul@prod:	
   923                           
   924                           ; 4 bytes @ 0x1A
   925  003A                     	ds	4
   926  003E                     ___flmul@temp:	
   927                           
   928                           ; 2 bytes @ 0x1E
   929  003E                     	ds	2
   930  0040                     ?___fldiv:	
   931  0040                     ___fldiv@a:	
   932                           ; 4 bytes @ 0x20
   933                           
   934                           
   935                           ; 4 bytes @ 0x20
   936  0040                     	ds	4
   937  0044                     ___fldiv@b:	
   938                           
   939                           ; 4 bytes @ 0x24
   940  0044                     	ds	4
   941  0048                     ??___fldiv:	
   942                           
   943                           ; 1 bytes @ 0x28
   944  0048                     	ds	5
   945  004D                     ___fldiv@rem:	
   946                           
   947                           ; 4 bytes @ 0x2D
   948  004D                     	ds	4
   949  0051                     ___fldiv@sign:	
   950                           
   951                           ; 1 bytes @ 0x31
   952  0051                     	ds	1
   953  0052                     ___fldiv@new_exp:	
   954                           
   955                           ; 2 bytes @ 0x32
   956  0052                     	ds	2
   957  0054                     ___fldiv@grs:	
   958                           
   959                           ; 4 bytes @ 0x34
   960  0054                     	ds	4
   961  0058                     ___fldiv@bexp:	
   962                           
   963                           ; 1 bytes @ 0x38
   964  0058                     	ds	1
   965  0059                     ___fldiv@aexp:	
   966                           
   967                           ; 1 bytes @ 0x39
   968  0059                     	ds	1
   969  005A                     ?___fladd:	
   970  005A                     ___fladd@b:	
   971                           ; 4 bytes @ 0x3A
   972                           
   973                           
   974                           ; 4 bytes @ 0x3A
   975  005A                     	ds	4
   976  005E                     ___fladd@a:	
   977                           
   978                           ; 4 bytes @ 0x3E
   979  005E                     	ds	4
   980  0062                     ??___fladd:	
   981                           
   982                           ; 1 bytes @ 0x42
   983  0062                     	ds	8
   984  006A                     ___fladd@signs:	
   985                           
   986                           ; 1 bytes @ 0x4A
   987  006A                     	ds	1
   988  006B                     ___fladd@aexp:	
   989                           
   990                           ; 1 bytes @ 0x4B
   991  006B                     	ds	1
   992  006C                     ___fladd@bexp:	
   993                           
   994                           ; 1 bytes @ 0x4C
   995  006C                     	ds	1
   996  006D                     ___fladd@grs:	
   997                           
   998                           ; 1 bytes @ 0x4D
   999  006D                     	ds	1
  1000  006E                     ___fltol@sign1:	
  1001                           
  1002                           ; 1 bytes @ 0x4E
  1003  006E                     	ds	1
  1004  006F                     ___fltol@exp1:	
  1005                           
  1006                           ; 1 bytes @ 0x4F
  1007  006F                     	ds	1
  1008                           
  1009                           	psect	maintext
  1010  0532                     __pmaintext:	
  1011 ;;
  1012 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1013 ;;
  1014 ;; *************** function _main *****************
  1015 ;; Defined at:
  1016 ;;		line 20 in file "ADC.c"
  1017 ;; Parameters:    Size  Location     Type
  1018 ;;		None
  1019 ;; Auto vars:     Size  Location     Type
  1020 ;;  t_load          2   50[BANK1 ] unsigned int 
  1021 ;;  t               2   48[BANK1 ] unsigned int 
  1022 ;;  buffer          2   46[BANK1 ] unsigned char [2]
  1023 ;;  a               2   43[BANK1 ] unsigned int 
  1024 ;;  _t_load         2    0        unsigned int 
  1025 ;;  start           1   45[BANK1 ] unsigned char 
  1026 ;; Return value:  Size  Location     Type
  1027 ;;                  1    wreg      void 
  1028 ;; Registers used:
  1029 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1030 ;; Tracked objects:
  1031 ;;		On entry : B00/0
  1032 ;;		On exit  : 0/0
  1033 ;;		Unchanged: 0/0
  1034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1035 ;;      Params:         0       0       0       0       0
  1036 ;;      Locals:         0       0      11       0       0
  1037 ;;      Temps:          0       0       4       0       0
  1038 ;;      Totals:         0       0      15       0       0
  1039 ;;Total ram usage:       15 bytes
  1040 ;; Hardware stack levels required when called:    4
  1041 ;; This function calls:
  1042 ;;		_ADC_Init
  1043 ;;		_Interrupt_Init
  1044 ;;		_Lcd_Init
  1045 ;;		_Lcd_Set_Cursor
  1046 ;;		_Lcd_Write_Char
  1047 ;;		_Lcd_Write_String
  1048 ;;		_PID_Init
  1049 ;;		_Read_ADC
  1050 ;;		_Timer1_Init
  1051 ;;		_UART_Init
  1052 ;;		_UART_Read
  1053 ;;		_UART_Read_Text
  1054 ;;		_UART_Write
  1055 ;;		___flmul
  1056 ;;		___fltol
  1057 ;;		___lwdiv
  1058 ;;		___lwmod
  1059 ;;		___wmul
  1060 ;;		___xxtofl
  1061 ;; This function is called by:
  1062 ;;		Startup code after reset
  1063 ;; This function uses a non-reentrant model
  1064 ;;
  1065                           
  1066                           
  1067                           ;psect for function _main
  1068  0532                     _main:	
  1069                           
  1070                           ;ADC.c: 22:     _delay((unsigned long)((250)*(20000000/4000.0)));
  1071                           
  1072                           ;incstack = 0
  1073                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1074  0532  3007               	movlw	7
  1075  0533  1683               	bsf	3,5	;RP0=1, select bank1
  1076  0534  1303               	bcf	3,6	;RP1=0, select bank1
  1077  0535  00C7               	movwf	(??_main^(0+128)+2)
  1078  0536  3058               	movlw	88
  1079  0537  00C6               	movwf	(??_main^(0+128)+1)
  1080  0538  3059               	movlw	89
  1081  0539  00C5               	movwf	??_main^(0+128)
  1082  053A                     u4157:	
  1083  053A  0BC5               	decfsz	??_main^(0+128),f
  1084  053B  2D3A               	goto	u4157
  1085  053C  0BC6               	decfsz	(??_main^(0+128)+1),f
  1086  053D  2D3A               	goto	u4157
  1087  053E  0BC7               	decfsz	(??_main^(0+128)+2),f
  1088  053F  2D3A               	goto	u4157
  1089                           
  1090                           ;ADC.c: 25:     T = 0.5;
  1091  0540  303F               	movlw	63
  1092  0541  1683               	bsf	3,5	;RP0=1, select bank1
  1093  0542  1303               	bcf	3,6	;RP1=0, select bank1
  1094  0543  00E3               	movwf	(_T+3)^(0+128)
  1095  0544  3000               	movlw	0
  1096  0545  00E2               	movwf	(_T+2)^(0+128)
  1097  0546  3000               	movlw	0
  1098  0547  00E1               	movwf	(_T+1)^(0+128)
  1099  0548  3000               	movlw	0
  1100  0549  00E0               	movwf	_T^(0+128)
  1101                           
  1102                           ;ADC.c: 26:     Kp = 30;
  1103  054A  3041               	movlw	65
  1104  054B  00DF               	movwf	(_Kp+3)^(0+128)
  1105  054C  30F0               	movlw	240
  1106  054D  00DE               	movwf	(_Kp+2)^(0+128)
  1107  054E  3000               	movlw	0
  1108  054F  00DD               	movwf	(_Kp+1)^(0+128)
  1109  0550  3000               	movlw	0
  1110  0551  00DC               	movwf	_Kp^(0+128)
  1111                           
  1112                           ;ADC.c: 27:     Ki = 0.01;
  1113  0552  303C               	movlw	60
  1114  0553  1683               	bsf	3,5	;RP0=1, select bank3
  1115  0554  1703               	bsf	3,6	;RP1=1, select bank3
  1116  0555  009B               	movwf	(_Ki+3)^(0+384)
  1117  0556  3023               	movlw	35
  1118  0557  009A               	movwf	(_Ki+2)^(0+384)
  1119  0558  30D7               	movlw	215
  1120  0559  0099               	movwf	(_Ki+1)^(0+384)
  1121  055A  300A               	movlw	10
  1122  055B  0098               	movwf	_Ki^(0+384)
  1123                           
  1124                           ;ADC.c: 28:     Kd = 0;
  1125  055C  3000               	movlw	0
  1126  055D  1683               	bsf	3,5	;RP0=1, select bank1
  1127  055E  1303               	bcf	3,6	;RP1=0, select bank1
  1128  055F  00DB               	movwf	(_Kd+3)^(0+128)
  1129  0560  3000               	movlw	0
  1130  0561  00DA               	movwf	(_Kd+2)^(0+128)
  1131  0562  3000               	movlw	0
  1132  0563  00D9               	movwf	(_Kd+1)^(0+128)
  1133  0564  3000               	movlw	0
  1134  0565  00D8               	movwf	_Kd^(0+128)
  1135                           
  1136                           ;ADC.c: 29:     E = E1 = E2 = 0;
  1137  0566  3000               	movlw	0
  1138  0567  1683               	bsf	3,5	;RP0=1, select bank3
  1139  0568  1703               	bsf	3,6	;RP1=1, select bank3
  1140  0569  00B3               	movwf	(_E2+3)^(0+384)
  1141  056A  3000               	movlw	0
  1142  056B  00B2               	movwf	(_E2+2)^(0+384)
  1143  056C  3000               	movlw	0
  1144  056D  00B1               	movwf	(_E2+1)^(0+384)
  1145  056E  3000               	movlw	0
  1146  056F  00B0               	movwf	_E2^(0+384)
  1147  0570  0833               	movf	(_E2+3)^(0+384),w
  1148  0571  1683               	bsf	3,5	;RP0=1, select bank1
  1149  0572  1303               	bcf	3,6	;RP1=0, select bank1
  1150  0573  00E7               	movwf	(_E1+3)^(0+128)
  1151  0574  1683               	bsf	3,5	;RP0=1, select bank3
  1152  0575  1703               	bsf	3,6	;RP1=1, select bank3
  1153  0576  0832               	movf	(_E2+2)^(0+384),w
  1154  0577  1683               	bsf	3,5	;RP0=1, select bank1
  1155  0578  1303               	bcf	3,6	;RP1=0, select bank1
  1156  0579  00E6               	movwf	(_E1+2)^(0+128)
  1157  057A  1683               	bsf	3,5	;RP0=1, select bank3
  1158  057B  1703               	bsf	3,6	;RP1=1, select bank3
  1159  057C  0831               	movf	(_E2+1)^(0+384),w
  1160  057D  1683               	bsf	3,5	;RP0=1, select bank1
  1161  057E  1303               	bcf	3,6	;RP1=0, select bank1
  1162  057F  00E5               	movwf	(_E1+1)^(0+128)
  1163  0580  1683               	bsf	3,5	;RP0=1, select bank3
  1164  0581  1703               	bsf	3,6	;RP1=1, select bank3
  1165  0582  0830               	movf	_E2^(0+384),w
  1166  0583  1683               	bsf	3,5	;RP0=1, select bank1
  1167  0584  1303               	bcf	3,6	;RP1=0, select bank1
  1168  0585  00E4               	movwf	_E1^(0+128)
  1169  0586  0867               	movf	(_E1+3)^(0+128),w
  1170  0587  00EB               	movwf	(_E+3)^(0+128)
  1171  0588  0866               	movf	(_E1+2)^(0+128),w
  1172  0589  00EA               	movwf	(_E+2)^(0+128)
  1173  058A  0865               	movf	(_E1+1)^(0+128),w
  1174  058B  00E9               	movwf	(_E+1)^(0+128)
  1175  058C  0864               	movf	_E1^(0+128),w
  1176  058D  00E8               	movwf	_E^(0+128)
  1177                           
  1178                           ;ADC.c: 30:     a1 = a2 = a3 = 0;
  1179  058E  3000               	movlw	0
  1180  058F  1683               	bsf	3,5	;RP0=1, select bank3
  1181  0590  1703               	bsf	3,6	;RP1=1, select bank3
  1182  0591  00A7               	movwf	(_a3+3)^(0+384)
  1183  0592  3000               	movlw	0
  1184  0593  00A6               	movwf	(_a3+2)^(0+384)
  1185  0594  3000               	movlw	0
  1186  0595  00A5               	movwf	(_a3+1)^(0+384)
  1187  0596  3000               	movlw	0
  1188  0597  00A4               	movwf	_a3^(0+384)
  1189  0598  0827               	movf	(_a3+3)^(0+384),w
  1190  0599  00AB               	movwf	(_a2+3)^(0+384)
  1191  059A  0826               	movf	(_a3+2)^(0+384),w
  1192  059B  00AA               	movwf	(_a2+2)^(0+384)
  1193  059C  0825               	movf	(_a3+1)^(0+384),w
  1194  059D  00A9               	movwf	(_a2+1)^(0+384)
  1195  059E  0824               	movf	_a3^(0+384),w
  1196  059F  00A8               	movwf	_a2^(0+384)
  1197  05A0  082B               	movf	(_a2+3)^(0+384),w
  1198  05A1  00AF               	movwf	(_a1+3)^(0+384)
  1199  05A2  082A               	movf	(_a2+2)^(0+384),w
  1200  05A3  00AE               	movwf	(_a1+2)^(0+384)
  1201  05A4  0829               	movf	(_a2+1)^(0+384),w
  1202  05A5  00AD               	movwf	(_a1+1)^(0+384)
  1203  05A6  0828               	movf	_a2^(0+384),w
  1204  05A7  00AC               	movwf	_a1^(0+384)
  1205                           
  1206                           ;ADC.c: 31:     out = pre_out = 0;
  1207  05A8  3000               	movlw	0
  1208  05A9  0097               	movwf	(_pre_out+3)^(0+384)
  1209  05AA  3000               	movlw	0
  1210  05AB  0096               	movwf	(_pre_out+2)^(0+384)
  1211  05AC  3000               	movlw	0
  1212  05AD  0095               	movwf	(_pre_out+1)^(0+384)
  1213  05AE  3000               	movlw	0
  1214  05AF  0094               	movwf	_pre_out^(0+384)
  1215  05B0  0817               	movf	(_pre_out+3)^(0+384),w
  1216  05B1  1683               	bsf	3,5	;RP0=1, select bank1
  1217  05B2  1303               	bcf	3,6	;RP1=0, select bank1
  1218  05B3  00D7               	movwf	(_out+3)^(0+128)
  1219  05B4  1683               	bsf	3,5	;RP0=1, select bank3
  1220  05B5  1703               	bsf	3,6	;RP1=1, select bank3
  1221  05B6  0816               	movf	(_pre_out+2)^(0+384),w
  1222  05B7  1683               	bsf	3,5	;RP0=1, select bank1
  1223  05B8  1303               	bcf	3,6	;RP1=0, select bank1
  1224  05B9  00D6               	movwf	(_out+2)^(0+128)
  1225  05BA  1683               	bsf	3,5	;RP0=1, select bank3
  1226  05BB  1703               	bsf	3,6	;RP1=1, select bank3
  1227  05BC  0815               	movf	(_pre_out+1)^(0+384),w
  1228  05BD  1683               	bsf	3,5	;RP0=1, select bank1
  1229  05BE  1303               	bcf	3,6	;RP1=0, select bank1
  1230  05BF  00D5               	movwf	(_out+1)^(0+128)
  1231  05C0  1683               	bsf	3,5	;RP0=1, select bank3
  1232  05C1  1703               	bsf	3,6	;RP1=1, select bank3
  1233  05C2  0814               	movf	_pre_out^(0+384),w
  1234  05C3  1683               	bsf	3,5	;RP0=1, select bank1
  1235  05C4  1303               	bcf	3,6	;RP1=0, select bank1
  1236  05C5  00D4               	movwf	_out^(0+128)
  1237                           
  1238                           ;ADC.c: 33:     unsigned int a;;ADC.c: 34:     unsigned int t;;ADC.c: 35:     unsigned c
      +                          har start;;ADC.c: 36:     unsigned char buffer[2];;ADC.c: 37:     unsigned int t_load = 
      +                          0;
  1239  05C6  01D2               	clrf	main@t_load^(0+128)
  1240  05C7  01D3               	clrf	(main@t_load+1)^(0+128)
  1241                           
  1242                           ;ADC.c: 38:     unsigned int _t_load;;ADC.c: 40:     TRISD = 0x00;
  1243  05C8  0188               	clrf	8	;volatile
  1244                           
  1245                           ;ADC.c: 41:     TRISC0 = 0;
  1246  05C9  1007               	bcf	7,0	;volatile
  1247                           
  1248                           ;ADC.c: 42:     TRISB0 = 1;
  1249  05CA  1406               	bsf	6,0	;volatile
  1250                           
  1251                           ;ADC.c: 43:     TRISB7 = 0;
  1252  05CB  1386               	bcf	6,7	;volatile
  1253                           
  1254                           ;ADC.c: 45:     ADC_Init(1);
  1255  05CC  3001               	movlw	1
  1256  05CD  120A  118A  27B9  120A  118A  	fcall	_ADC_Init
  1257                           
  1258                           ;ADC.c: 47:     UART_Init(9600);
  1259  05D2  3000               	movlw	0
  1260  05D3  1283               	bcf	3,5	;RP0=0, select bank0
  1261  05D4  1303               	bcf	3,6	;RP1=0, select bank0
  1262  05D5  00A9               	movwf	UART_Init@baudrate+3
  1263  05D6  3000               	movlw	0
  1264  05D7  00A8               	movwf	UART_Init@baudrate+2
  1265  05D8  3025               	movlw	37
  1266  05D9  00A7               	movwf	UART_Init@baudrate+1
  1267  05DA  3080               	movlw	128
  1268  05DB  00A6               	movwf	UART_Init@baudrate
  1269  05DC  120A  158A  2040  120A  118A  	fcall	_UART_Init
  1270                           
  1271                           ;ADC.c: 48:     Lcd_Init();
  1272  05E1  160A  118A  2558  120A  118A  	fcall	_Lcd_Init
  1273                           
  1274                           ;ADC.c: 49:     Timer1_Init();
  1275  05E6  160A  118A  232B  120A  118A  	fcall	_Timer1_Init
  1276                           
  1277                           ;ADC.c: 50:     Interrupt_Init();
  1278  05EB  160A  118A  2311  120A  118A  	fcall	_Interrupt_Init
  1279                           
  1280                           ;ADC.c: 52:     Lcd_Write_String("Temp load: ");
  1281  05F0  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1282  05F1  160A  118A  23D0  120A  118A  	fcall	_Lcd_Write_String
  1283                           
  1284                           ;ADC.c: 53:     Lcd_Set_Cursor(2,1);
  1285  05F6  01F6               	clrf	Lcd_Set_Cursor@b
  1286  05F7  0AF6               	incf	Lcd_Set_Cursor@b,f
  1287  05F8  3002               	movlw	2
  1288  05F9  160A  118A  2508  120A  118A  	fcall	_Lcd_Set_Cursor
  1289                           
  1290                           ;ADC.c: 54:     Lcd_Write_String("Temp: ");
  1291  05FE  300D               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1292  05FF  160A  118A  23D0  120A  118A  	fcall	_Lcd_Write_String
  1293  0604                     l2895:	
  1294                           
  1295                           ;ADC.c: 58:     {;ADC.c: 59:        start = UART_Read();
  1296  0604  120A  118A  27F9  120A  118A  	fcall	_UART_Read
  1297  0609  1683               	bsf	3,5	;RP0=1, select bank1
  1298  060A  1303               	bcf	3,6	;RP1=0, select bank1
  1299  060B  00C5               	movwf	??_main^(0+128)
  1300  060C  0845               	movf	??_main^(0+128),w
  1301  060D  00CD               	movwf	main@start^(0+128)
  1302                           
  1303                           ;ADC.c: 60:        if(start == 's') break;
  1304  060E  3073               	movlw	115
  1305  060F  064D               	xorwf	main@start^(0+128),w
  1306  0610  1903               	btfsc	3,2
  1307  0611  2E7B               	goto	l2917
  1308                           
  1309                           ;ADC.c: 62:            if(t_load == 0)
  1310  0612  0852               	movf	main@t_load^(0+128),w
  1311  0613  0453               	iorwf	(main@t_load+1)^(0+128),w
  1312  0614  1D03               	btfss	3,2
  1313  0615  2E20               	goto	l2907
  1314                           
  1315                           ;ADC.c: 63:            {;ADC.c: 64:            UART_Read_Text(buffer, 2);
  1316  0616  3002               	movlw	2
  1317  0617  00F2               	movwf	UART_Read_Text@length
  1318  0618  3000               	movlw	0
  1319  0619  00F3               	movwf	UART_Read_Text@length+1
  1320  061A  30CE               	movlw	(low (main@buffer| 0))& (0+255)
  1321  061B  160A  118A  238F  120A  118A  	fcall	_UART_Read_Text
  1322  0620                     l2907:	
  1323                           
  1324                           ;ADC.c: 66:        t_load = (buffer[1]-0x30)*10 + (buffer[0]-0x30);
  1325  0620  1683               	bsf	3,5	;RP0=1, select bank1
  1326  0621  1303               	bcf	3,6	;RP1=0, select bank1
  1327  0622  084F               	movf	(main@buffer^(0+128)+1),w
  1328  0623  00C5               	movwf	??_main^(0+128)
  1329  0624  01C6               	clrf	(??_main^(0+128)+1)
  1330  0625  0845               	movf	??_main^(0+128),w
  1331  0626  00F2               	movwf	___wmul@multiplier
  1332  0627  0846               	movf	(??_main+1)^(0+128),w
  1333  0628  00F3               	movwf	___wmul@multiplier+1
  1334  0629  300A               	movlw	10
  1335  062A  00F4               	movwf	___wmul@multiplicand
  1336  062B  3000               	movlw	0
  1337  062C  00F5               	movwf	___wmul@multiplicand+1
  1338  062D  160A  118A  23AF  120A  118A  	fcall	___wmul
  1339  0632  1683               	bsf	3,5	;RP0=1, select bank1
  1340  0633  1303               	bcf	3,6	;RP1=0, select bank1
  1341  0634  084E               	movf	main@buffer^(0+128),w
  1342  0635  0772               	addwf	?___wmul,w
  1343  0636  00C7               	movwf	(??_main+2)^(0+128)
  1344  0637  3000               	movlw	0
  1345  0638  1803               	skipnc
  1346  0639  3001               	movlw	1
  1347  063A  0773               	addwf	?___wmul+1,w
  1348  063B  00C8               	movwf	(??_main+3)^(0+128)
  1349  063C  0847               	movf	(??_main+2)^(0+128),w
  1350  063D  3EF0               	addlw	240
  1351  063E  00D2               	movwf	main@t_load^(0+128)
  1352  063F  0848               	movf	(??_main+3)^(0+128),w
  1353  0640  1803               	skipnc
  1354  0641  3E01               	addlw	1
  1355  0642  3EFD               	addlw	253
  1356  0643  00D3               	movwf	(main@t_load+1)^(0+128)
  1357                           
  1358                           ;ADC.c: 68:        Lcd_Set_Cursor(1,12);
  1359  0644  300C               	movlw	12
  1360  0645  00C5               	movwf	??_main^(0+128)
  1361  0646  0845               	movf	??_main^(0+128),w
  1362  0647  00F6               	movwf	Lcd_Set_Cursor@b
  1363  0648  3001               	movlw	1
  1364  0649  160A  118A  2508  120A  118A  	fcall	_Lcd_Set_Cursor
  1365                           
  1366                           ;ADC.c: 69:        Lcd_Write_Char(t_load/10 + 48);
  1367  064E  300A               	movlw	10
  1368  064F  00F8               	movwf	___lwdiv@divisor
  1369  0650  3000               	movlw	0
  1370  0651  00F9               	movwf	___lwdiv@divisor+1
  1371  0652  1683               	bsf	3,5	;RP0=1, select bank1
  1372  0653  1303               	bcf	3,6	;RP1=0, select bank1
  1373  0654  0853               	movf	(main@t_load+1)^(0+128),w
  1374  0655  00FB               	movwf	___lwdiv@dividend+1
  1375  0656  0852               	movf	main@t_load^(0+128),w
  1376  0657  00FA               	movwf	___lwdiv@dividend
  1377  0658  120A  158A  2002  120A  118A  	fcall	___lwdiv
  1378  065D  0878               	movf	?___lwdiv,w
  1379  065E  3E30               	addlw	48
  1380  065F  160A  118A  2447  120A  118A  	fcall	_Lcd_Write_Char
  1381                           
  1382                           ;ADC.c: 70:        Lcd_Write_Char(t_load%10 + 48);
  1383  0664  300A               	movlw	10
  1384  0665  00F2               	movwf	___lwmod@divisor
  1385  0666  3000               	movlw	0
  1386  0667  00F3               	movwf	___lwmod@divisor+1
  1387  0668  1683               	bsf	3,5	;RP0=1, select bank1
  1388  0669  1303               	bcf	3,6	;RP1=0, select bank1
  1389  066A  0853               	movf	(main@t_load+1)^(0+128),w
  1390  066B  00F5               	movwf	___lwmod@dividend+1
  1391  066C  0852               	movf	main@t_load^(0+128),w
  1392  066D  00F4               	movwf	___lwmod@dividend
  1393  066E  160A  118A  2415  120A  118A  	fcall	___lwmod
  1394  0673  0872               	movf	?___lwmod,w
  1395  0674  3E30               	addlw	48
  1396  0675  160A  118A  2447  120A  118A  	fcall	_Lcd_Write_Char
  1397  067A  2E04               	goto	l2895
  1398  067B                     l2917:	
  1399                           
  1400                           ;ADC.c: 73:     {;ADC.c: 74:         a = Read_ADC(0);
  1401  067B  3000               	movlw	0
  1402  067C  160A  118A  2480  120A  118A  	fcall	_Read_ADC
  1403  0681  0873               	movf	?_Read_ADC+1,w
  1404  0682  1683               	bsf	3,5	;RP0=1, select bank1
  1405  0683  1303               	bcf	3,6	;RP1=0, select bank1
  1406  0684  00CC               	movwf	(main@a+1)^(0+128)
  1407  0685  0872               	movf	?_Read_ADC,w
  1408  0686  00CB               	movwf	main@a^(0+128)
  1409                           
  1410                           ;ADC.c: 75:         t = a*0.48828f;
  1411  0687  084B               	movf	main@a^(0+128),w
  1412  0688  00F2               	movwf	___xxtofl@val
  1413  0689  084C               	movf	(main@a+1)^(0+128),w
  1414  068A  00F3               	movwf	___xxtofl@val+1
  1415  068B  01F4               	clrf	___xxtofl@val+2
  1416  068C  01F5               	clrf	___xxtofl@val+3
  1417  068D  3000               	movlw	0
  1418  068E  160A  118A  275B  120A  118A  	fcall	___xxtofl
  1419  0693  0875               	movf	?___xxtofl+3,w
  1420  0694  1283               	bcf	3,5	;RP0=0, select bank0
  1421  0695  1303               	bcf	3,6	;RP1=0, select bank0
  1422  0696  00AD               	movwf	___flmul@a+3
  1423  0697  0874               	movf	?___xxtofl+2,w
  1424  0698  00AC               	movwf	___flmul@a+2
  1425  0699  0873               	movf	?___xxtofl+1,w
  1426  069A  00AB               	movwf	___flmul@a+1
  1427  069B  0872               	movf	?___xxtofl,w
  1428  069C  00AA               	movwf	___flmul@a
  1429  069D  303E               	movlw	62
  1430  069E  00A9               	movwf	___flmul@b+3
  1431  069F  30F9               	movlw	249
  1432  06A0  00A8               	movwf	___flmul@b+2
  1433  06A1  30FF               	movlw	255
  1434  06A2  00A7               	movwf	___flmul@b+1
  1435  06A3  30D6               	movlw	214
  1436  06A4  00A6               	movwf	___flmul@b
  1437  06A5  120A  158A  24EB  120A  118A  	fcall	___flmul
  1438  06AA  1283               	bcf	3,5	;RP0=0, select bank0
  1439  06AB  1303               	bcf	3,6	;RP1=0, select bank0
  1440  06AC  0829               	movf	?___flmul+3,w
  1441  06AD  1683               	bsf	3,5	;RP0=1, select bank1
  1442  06AE  1303               	bcf	3,6	;RP1=0, select bank1
  1443  06AF  00AB               	movwf	(___fltol@f1+3)^(0+128)
  1444  06B0  1283               	bcf	3,5	;RP0=0, select bank0
  1445  06B1  1303               	bcf	3,6	;RP1=0, select bank0
  1446  06B2  0828               	movf	?___flmul+2,w
  1447  06B3  1683               	bsf	3,5	;RP0=1, select bank1
  1448  06B4  1303               	bcf	3,6	;RP1=0, select bank1
  1449  06B5  00AA               	movwf	(___fltol@f1+2)^(0+128)
  1450  06B6  1283               	bcf	3,5	;RP0=0, select bank0
  1451  06B7  1303               	bcf	3,6	;RP1=0, select bank0
  1452  06B8  0827               	movf	?___flmul+1,w
  1453  06B9  1683               	bsf	3,5	;RP0=1, select bank1
  1454  06BA  1303               	bcf	3,6	;RP1=0, select bank1
  1455  06BB  00A9               	movwf	(___fltol@f1+1)^(0+128)
  1456  06BC  1283               	bcf	3,5	;RP0=0, select bank0
  1457  06BD  1303               	bcf	3,6	;RP1=0, select bank0
  1458  06BE  0826               	movf	?___flmul,w
  1459  06BF  1683               	bsf	3,5	;RP0=1, select bank1
  1460  06C0  1303               	bcf	3,6	;RP1=0, select bank1
  1461  06C1  00A8               	movwf	___fltol@f1^(0+128)
  1462  06C2  160A  118A  25B4  120A  118A  	fcall	___fltol
  1463  06C7  1683               	bsf	3,5	;RP0=1, select bank1
  1464  06C8  1303               	bcf	3,6	;RP1=0, select bank1
  1465  06C9  0829               	movf	(?___fltol+1)^(0+128),w
  1466  06CA  00D1               	movwf	(main@t+1)^(0+128)
  1467  06CB  0828               	movf	?___fltol^(0+128),w
  1468  06CC  00D0               	movwf	main@t^(0+128)
  1469                           
  1470                           ;ADC.c: 77:         Lcd_Set_Cursor(1,12);
  1471  06CD  300C               	movlw	12
  1472  06CE  00C5               	movwf	??_main^(0+128)
  1473  06CF  0845               	movf	??_main^(0+128),w
  1474  06D0  00F6               	movwf	Lcd_Set_Cursor@b
  1475  06D1  3001               	movlw	1
  1476  06D2  160A  118A  2508  120A  118A  	fcall	_Lcd_Set_Cursor
  1477                           
  1478                           ;ADC.c: 78:         Lcd_Write_Char(t_load/100+48);
  1479  06D7  3064               	movlw	100
  1480  06D8  00F8               	movwf	___lwdiv@divisor
  1481  06D9  3000               	movlw	0
  1482  06DA  00F9               	movwf	___lwdiv@divisor+1
  1483  06DB  1683               	bsf	3,5	;RP0=1, select bank1
  1484  06DC  1303               	bcf	3,6	;RP1=0, select bank1
  1485  06DD  0853               	movf	(main@t_load+1)^(0+128),w
  1486  06DE  00FB               	movwf	___lwdiv@dividend+1
  1487  06DF  0852               	movf	main@t_load^(0+128),w
  1488  06E0  00FA               	movwf	___lwdiv@dividend
  1489  06E1  120A  158A  2002  120A  118A  	fcall	___lwdiv
  1490  06E6  0878               	movf	?___lwdiv,w
  1491  06E7  3E30               	addlw	48
  1492  06E8  160A  118A  2447  120A  118A  	fcall	_Lcd_Write_Char
  1493                           
  1494                           ;ADC.c: 79:         Lcd_Write_Char((t_load%100)/10+48);
  1495  06ED  300A               	movlw	10
  1496  06EE  00F8               	movwf	___lwdiv@divisor
  1497  06EF  3000               	movlw	0
  1498  06F0  00F9               	movwf	___lwdiv@divisor+1
  1499  06F1  1683               	bsf	3,5	;RP0=1, select bank1
  1500  06F2  1303               	bcf	3,6	;RP1=0, select bank1
  1501  06F3  0853               	movf	(main@t_load+1)^(0+128),w
  1502  06F4  00F5               	movwf	___lwmod@dividend+1
  1503  06F5  0852               	movf	main@t_load^(0+128),w
  1504  06F6  00F4               	movwf	___lwmod@dividend
  1505  06F7  3064               	movlw	100
  1506  06F8  00F2               	movwf	___lwmod@divisor
  1507  06F9  3000               	movlw	0
  1508  06FA  00F3               	movwf	___lwmod@divisor+1
  1509  06FB  160A  118A  2415  120A  118A  	fcall	___lwmod
  1510  0700  0873               	movf	?___lwmod+1,w
  1511  0701  00FB               	movwf	___lwdiv@dividend+1
  1512  0702  0872               	movf	?___lwmod,w
  1513  0703  00FA               	movwf	___lwdiv@dividend
  1514  0704  120A  158A  2002  120A  118A  	fcall	___lwdiv
  1515  0709  0878               	movf	?___lwdiv,w
  1516  070A  3E30               	addlw	48
  1517  070B  160A  118A  2447  120A  118A  	fcall	_Lcd_Write_Char
  1518                           
  1519                           ;ADC.c: 80:         Lcd_Write_Char(t_load%10+48);
  1520  0710  300A               	movlw	10
  1521  0711  00F2               	movwf	___lwmod@divisor
  1522  0712  3000               	movlw	0
  1523  0713  00F3               	movwf	___lwmod@divisor+1
  1524  0714  1683               	bsf	3,5	;RP0=1, select bank1
  1525  0715  1303               	bcf	3,6	;RP1=0, select bank1
  1526  0716  0853               	movf	(main@t_load+1)^(0+128),w
  1527  0717  00F5               	movwf	___lwmod@dividend+1
  1528  0718  0852               	movf	main@t_load^(0+128),w
  1529  0719  00F4               	movwf	___lwmod@dividend
  1530  071A  160A  118A  2415  120A  118A  	fcall	___lwmod
  1531  071F  0872               	movf	?___lwmod,w
  1532  0720  3E30               	addlw	48
  1533  0721  160A  118A  2447  120A  118A  	fcall	_Lcd_Write_Char
  1534                           
  1535                           ;ADC.c: 82:         Lcd_Set_Cursor(2,7);
  1536  0726  3007               	movlw	7
  1537  0727  1683               	bsf	3,5	;RP0=1, select bank1
  1538  0728  1303               	bcf	3,6	;RP1=0, select bank1
  1539  0729  00C5               	movwf	??_main^(0+128)
  1540  072A  0845               	movf	??_main^(0+128),w
  1541  072B  00F6               	movwf	Lcd_Set_Cursor@b
  1542  072C  3002               	movlw	2
  1543  072D  160A  118A  2508  120A  118A  	fcall	_Lcd_Set_Cursor
  1544                           
  1545                           ;ADC.c: 83:         Lcd_Write_Char(t/100+48);
  1546  0732  3064               	movlw	100
  1547  0733  00F8               	movwf	___lwdiv@divisor
  1548  0734  3000               	movlw	0
  1549  0735  00F9               	movwf	___lwdiv@divisor+1
  1550  0736  1683               	bsf	3,5	;RP0=1, select bank1
  1551  0737  1303               	bcf	3,6	;RP1=0, select bank1
  1552  0738  0851               	movf	(main@t+1)^(0+128),w
  1553  0739  00FB               	movwf	___lwdiv@dividend+1
  1554  073A  0850               	movf	main@t^(0+128),w
  1555  073B  00FA               	movwf	___lwdiv@dividend
  1556  073C  120A  158A  2002  120A  118A  	fcall	___lwdiv
  1557  0741  0878               	movf	?___lwdiv,w
  1558  0742  3E30               	addlw	48
  1559  0743  160A  118A  2447  120A  118A  	fcall	_Lcd_Write_Char
  1560                           
  1561                           ;ADC.c: 84:         Lcd_Write_Char((t%100)/10+48);
  1562  0748  300A               	movlw	10
  1563  0749  00F8               	movwf	___lwdiv@divisor
  1564  074A  3000               	movlw	0
  1565  074B  00F9               	movwf	___lwdiv@divisor+1
  1566  074C  1683               	bsf	3,5	;RP0=1, select bank1
  1567  074D  1303               	bcf	3,6	;RP1=0, select bank1
  1568  074E  0851               	movf	(main@t+1)^(0+128),w
  1569  074F  00F5               	movwf	___lwmod@dividend+1
  1570  0750  0850               	movf	main@t^(0+128),w
  1571  0751  00F4               	movwf	___lwmod@dividend
  1572  0752  3064               	movlw	100
  1573  0753  00F2               	movwf	___lwmod@divisor
  1574  0754  3000               	movlw	0
  1575  0755  00F3               	movwf	___lwmod@divisor+1
  1576  0756  160A  118A  2415  120A  118A  	fcall	___lwmod
  1577  075B  0873               	movf	?___lwmod+1,w
  1578  075C  00FB               	movwf	___lwdiv@dividend+1
  1579  075D  0872               	movf	?___lwmod,w
  1580  075E  00FA               	movwf	___lwdiv@dividend
  1581  075F  120A  158A  2002  120A  118A  	fcall	___lwdiv
  1582  0764  0878               	movf	?___lwdiv,w
  1583  0765  3E30               	addlw	48
  1584  0766  160A  118A  2447  120A  118A  	fcall	_Lcd_Write_Char
  1585                           
  1586                           ;ADC.c: 85:         Lcd_Write_Char(t%10+48);
  1587  076B  300A               	movlw	10
  1588  076C  00F2               	movwf	___lwmod@divisor
  1589  076D  3000               	movlw	0
  1590  076E  00F3               	movwf	___lwmod@divisor+1
  1591  076F  1683               	bsf	3,5	;RP0=1, select bank1
  1592  0770  1303               	bcf	3,6	;RP1=0, select bank1
  1593  0771  0851               	movf	(main@t+1)^(0+128),w
  1594  0772  00F5               	movwf	___lwmod@dividend+1
  1595  0773  0850               	movf	main@t^(0+128),w
  1596  0774  00F4               	movwf	___lwmod@dividend
  1597  0775  160A  118A  2415  120A  118A  	fcall	___lwmod
  1598  077A  0872               	movf	?___lwmod,w
  1599  077B  3E30               	addlw	48
  1600  077C  160A  118A  2447  120A  118A  	fcall	_Lcd_Write_Char
  1601                           
  1602                           ;ADC.c: 87:         PID_Init(t, t_load);
  1603  0781  1683               	bsf	3,5	;RP0=1, select bank1
  1604  0782  1303               	bcf	3,6	;RP1=0, select bank1
  1605  0783  0851               	movf	(main@t+1)^(0+128),w
  1606  0784  00B2               	movwf	(PID_Init@nhietdo+1)^(0+128)
  1607  0785  0850               	movf	main@t^(0+128),w
  1608  0786  00B1               	movwf	PID_Init@nhietdo^(0+128)
  1609  0787  0853               	movf	(main@t_load+1)^(0+128),w
  1610  0788  00B4               	movwf	(PID_Init@nhietdodat+1)^(0+128)
  1611  0789  0852               	movf	main@t_load^(0+128),w
  1612  078A  00B3               	movwf	PID_Init@nhietdodat^(0+128)
  1613  078B  120A  118A  2031  120A  118A  	fcall	_PID_Init
  1614                           
  1615                           ;ADC.c: 88:         UART_Write(t);
  1616  0790  1683               	bsf	3,5	;RP0=1, select bank1
  1617  0791  1303               	bcf	3,6	;RP1=0, select bank1
  1618  0792  0850               	movf	main@t^(0+128),w
  1619  0793  160A  118A  2321  120A  118A  	fcall	_UART_Write
  1620                           
  1621                           ;ADC.c: 89:         if(t > t_load) RB7 = 0;
  1622  0798  1683               	bsf	3,5	;RP0=1, select bank1
  1623  0799  1303               	bcf	3,6	;RP1=0, select bank1
  1624  079A  0851               	movf	(main@t+1)^(0+128),w
  1625  079B  0253               	subwf	(main@t_load+1)^(0+128),w
  1626  079C  1D03               	skipz
  1627  079D  2FA0               	goto	u4105
  1628  079E  0850               	movf	main@t^(0+128),w
  1629  079F  0252               	subwf	main@t_load^(0+128),w
  1630  07A0                     u4105:	
  1631  07A0  1803               	skipnc
  1632  07A1  2FA6               	goto	l155
  1633  07A2  1283               	bcf	3,5	;RP0=0, select bank0
  1634  07A3  1303               	bcf	3,6	;RP1=0, select bank0
  1635  07A4  1386               	bcf	6,7	;volatile
  1636  07A5  2FA9               	goto	l2943
  1637  07A6                     l155:	
  1638                           ;ADC.c: 90:         else RB7 = 1;
  1639                           
  1640  07A6  1283               	bcf	3,5	;RP0=0, select bank0
  1641  07A7  1303               	bcf	3,6	;RP1=0, select bank0
  1642  07A8  1786               	bsf	6,7	;volatile
  1643  07A9                     l2943:	
  1644                           
  1645                           ;ADC.c: 91:         _delay((unsigned long)((500)*(20000000/4000.0)));
  1646  07A9  300D               	movlw	13
  1647  07AA  1683               	bsf	3,5	;RP0=1, select bank1
  1648  07AB  1303               	bcf	3,6	;RP1=0, select bank1
  1649  07AC  00C7               	movwf	(??_main^(0+128)+2)
  1650  07AD  30AF               	movlw	175
  1651  07AE  00C6               	movwf	(??_main^(0+128)+1)
  1652  07AF  30B5               	movlw	181
  1653  07B0  00C5               	movwf	??_main^(0+128)
  1654  07B1                     u4167:	
  1655  07B1  0BC5               	decfsz	??_main^(0+128),f
  1656  07B2  2FB1               	goto	u4167
  1657  07B3  0BC6               	decfsz	(??_main^(0+128)+1),f
  1658  07B4  2FB1               	goto	u4167
  1659  07B5  0BC7               	decfsz	(??_main^(0+128)+2),f
  1660  07B6  2FB1               	goto	u4167
  1661  07B7  2FB8               	nop2
  1662  07B8  2E7B               	goto	l2917
  1663  07B9                     __end_of_main:	
  1664                           
  1665                           	psect	text1
  1666  13AF                     __ptext1:	
  1667 ;; *************** function ___wmul *****************
  1668 ;; Defined at:
  1669 ;;		line 15 in file "D:\Mplab X\xc8\pic\sources\c90\common\Umul16.c"
  1670 ;; Parameters:    Size  Location     Type
  1671 ;;  multiplier      2    2[COMMON] unsigned int 
  1672 ;;  multiplicand    2    4[COMMON] unsigned int 
  1673 ;; Auto vars:     Size  Location     Type
  1674 ;;  product         2    6[COMMON] unsigned int 
  1675 ;; Return value:  Size  Location     Type
  1676 ;;                  2    2[COMMON] unsigned int 
  1677 ;; Registers used:
  1678 ;;		wreg, status,2, status,0
  1679 ;; Tracked objects:
  1680 ;;		On entry : 0/0
  1681 ;;		On exit  : 0/0
  1682 ;;		Unchanged: 0/0
  1683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1684 ;;      Params:         4       0       0       0       0
  1685 ;;      Locals:         2       0       0       0       0
  1686 ;;      Temps:          0       0       0       0       0
  1687 ;;      Totals:         6       0       0       0       0
  1688 ;;Total ram usage:        6 bytes
  1689 ;; Hardware stack levels used:    1
  1690 ;; Hardware stack levels required when called:    1
  1691 ;; This function calls:
  1692 ;;		Nothing
  1693 ;; This function is called by:
  1694 ;;		_main
  1695 ;; This function uses a non-reentrant model
  1696 ;;
  1697                           
  1698                           
  1699                           ;psect for function ___wmul
  1700  13AF                     ___wmul:	
  1701                           
  1702                           ;incstack = 0
  1703                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1704  13AF  01F6               	clrf	___wmul@product
  1705  13B0  01F7               	clrf	___wmul@product+1
  1706  13B1                     l2807:	
  1707  13B1  1C72               	btfss	___wmul@multiplier,0
  1708  13B2  2BB9               	goto	l399
  1709  13B3  0874               	movf	___wmul@multiplicand,w
  1710  13B4  07F6               	addwf	___wmul@product,f
  1711  13B5  1803               	skipnc
  1712  13B6  0AF7               	incf	___wmul@product+1,f
  1713  13B7  0875               	movf	___wmul@multiplicand+1,w
  1714  13B8  07F7               	addwf	___wmul@product+1,f
  1715  13B9                     l399:	
  1716  13B9  3001               	movlw	1
  1717  13BA                     u3925:	
  1718  13BA  1003               	clrc
  1719  13BB  0DF4               	rlf	___wmul@multiplicand,f
  1720  13BC  0DF5               	rlf	___wmul@multiplicand+1,f
  1721  13BD  3EFF               	addlw	-1
  1722  13BE  1D03               	skipz
  1723  13BF  2BBA               	goto	u3925
  1724  13C0  3001               	movlw	1
  1725  13C1                     u3935:	
  1726  13C1  1003               	clrc
  1727  13C2  0CF3               	rrf	___wmul@multiplier+1,f
  1728  13C3  0CF2               	rrf	___wmul@multiplier,f
  1729  13C4  3EFF               	addlw	-1
  1730  13C5  1D03               	skipz
  1731  13C6  2BC1               	goto	u3935
  1732  13C7  0872               	movf	___wmul@multiplier,w
  1733  13C8  0473               	iorwf	___wmul@multiplier+1,w
  1734  13C9  1D03               	btfss	3,2
  1735  13CA  2BB1               	goto	l2807
  1736  13CB  0877               	movf	___wmul@product+1,w
  1737  13CC  00F3               	movwf	?___wmul+1
  1738  13CD  0876               	movf	___wmul@product,w
  1739  13CE  00F2               	movwf	?___wmul
  1740  13CF  0008               	return
  1741  13D0                     __end_of___wmul:	
  1742                           
  1743                           	psect	text2
  1744  1415                     __ptext2:	
  1745 ;; *************** function ___lwmod *****************
  1746 ;; Defined at:
  1747 ;;		line 5 in file "D:\Mplab X\xc8\pic\sources\c90\common\lwmod.c"
  1748 ;; Parameters:    Size  Location     Type
  1749 ;;  divisor         2    2[COMMON] unsigned int 
  1750 ;;  dividend        2    4[COMMON] unsigned int 
  1751 ;; Auto vars:     Size  Location     Type
  1752 ;;  counter         1    7[COMMON] unsigned char 
  1753 ;; Return value:  Size  Location     Type
  1754 ;;                  2    2[COMMON] unsigned int 
  1755 ;; Registers used:
  1756 ;;		wreg, status,2, status,0
  1757 ;; Tracked objects:
  1758 ;;		On entry : 0/0
  1759 ;;		On exit  : 0/0
  1760 ;;		Unchanged: 0/0
  1761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1762 ;;      Params:         4       0       0       0       0
  1763 ;;      Locals:         1       0       0       0       0
  1764 ;;      Temps:          1       0       0       0       0
  1765 ;;      Totals:         6       0       0       0       0
  1766 ;;Total ram usage:        6 bytes
  1767 ;; Hardware stack levels used:    1
  1768 ;; Hardware stack levels required when called:    1
  1769 ;; This function calls:
  1770 ;;		Nothing
  1771 ;; This function is called by:
  1772 ;;		_main
  1773 ;; This function uses a non-reentrant model
  1774 ;;
  1775                           
  1776                           
  1777                           ;psect for function ___lwmod
  1778  1415                     ___lwmod:	
  1779                           
  1780                           ;incstack = 0
  1781                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1782  1415  0872               	movf	___lwmod@divisor,w
  1783  1416  0473               	iorwf	___lwmod@divisor+1,w
  1784  1417  1903               	btfsc	3,2
  1785  1418  2C42               	goto	l2863
  1786  1419  01F7               	clrf	___lwmod@counter
  1787  141A  0AF7               	incf	___lwmod@counter,f
  1788  141B                     l2853:	
  1789  141B  1BF3               	btfsc	___lwmod@divisor+1,7
  1790  141C  2C29               	goto	l2855
  1791  141D  3001               	movlw	1
  1792  141E                     u4035:	
  1793  141E  1003               	clrc
  1794  141F  0DF2               	rlf	___lwmod@divisor,f
  1795  1420  0DF3               	rlf	___lwmod@divisor+1,f
  1796  1421  3EFF               	addlw	-1
  1797  1422  1D03               	skipz
  1798  1423  2C1E               	goto	u4035
  1799  1424  3001               	movlw	1
  1800  1425  00F6               	movwf	??___lwmod
  1801  1426  0876               	movf	??___lwmod,w
  1802  1427  07F7               	addwf	___lwmod@counter,f
  1803  1428  2C1B               	goto	l2853
  1804  1429                     l2855:	
  1805  1429  0873               	movf	___lwmod@divisor+1,w
  1806  142A  0275               	subwf	___lwmod@dividend+1,w
  1807  142B  1D03               	skipz
  1808  142C  2C2F               	goto	u4055
  1809  142D  0872               	movf	___lwmod@divisor,w
  1810  142E  0274               	subwf	___lwmod@dividend,w
  1811  142F                     u4055:	
  1812  142F  1C03               	skipc
  1813  1430  2C37               	goto	l2859
  1814  1431  0872               	movf	___lwmod@divisor,w
  1815  1432  02F4               	subwf	___lwmod@dividend,f
  1816  1433  0873               	movf	___lwmod@divisor+1,w
  1817  1434  1C03               	skipc
  1818  1435  03F5               	decf	___lwmod@dividend+1,f
  1819  1436  02F5               	subwf	___lwmod@dividend+1,f
  1820  1437                     l2859:	
  1821  1437  3001               	movlw	1
  1822  1438                     u4065:	
  1823  1438  1003               	clrc
  1824  1439  0CF3               	rrf	___lwmod@divisor+1,f
  1825  143A  0CF2               	rrf	___lwmod@divisor,f
  1826  143B  3EFF               	addlw	-1
  1827  143C  1D03               	skipz
  1828  143D  2C38               	goto	u4065
  1829  143E  3001               	movlw	1
  1830  143F  02F7               	subwf	___lwmod@counter,f
  1831  1440  1D03               	btfss	3,2
  1832  1441  2C29               	goto	l2855
  1833  1442                     l2863:	
  1834  1442  0875               	movf	___lwmod@dividend+1,w
  1835  1443  00F3               	movwf	?___lwmod+1
  1836  1444  0874               	movf	___lwmod@dividend,w
  1837  1445  00F2               	movwf	?___lwmod
  1838  1446  0008               	return
  1839  1447                     __end_of___lwmod:	
  1840                           
  1841                           	psect	text3
  1842  0802                     __ptext3:	
  1843 ;; *************** function ___lwdiv *****************
  1844 ;; Defined at:
  1845 ;;		line 5 in file "D:\Mplab X\xc8\pic\sources\c90\common\lwdiv.c"
  1846 ;; Parameters:    Size  Location     Type
  1847 ;;  divisor         2    8[COMMON] unsigned int 
  1848 ;;  dividend        2   10[COMMON] unsigned int 
  1849 ;; Auto vars:     Size  Location     Type
  1850 ;;  quotient        2    1[BANK0 ] unsigned int 
  1851 ;;  counter         1    3[BANK0 ] unsigned char 
  1852 ;; Return value:  Size  Location     Type
  1853 ;;                  2    8[COMMON] unsigned int 
  1854 ;; Registers used:
  1855 ;;		wreg, status,2, status,0
  1856 ;; Tracked objects:
  1857 ;;		On entry : 0/0
  1858 ;;		On exit  : 0/0
  1859 ;;		Unchanged: 0/0
  1860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1861 ;;      Params:         4       0       0       0       0
  1862 ;;      Locals:         0       3       0       0       0
  1863 ;;      Temps:          0       1       0       0       0
  1864 ;;      Totals:         4       4       0       0       0
  1865 ;;Total ram usage:        8 bytes
  1866 ;; Hardware stack levels used:    1
  1867 ;; Hardware stack levels required when called:    1
  1868 ;; This function calls:
  1869 ;;		Nothing
  1870 ;; This function is called by:
  1871 ;;		_main
  1872 ;; This function uses a non-reentrant model
  1873 ;;
  1874                           
  1875                           
  1876                           ;psect for function ___lwdiv
  1877  0802                     ___lwdiv:	
  1878                           
  1879                           ;incstack = 0
  1880                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1881  0802  1283               	bcf	3,5	;RP0=0, select bank0
  1882  0803  1303               	bcf	3,6	;RP1=0, select bank0
  1883  0804  01A1               	clrf	___lwdiv@quotient
  1884  0805  01A2               	clrf	___lwdiv@quotient+1
  1885  0806  0878               	movf	___lwdiv@divisor,w
  1886  0807  0479               	iorwf	___lwdiv@divisor+1,w
  1887  0808  1903               	btfsc	3,2
  1888  0809  283B               	goto	l2841
  1889  080A  01A3               	clrf	___lwdiv@counter
  1890  080B  0AA3               	incf	___lwdiv@counter,f
  1891  080C                     l2829:	
  1892  080C  1BF9               	btfsc	___lwdiv@divisor+1,7
  1893  080D  281A               	goto	l2831
  1894  080E  3001               	movlw	1
  1895  080F                     u3965:	
  1896  080F  1003               	clrc
  1897  0810  0DF8               	rlf	___lwdiv@divisor,f
  1898  0811  0DF9               	rlf	___lwdiv@divisor+1,f
  1899  0812  3EFF               	addlw	-1
  1900  0813  1D03               	skipz
  1901  0814  280F               	goto	u3965
  1902  0815  3001               	movlw	1
  1903  0816  00A0               	movwf	??___lwdiv
  1904  0817  0820               	movf	??___lwdiv,w
  1905  0818  07A3               	addwf	___lwdiv@counter,f
  1906  0819  280C               	goto	l2829
  1907  081A                     l2831:	
  1908  081A  3001               	movlw	1
  1909  081B                     u3985:	
  1910  081B  1003               	clrc
  1911  081C  0DA1               	rlf	___lwdiv@quotient,f
  1912  081D  0DA2               	rlf	___lwdiv@quotient+1,f
  1913  081E  3EFF               	addlw	-1
  1914  081F  1D03               	skipz
  1915  0820  281B               	goto	u3985
  1916  0821  0879               	movf	___lwdiv@divisor+1,w
  1917  0822  027B               	subwf	___lwdiv@dividend+1,w
  1918  0823  1D03               	skipz
  1919  0824  2827               	goto	u3995
  1920  0825  0878               	movf	___lwdiv@divisor,w
  1921  0826  027A               	subwf	___lwdiv@dividend,w
  1922  0827                     u3995:	
  1923  0827  1C03               	skipc
  1924  0828  2830               	goto	l2837
  1925  0829  0878               	movf	___lwdiv@divisor,w
  1926  082A  02FA               	subwf	___lwdiv@dividend,f
  1927  082B  0879               	movf	___lwdiv@divisor+1,w
  1928  082C  1C03               	skipc
  1929  082D  03FB               	decf	___lwdiv@dividend+1,f
  1930  082E  02FB               	subwf	___lwdiv@dividend+1,f
  1931  082F  1421               	bsf	___lwdiv@quotient,0
  1932  0830                     l2837:	
  1933  0830  3001               	movlw	1
  1934  0831                     u4005:	
  1935  0831  1003               	clrc
  1936  0832  0CF9               	rrf	___lwdiv@divisor+1,f
  1937  0833  0CF8               	rrf	___lwdiv@divisor,f
  1938  0834  3EFF               	addlw	-1
  1939  0835  1D03               	skipz
  1940  0836  2831               	goto	u4005
  1941  0837  3001               	movlw	1
  1942  0838  02A3               	subwf	___lwdiv@counter,f
  1943  0839  1D03               	btfss	3,2
  1944  083A  281A               	goto	l2831
  1945  083B                     l2841:	
  1946  083B  0822               	movf	___lwdiv@quotient+1,w
  1947  083C  00F9               	movwf	?___lwdiv+1
  1948  083D  0821               	movf	___lwdiv@quotient,w
  1949  083E  00F8               	movwf	?___lwdiv
  1950  083F  0008               	return
  1951  0840                     __end_of___lwdiv:	
  1952                           
  1953                           	psect	text4
  1954  1321                     __ptext4:	
  1955 ;; *************** function _UART_Write *****************
  1956 ;; Defined at:
  1957 ;;		line 51 in file "USART.c"
  1958 ;; Parameters:    Size  Location     Type
  1959 ;;  data            1    wreg     unsigned char 
  1960 ;; Auto vars:     Size  Location     Type
  1961 ;;  data            1    2[COMMON] unsigned char 
  1962 ;; Return value:  Size  Location     Type
  1963 ;;                  1    wreg      void 
  1964 ;; Registers used:
  1965 ;;		wreg
  1966 ;; Tracked objects:
  1967 ;;		On entry : 0/0
  1968 ;;		On exit  : 0/0
  1969 ;;		Unchanged: 0/0
  1970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1971 ;;      Params:         0       0       0       0       0
  1972 ;;      Locals:         1       0       0       0       0
  1973 ;;      Temps:          0       0       0       0       0
  1974 ;;      Totals:         1       0       0       0       0
  1975 ;;Total ram usage:        1 bytes
  1976 ;; Hardware stack levels used:    1
  1977 ;; Hardware stack levels required when called:    1
  1978 ;; This function calls:
  1979 ;;		Nothing
  1980 ;; This function is called by:
  1981 ;;		_main
  1982 ;;		_UART_Write_Text
  1983 ;; This function uses a non-reentrant model
  1984 ;;
  1985                           
  1986                           
  1987                           ;psect for function _UART_Write
  1988  1321                     _UART_Write:	
  1989                           
  1990                           ;incstack = 0
  1991                           ; Regs used in _UART_Write: [wreg]
  1992                           ;UART_Write@data stored from wreg
  1993  1321  00F2               	movwf	UART_Write@data
  1994  1322                     l304:	
  1995                           ;USART.c: 51: void UART_Write(char data);USART.c: 52: {;USART.c: 53:   while(!TRMT);
  1996                           
  1997  1322  1683               	bsf	3,5	;RP0=1, select bank1
  1998  1323  1303               	bcf	3,6	;RP1=0, select bank1
  1999  1324  1C98               	btfss	24,1	;volatile
  2000  1325  2B22               	goto	l304
  2001                           
  2002                           ;USART.c: 54:   TXREG = data;
  2003  1326  0872               	movf	UART_Write@data,w
  2004  1327  1283               	bcf	3,5	;RP0=0, select bank0
  2005  1328  1303               	bcf	3,6	;RP1=0, select bank0
  2006  1329  0099               	movwf	25	;volatile
  2007  132A  0008               	return
  2008  132B                     __end_of_UART_Write:	
  2009                           
  2010                           	psect	text5
  2011  138F                     __ptext5:	
  2012 ;; *************** function _UART_Read_Text *****************
  2013 ;; Defined at:
  2014 ;;		line 44 in file "USART.c"
  2015 ;; Parameters:    Size  Location     Type
  2016 ;;  Output          1    wreg     PTR unsigned char 
  2017 ;;		 -> main@buffer(2), 
  2018 ;;  length          2    2[COMMON] unsigned int 
  2019 ;; Auto vars:     Size  Location     Type
  2020 ;;  Output          1    6[COMMON] PTR unsigned char 
  2021 ;;		 -> main@buffer(2), 
  2022 ;;  i               2    7[COMMON] int 
  2023 ;;  i               2    0        unsigned int 
  2024 ;; Return value:  Size  Location     Type
  2025 ;;                  1    wreg      void 
  2026 ;; Registers used:
  2027 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2028 ;; Tracked objects:
  2029 ;;		On entry : 0/0
  2030 ;;		On exit  : 0/0
  2031 ;;		Unchanged: 0/0
  2032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2033 ;;      Params:         2       0       0       0       0
  2034 ;;      Locals:         3       0       0       0       0
  2035 ;;      Temps:          2       0       0       0       0
  2036 ;;      Totals:         7       0       0       0       0
  2037 ;;Total ram usage:        7 bytes
  2038 ;; Hardware stack levels used:    1
  2039 ;; Hardware stack levels required when called:    2
  2040 ;; This function calls:
  2041 ;;		_UART_Read
  2042 ;; This function is called by:
  2043 ;;		_main
  2044 ;; This function uses a non-reentrant model
  2045 ;;
  2046                           
  2047                           
  2048                           ;psect for function _UART_Read_Text
  2049  138F                     _UART_Read_Text:	
  2050                           
  2051                           ;incstack = 0
  2052                           ; Regs used in _UART_Read_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2053                           ;UART_Read_Text@Output stored from wreg
  2054  138F  00F6               	movwf	UART_Read_Text@Output
  2055                           
  2056                           ;USART.c: 44: void UART_Read_Text(char *Output, unsigned int length);USART.c: 45: {;USAR
      +                          T.c: 46:  unsigned int i;;USART.c: 47:  for(int i=0;i<length;i++)
  2057  1390  01F7               	clrf	UART_Read_Text@i_230
  2058  1391  01F8               	clrf	UART_Read_Text@i_230+1
  2059  1392                     l2739:	
  2060  1392  0873               	movf	UART_Read_Text@length+1,w
  2061  1393  0278               	subwf	UART_Read_Text@i_230+1,w
  2062  1394  1D03               	skipz
  2063  1395  2B98               	goto	u3835
  2064  1396  0872               	movf	UART_Read_Text@length,w
  2065  1397  0277               	subwf	UART_Read_Text@i_230,w
  2066  1398                     u3835:	
  2067  1398  1803               	btfsc	3,0
  2068  1399  0008               	return
  2069                           
  2070                           ;USART.c: 48:   Output[i] = UART_Read();
  2071  139A  120A  118A  27F9  160A  118A  	fcall	_UART_Read
  2072  139F  00F4               	movwf	??_UART_Read_Text
  2073  13A0  0877               	movf	UART_Read_Text@i_230,w
  2074  13A1  0776               	addwf	UART_Read_Text@Output,w
  2075  13A2  00F5               	movwf	??_UART_Read_Text+1
  2076  13A3  0875               	movf	??_UART_Read_Text+1,w
  2077  13A4  0084               	movwf	4
  2078  13A5  0874               	movf	??_UART_Read_Text,w
  2079  13A6  1383               	bcf	3,7	;select IRP bank0
  2080  13A7  0080               	movwf	0
  2081  13A8  3001               	movlw	1
  2082  13A9  07F7               	addwf	UART_Read_Text@i_230,f
  2083  13AA  1803               	skipnc
  2084  13AB  0AF8               	incf	UART_Read_Text@i_230+1,f
  2085  13AC  3000               	movlw	0
  2086  13AD  07F8               	addwf	UART_Read_Text@i_230+1,f
  2087  13AE  2B92               	goto	l2739
  2088  13AF                     __end_of_UART_Read_Text:	
  2089                           
  2090                           	psect	text6
  2091  07F9                     __ptext6:	
  2092 ;; *************** function _UART_Read *****************
  2093 ;; Defined at:
  2094 ;;		line 37 in file "USART.c"
  2095 ;; Parameters:    Size  Location     Type
  2096 ;;		None
  2097 ;; Auto vars:     Size  Location     Type
  2098 ;;		None
  2099 ;; Return value:  Size  Location     Type
  2100 ;;                  1    wreg      unsigned char 
  2101 ;; Registers used:
  2102 ;;		wreg
  2103 ;; Tracked objects:
  2104 ;;		On entry : 0/0
  2105 ;;		On exit  : 0/0
  2106 ;;		Unchanged: 0/0
  2107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2108 ;;      Params:         0       0       0       0       0
  2109 ;;      Locals:         0       0       0       0       0
  2110 ;;      Temps:          0       0       0       0       0
  2111 ;;      Totals:         0       0       0       0       0
  2112 ;;Total ram usage:        0 bytes
  2113 ;; Hardware stack levels used:    1
  2114 ;; Hardware stack levels required when called:    1
  2115 ;; This function calls:
  2116 ;;		Nothing
  2117 ;; This function is called by:
  2118 ;;		_main
  2119 ;;		_UART_Read_Text
  2120 ;; This function uses a non-reentrant model
  2121 ;;
  2122                           
  2123                           
  2124                           ;psect for function _UART_Read
  2125  07F9                     _UART_Read:	
  2126  07F9                     l292:	
  2127                           ;USART.c: 40:   while(!RCIF);
  2128                           
  2129                           ;incstack = 0
  2130                           ; Regs used in _UART_Read: [wreg]
  2131                           
  2132  07F9  1283               	bcf	3,5	;RP0=0, select bank0
  2133  07FA  1303               	bcf	3,6	;RP1=0, select bank0
  2134  07FB  1E8C               	btfss	12,5	;volatile
  2135  07FC  2FF9               	goto	l292
  2136                           
  2137                           ;USART.c: 41:   return RCREG;
  2138  07FD  081A               	movf	26,w	;volatile
  2139  07FE  0008               	return
  2140  07FF                     __end_of_UART_Read:	
  2141                           
  2142                           	psect	text7
  2143  0840                     __ptext7:	
  2144 ;; *************** function _UART_Init *****************
  2145 ;; Defined at:
  2146 ;;		line 5 in file "USART.c"
  2147 ;; Parameters:    Size  Location     Type
  2148 ;;  baudrate        4    6[BANK0 ] const long 
  2149 ;; Auto vars:     Size  Location     Type
  2150 ;;  x               2   22[BANK0 ] unsigned int 
  2151 ;; Return value:  Size  Location     Type
  2152 ;;                  1    wreg      unsigned char 
  2153 ;; Registers used:
  2154 ;;		wreg, status,2, status,0, pclath, cstack
  2155 ;; Tracked objects:
  2156 ;;		On entry : 0/0
  2157 ;;		On exit  : 0/0
  2158 ;;		Unchanged: 0/0
  2159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2160 ;;      Params:         0       4       0       0       0
  2161 ;;      Locals:         0       2       0       0       0
  2162 ;;      Temps:          0      12       0       0       0
  2163 ;;      Totals:         0      18       0       0       0
  2164 ;;Total ram usage:       18 bytes
  2165 ;; Hardware stack levels used:    1
  2166 ;; Hardware stack levels required when called:    2
  2167 ;; This function calls:
  2168 ;;		___aldiv
  2169 ;; This function is called by:
  2170 ;;		_main
  2171 ;; This function uses a non-reentrant model
  2172 ;;
  2173                           
  2174                           
  2175                           ;psect for function _UART_Init
  2176  0840                     _UART_Init:	
  2177                           
  2178                           ;USART.c: 5: char UART_Init(const long int baudrate);USART.c: 6: {;USART.c: 7:  unsigned
      +                           int x;;USART.c: 8:  x = (20000000 - baudrate*64)/(baudrate*64);
  2179                           
  2180                           ;incstack = 0
  2181                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  2182  0840  1283               	bcf	3,5	;RP0=0, select bank0
  2183  0841  1303               	bcf	3,6	;RP1=0, select bank0
  2184  0842  0826               	movf	UART_Init@baudrate,w
  2185  0843  00AA               	movwf	??_UART_Init
  2186  0844  0827               	movf	UART_Init@baudrate+1,w
  2187  0845  00AB               	movwf	??_UART_Init+1
  2188  0846  0828               	movf	UART_Init@baudrate+2,w
  2189  0847  00AC               	movwf	??_UART_Init+2
  2190  0848  0829               	movf	UART_Init@baudrate+3,w
  2191  0849  00AD               	movwf	??_UART_Init+3
  2192  084A  3006               	movlw	6
  2193  084B                     u3705:	
  2194  084B  1003               	clrc
  2195  084C  0DAA               	rlf	??_UART_Init,f
  2196  084D  0DAB               	rlf	??_UART_Init+1,f
  2197  084E  0DAC               	rlf	??_UART_Init+2,f
  2198  084F  0DAD               	rlf	??_UART_Init+3,f
  2199  0850  3EFF               	addlw	-1
  2200  0851  1D03               	skipz
  2201  0852  284B               	goto	u3705
  2202  0853  082D               	movf	??_UART_Init+3,w
  2203  0854  00F5               	movwf	___aldiv@divisor+3
  2204  0855  082C               	movf	??_UART_Init+2,w
  2205  0856  00F4               	movwf	___aldiv@divisor+2
  2206  0857  082B               	movf	??_UART_Init+1,w
  2207  0858  00F3               	movwf	___aldiv@divisor+1
  2208  0859  082A               	movf	??_UART_Init,w
  2209  085A  00F2               	movwf	___aldiv@divisor
  2210  085B  0826               	movf	UART_Init@baudrate,w
  2211  085C  00AE               	movwf	??_UART_Init+4
  2212  085D  0827               	movf	UART_Init@baudrate+1,w
  2213  085E  00AF               	movwf	??_UART_Init+5
  2214  085F  0828               	movf	UART_Init@baudrate+2,w
  2215  0860  00B0               	movwf	??_UART_Init+6
  2216  0861  0829               	movf	UART_Init@baudrate+3,w
  2217  0862  00B1               	movwf	??_UART_Init+7
  2218  0863  3006               	movlw	6
  2219  0864                     u3715:	
  2220  0864  1003               	clrc
  2221  0865  0DAE               	rlf	??_UART_Init+4,f
  2222  0866  0DAF               	rlf	??_UART_Init+5,f
  2223  0867  0DB0               	rlf	??_UART_Init+6,f
  2224  0868  0DB1               	rlf	??_UART_Init+7,f
  2225  0869  3EFF               	addlw	-1
  2226  086A  1D03               	skipz
  2227  086B  2864               	goto	u3715
  2228  086C  3000               	movlw	0
  2229  086D  00B2               	movwf	??_UART_Init+8
  2230  086E  302D               	movlw	45
  2231  086F  00B3               	movwf	??_UART_Init+9
  2232  0870  3031               	movlw	49
  2233  0871  00B4               	movwf	??_UART_Init+10
  2234  0872  3001               	movlw	1
  2235  0873  00B5               	movwf	??_UART_Init+11
  2236  0874  082E               	movf	??_UART_Init+4,w
  2237  0875  02B2               	subwf	??_UART_Init+8,f
  2238  0876  082F               	movf	??_UART_Init+5,w
  2239  0877  1C03               	skipc
  2240  0878  0F2F               	incfsz	??_UART_Init+5,w
  2241  0879  287B               	goto	u3721
  2242  087A  287C               	goto	u3722
  2243  087B                     u3721:	
  2244  087B  02B3               	subwf	??_UART_Init+9,f
  2245  087C                     u3722:	
  2246  087C  0830               	movf	??_UART_Init+6,w
  2247  087D  1C03               	skipc
  2248  087E  0F30               	incfsz	??_UART_Init+6,w
  2249  087F  2881               	goto	u3723
  2250  0880  2882               	goto	u3724
  2251  0881                     u3723:	
  2252  0881  02B4               	subwf	??_UART_Init+10,f
  2253  0882                     u3724:	
  2254  0882  0831               	movf	??_UART_Init+7,w
  2255  0883  1C03               	skipc
  2256  0884  0F31               	incfsz	??_UART_Init+7,w
  2257  0885  2887               	goto	u3725
  2258  0886  2888               	goto	u3726
  2259  0887                     u3725:	
  2260  0887  02B5               	subwf	??_UART_Init+11,f
  2261  0888                     u3726:	
  2262  0888  0835               	movf	??_UART_Init+11,w
  2263  0889  00F9               	movwf	___aldiv@dividend+3
  2264  088A  0834               	movf	??_UART_Init+10,w
  2265  088B  00F8               	movwf	___aldiv@dividend+2
  2266  088C  0833               	movf	??_UART_Init+9,w
  2267  088D  00F7               	movwf	___aldiv@dividend+1
  2268  088E  0832               	movf	??_UART_Init+8,w
  2269  088F  00F6               	movwf	___aldiv@dividend
  2270  0890  160A  118A  2637  120A  158A  	fcall	___aldiv
  2271  0895  0873               	movf	?___aldiv+1,w
  2272  0896  1283               	bcf	3,5	;RP0=0, select bank0
  2273  0897  1303               	bcf	3,6	;RP1=0, select bank0
  2274  0898  00B7               	movwf	UART_Init@x+1
  2275  0899  0872               	movf	?___aldiv,w
  2276  089A  00B6               	movwf	UART_Init@x
  2277                           
  2278                           ;USART.c: 9:  if(x>255)
  2279  089B  3001               	movlw	1
  2280  089C  0237               	subwf	UART_Init@x+1,w
  2281  089D  3000               	movlw	0
  2282  089E  1903               	skipnz
  2283  089F  0236               	subwf	UART_Init@x,w
  2284  08A0  1C03               	skipc
  2285  08A1  28FE               	goto	l2659
  2286                           
  2287                           ;USART.c: 10:  {;USART.c: 11:   x = (20000000 - baudrate*16)/(baudrate*16);
  2288  08A2  0826               	movf	UART_Init@baudrate,w
  2289  08A3  00AA               	movwf	??_UART_Init
  2290  08A4  0827               	movf	UART_Init@baudrate+1,w
  2291  08A5  00AB               	movwf	??_UART_Init+1
  2292  08A6  0828               	movf	UART_Init@baudrate+2,w
  2293  08A7  00AC               	movwf	??_UART_Init+2
  2294  08A8  0829               	movf	UART_Init@baudrate+3,w
  2295  08A9  00AD               	movwf	??_UART_Init+3
  2296  08AA  3004               	movlw	4
  2297  08AB                     u3745:	
  2298  08AB  1003               	clrc
  2299  08AC  0DAA               	rlf	??_UART_Init,f
  2300  08AD  0DAB               	rlf	??_UART_Init+1,f
  2301  08AE  0DAC               	rlf	??_UART_Init+2,f
  2302  08AF  0DAD               	rlf	??_UART_Init+3,f
  2303  08B0  3EFF               	addlw	-1
  2304  08B1  1D03               	skipz
  2305  08B2  28AB               	goto	u3745
  2306  08B3  082D               	movf	??_UART_Init+3,w
  2307  08B4  00F5               	movwf	___aldiv@divisor+3
  2308  08B5  082C               	movf	??_UART_Init+2,w
  2309  08B6  00F4               	movwf	___aldiv@divisor+2
  2310  08B7  082B               	movf	??_UART_Init+1,w
  2311  08B8  00F3               	movwf	___aldiv@divisor+1
  2312  08B9  082A               	movf	??_UART_Init,w
  2313  08BA  00F2               	movwf	___aldiv@divisor
  2314  08BB  0826               	movf	UART_Init@baudrate,w
  2315  08BC  00AE               	movwf	??_UART_Init+4
  2316  08BD  0827               	movf	UART_Init@baudrate+1,w
  2317  08BE  00AF               	movwf	??_UART_Init+5
  2318  08BF  0828               	movf	UART_Init@baudrate+2,w
  2319  08C0  00B0               	movwf	??_UART_Init+6
  2320  08C1  0829               	movf	UART_Init@baudrate+3,w
  2321  08C2  00B1               	movwf	??_UART_Init+7
  2322  08C3  3004               	movlw	4
  2323  08C4                     u3755:	
  2324  08C4  1003               	clrc
  2325  08C5  0DAE               	rlf	??_UART_Init+4,f
  2326  08C6  0DAF               	rlf	??_UART_Init+5,f
  2327  08C7  0DB0               	rlf	??_UART_Init+6,f
  2328  08C8  0DB1               	rlf	??_UART_Init+7,f
  2329  08C9  3EFF               	addlw	-1
  2330  08CA  1D03               	skipz
  2331  08CB  28C4               	goto	u3755
  2332  08CC  3000               	movlw	0
  2333  08CD  00B2               	movwf	??_UART_Init+8
  2334  08CE  302D               	movlw	45
  2335  08CF  00B3               	movwf	??_UART_Init+9
  2336  08D0  3031               	movlw	49
  2337  08D1  00B4               	movwf	??_UART_Init+10
  2338  08D2  3001               	movlw	1
  2339  08D3  00B5               	movwf	??_UART_Init+11
  2340  08D4  082E               	movf	??_UART_Init+4,w
  2341  08D5  02B2               	subwf	??_UART_Init+8,f
  2342  08D6  082F               	movf	??_UART_Init+5,w
  2343  08D7  1C03               	skipc
  2344  08D8  0F2F               	incfsz	??_UART_Init+5,w
  2345  08D9  28DB               	goto	u3761
  2346  08DA  28DC               	goto	u3762
  2347  08DB                     u3761:	
  2348  08DB  02B3               	subwf	??_UART_Init+9,f
  2349  08DC                     u3762:	
  2350  08DC  0830               	movf	??_UART_Init+6,w
  2351  08DD  1C03               	skipc
  2352  08DE  0F30               	incfsz	??_UART_Init+6,w
  2353  08DF  28E1               	goto	u3763
  2354  08E0  28E2               	goto	u3764
  2355  08E1                     u3763:	
  2356  08E1  02B4               	subwf	??_UART_Init+10,f
  2357  08E2                     u3764:	
  2358  08E2  0831               	movf	??_UART_Init+7,w
  2359  08E3  1C03               	skipc
  2360  08E4  0F31               	incfsz	??_UART_Init+7,w
  2361  08E5  28E7               	goto	u3765
  2362  08E6  28E8               	goto	u3766
  2363  08E7                     u3765:	
  2364  08E7  02B5               	subwf	??_UART_Init+11,f
  2365  08E8                     u3766:	
  2366  08E8  0835               	movf	??_UART_Init+11,w
  2367  08E9  00F9               	movwf	___aldiv@dividend+3
  2368  08EA  0834               	movf	??_UART_Init+10,w
  2369  08EB  00F8               	movwf	___aldiv@dividend+2
  2370  08EC  0833               	movf	??_UART_Init+9,w
  2371  08ED  00F7               	movwf	___aldiv@dividend+1
  2372  08EE  0832               	movf	??_UART_Init+8,w
  2373  08EF  00F6               	movwf	___aldiv@dividend
  2374  08F0  160A  118A  2637  120A  158A  	fcall	___aldiv
  2375  08F5  0873               	movf	?___aldiv+1,w
  2376  08F6  1283               	bcf	3,5	;RP0=0, select bank0
  2377  08F7  1303               	bcf	3,6	;RP1=0, select bank0
  2378  08F8  00B7               	movwf	UART_Init@x+1
  2379  08F9  0872               	movf	?___aldiv,w
  2380  08FA  00B6               	movwf	UART_Init@x
  2381                           
  2382                           ;USART.c: 12:   BRGH = 1;
  2383  08FB  1683               	bsf	3,5	;RP0=1, select bank1
  2384  08FC  1303               	bcf	3,6	;RP1=0, select bank1
  2385  08FD  1518               	bsf	24,2	;volatile
  2386  08FE                     l2659:	
  2387                           
  2388                           ;USART.c: 14:  if(x<256)
  2389  08FE  3001               	movlw	1
  2390  08FF  1283               	bcf	3,5	;RP0=0, select bank0
  2391  0900  0237               	subwf	UART_Init@x+1,w
  2392  0901  3000               	movlw	0
  2393  0902  1903               	skipnz
  2394  0903  0236               	subwf	UART_Init@x,w
  2395  0904  1803               	skipnc
  2396  0905  0008               	return
  2397                           
  2398                           ;USART.c: 15:  {;USART.c: 16:    SPBRG = x;
  2399  0906  0836               	movf	UART_Init@x,w
  2400  0907  1683               	bsf	3,5	;RP0=1, select bank1
  2401  0908  1303               	bcf	3,6	;RP1=0, select bank1
  2402  0909  0099               	movwf	25	;volatile
  2403                           
  2404                           ;USART.c: 17:    SYNC = 0;
  2405  090A  1218               	bcf	24,4	;volatile
  2406                           
  2407                           ;USART.c: 18:    SPEN = 1;
  2408  090B  1283               	bcf	3,5	;RP0=0, select bank0
  2409  090C  1303               	bcf	3,6	;RP1=0, select bank0
  2410  090D  1798               	bsf	24,7	;volatile
  2411                           
  2412                           ;USART.c: 19:       TRISC7 = 1;
  2413  090E  1683               	bsf	3,5	;RP0=1, select bank1
  2414  090F  1303               	bcf	3,6	;RP1=0, select bank1
  2415  0910  1787               	bsf	7,7	;volatile
  2416                           
  2417                           ;USART.c: 20:       TRISC6 = 0;
  2418  0911  1307               	bcf	7,6	;volatile
  2419                           
  2420                           ;USART.c: 21:       CREN = 1;
  2421  0912  1283               	bcf	3,5	;RP0=0, select bank0
  2422  0913  1303               	bcf	3,6	;RP1=0, select bank0
  2423  0914  1618               	bsf	24,4	;volatile
  2424                           
  2425                           ;USART.c: 22:       TXEN = 1;
  2426  0915  1683               	bsf	3,5	;RP0=1, select bank1
  2427  0916  1303               	bcf	3,6	;RP1=0, select bank1
  2428  0917  1698               	bsf	24,5	;volatile
  2429  0918  0008               	return
  2430  0919                     __end_of_UART_Init:	
  2431                           
  2432                           	psect	text8
  2433  1637                     __ptext8:	
  2434 ;; *************** function ___aldiv *****************
  2435 ;; Defined at:
  2436 ;;		line 5 in file "D:\Mplab X\xc8\pic\sources\c90\common\aldiv.c"
  2437 ;; Parameters:    Size  Location     Type
  2438 ;;  divisor         4    2[COMMON] long 
  2439 ;;  dividend        4    6[COMMON] long 
  2440 ;; Auto vars:     Size  Location     Type
  2441 ;;  quotient        4    2[BANK0 ] long 
  2442 ;;  sign            1    1[BANK0 ] unsigned char 
  2443 ;;  counter         1    0[BANK0 ] unsigned char 
  2444 ;; Return value:  Size  Location     Type
  2445 ;;                  4    2[COMMON] long 
  2446 ;; Registers used:
  2447 ;;		wreg, status,2, status,0
  2448 ;; Tracked objects:
  2449 ;;		On entry : 0/0
  2450 ;;		On exit  : 0/0
  2451 ;;		Unchanged: 0/0
  2452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2453 ;;      Params:         8       0       0       0       0
  2454 ;;      Locals:         0       6       0       0       0
  2455 ;;      Temps:          1       0       0       0       0
  2456 ;;      Totals:         9       6       0       0       0
  2457 ;;Total ram usage:       15 bytes
  2458 ;; Hardware stack levels used:    1
  2459 ;; Hardware stack levels required when called:    1
  2460 ;; This function calls:
  2461 ;;		Nothing
  2462 ;; This function is called by:
  2463 ;;		_UART_Init
  2464 ;; This function uses a non-reentrant model
  2465 ;;
  2466                           
  2467                           
  2468                           ;psect for function ___aldiv
  2469  1637                     ___aldiv:	
  2470                           
  2471                           ;incstack = 0
  2472                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  2473  1637  1283               	bcf	3,5	;RP0=0, select bank0
  2474  1638  1303               	bcf	3,6	;RP1=0, select bank0
  2475  1639  01A1               	clrf	___aldiv@sign
  2476  163A  1FF5               	btfss	___aldiv@divisor+3,7
  2477  163B  2E49               	goto	l464
  2478  163C  09F2               	comf	___aldiv@divisor,f
  2479  163D  09F3               	comf	___aldiv@divisor+1,f
  2480  163E  09F4               	comf	___aldiv@divisor+2,f
  2481  163F  09F5               	comf	___aldiv@divisor+3,f
  2482  1640  0AF2               	incf	___aldiv@divisor,f
  2483  1641  1903               	skipnz
  2484  1642  0AF3               	incf	___aldiv@divisor+1,f
  2485  1643  1903               	skipnz
  2486  1644  0AF4               	incf	___aldiv@divisor+2,f
  2487  1645  1903               	skipnz
  2488  1646  0AF5               	incf	___aldiv@divisor+3,f
  2489  1647  01A1               	clrf	___aldiv@sign
  2490  1648  0AA1               	incf	___aldiv@sign,f
  2491  1649                     l464:	
  2492  1649  1FF9               	btfss	___aldiv@dividend+3,7
  2493  164A  2E5A               	goto	l2223
  2494  164B  09F6               	comf	___aldiv@dividend,f
  2495  164C  09F7               	comf	___aldiv@dividend+1,f
  2496  164D  09F8               	comf	___aldiv@dividend+2,f
  2497  164E  09F9               	comf	___aldiv@dividend+3,f
  2498  164F  0AF6               	incf	___aldiv@dividend,f
  2499  1650  1903               	skipnz
  2500  1651  0AF7               	incf	___aldiv@dividend+1,f
  2501  1652  1903               	skipnz
  2502  1653  0AF8               	incf	___aldiv@dividend+2,f
  2503  1654  1903               	skipnz
  2504  1655  0AF9               	incf	___aldiv@dividend+3,f
  2505  1656  3001               	movlw	1
  2506  1657  00FA               	movwf	??___aldiv
  2507  1658  087A               	movf	??___aldiv,w
  2508  1659  06A1               	xorwf	___aldiv@sign,f
  2509  165A                     l2223:	
  2510  165A  3000               	movlw	0
  2511  165B  00A5               	movwf	___aldiv@quotient+3
  2512  165C  3000               	movlw	0
  2513  165D  00A4               	movwf	___aldiv@quotient+2
  2514  165E  3000               	movlw	0
  2515  165F  00A3               	movwf	___aldiv@quotient+1
  2516  1660  3000               	movlw	0
  2517  1661  00A2               	movwf	___aldiv@quotient
  2518  1662  0875               	movf	___aldiv@divisor+3,w
  2519  1663  0474               	iorwf	___aldiv@divisor+2,w
  2520  1664  0473               	iorwf	___aldiv@divisor+1,w
  2521  1665  0472               	iorwf	___aldiv@divisor,w
  2522  1666  1903               	skipnz
  2523  1667  2EAF               	goto	l2245
  2524  1668  01A0               	clrf	___aldiv@counter
  2525  1669  0AA0               	incf	___aldiv@counter,f
  2526  166A                     l2231:	
  2527  166A  1BF5               	btfsc	___aldiv@divisor+3,7
  2528  166B  2E7A               	goto	l2233
  2529  166C  3001               	movlw	1
  2530  166D  00FA               	movwf	??___aldiv
  2531  166E                     u2665:	
  2532  166E  1003               	clrc
  2533  166F  0DF2               	rlf	___aldiv@divisor,f
  2534  1670  0DF3               	rlf	___aldiv@divisor+1,f
  2535  1671  0DF4               	rlf	___aldiv@divisor+2,f
  2536  1672  0DF5               	rlf	___aldiv@divisor+3,f
  2537  1673  0BFA               	decfsz	??___aldiv,f
  2538  1674  2E6E               	goto	u2665
  2539  1675  3001               	movlw	1
  2540  1676  00FA               	movwf	??___aldiv
  2541  1677  087A               	movf	??___aldiv,w
  2542  1678  07A0               	addwf	___aldiv@counter,f
  2543  1679  2E6A               	goto	l2231
  2544  167A                     l2233:	
  2545  167A  3001               	movlw	1
  2546  167B  00FA               	movwf	??___aldiv
  2547  167C                     u2685:	
  2548  167C  1003               	clrc
  2549  167D  0DA2               	rlf	___aldiv@quotient,f
  2550  167E  0DA3               	rlf	___aldiv@quotient+1,f
  2551  167F  0DA4               	rlf	___aldiv@quotient+2,f
  2552  1680  0DA5               	rlf	___aldiv@quotient+3,f
  2553  1681  0BFA               	decfsz	??___aldiv,f
  2554  1682  2E7C               	goto	u2685
  2555  1683  0875               	movf	___aldiv@divisor+3,w
  2556  1684  0279               	subwf	___aldiv@dividend+3,w
  2557  1685  1D03               	skipz
  2558  1686  2E91               	goto	u2695
  2559  1687  0874               	movf	___aldiv@divisor+2,w
  2560  1688  0278               	subwf	___aldiv@dividend+2,w
  2561  1689  1D03               	skipz
  2562  168A  2E91               	goto	u2695
  2563  168B  0873               	movf	___aldiv@divisor+1,w
  2564  168C  0277               	subwf	___aldiv@dividend+1,w
  2565  168D  1D03               	skipz
  2566  168E  2E91               	goto	u2695
  2567  168F  0872               	movf	___aldiv@divisor,w
  2568  1690  0276               	subwf	___aldiv@dividend,w
  2569  1691                     u2695:	
  2570  1691  1C03               	skipc
  2571  1692  2EA2               	goto	l2241
  2572  1693  0872               	movf	___aldiv@divisor,w
  2573  1694  02F6               	subwf	___aldiv@dividend,f
  2574  1695  0873               	movf	___aldiv@divisor+1,w
  2575  1696  1C03               	skipc
  2576  1697  0F73               	incfsz	___aldiv@divisor+1,w
  2577  1698  02F7               	subwf	___aldiv@dividend+1,f
  2578  1699  0874               	movf	___aldiv@divisor+2,w
  2579  169A  1C03               	skipc
  2580  169B  0F74               	incfsz	___aldiv@divisor+2,w
  2581  169C  02F8               	subwf	___aldiv@dividend+2,f
  2582  169D  0875               	movf	___aldiv@divisor+3,w
  2583  169E  1C03               	skipc
  2584  169F  0F75               	incfsz	___aldiv@divisor+3,w
  2585  16A0  02F9               	subwf	___aldiv@dividend+3,f
  2586  16A1  1422               	bsf	___aldiv@quotient,0
  2587  16A2                     l2241:	
  2588  16A2  3001               	movlw	1
  2589  16A3                     u2705:	
  2590  16A3  1003               	clrc
  2591  16A4  0CF5               	rrf	___aldiv@divisor+3,f
  2592  16A5  0CF4               	rrf	___aldiv@divisor+2,f
  2593  16A6  0CF3               	rrf	___aldiv@divisor+1,f
  2594  16A7  0CF2               	rrf	___aldiv@divisor,f
  2595  16A8  3EFF               	addlw	-1
  2596  16A9  1D03               	skipz
  2597  16AA  2EA3               	goto	u2705
  2598  16AB  3001               	movlw	1
  2599  16AC  02A0               	subwf	___aldiv@counter,f
  2600  16AD  1D03               	btfss	3,2
  2601  16AE  2E7A               	goto	l2233
  2602  16AF                     l2245:	
  2603  16AF  0821               	movf	___aldiv@sign,w
  2604  16B0  1903               	btfsc	3,2
  2605  16B1  2EBD               	goto	l2249
  2606  16B2  09A2               	comf	___aldiv@quotient,f
  2607  16B3  09A3               	comf	___aldiv@quotient+1,f
  2608  16B4  09A4               	comf	___aldiv@quotient+2,f
  2609  16B5  09A5               	comf	___aldiv@quotient+3,f
  2610  16B6  0AA2               	incf	___aldiv@quotient,f
  2611  16B7  1903               	skipnz
  2612  16B8  0AA3               	incf	___aldiv@quotient+1,f
  2613  16B9  1903               	skipnz
  2614  16BA  0AA4               	incf	___aldiv@quotient+2,f
  2615  16BB  1903               	skipnz
  2616  16BC  0AA5               	incf	___aldiv@quotient+3,f
  2617  16BD                     l2249:	
  2618  16BD  0825               	movf	___aldiv@quotient+3,w
  2619  16BE  00F5               	movwf	?___aldiv+3
  2620  16BF  0824               	movf	___aldiv@quotient+2,w
  2621  16C0  00F4               	movwf	?___aldiv+2
  2622  16C1  0823               	movf	___aldiv@quotient+1,w
  2623  16C2  00F3               	movwf	?___aldiv+1
  2624  16C3  0822               	movf	___aldiv@quotient,w
  2625  16C4  00F2               	movwf	?___aldiv
  2626  16C5  0008               	return
  2627  16C6                     __end_of___aldiv:	
  2628                           
  2629                           	psect	text9
  2630  132B                     __ptext9:	
  2631 ;; *************** function _Timer1_Init *****************
  2632 ;; Defined at:
  2633 ;;		line 145 in file "ADC.c"
  2634 ;; Parameters:    Size  Location     Type
  2635 ;;		None
  2636 ;; Auto vars:     Size  Location     Type
  2637 ;;		None
  2638 ;; Return value:  Size  Location     Type
  2639 ;;                  1    wreg      void 
  2640 ;; Registers used:
  2641 ;;		status,2
  2642 ;; Tracked objects:
  2643 ;;		On entry : 0/0
  2644 ;;		On exit  : 0/0
  2645 ;;		Unchanged: 0/0
  2646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2647 ;;      Params:         0       0       0       0       0
  2648 ;;      Locals:         0       0       0       0       0
  2649 ;;      Temps:          0       0       0       0       0
  2650 ;;      Totals:         0       0       0       0       0
  2651 ;;Total ram usage:        0 bytes
  2652 ;; Hardware stack levels used:    1
  2653 ;; Hardware stack levels required when called:    1
  2654 ;; This function calls:
  2655 ;;		Nothing
  2656 ;; This function is called by:
  2657 ;;		_main
  2658 ;; This function uses a non-reentrant model
  2659 ;;
  2660                           
  2661                           
  2662                           ;psect for function _Timer1_Init
  2663  132B                     _Timer1_Init:	
  2664                           
  2665                           ;ADC.c: 147:     TMR1H=0x0;
  2666                           
  2667                           ;incstack = 0
  2668                           ; Regs used in _Timer1_Init: [status,2]
  2669  132B  1283               	bcf	3,5	;RP0=0, select bank0
  2670  132C  1303               	bcf	3,6	;RP1=0, select bank0
  2671  132D  018F               	clrf	15	;volatile
  2672                           
  2673                           ;ADC.c: 148:     TMR1L=0x0;
  2674  132E  018E               	clrf	14	;volatile
  2675                           
  2676                           ;ADC.c: 150:     T1CKPS1 = 1;
  2677  132F  1690               	bsf	16,5	;volatile
  2678                           
  2679                           ;ADC.c: 151:     T1CKPS0 = 1;
  2680  1330  1610               	bsf	16,4	;volatile
  2681                           
  2682                           ;ADC.c: 152:     T1OSCEN = 0;
  2683  1331  1190               	bcf	16,3	;volatile
  2684                           
  2685                           ;ADC.c: 153:     T1SYNC = 0;
  2686  1332  1110               	bcf	16,2	;volatile
  2687                           
  2688                           ;ADC.c: 154:     TMR1CS = 0;
  2689  1333  1090               	bcf	16,1	;volatile
  2690                           
  2691                           ;ADC.c: 156:     TMR1IE = 0;
  2692  1334  1683               	bsf	3,5	;RP0=1, select bank1
  2693  1335  1303               	bcf	3,6	;RP1=0, select bank1
  2694  1336  100C               	bcf	12,0	;volatile
  2695                           
  2696                           ;ADC.c: 158:     TMR1ON = 0;
  2697  1337  1283               	bcf	3,5	;RP0=0, select bank0
  2698  1338  1303               	bcf	3,6	;RP1=0, select bank0
  2699  1339  1010               	bcf	16,0	;volatile
  2700  133A  0008               	return
  2701  133B                     __end_of_Timer1_Init:	
  2702                           
  2703                           	psect	text10
  2704  1480                     __ptext10:	
  2705 ;; *************** function _Read_ADC *****************
  2706 ;; Defined at:
  2707 ;;		line 134 in file "ADC.c"
  2708 ;; Parameters:    Size  Location     Type
  2709 ;;  channel         1    wreg     unsigned char 
  2710 ;; Auto vars:     Size  Location     Type
  2711 ;;  channel         1   10[COMMON] unsigned char 
  2712 ;;  N               2    8[COMMON] unsigned int 
  2713 ;; Return value:  Size  Location     Type
  2714 ;;                  2    2[COMMON] unsigned int 
  2715 ;; Registers used:
  2716 ;;		wreg, status,2, status,0
  2717 ;; Tracked objects:
  2718 ;;		On entry : 0/0
  2719 ;;		On exit  : 0/0
  2720 ;;		Unchanged: 0/0
  2721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2722 ;;      Params:         2       0       0       0       0
  2723 ;;      Locals:         3       0       0       0       0
  2724 ;;      Temps:          4       0       0       0       0
  2725 ;;      Totals:         9       0       0       0       0
  2726 ;;Total ram usage:        9 bytes
  2727 ;; Hardware stack levels used:    1
  2728 ;; Hardware stack levels required when called:    1
  2729 ;; This function calls:
  2730 ;;		Nothing
  2731 ;; This function is called by:
  2732 ;;		_main
  2733 ;; This function uses a non-reentrant model
  2734 ;;
  2735                           
  2736                           
  2737                           ;psect for function _Read_ADC
  2738  1480                     _Read_ADC:	
  2739                           
  2740                           ;incstack = 0
  2741                           ; Regs used in _Read_ADC: [wreg+status,2+status,0]
  2742                           ;Read_ADC@channel stored from wreg
  2743  1480  00FA               	movwf	Read_ADC@channel
  2744                           
  2745                           ;ADC.c: 134: unsigned int Read_ADC(unsigned char channel);ADC.c: 135: {;ADC.c: 136:     
      +                          unsigned int N;;ADC.c: 137:     if(channel > 3) return 0;
  2746  1481  3004               	movlw	4
  2747  1482  027A               	subwf	Read_ADC@channel,w
  2748  1483  1C03               	skipc
  2749  1484  2C88               	goto	l2747
  2750  1485  01F2               	clrf	?_Read_ADC
  2751  1486  01F3               	clrf	?_Read_ADC+1
  2752  1487  0008               	return
  2753  1488                     l2747:	
  2754                           
  2755                           ;ADC.c: 138:     ADCON0 |= channel << 3;
  2756  1488  087A               	movf	Read_ADC@channel,w	;volatile
  2757  1489  00F4               	movwf	??_Read_ADC
  2758  148A  3002               	movlw	2
  2759  148B                     u3855:	
  2760  148B  1003               	clrc
  2761  148C  0DF4               	rlf	??_Read_ADC,f
  2762  148D  3EFF               	addlw	-1
  2763  148E  1D03               	skipz
  2764  148F  2C8B               	goto	u3855
  2765  1490  1003               	clrc
  2766  1491  0D74               	rlf	??_Read_ADC,w
  2767  1492  00F5               	movwf	??_Read_ADC+1
  2768  1493  0875               	movf	??_Read_ADC+1,w
  2769  1494  1283               	bcf	3,5	;RP0=0, select bank0
  2770  1495  1303               	bcf	3,6	;RP1=0, select bank0
  2771  1496  049F               	iorwf	31,f	;volatile
  2772                           
  2773                           ;ADC.c: 139:     _delay((unsigned long)((10)*(20000000/4000000.0)));
  2774  1497  3010               	movlw	16
  2775  1498  00F4               	movwf	??_Read_ADC
  2776  1499                     u4177:	
  2777  1499  0BF4               	decfsz	??_Read_ADC,f
  2778  149A  2C99               	goto	u4177
  2779  149B  0000               	nop
  2780                           
  2781                           ;ADC.c: 140:     GO_nDONE = 1;
  2782  149C  1283               	bcf	3,5	;RP0=0, select bank0
  2783  149D  1303               	bcf	3,6	;RP1=0, select bank0
  2784  149E  151F               	bsf	31,2	;volatile
  2785  149F                     l176:	
  2786                           ;ADC.c: 141:     while(GO_nDONE);
  2787                           
  2788  149F  191F               	btfsc	31,2	;volatile
  2789  14A0  2C9F               	goto	l176
  2790                           
  2791                           ;ADC.c: 142:     N = ADRESH;
  2792  14A1  081E               	movf	30,w	;volatile
  2793  14A2  00F4               	movwf	??_Read_ADC
  2794  14A3  01F5               	clrf	??_Read_ADC+1
  2795  14A4  0874               	movf	??_Read_ADC,w
  2796  14A5  00F8               	movwf	Read_ADC@N
  2797  14A6  0875               	movf	??_Read_ADC+1,w
  2798  14A7  00F9               	movwf	Read_ADC@N+1
  2799                           
  2800                           ;ADC.c: 143:     return ((N<<8)+ADRESL);
  2801  14A8  0878               	movf	Read_ADC@N,w
  2802  14A9  00F5               	movwf	??_Read_ADC+1
  2803  14AA  01F4               	clrf	??_Read_ADC
  2804  14AB  1683               	bsf	3,5	;RP0=1, select bank1
  2805  14AC  1303               	bcf	3,6	;RP1=0, select bank1
  2806  14AD  081E               	movf	30,w	;volatile
  2807  14AE  0774               	addwf	??_Read_ADC,w
  2808  14AF  00F6               	movwf	??_Read_ADC+2
  2809  14B0  3000               	movlw	0
  2810  14B1  1803               	skipnc
  2811  14B2  3001               	movlw	1
  2812  14B3  0775               	addwf	??_Read_ADC+1,w
  2813  14B4  00F7               	movwf	??_Read_ADC+3
  2814  14B5  0876               	movf	??_Read_ADC+2,w
  2815  14B6  00F2               	movwf	?_Read_ADC
  2816  14B7  0877               	movf	??_Read_ADC+3,w
  2817  14B8  00F3               	movwf	?_Read_ADC+1
  2818  14B9  0008               	return
  2819  14BA                     __end_of_Read_ADC:	
  2820                           
  2821                           	psect	text11
  2822  0031                     __ptext11:	
  2823 ;; *************** function _PID_Init *****************
  2824 ;; Defined at:
  2825 ;;		line 186 in file "ADC.c"
  2826 ;; Parameters:    Size  Location     Type
  2827 ;;  nhietdo         2   17[BANK1 ] unsigned int 
  2828 ;;  nhietdodat      2   19[BANK1 ] unsigned int 
  2829 ;; Auto vars:     Size  Location     Type
  2830 ;;		None
  2831 ;; Return value:  Size  Location     Type
  2832 ;;                  1    wreg      void 
  2833 ;; Registers used:
  2834 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2835 ;; Tracked objects:
  2836 ;;		On entry : 0/0
  2837 ;;		On exit  : 0/0
  2838 ;;		Unchanged: 0/0
  2839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2840 ;;      Params:         0       0       4       0       0
  2841 ;;      Locals:         0       0      16       0       0
  2842 ;;      Temps:          0       0       0       0       0
  2843 ;;      Totals:         0       0      20       0       0
  2844 ;;Total ram usage:       20 bytes
  2845 ;; Hardware stack levels used:    1
  2846 ;; Hardware stack levels required when called:    3
  2847 ;; This function calls:
  2848 ;;		___fladd
  2849 ;;		___fldiv
  2850 ;;		___flge
  2851 ;;		___flmul
  2852 ;;		___flsub
  2853 ;;		___fltol
  2854 ;;		___xxtofl
  2855 ;; This function is called by:
  2856 ;;		_main
  2857 ;; This function uses a non-reentrant model
  2858 ;;
  2859                           
  2860                           
  2861                           ;psect for function _PID_Init
  2862  0031                     _PID_Init:	
  2863                           
  2864                           ;ADC.c: 186: void PID_Init(unsigned int nhietdo, unsigned int nhietdodat);ADC.c: 187: {;
      +                          ADC.c: 188:     E = nhietdodat-nhietdo;
  2865                           
  2866                           ;incstack = 0
  2867                           ; Regs used in _PID_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2868  0031  1683               	bsf	3,5	;RP0=1, select bank1
  2869  0032  1303               	bcf	3,6	;RP1=0, select bank1
  2870  0033  0831               	movf	PID_Init@nhietdo^(0+128),w
  2871  0034  0233               	subwf	PID_Init@nhietdodat^(0+128),w
  2872  0035  00F2               	movwf	___xxtofl@val
  2873  0036  0832               	movf	(PID_Init@nhietdo+1)^(0+128),w
  2874  0037  1C03               	skipc
  2875  0038  0A32               	incf	(PID_Init@nhietdo+1)^(0+128),w
  2876  0039  0234               	subwf	(PID_Init@nhietdodat+1)^(0+128),w
  2877  003A  00F3               	movwf	___xxtofl@val+1
  2878  003B  01F4               	clrf	___xxtofl@val+2
  2879  003C  01F5               	clrf	___xxtofl@val+3
  2880  003D  3000               	movlw	0
  2881  003E  160A  118A  275B  120A  118A  	fcall	___xxtofl
  2882  0043  0875               	movf	?___xxtofl+3,w
  2883  0044  1683               	bsf	3,5	;RP0=1, select bank1
  2884  0045  1303               	bcf	3,6	;RP1=0, select bank1
  2885  0046  00EB               	movwf	(_E+3)^(0+128)
  2886  0047  0874               	movf	?___xxtofl+2,w
  2887  0048  00EA               	movwf	(_E+2)^(0+128)
  2888  0049  0873               	movf	?___xxtofl+1,w
  2889  004A  00E9               	movwf	(_E+1)^(0+128)
  2890  004B  0872               	movf	?___xxtofl,w
  2891  004C  00E8               	movwf	_E^(0+128)
  2892                           
  2893                           ;ADC.c: 189:     a1 = Kp + (Ki*T)/2 + Kd/2;
  2894  004D  085F               	movf	(_Kp+3)^(0+128),w
  2895  004E  1283               	bcf	3,5	;RP0=0, select bank0
  2896  004F  1303               	bcf	3,6	;RP1=0, select bank0
  2897  0050  00DD               	movwf	___fladd@b+3
  2898  0051  1683               	bsf	3,5	;RP0=1, select bank1
  2899  0052  1303               	bcf	3,6	;RP1=0, select bank1
  2900  0053  085E               	movf	(_Kp+2)^(0+128),w
  2901  0054  1283               	bcf	3,5	;RP0=0, select bank0
  2902  0055  1303               	bcf	3,6	;RP1=0, select bank0
  2903  0056  00DC               	movwf	___fladd@b+2
  2904  0057  1683               	bsf	3,5	;RP0=1, select bank1
  2905  0058  1303               	bcf	3,6	;RP1=0, select bank1
  2906  0059  085D               	movf	(_Kp+1)^(0+128),w
  2907  005A  1283               	bcf	3,5	;RP0=0, select bank0
  2908  005B  1303               	bcf	3,6	;RP1=0, select bank0
  2909  005C  00DB               	movwf	___fladd@b+1
  2910  005D  1683               	bsf	3,5	;RP0=1, select bank1
  2911  005E  1303               	bcf	3,6	;RP1=0, select bank1
  2912  005F  085C               	movf	_Kp^(0+128),w
  2913  0060  1283               	bcf	3,5	;RP0=0, select bank0
  2914  0061  1303               	bcf	3,6	;RP1=0, select bank0
  2915  0062  00DA               	movwf	___fladd@b
  2916  0063  3040               	movlw	64
  2917  0064  00C3               	movwf	___fldiv@a+3
  2918  0065  3000               	movlw	0
  2919  0066  00C2               	movwf	___fldiv@a+2
  2920  0067  3000               	movlw	0
  2921  0068  00C1               	movwf	___fldiv@a+1
  2922  0069  3000               	movlw	0
  2923  006A  00C0               	movwf	___fldiv@a
  2924  006B  1683               	bsf	3,5	;RP0=1, select bank1
  2925  006C  1303               	bcf	3,6	;RP1=0, select bank1
  2926  006D  0863               	movf	(_T+3)^(0+128),w
  2927  006E  1283               	bcf	3,5	;RP0=0, select bank0
  2928  006F  1303               	bcf	3,6	;RP1=0, select bank0
  2929  0070  00A9               	movwf	___flmul@b+3
  2930  0071  1683               	bsf	3,5	;RP0=1, select bank1
  2931  0072  1303               	bcf	3,6	;RP1=0, select bank1
  2932  0073  0862               	movf	(_T+2)^(0+128),w
  2933  0074  1283               	bcf	3,5	;RP0=0, select bank0
  2934  0075  1303               	bcf	3,6	;RP1=0, select bank0
  2935  0076  00A8               	movwf	___flmul@b+2
  2936  0077  1683               	bsf	3,5	;RP0=1, select bank1
  2937  0078  1303               	bcf	3,6	;RP1=0, select bank1
  2938  0079  0861               	movf	(_T+1)^(0+128),w
  2939  007A  1283               	bcf	3,5	;RP0=0, select bank0
  2940  007B  1303               	bcf	3,6	;RP1=0, select bank0
  2941  007C  00A7               	movwf	___flmul@b+1
  2942  007D  1683               	bsf	3,5	;RP0=1, select bank1
  2943  007E  1303               	bcf	3,6	;RP1=0, select bank1
  2944  007F  0860               	movf	_T^(0+128),w
  2945  0080  1283               	bcf	3,5	;RP0=0, select bank0
  2946  0081  1303               	bcf	3,6	;RP1=0, select bank0
  2947  0082  00A6               	movwf	___flmul@b
  2948  0083  1683               	bsf	3,5	;RP0=1, select bank3
  2949  0084  1703               	bsf	3,6	;RP1=1, select bank3
  2950  0085  081B               	movf	(_Ki+3)^(0+384),w
  2951  0086  1283               	bcf	3,5	;RP0=0, select bank0
  2952  0087  1303               	bcf	3,6	;RP1=0, select bank0
  2953  0088  00AD               	movwf	___flmul@a+3
  2954  0089  1683               	bsf	3,5	;RP0=1, select bank3
  2955  008A  1703               	bsf	3,6	;RP1=1, select bank3
  2956  008B  081A               	movf	(_Ki+2)^(0+384),w
  2957  008C  1283               	bcf	3,5	;RP0=0, select bank0
  2958  008D  1303               	bcf	3,6	;RP1=0, select bank0
  2959  008E  00AC               	movwf	___flmul@a+2
  2960  008F  1683               	bsf	3,5	;RP0=1, select bank3
  2961  0090  1703               	bsf	3,6	;RP1=1, select bank3
  2962  0091  0819               	movf	(_Ki+1)^(0+384),w
  2963  0092  1283               	bcf	3,5	;RP0=0, select bank0
  2964  0093  1303               	bcf	3,6	;RP1=0, select bank0
  2965  0094  00AB               	movwf	___flmul@a+1
  2966  0095  1683               	bsf	3,5	;RP0=1, select bank3
  2967  0096  1703               	bsf	3,6	;RP1=1, select bank3
  2968  0097  0818               	movf	_Ki^(0+384),w
  2969  0098  1283               	bcf	3,5	;RP0=0, select bank0
  2970  0099  1303               	bcf	3,6	;RP1=0, select bank0
  2971  009A  00AA               	movwf	___flmul@a
  2972  009B  120A  158A  24EB  120A  118A  	fcall	___flmul
  2973  00A0  1283               	bcf	3,5	;RP0=0, select bank0
  2974  00A1  1303               	bcf	3,6	;RP1=0, select bank0
  2975  00A2  0829               	movf	?___flmul+3,w
  2976  00A3  00C7               	movwf	___fldiv@b+3
  2977  00A4  0828               	movf	?___flmul+2,w
  2978  00A5  00C6               	movwf	___fldiv@b+2
  2979  00A6  0827               	movf	?___flmul+1,w
  2980  00A7  00C5               	movwf	___fldiv@b+1
  2981  00A8  0826               	movf	?___flmul,w
  2982  00A9  00C4               	movwf	___fldiv@b
  2983  00AA  120A  158A  2119  120A  118A  	fcall	___fldiv
  2984  00AF  1283               	bcf	3,5	;RP0=0, select bank0
  2985  00B0  1303               	bcf	3,6	;RP1=0, select bank0
  2986  00B1  0843               	movf	?___fldiv+3,w
  2987  00B2  00E1               	movwf	___fladd@a+3
  2988  00B3  0842               	movf	?___fldiv+2,w
  2989  00B4  00E0               	movwf	___fladd@a+2
  2990  00B5  0841               	movf	?___fldiv+1,w
  2991  00B6  00DF               	movwf	___fladd@a+1
  2992  00B7  0840               	movf	?___fldiv,w
  2993  00B8  00DE               	movwf	___fladd@a
  2994  00B9  120A  158A  22BC  120A  118A  	fcall	___fladd
  2995  00BE  1283               	bcf	3,5	;RP0=0, select bank0
  2996  00BF  1303               	bcf	3,6	;RP1=0, select bank0
  2997  00C0  085D               	movf	?___fladd+3,w
  2998  00C1  1683               	bsf	3,5	;RP0=1, select bank1
  2999  00C2  1303               	bcf	3,6	;RP1=0, select bank1
  3000  00C3  00C4               	movwf	(_PID_Init$861+3)^(0+128)
  3001  00C4  1283               	bcf	3,5	;RP0=0, select bank0
  3002  00C5  1303               	bcf	3,6	;RP1=0, select bank0
  3003  00C6  085C               	movf	?___fladd+2,w
  3004  00C7  1683               	bsf	3,5	;RP0=1, select bank1
  3005  00C8  1303               	bcf	3,6	;RP1=0, select bank1
  3006  00C9  00C3               	movwf	(_PID_Init$861+2)^(0+128)
  3007  00CA  1283               	bcf	3,5	;RP0=0, select bank0
  3008  00CB  1303               	bcf	3,6	;RP1=0, select bank0
  3009  00CC  085B               	movf	?___fladd+1,w
  3010  00CD  1683               	bsf	3,5	;RP0=1, select bank1
  3011  00CE  1303               	bcf	3,6	;RP1=0, select bank1
  3012  00CF  00C2               	movwf	(_PID_Init$861+1)^(0+128)
  3013  00D0  1283               	bcf	3,5	;RP0=0, select bank0
  3014  00D1  1303               	bcf	3,6	;RP1=0, select bank0
  3015  00D2  085A               	movf	?___fladd,w
  3016  00D3  1683               	bsf	3,5	;RP0=1, select bank1
  3017  00D4  1303               	bcf	3,6	;RP1=0, select bank1
  3018  00D5  00C1               	movwf	_PID_Init$861^(0+128)
  3019                           
  3020                           ;ADC.c: 189:     a1 = Kp + (Ki*T)/2 + Kd/2;
  3021  00D6  3040               	movlw	64
  3022  00D7  1283               	bcf	3,5	;RP0=0, select bank0
  3023  00D8  1303               	bcf	3,6	;RP1=0, select bank0
  3024  00D9  00C3               	movwf	___fldiv@a+3
  3025  00DA  3000               	movlw	0
  3026  00DB  00C2               	movwf	___fldiv@a+2
  3027  00DC  3000               	movlw	0
  3028  00DD  00C1               	movwf	___fldiv@a+1
  3029  00DE  3000               	movlw	0
  3030  00DF  00C0               	movwf	___fldiv@a
  3031  00E0  1683               	bsf	3,5	;RP0=1, select bank1
  3032  00E1  1303               	bcf	3,6	;RP1=0, select bank1
  3033  00E2  085B               	movf	(_Kd+3)^(0+128),w
  3034  00E3  1283               	bcf	3,5	;RP0=0, select bank0
  3035  00E4  1303               	bcf	3,6	;RP1=0, select bank0
  3036  00E5  00C7               	movwf	___fldiv@b+3
  3037  00E6  1683               	bsf	3,5	;RP0=1, select bank1
  3038  00E7  1303               	bcf	3,6	;RP1=0, select bank1
  3039  00E8  085A               	movf	(_Kd+2)^(0+128),w
  3040  00E9  1283               	bcf	3,5	;RP0=0, select bank0
  3041  00EA  1303               	bcf	3,6	;RP1=0, select bank0
  3042  00EB  00C6               	movwf	___fldiv@b+2
  3043  00EC  1683               	bsf	3,5	;RP0=1, select bank1
  3044  00ED  1303               	bcf	3,6	;RP1=0, select bank1
  3045  00EE  0859               	movf	(_Kd+1)^(0+128),w
  3046  00EF  1283               	bcf	3,5	;RP0=0, select bank0
  3047  00F0  1303               	bcf	3,6	;RP1=0, select bank0
  3048  00F1  00C5               	movwf	___fldiv@b+1
  3049  00F2  1683               	bsf	3,5	;RP0=1, select bank1
  3050  00F3  1303               	bcf	3,6	;RP1=0, select bank1
  3051  00F4  0858               	movf	_Kd^(0+128),w
  3052  00F5  1283               	bcf	3,5	;RP0=0, select bank0
  3053  00F6  1303               	bcf	3,6	;RP1=0, select bank0
  3054  00F7  00C4               	movwf	___fldiv@b
  3055  00F8  120A  158A  2119  120A  118A  	fcall	___fldiv
  3056  00FD  1283               	bcf	3,5	;RP0=0, select bank0
  3057  00FE  1303               	bcf	3,6	;RP1=0, select bank0
  3058  00FF  0843               	movf	?___fldiv+3,w
  3059  0100  00DD               	movwf	___fladd@b+3
  3060  0101  0842               	movf	?___fldiv+2,w
  3061  0102  00DC               	movwf	___fladd@b+2
  3062  0103  0841               	movf	?___fldiv+1,w
  3063  0104  00DB               	movwf	___fladd@b+1
  3064  0105  0840               	movf	?___fldiv,w
  3065  0106  00DA               	movwf	___fladd@b
  3066  0107  1683               	bsf	3,5	;RP0=1, select bank1
  3067  0108  1303               	bcf	3,6	;RP1=0, select bank1
  3068  0109  0844               	movf	(_PID_Init$861+3)^(0+128),w
  3069  010A  1283               	bcf	3,5	;RP0=0, select bank0
  3070  010B  1303               	bcf	3,6	;RP1=0, select bank0
  3071  010C  00E1               	movwf	___fladd@a+3
  3072  010D  1683               	bsf	3,5	;RP0=1, select bank1
  3073  010E  1303               	bcf	3,6	;RP1=0, select bank1
  3074  010F  0843               	movf	(_PID_Init$861+2)^(0+128),w
  3075  0110  1283               	bcf	3,5	;RP0=0, select bank0
  3076  0111  1303               	bcf	3,6	;RP1=0, select bank0
  3077  0112  00E0               	movwf	___fladd@a+2
  3078  0113  1683               	bsf	3,5	;RP0=1, select bank1
  3079  0114  1303               	bcf	3,6	;RP1=0, select bank1
  3080  0115  0842               	movf	(_PID_Init$861+1)^(0+128),w
  3081  0116  1283               	bcf	3,5	;RP0=0, select bank0
  3082  0117  1303               	bcf	3,6	;RP1=0, select bank0
  3083  0118  00DF               	movwf	___fladd@a+1
  3084  0119  1683               	bsf	3,5	;RP0=1, select bank1
  3085  011A  1303               	bcf	3,6	;RP1=0, select bank1
  3086  011B  0841               	movf	_PID_Init$861^(0+128),w
  3087  011C  1283               	bcf	3,5	;RP0=0, select bank0
  3088  011D  1303               	bcf	3,6	;RP1=0, select bank0
  3089  011E  00DE               	movwf	___fladd@a
  3090  011F  120A  158A  22BC  120A  118A  	fcall	___fladd
  3091  0124  1283               	bcf	3,5	;RP0=0, select bank0
  3092  0125  1303               	bcf	3,6	;RP1=0, select bank0
  3093  0126  085D               	movf	?___fladd+3,w
  3094  0127  1683               	bsf	3,5	;RP0=1, select bank3
  3095  0128  1703               	bsf	3,6	;RP1=1, select bank3
  3096  0129  00AF               	movwf	(_a1+3)^(0+384)
  3097  012A  1283               	bcf	3,5	;RP0=0, select bank0
  3098  012B  1303               	bcf	3,6	;RP1=0, select bank0
  3099  012C  085C               	movf	?___fladd+2,w
  3100  012D  1683               	bsf	3,5	;RP0=1, select bank3
  3101  012E  1703               	bsf	3,6	;RP1=1, select bank3
  3102  012F  00AE               	movwf	(_a1+2)^(0+384)
  3103  0130  1283               	bcf	3,5	;RP0=0, select bank0
  3104  0131  1303               	bcf	3,6	;RP1=0, select bank0
  3105  0132  085B               	movf	?___fladd+1,w
  3106  0133  1683               	bsf	3,5	;RP0=1, select bank3
  3107  0134  1703               	bsf	3,6	;RP1=1, select bank3
  3108  0135  00AD               	movwf	(_a1+1)^(0+384)
  3109  0136  1283               	bcf	3,5	;RP0=0, select bank0
  3110  0137  1303               	bcf	3,6	;RP1=0, select bank0
  3111  0138  085A               	movf	?___fladd,w
  3112  0139  1683               	bsf	3,5	;RP0=1, select bank3
  3113  013A  1703               	bsf	3,6	;RP1=1, select bank3
  3114  013B  00AC               	movwf	_a1^(0+384)
  3115                           
  3116                           ;ADC.c: 190:     a2 = -Kp + (Ki*T)/2 - 2*Kd/T;
  3117  013C  1683               	bsf	3,5	;RP0=1, select bank1
  3118  013D  1303               	bcf	3,6	;RP1=0, select bank1
  3119  013E  085F               	movf	(_Kp+3)^(0+128),w
  3120  013F  00A3               	movwf	(___flsub@a+3)^(0+128)
  3121  0140  085E               	movf	(_Kp+2)^(0+128),w
  3122  0141  00A2               	movwf	(___flsub@a+2)^(0+128)
  3123  0142  085D               	movf	(_Kp+1)^(0+128),w
  3124  0143  00A1               	movwf	(___flsub@a+1)^(0+128)
  3125  0144  085C               	movf	_Kp^(0+128),w
  3126  0145  00A0               	movwf	___flsub@a^(0+128)
  3127  0146  3040               	movlw	64
  3128  0147  1283               	bcf	3,5	;RP0=0, select bank0
  3129  0148  1303               	bcf	3,6	;RP1=0, select bank0
  3130  0149  00C3               	movwf	___fldiv@a+3
  3131  014A  3000               	movlw	0
  3132  014B  00C2               	movwf	___fldiv@a+2
  3133  014C  3000               	movlw	0
  3134  014D  00C1               	movwf	___fldiv@a+1
  3135  014E  3000               	movlw	0
  3136  014F  00C0               	movwf	___fldiv@a
  3137  0150  1683               	bsf	3,5	;RP0=1, select bank1
  3138  0151  1303               	bcf	3,6	;RP1=0, select bank1
  3139  0152  0863               	movf	(_T+3)^(0+128),w
  3140  0153  1283               	bcf	3,5	;RP0=0, select bank0
  3141  0154  1303               	bcf	3,6	;RP1=0, select bank0
  3142  0155  00A9               	movwf	___flmul@b+3
  3143  0156  1683               	bsf	3,5	;RP0=1, select bank1
  3144  0157  1303               	bcf	3,6	;RP1=0, select bank1
  3145  0158  0862               	movf	(_T+2)^(0+128),w
  3146  0159  1283               	bcf	3,5	;RP0=0, select bank0
  3147  015A  1303               	bcf	3,6	;RP1=0, select bank0
  3148  015B  00A8               	movwf	___flmul@b+2
  3149  015C  1683               	bsf	3,5	;RP0=1, select bank1
  3150  015D  1303               	bcf	3,6	;RP1=0, select bank1
  3151  015E  0861               	movf	(_T+1)^(0+128),w
  3152  015F  1283               	bcf	3,5	;RP0=0, select bank0
  3153  0160  1303               	bcf	3,6	;RP1=0, select bank0
  3154  0161  00A7               	movwf	___flmul@b+1
  3155  0162  1683               	bsf	3,5	;RP0=1, select bank1
  3156  0163  1303               	bcf	3,6	;RP1=0, select bank1
  3157  0164  0860               	movf	_T^(0+128),w
  3158  0165  1283               	bcf	3,5	;RP0=0, select bank0
  3159  0166  1303               	bcf	3,6	;RP1=0, select bank0
  3160  0167  00A6               	movwf	___flmul@b
  3161  0168  1683               	bsf	3,5	;RP0=1, select bank3
  3162  0169  1703               	bsf	3,6	;RP1=1, select bank3
  3163  016A  081B               	movf	(_Ki+3)^(0+384),w
  3164  016B  1283               	bcf	3,5	;RP0=0, select bank0
  3165  016C  1303               	bcf	3,6	;RP1=0, select bank0
  3166  016D  00AD               	movwf	___flmul@a+3
  3167  016E  1683               	bsf	3,5	;RP0=1, select bank3
  3168  016F  1703               	bsf	3,6	;RP1=1, select bank3
  3169  0170  081A               	movf	(_Ki+2)^(0+384),w
  3170  0171  1283               	bcf	3,5	;RP0=0, select bank0
  3171  0172  1303               	bcf	3,6	;RP1=0, select bank0
  3172  0173  00AC               	movwf	___flmul@a+2
  3173  0174  1683               	bsf	3,5	;RP0=1, select bank3
  3174  0175  1703               	bsf	3,6	;RP1=1, select bank3
  3175  0176  0819               	movf	(_Ki+1)^(0+384),w
  3176  0177  1283               	bcf	3,5	;RP0=0, select bank0
  3177  0178  1303               	bcf	3,6	;RP1=0, select bank0
  3178  0179  00AB               	movwf	___flmul@a+1
  3179  017A  1683               	bsf	3,5	;RP0=1, select bank3
  3180  017B  1703               	bsf	3,6	;RP1=1, select bank3
  3181  017C  0818               	movf	_Ki^(0+384),w
  3182  017D  1283               	bcf	3,5	;RP0=0, select bank0
  3183  017E  1303               	bcf	3,6	;RP1=0, select bank0
  3184  017F  00AA               	movwf	___flmul@a
  3185  0180  120A  158A  24EB  120A  118A  	fcall	___flmul
  3186  0185  1283               	bcf	3,5	;RP0=0, select bank0
  3187  0186  1303               	bcf	3,6	;RP1=0, select bank0
  3188  0187  0829               	movf	?___flmul+3,w
  3189  0188  00C7               	movwf	___fldiv@b+3
  3190  0189  0828               	movf	?___flmul+2,w
  3191  018A  00C6               	movwf	___fldiv@b+2
  3192  018B  0827               	movf	?___flmul+1,w
  3193  018C  00C5               	movwf	___fldiv@b+1
  3194  018D  0826               	movf	?___flmul,w
  3195  018E  00C4               	movwf	___fldiv@b
  3196  018F  120A  158A  2119  120A  118A  	fcall	___fldiv
  3197  0194  1283               	bcf	3,5	;RP0=0, select bank0
  3198  0195  1303               	bcf	3,6	;RP1=0, select bank0
  3199  0196  0843               	movf	?___fldiv+3,w
  3200  0197  1683               	bsf	3,5	;RP0=1, select bank1
  3201  0198  1303               	bcf	3,6	;RP1=0, select bank1
  3202  0199  00A7               	movwf	(___flsub@b+3)^(0+128)
  3203  019A  1283               	bcf	3,5	;RP0=0, select bank0
  3204  019B  1303               	bcf	3,6	;RP1=0, select bank0
  3205  019C  0842               	movf	?___fldiv+2,w
  3206  019D  1683               	bsf	3,5	;RP0=1, select bank1
  3207  019E  1303               	bcf	3,6	;RP1=0, select bank1
  3208  019F  00A6               	movwf	(___flsub@b+2)^(0+128)
  3209  01A0  1283               	bcf	3,5	;RP0=0, select bank0
  3210  01A1  1303               	bcf	3,6	;RP1=0, select bank0
  3211  01A2  0841               	movf	?___fldiv+1,w
  3212  01A3  1683               	bsf	3,5	;RP0=1, select bank1
  3213  01A4  1303               	bcf	3,6	;RP1=0, select bank1
  3214  01A5  00A5               	movwf	(___flsub@b+1)^(0+128)
  3215  01A6  1283               	bcf	3,5	;RP0=0, select bank0
  3216  01A7  1303               	bcf	3,6	;RP1=0, select bank0
  3217  01A8  0840               	movf	?___fldiv,w
  3218  01A9  1683               	bsf	3,5	;RP0=1, select bank1
  3219  01AA  1303               	bcf	3,6	;RP1=0, select bank1
  3220  01AB  00A4               	movwf	___flsub@b^(0+128)
  3221  01AC  160A  118A  24BA  120A  118A  	fcall	___flsub
  3222  01B1  1683               	bsf	3,5	;RP0=1, select bank1
  3223  01B2  1303               	bcf	3,6	;RP1=0, select bank1
  3224  01B3  0823               	movf	(?___flsub+3)^(0+128),w
  3225  01B4  00B8               	movwf	(_PID_Init$862+3)^(0+128)
  3226  01B5  0822               	movf	(?___flsub+2)^(0+128),w
  3227  01B6  00B7               	movwf	(_PID_Init$862+2)^(0+128)
  3228  01B7  0821               	movf	(?___flsub+1)^(0+128),w
  3229  01B8  00B6               	movwf	(_PID_Init$862+1)^(0+128)
  3230  01B9  0820               	movf	?___flsub^(0+128),w
  3231  01BA  00B5               	movwf	_PID_Init$862^(0+128)
  3232                           
  3233                           ;ADC.c: 190:     a2 = -Kp + (Ki*T)/2 - 2*Kd/T;
  3234  01BB  0863               	movf	(_T+3)^(0+128),w
  3235  01BC  1283               	bcf	3,5	;RP0=0, select bank0
  3236  01BD  1303               	bcf	3,6	;RP1=0, select bank0
  3237  01BE  00C3               	movwf	___fldiv@a+3
  3238  01BF  1683               	bsf	3,5	;RP0=1, select bank1
  3239  01C0  1303               	bcf	3,6	;RP1=0, select bank1
  3240  01C1  0862               	movf	(_T+2)^(0+128),w
  3241  01C2  1283               	bcf	3,5	;RP0=0, select bank0
  3242  01C3  1303               	bcf	3,6	;RP1=0, select bank0
  3243  01C4  00C2               	movwf	___fldiv@a+2
  3244  01C5  1683               	bsf	3,5	;RP0=1, select bank1
  3245  01C6  1303               	bcf	3,6	;RP1=0, select bank1
  3246  01C7  0861               	movf	(_T+1)^(0+128),w
  3247  01C8  1283               	bcf	3,5	;RP0=0, select bank0
  3248  01C9  1303               	bcf	3,6	;RP1=0, select bank0
  3249  01CA  00C1               	movwf	___fldiv@a+1
  3250  01CB  1683               	bsf	3,5	;RP0=1, select bank1
  3251  01CC  1303               	bcf	3,6	;RP1=0, select bank1
  3252  01CD  0860               	movf	_T^(0+128),w
  3253  01CE  1283               	bcf	3,5	;RP0=0, select bank0
  3254  01CF  1303               	bcf	3,6	;RP1=0, select bank0
  3255  01D0  00C0               	movwf	___fldiv@a
  3256  01D1  3040               	movlw	64
  3257  01D2  00A9               	movwf	___flmul@b+3
  3258  01D3  3000               	movlw	0
  3259  01D4  00A8               	movwf	___flmul@b+2
  3260  01D5  3000               	movlw	0
  3261  01D6  00A7               	movwf	___flmul@b+1
  3262  01D7  3000               	movlw	0
  3263  01D8  00A6               	movwf	___flmul@b
  3264  01D9  1683               	bsf	3,5	;RP0=1, select bank1
  3265  01DA  1303               	bcf	3,6	;RP1=0, select bank1
  3266  01DB  085B               	movf	(_Kd+3)^(0+128),w
  3267  01DC  1283               	bcf	3,5	;RP0=0, select bank0
  3268  01DD  1303               	bcf	3,6	;RP1=0, select bank0
  3269  01DE  00AD               	movwf	___flmul@a+3
  3270  01DF  1683               	bsf	3,5	;RP0=1, select bank1
  3271  01E0  1303               	bcf	3,6	;RP1=0, select bank1
  3272  01E1  085A               	movf	(_Kd+2)^(0+128),w
  3273  01E2  1283               	bcf	3,5	;RP0=0, select bank0
  3274  01E3  1303               	bcf	3,6	;RP1=0, select bank0
  3275  01E4  00AC               	movwf	___flmul@a+2
  3276  01E5  1683               	bsf	3,5	;RP0=1, select bank1
  3277  01E6  1303               	bcf	3,6	;RP1=0, select bank1
  3278  01E7  0859               	movf	(_Kd+1)^(0+128),w
  3279  01E8  1283               	bcf	3,5	;RP0=0, select bank0
  3280  01E9  1303               	bcf	3,6	;RP1=0, select bank0
  3281  01EA  00AB               	movwf	___flmul@a+1
  3282  01EB  1683               	bsf	3,5	;RP0=1, select bank1
  3283  01EC  1303               	bcf	3,6	;RP1=0, select bank1
  3284  01ED  0858               	movf	_Kd^(0+128),w
  3285  01EE  1283               	bcf	3,5	;RP0=0, select bank0
  3286  01EF  1303               	bcf	3,6	;RP1=0, select bank0
  3287  01F0  00AA               	movwf	___flmul@a
  3288  01F1  120A  158A  24EB  120A  118A  	fcall	___flmul
  3289  01F6  1283               	bcf	3,5	;RP0=0, select bank0
  3290  01F7  1303               	bcf	3,6	;RP1=0, select bank0
  3291  01F8  0829               	movf	?___flmul+3,w
  3292  01F9  00C7               	movwf	___fldiv@b+3
  3293  01FA  0828               	movf	?___flmul+2,w
  3294  01FB  00C6               	movwf	___fldiv@b+2
  3295  01FC  0827               	movf	?___flmul+1,w
  3296  01FD  00C5               	movwf	___fldiv@b+1
  3297  01FE  0826               	movf	?___flmul,w
  3298  01FF  00C4               	movwf	___fldiv@b
  3299  0200  120A  158A  2119  120A  118A  	fcall	___fldiv
  3300  0205  1283               	bcf	3,5	;RP0=0, select bank0
  3301  0206  1303               	bcf	3,6	;RP1=0, select bank0
  3302  0207  0843               	movf	?___fldiv+3,w
  3303  0208  1683               	bsf	3,5	;RP0=1, select bank1
  3304  0209  1303               	bcf	3,6	;RP1=0, select bank1
  3305  020A  00A3               	movwf	(___flsub@a+3)^(0+128)
  3306  020B  1283               	bcf	3,5	;RP0=0, select bank0
  3307  020C  1303               	bcf	3,6	;RP1=0, select bank0
  3308  020D  0842               	movf	?___fldiv+2,w
  3309  020E  1683               	bsf	3,5	;RP0=1, select bank1
  3310  020F  1303               	bcf	3,6	;RP1=0, select bank1
  3311  0210  00A2               	movwf	(___flsub@a+2)^(0+128)
  3312  0211  1283               	bcf	3,5	;RP0=0, select bank0
  3313  0212  1303               	bcf	3,6	;RP1=0, select bank0
  3314  0213  0841               	movf	?___fldiv+1,w
  3315  0214  1683               	bsf	3,5	;RP0=1, select bank1
  3316  0215  1303               	bcf	3,6	;RP1=0, select bank1
  3317  0216  00A1               	movwf	(___flsub@a+1)^(0+128)
  3318  0217  1283               	bcf	3,5	;RP0=0, select bank0
  3319  0218  1303               	bcf	3,6	;RP1=0, select bank0
  3320  0219  0840               	movf	?___fldiv,w
  3321  021A  1683               	bsf	3,5	;RP0=1, select bank1
  3322  021B  1303               	bcf	3,6	;RP1=0, select bank1
  3323  021C  00A0               	movwf	___flsub@a^(0+128)
  3324  021D  0838               	movf	(_PID_Init$862+3)^(0+128),w
  3325  021E  00A7               	movwf	(___flsub@b+3)^(0+128)
  3326  021F  0837               	movf	(_PID_Init$862+2)^(0+128),w
  3327  0220  00A6               	movwf	(___flsub@b+2)^(0+128)
  3328  0221  0836               	movf	(_PID_Init$862+1)^(0+128),w
  3329  0222  00A5               	movwf	(___flsub@b+1)^(0+128)
  3330  0223  0835               	movf	_PID_Init$862^(0+128),w
  3331  0224  00A4               	movwf	___flsub@b^(0+128)
  3332  0225  160A  118A  24BA  120A  118A  	fcall	___flsub
  3333  022A  1683               	bsf	3,5	;RP0=1, select bank1
  3334  022B  1303               	bcf	3,6	;RP1=0, select bank1
  3335  022C  0823               	movf	(?___flsub+3)^(0+128),w
  3336  022D  1683               	bsf	3,5	;RP0=1, select bank3
  3337  022E  1703               	bsf	3,6	;RP1=1, select bank3
  3338  022F  00AB               	movwf	(_a2+3)^(0+384)
  3339  0230  1683               	bsf	3,5	;RP0=1, select bank1
  3340  0231  1303               	bcf	3,6	;RP1=0, select bank1
  3341  0232  0822               	movf	(?___flsub+2)^(0+128),w
  3342  0233  1683               	bsf	3,5	;RP0=1, select bank3
  3343  0234  1703               	bsf	3,6	;RP1=1, select bank3
  3344  0235  00AA               	movwf	(_a2+2)^(0+384)
  3345  0236  1683               	bsf	3,5	;RP0=1, select bank1
  3346  0237  1303               	bcf	3,6	;RP1=0, select bank1
  3347  0238  0821               	movf	(?___flsub+1)^(0+128),w
  3348  0239  1683               	bsf	3,5	;RP0=1, select bank3
  3349  023A  1703               	bsf	3,6	;RP1=1, select bank3
  3350  023B  00A9               	movwf	(_a2+1)^(0+384)
  3351  023C  1683               	bsf	3,5	;RP0=1, select bank1
  3352  023D  1303               	bcf	3,6	;RP1=0, select bank1
  3353  023E  0820               	movf	?___flsub^(0+128),w
  3354  023F  1683               	bsf	3,5	;RP0=1, select bank3
  3355  0240  1703               	bsf	3,6	;RP1=1, select bank3
  3356  0241  00A8               	movwf	_a2^(0+384)
  3357                           
  3358                           ;ADC.c: 191:     a3 = Kd/T;
  3359  0242  1683               	bsf	3,5	;RP0=1, select bank1
  3360  0243  1303               	bcf	3,6	;RP1=0, select bank1
  3361  0244  0863               	movf	(_T+3)^(0+128),w
  3362  0245  1283               	bcf	3,5	;RP0=0, select bank0
  3363  0246  1303               	bcf	3,6	;RP1=0, select bank0
  3364  0247  00C3               	movwf	___fldiv@a+3
  3365  0248  1683               	bsf	3,5	;RP0=1, select bank1
  3366  0249  1303               	bcf	3,6	;RP1=0, select bank1
  3367  024A  0862               	movf	(_T+2)^(0+128),w
  3368  024B  1283               	bcf	3,5	;RP0=0, select bank0
  3369  024C  1303               	bcf	3,6	;RP1=0, select bank0
  3370  024D  00C2               	movwf	___fldiv@a+2
  3371  024E  1683               	bsf	3,5	;RP0=1, select bank1
  3372  024F  1303               	bcf	3,6	;RP1=0, select bank1
  3373  0250  0861               	movf	(_T+1)^(0+128),w
  3374  0251  1283               	bcf	3,5	;RP0=0, select bank0
  3375  0252  1303               	bcf	3,6	;RP1=0, select bank0
  3376  0253  00C1               	movwf	___fldiv@a+1
  3377  0254  1683               	bsf	3,5	;RP0=1, select bank1
  3378  0255  1303               	bcf	3,6	;RP1=0, select bank1
  3379  0256  0860               	movf	_T^(0+128),w
  3380  0257  1283               	bcf	3,5	;RP0=0, select bank0
  3381  0258  1303               	bcf	3,6	;RP1=0, select bank0
  3382  0259  00C0               	movwf	___fldiv@a
  3383  025A  1683               	bsf	3,5	;RP0=1, select bank1
  3384  025B  1303               	bcf	3,6	;RP1=0, select bank1
  3385  025C  085B               	movf	(_Kd+3)^(0+128),w
  3386  025D  1283               	bcf	3,5	;RP0=0, select bank0
  3387  025E  1303               	bcf	3,6	;RP1=0, select bank0
  3388  025F  00C7               	movwf	___fldiv@b+3
  3389  0260  1683               	bsf	3,5	;RP0=1, select bank1
  3390  0261  1303               	bcf	3,6	;RP1=0, select bank1
  3391  0262  085A               	movf	(_Kd+2)^(0+128),w
  3392  0263  1283               	bcf	3,5	;RP0=0, select bank0
  3393  0264  1303               	bcf	3,6	;RP1=0, select bank0
  3394  0265  00C6               	movwf	___fldiv@b+2
  3395  0266  1683               	bsf	3,5	;RP0=1, select bank1
  3396  0267  1303               	bcf	3,6	;RP1=0, select bank1
  3397  0268  0859               	movf	(_Kd+1)^(0+128),w
  3398  0269  1283               	bcf	3,5	;RP0=0, select bank0
  3399  026A  1303               	bcf	3,6	;RP1=0, select bank0
  3400  026B  00C5               	movwf	___fldiv@b+1
  3401  026C  1683               	bsf	3,5	;RP0=1, select bank1
  3402  026D  1303               	bcf	3,6	;RP1=0, select bank1
  3403  026E  0858               	movf	_Kd^(0+128),w
  3404  026F  1283               	bcf	3,5	;RP0=0, select bank0
  3405  0270  1303               	bcf	3,6	;RP1=0, select bank0
  3406  0271  00C4               	movwf	___fldiv@b
  3407  0272  120A  158A  2119  120A  118A  	fcall	___fldiv
  3408  0277  1283               	bcf	3,5	;RP0=0, select bank0
  3409  0278  1303               	bcf	3,6	;RP1=0, select bank0
  3410  0279  0843               	movf	?___fldiv+3,w
  3411  027A  1683               	bsf	3,5	;RP0=1, select bank3
  3412  027B  1703               	bsf	3,6	;RP1=1, select bank3
  3413  027C  00A7               	movwf	(_a3+3)^(0+384)
  3414  027D  1283               	bcf	3,5	;RP0=0, select bank0
  3415  027E  1303               	bcf	3,6	;RP1=0, select bank0
  3416  027F  0842               	movf	?___fldiv+2,w
  3417  0280  1683               	bsf	3,5	;RP0=1, select bank3
  3418  0281  1703               	bsf	3,6	;RP1=1, select bank3
  3419  0282  00A6               	movwf	(_a3+2)^(0+384)
  3420  0283  1283               	bcf	3,5	;RP0=0, select bank0
  3421  0284  1303               	bcf	3,6	;RP1=0, select bank0
  3422  0285  0841               	movf	?___fldiv+1,w
  3423  0286  1683               	bsf	3,5	;RP0=1, select bank3
  3424  0287  1703               	bsf	3,6	;RP1=1, select bank3
  3425  0288  00A5               	movwf	(_a3+1)^(0+384)
  3426  0289  1283               	bcf	3,5	;RP0=0, select bank0
  3427  028A  1303               	bcf	3,6	;RP1=0, select bank0
  3428  028B  0840               	movf	?___fldiv,w
  3429  028C  1683               	bsf	3,5	;RP0=1, select bank3
  3430  028D  1703               	bsf	3,6	;RP1=1, select bank3
  3431  028E  00A4               	movwf	_a3^(0+384)
  3432                           
  3433                           ;ADC.c: 192:     out = pre_out + E*a1 + E1*a2 + E2*a3;
  3434  028F  0817               	movf	(_pre_out+3)^(0+384),w
  3435  0290  1283               	bcf	3,5	;RP0=0, select bank0
  3436  0291  1303               	bcf	3,6	;RP1=0, select bank0
  3437  0292  00DD               	movwf	___fladd@b+3
  3438  0293  1683               	bsf	3,5	;RP0=1, select bank3
  3439  0294  1703               	bsf	3,6	;RP1=1, select bank3
  3440  0295  0816               	movf	(_pre_out+2)^(0+384),w
  3441  0296  1283               	bcf	3,5	;RP0=0, select bank0
  3442  0297  1303               	bcf	3,6	;RP1=0, select bank0
  3443  0298  00DC               	movwf	___fladd@b+2
  3444  0299  1683               	bsf	3,5	;RP0=1, select bank3
  3445  029A  1703               	bsf	3,6	;RP1=1, select bank3
  3446  029B  0815               	movf	(_pre_out+1)^(0+384),w
  3447  029C  1283               	bcf	3,5	;RP0=0, select bank0
  3448  029D  1303               	bcf	3,6	;RP1=0, select bank0
  3449  029E  00DB               	movwf	___fladd@b+1
  3450  029F  1683               	bsf	3,5	;RP0=1, select bank3
  3451  02A0  1703               	bsf	3,6	;RP1=1, select bank3
  3452  02A1  0814               	movf	_pre_out^(0+384),w
  3453  02A2  1283               	bcf	3,5	;RP0=0, select bank0
  3454  02A3  1303               	bcf	3,6	;RP1=0, select bank0
  3455  02A4  00DA               	movwf	___fladd@b
  3456  02A5  1683               	bsf	3,5	;RP0=1, select bank3
  3457  02A6  1703               	bsf	3,6	;RP1=1, select bank3
  3458  02A7  082F               	movf	(_a1+3)^(0+384),w
  3459  02A8  1283               	bcf	3,5	;RP0=0, select bank0
  3460  02A9  1303               	bcf	3,6	;RP1=0, select bank0
  3461  02AA  00A9               	movwf	___flmul@b+3
  3462  02AB  1683               	bsf	3,5	;RP0=1, select bank3
  3463  02AC  1703               	bsf	3,6	;RP1=1, select bank3
  3464  02AD  082E               	movf	(_a1+2)^(0+384),w
  3465  02AE  1283               	bcf	3,5	;RP0=0, select bank0
  3466  02AF  1303               	bcf	3,6	;RP1=0, select bank0
  3467  02B0  00A8               	movwf	___flmul@b+2
  3468  02B1  1683               	bsf	3,5	;RP0=1, select bank3
  3469  02B2  1703               	bsf	3,6	;RP1=1, select bank3
  3470  02B3  082D               	movf	(_a1+1)^(0+384),w
  3471  02B4  1283               	bcf	3,5	;RP0=0, select bank0
  3472  02B5  1303               	bcf	3,6	;RP1=0, select bank0
  3473  02B6  00A7               	movwf	___flmul@b+1
  3474  02B7  1683               	bsf	3,5	;RP0=1, select bank3
  3475  02B8  1703               	bsf	3,6	;RP1=1, select bank3
  3476  02B9  082C               	movf	_a1^(0+384),w
  3477  02BA  1283               	bcf	3,5	;RP0=0, select bank0
  3478  02BB  1303               	bcf	3,6	;RP1=0, select bank0
  3479  02BC  00A6               	movwf	___flmul@b
  3480  02BD  1683               	bsf	3,5	;RP0=1, select bank1
  3481  02BE  1303               	bcf	3,6	;RP1=0, select bank1
  3482  02BF  086B               	movf	(_E+3)^(0+128),w
  3483  02C0  1283               	bcf	3,5	;RP0=0, select bank0
  3484  02C1  1303               	bcf	3,6	;RP1=0, select bank0
  3485  02C2  00AD               	movwf	___flmul@a+3
  3486  02C3  1683               	bsf	3,5	;RP0=1, select bank1
  3487  02C4  1303               	bcf	3,6	;RP1=0, select bank1
  3488  02C5  086A               	movf	(_E+2)^(0+128),w
  3489  02C6  1283               	bcf	3,5	;RP0=0, select bank0
  3490  02C7  1303               	bcf	3,6	;RP1=0, select bank0
  3491  02C8  00AC               	movwf	___flmul@a+2
  3492  02C9  1683               	bsf	3,5	;RP0=1, select bank1
  3493  02CA  1303               	bcf	3,6	;RP1=0, select bank1
  3494  02CB  0869               	movf	(_E+1)^(0+128),w
  3495  02CC  1283               	bcf	3,5	;RP0=0, select bank0
  3496  02CD  1303               	bcf	3,6	;RP1=0, select bank0
  3497  02CE  00AB               	movwf	___flmul@a+1
  3498  02CF  1683               	bsf	3,5	;RP0=1, select bank1
  3499  02D0  1303               	bcf	3,6	;RP1=0, select bank1
  3500  02D1  0868               	movf	_E^(0+128),w
  3501  02D2  1283               	bcf	3,5	;RP0=0, select bank0
  3502  02D3  1303               	bcf	3,6	;RP1=0, select bank0
  3503  02D4  00AA               	movwf	___flmul@a
  3504  02D5  120A  158A  24EB  120A  118A  	fcall	___flmul
  3505  02DA  1283               	bcf	3,5	;RP0=0, select bank0
  3506  02DB  1303               	bcf	3,6	;RP1=0, select bank0
  3507  02DC  0829               	movf	?___flmul+3,w
  3508  02DD  00E1               	movwf	___fladd@a+3
  3509  02DE  0828               	movf	?___flmul+2,w
  3510  02DF  00E0               	movwf	___fladd@a+2
  3511  02E0  0827               	movf	?___flmul+1,w
  3512  02E1  00DF               	movwf	___fladd@a+1
  3513  02E2  0826               	movf	?___flmul,w
  3514  02E3  00DE               	movwf	___fladd@a
  3515  02E4  120A  158A  22BC  120A  118A  	fcall	___fladd
  3516  02E9  1283               	bcf	3,5	;RP0=0, select bank0
  3517  02EA  1303               	bcf	3,6	;RP1=0, select bank0
  3518  02EB  085D               	movf	?___fladd+3,w
  3519  02EC  1683               	bsf	3,5	;RP0=1, select bank1
  3520  02ED  1303               	bcf	3,6	;RP1=0, select bank1
  3521  02EE  00C4               	movwf	(_PID_Init$861+3)^(0+128)
  3522  02EF  1283               	bcf	3,5	;RP0=0, select bank0
  3523  02F0  1303               	bcf	3,6	;RP1=0, select bank0
  3524  02F1  085C               	movf	?___fladd+2,w
  3525  02F2  1683               	bsf	3,5	;RP0=1, select bank1
  3526  02F3  1303               	bcf	3,6	;RP1=0, select bank1
  3527  02F4  00C3               	movwf	(_PID_Init$861+2)^(0+128)
  3528  02F5  1283               	bcf	3,5	;RP0=0, select bank0
  3529  02F6  1303               	bcf	3,6	;RP1=0, select bank0
  3530  02F7  085B               	movf	?___fladd+1,w
  3531  02F8  1683               	bsf	3,5	;RP0=1, select bank1
  3532  02F9  1303               	bcf	3,6	;RP1=0, select bank1
  3533  02FA  00C2               	movwf	(_PID_Init$861+1)^(0+128)
  3534  02FB  1283               	bcf	3,5	;RP0=0, select bank0
  3535  02FC  1303               	bcf	3,6	;RP1=0, select bank0
  3536  02FD  085A               	movf	?___fladd,w
  3537  02FE  1683               	bsf	3,5	;RP0=1, select bank1
  3538  02FF  1303               	bcf	3,6	;RP1=0, select bank1
  3539  0300  00C1               	movwf	_PID_Init$861^(0+128)
  3540                           
  3541                           ;ADC.c: 192:     out = pre_out + E*a1 + E1*a2 + E2*a3;
  3542  0301  1683               	bsf	3,5	;RP0=1, select bank3
  3543  0302  1703               	bsf	3,6	;RP1=1, select bank3
  3544  0303  082B               	movf	(_a2+3)^(0+384),w
  3545  0304  1283               	bcf	3,5	;RP0=0, select bank0
  3546  0305  1303               	bcf	3,6	;RP1=0, select bank0
  3547  0306  00A9               	movwf	___flmul@b+3
  3548  0307  1683               	bsf	3,5	;RP0=1, select bank3
  3549  0308  1703               	bsf	3,6	;RP1=1, select bank3
  3550  0309  082A               	movf	(_a2+2)^(0+384),w
  3551  030A  1283               	bcf	3,5	;RP0=0, select bank0
  3552  030B  1303               	bcf	3,6	;RP1=0, select bank0
  3553  030C  00A8               	movwf	___flmul@b+2
  3554  030D  1683               	bsf	3,5	;RP0=1, select bank3
  3555  030E  1703               	bsf	3,6	;RP1=1, select bank3
  3556  030F  0829               	movf	(_a2+1)^(0+384),w
  3557  0310  1283               	bcf	3,5	;RP0=0, select bank0
  3558  0311  1303               	bcf	3,6	;RP1=0, select bank0
  3559  0312  00A7               	movwf	___flmul@b+1
  3560  0313  1683               	bsf	3,5	;RP0=1, select bank3
  3561  0314  1703               	bsf	3,6	;RP1=1, select bank3
  3562  0315  0828               	movf	_a2^(0+384),w
  3563  0316  1283               	bcf	3,5	;RP0=0, select bank0
  3564  0317  1303               	bcf	3,6	;RP1=0, select bank0
  3565  0318  00A6               	movwf	___flmul@b
  3566  0319  1683               	bsf	3,5	;RP0=1, select bank1
  3567  031A  1303               	bcf	3,6	;RP1=0, select bank1
  3568  031B  0867               	movf	(_E1+3)^(0+128),w
  3569  031C  1283               	bcf	3,5	;RP0=0, select bank0
  3570  031D  1303               	bcf	3,6	;RP1=0, select bank0
  3571  031E  00AD               	movwf	___flmul@a+3
  3572  031F  1683               	bsf	3,5	;RP0=1, select bank1
  3573  0320  1303               	bcf	3,6	;RP1=0, select bank1
  3574  0321  0866               	movf	(_E1+2)^(0+128),w
  3575  0322  1283               	bcf	3,5	;RP0=0, select bank0
  3576  0323  1303               	bcf	3,6	;RP1=0, select bank0
  3577  0324  00AC               	movwf	___flmul@a+2
  3578  0325  1683               	bsf	3,5	;RP0=1, select bank1
  3579  0326  1303               	bcf	3,6	;RP1=0, select bank1
  3580  0327  0865               	movf	(_E1+1)^(0+128),w
  3581  0328  1283               	bcf	3,5	;RP0=0, select bank0
  3582  0329  1303               	bcf	3,6	;RP1=0, select bank0
  3583  032A  00AB               	movwf	___flmul@a+1
  3584  032B  1683               	bsf	3,5	;RP0=1, select bank1
  3585  032C  1303               	bcf	3,6	;RP1=0, select bank1
  3586  032D  0864               	movf	_E1^(0+128),w
  3587  032E  1283               	bcf	3,5	;RP0=0, select bank0
  3588  032F  1303               	bcf	3,6	;RP1=0, select bank0
  3589  0330  00AA               	movwf	___flmul@a
  3590  0331  120A  158A  24EB  120A  118A  	fcall	___flmul
  3591  0336  1283               	bcf	3,5	;RP0=0, select bank0
  3592  0337  1303               	bcf	3,6	;RP1=0, select bank0
  3593  0338  0829               	movf	?___flmul+3,w
  3594  0339  00DD               	movwf	___fladd@b+3
  3595  033A  0828               	movf	?___flmul+2,w
  3596  033B  00DC               	movwf	___fladd@b+2
  3597  033C  0827               	movf	?___flmul+1,w
  3598  033D  00DB               	movwf	___fladd@b+1
  3599  033E  0826               	movf	?___flmul,w
  3600  033F  00DA               	movwf	___fladd@b
  3601  0340  1683               	bsf	3,5	;RP0=1, select bank1
  3602  0341  1303               	bcf	3,6	;RP1=0, select bank1
  3603  0342  0844               	movf	(_PID_Init$861+3)^(0+128),w
  3604  0343  1283               	bcf	3,5	;RP0=0, select bank0
  3605  0344  1303               	bcf	3,6	;RP1=0, select bank0
  3606  0345  00E1               	movwf	___fladd@a+3
  3607  0346  1683               	bsf	3,5	;RP0=1, select bank1
  3608  0347  1303               	bcf	3,6	;RP1=0, select bank1
  3609  0348  0843               	movf	(_PID_Init$861+2)^(0+128),w
  3610  0349  1283               	bcf	3,5	;RP0=0, select bank0
  3611  034A  1303               	bcf	3,6	;RP1=0, select bank0
  3612  034B  00E0               	movwf	___fladd@a+2
  3613  034C  1683               	bsf	3,5	;RP0=1, select bank1
  3614  034D  1303               	bcf	3,6	;RP1=0, select bank1
  3615  034E  0842               	movf	(_PID_Init$861+1)^(0+128),w
  3616  034F  1283               	bcf	3,5	;RP0=0, select bank0
  3617  0350  1303               	bcf	3,6	;RP1=0, select bank0
  3618  0351  00DF               	movwf	___fladd@a+1
  3619  0352  1683               	bsf	3,5	;RP0=1, select bank1
  3620  0353  1303               	bcf	3,6	;RP1=0, select bank1
  3621  0354  0841               	movf	_PID_Init$861^(0+128),w
  3622  0355  1283               	bcf	3,5	;RP0=0, select bank0
  3623  0356  1303               	bcf	3,6	;RP1=0, select bank0
  3624  0357  00DE               	movwf	___fladd@a
  3625  0358  120A  158A  22BC  120A  118A  	fcall	___fladd
  3626  035D  1283               	bcf	3,5	;RP0=0, select bank0
  3627  035E  1303               	bcf	3,6	;RP1=0, select bank0
  3628  035F  085D               	movf	?___fladd+3,w
  3629  0360  1683               	bsf	3,5	;RP0=1, select bank1
  3630  0361  1303               	bcf	3,6	;RP1=0, select bank1
  3631  0362  00BC               	movwf	(_PID_Init$863+3)^(0+128)
  3632  0363  1283               	bcf	3,5	;RP0=0, select bank0
  3633  0364  1303               	bcf	3,6	;RP1=0, select bank0
  3634  0365  085C               	movf	?___fladd+2,w
  3635  0366  1683               	bsf	3,5	;RP0=1, select bank1
  3636  0367  1303               	bcf	3,6	;RP1=0, select bank1
  3637  0368  00BB               	movwf	(_PID_Init$863+2)^(0+128)
  3638  0369  1283               	bcf	3,5	;RP0=0, select bank0
  3639  036A  1303               	bcf	3,6	;RP1=0, select bank0
  3640  036B  085B               	movf	?___fladd+1,w
  3641  036C  1683               	bsf	3,5	;RP0=1, select bank1
  3642  036D  1303               	bcf	3,6	;RP1=0, select bank1
  3643  036E  00BA               	movwf	(_PID_Init$863+1)^(0+128)
  3644  036F  1283               	bcf	3,5	;RP0=0, select bank0
  3645  0370  1303               	bcf	3,6	;RP1=0, select bank0
  3646  0371  085A               	movf	?___fladd,w
  3647  0372  1683               	bsf	3,5	;RP0=1, select bank1
  3648  0373  1303               	bcf	3,6	;RP1=0, select bank1
  3649  0374  00B9               	movwf	_PID_Init$863^(0+128)
  3650                           
  3651                           ;ADC.c: 192:     out = pre_out + E*a1 + E1*a2 + E2*a3;
  3652  0375  1683               	bsf	3,5	;RP0=1, select bank3
  3653  0376  1703               	bsf	3,6	;RP1=1, select bank3
  3654  0377  0827               	movf	(_a3+3)^(0+384),w
  3655  0378  1283               	bcf	3,5	;RP0=0, select bank0
  3656  0379  1303               	bcf	3,6	;RP1=0, select bank0
  3657  037A  00A9               	movwf	___flmul@b+3
  3658  037B  1683               	bsf	3,5	;RP0=1, select bank3
  3659  037C  1703               	bsf	3,6	;RP1=1, select bank3
  3660  037D  0826               	movf	(_a3+2)^(0+384),w
  3661  037E  1283               	bcf	3,5	;RP0=0, select bank0
  3662  037F  1303               	bcf	3,6	;RP1=0, select bank0
  3663  0380  00A8               	movwf	___flmul@b+2
  3664  0381  1683               	bsf	3,5	;RP0=1, select bank3
  3665  0382  1703               	bsf	3,6	;RP1=1, select bank3
  3666  0383  0825               	movf	(_a3+1)^(0+384),w
  3667  0384  1283               	bcf	3,5	;RP0=0, select bank0
  3668  0385  1303               	bcf	3,6	;RP1=0, select bank0
  3669  0386  00A7               	movwf	___flmul@b+1
  3670  0387  1683               	bsf	3,5	;RP0=1, select bank3
  3671  0388  1703               	bsf	3,6	;RP1=1, select bank3
  3672  0389  0824               	movf	_a3^(0+384),w
  3673  038A  1283               	bcf	3,5	;RP0=0, select bank0
  3674  038B  1303               	bcf	3,6	;RP1=0, select bank0
  3675  038C  00A6               	movwf	___flmul@b
  3676  038D  1683               	bsf	3,5	;RP0=1, select bank3
  3677  038E  1703               	bsf	3,6	;RP1=1, select bank3
  3678  038F  0833               	movf	(_E2+3)^(0+384),w
  3679  0390  1283               	bcf	3,5	;RP0=0, select bank0
  3680  0391  1303               	bcf	3,6	;RP1=0, select bank0
  3681  0392  00AD               	movwf	___flmul@a+3
  3682  0393  1683               	bsf	3,5	;RP0=1, select bank3
  3683  0394  1703               	bsf	3,6	;RP1=1, select bank3
  3684  0395  0832               	movf	(_E2+2)^(0+384),w
  3685  0396  1283               	bcf	3,5	;RP0=0, select bank0
  3686  0397  1303               	bcf	3,6	;RP1=0, select bank0
  3687  0398  00AC               	movwf	___flmul@a+2
  3688  0399  1683               	bsf	3,5	;RP0=1, select bank3
  3689  039A  1703               	bsf	3,6	;RP1=1, select bank3
  3690  039B  0831               	movf	(_E2+1)^(0+384),w
  3691  039C  1283               	bcf	3,5	;RP0=0, select bank0
  3692  039D  1303               	bcf	3,6	;RP1=0, select bank0
  3693  039E  00AB               	movwf	___flmul@a+1
  3694  039F  1683               	bsf	3,5	;RP0=1, select bank3
  3695  03A0  1703               	bsf	3,6	;RP1=1, select bank3
  3696  03A1  0830               	movf	_E2^(0+384),w
  3697  03A2  1283               	bcf	3,5	;RP0=0, select bank0
  3698  03A3  1303               	bcf	3,6	;RP1=0, select bank0
  3699  03A4  00AA               	movwf	___flmul@a
  3700  03A5  120A  158A  24EB  120A  118A  	fcall	___flmul
  3701  03AA  1283               	bcf	3,5	;RP0=0, select bank0
  3702  03AB  1303               	bcf	3,6	;RP1=0, select bank0
  3703  03AC  0829               	movf	?___flmul+3,w
  3704  03AD  00DD               	movwf	___fladd@b+3
  3705  03AE  0828               	movf	?___flmul+2,w
  3706  03AF  00DC               	movwf	___fladd@b+2
  3707  03B0  0827               	movf	?___flmul+1,w
  3708  03B1  00DB               	movwf	___fladd@b+1
  3709  03B2  0826               	movf	?___flmul,w
  3710  03B3  00DA               	movwf	___fladd@b
  3711  03B4  1683               	bsf	3,5	;RP0=1, select bank1
  3712  03B5  1303               	bcf	3,6	;RP1=0, select bank1
  3713  03B6  083C               	movf	(_PID_Init$863+3)^(0+128),w
  3714  03B7  1283               	bcf	3,5	;RP0=0, select bank0
  3715  03B8  1303               	bcf	3,6	;RP1=0, select bank0
  3716  03B9  00E1               	movwf	___fladd@a+3
  3717  03BA  1683               	bsf	3,5	;RP0=1, select bank1
  3718  03BB  1303               	bcf	3,6	;RP1=0, select bank1
  3719  03BC  083B               	movf	(_PID_Init$863+2)^(0+128),w
  3720  03BD  1283               	bcf	3,5	;RP0=0, select bank0
  3721  03BE  1303               	bcf	3,6	;RP1=0, select bank0
  3722  03BF  00E0               	movwf	___fladd@a+2
  3723  03C0  1683               	bsf	3,5	;RP0=1, select bank1
  3724  03C1  1303               	bcf	3,6	;RP1=0, select bank1
  3725  03C2  083A               	movf	(_PID_Init$863+1)^(0+128),w
  3726  03C3  1283               	bcf	3,5	;RP0=0, select bank0
  3727  03C4  1303               	bcf	3,6	;RP1=0, select bank0
  3728  03C5  00DF               	movwf	___fladd@a+1
  3729  03C6  1683               	bsf	3,5	;RP0=1, select bank1
  3730  03C7  1303               	bcf	3,6	;RP1=0, select bank1
  3731  03C8  0839               	movf	_PID_Init$863^(0+128),w
  3732  03C9  1283               	bcf	3,5	;RP0=0, select bank0
  3733  03CA  1303               	bcf	3,6	;RP1=0, select bank0
  3734  03CB  00DE               	movwf	___fladd@a
  3735  03CC  120A  158A  22BC  120A  118A  	fcall	___fladd
  3736  03D1  1283               	bcf	3,5	;RP0=0, select bank0
  3737  03D2  1303               	bcf	3,6	;RP1=0, select bank0
  3738  03D3  085D               	movf	?___fladd+3,w
  3739  03D4  1683               	bsf	3,5	;RP0=1, select bank1
  3740  03D5  1303               	bcf	3,6	;RP1=0, select bank1
  3741  03D6  00D7               	movwf	(_out+3)^(0+128)
  3742  03D7  1283               	bcf	3,5	;RP0=0, select bank0
  3743  03D8  1303               	bcf	3,6	;RP1=0, select bank0
  3744  03D9  085C               	movf	?___fladd+2,w
  3745  03DA  1683               	bsf	3,5	;RP0=1, select bank1
  3746  03DB  1303               	bcf	3,6	;RP1=0, select bank1
  3747  03DC  00D6               	movwf	(_out+2)^(0+128)
  3748  03DD  1283               	bcf	3,5	;RP0=0, select bank0
  3749  03DE  1303               	bcf	3,6	;RP1=0, select bank0
  3750  03DF  085B               	movf	?___fladd+1,w
  3751  03E0  1683               	bsf	3,5	;RP0=1, select bank1
  3752  03E1  1303               	bcf	3,6	;RP1=0, select bank1
  3753  03E2  00D5               	movwf	(_out+1)^(0+128)
  3754  03E3  1283               	bcf	3,5	;RP0=0, select bank0
  3755  03E4  1303               	bcf	3,6	;RP1=0, select bank0
  3756  03E5  085A               	movf	?___fladd,w
  3757  03E6  1683               	bsf	3,5	;RP0=1, select bank1
  3758  03E7  1303               	bcf	3,6	;RP1=0, select bank1
  3759  03E8  00D4               	movwf	_out^(0+128)
  3760                           
  3761                           ;ADC.c: 193:     pre_out = out;
  3762  03E9  0857               	movf	(_out+3)^(0+128),w
  3763  03EA  1683               	bsf	3,5	;RP0=1, select bank3
  3764  03EB  1703               	bsf	3,6	;RP1=1, select bank3
  3765  03EC  0097               	movwf	(_pre_out+3)^(0+384)
  3766  03ED  1683               	bsf	3,5	;RP0=1, select bank1
  3767  03EE  1303               	bcf	3,6	;RP1=0, select bank1
  3768  03EF  0856               	movf	(_out+2)^(0+128),w
  3769  03F0  1683               	bsf	3,5	;RP0=1, select bank3
  3770  03F1  1703               	bsf	3,6	;RP1=1, select bank3
  3771  03F2  0096               	movwf	(_pre_out+2)^(0+384)
  3772  03F3  1683               	bsf	3,5	;RP0=1, select bank1
  3773  03F4  1303               	bcf	3,6	;RP1=0, select bank1
  3774  03F5  0855               	movf	(_out+1)^(0+128),w
  3775  03F6  1683               	bsf	3,5	;RP0=1, select bank3
  3776  03F7  1703               	bsf	3,6	;RP1=1, select bank3
  3777  03F8  0095               	movwf	(_pre_out+1)^(0+384)
  3778  03F9  1683               	bsf	3,5	;RP0=1, select bank1
  3779  03FA  1303               	bcf	3,6	;RP1=0, select bank1
  3780  03FB  0854               	movf	_out^(0+128),w
  3781  03FC  1683               	bsf	3,5	;RP0=1, select bank3
  3782  03FD  1703               	bsf	3,6	;RP1=1, select bank3
  3783  03FE  0094               	movwf	_pre_out^(0+384)
  3784                           
  3785                           ;ADC.c: 194:     E2 = E1;
  3786  03FF  1683               	bsf	3,5	;RP0=1, select bank1
  3787  0400  1303               	bcf	3,6	;RP1=0, select bank1
  3788  0401  0867               	movf	(_E1+3)^(0+128),w
  3789  0402  1683               	bsf	3,5	;RP0=1, select bank3
  3790  0403  1703               	bsf	3,6	;RP1=1, select bank3
  3791  0404  00B3               	movwf	(_E2+3)^(0+384)
  3792  0405  1683               	bsf	3,5	;RP0=1, select bank1
  3793  0406  1303               	bcf	3,6	;RP1=0, select bank1
  3794  0407  0866               	movf	(_E1+2)^(0+128),w
  3795  0408  1683               	bsf	3,5	;RP0=1, select bank3
  3796  0409  1703               	bsf	3,6	;RP1=1, select bank3
  3797  040A  00B2               	movwf	(_E2+2)^(0+384)
  3798  040B  1683               	bsf	3,5	;RP0=1, select bank1
  3799  040C  1303               	bcf	3,6	;RP1=0, select bank1
  3800  040D  0865               	movf	(_E1+1)^(0+128),w
  3801  040E  1683               	bsf	3,5	;RP0=1, select bank3
  3802  040F  1703               	bsf	3,6	;RP1=1, select bank3
  3803  0410  00B1               	movwf	(_E2+1)^(0+384)
  3804  0411  1683               	bsf	3,5	;RP0=1, select bank1
  3805  0412  1303               	bcf	3,6	;RP1=0, select bank1
  3806  0413  0864               	movf	_E1^(0+128),w
  3807  0414  1683               	bsf	3,5	;RP0=1, select bank3
  3808  0415  1703               	bsf	3,6	;RP1=1, select bank3
  3809  0416  00B0               	movwf	_E2^(0+384)
  3810                           
  3811                           ;ADC.c: 195:     E1 = E;
  3812  0417  1683               	bsf	3,5	;RP0=1, select bank1
  3813  0418  1303               	bcf	3,6	;RP1=0, select bank1
  3814  0419  086B               	movf	(_E+3)^(0+128),w
  3815  041A  00E7               	movwf	(_E1+3)^(0+128)
  3816  041B  086A               	movf	(_E+2)^(0+128),w
  3817  041C  00E6               	movwf	(_E1+2)^(0+128)
  3818  041D  0869               	movf	(_E+1)^(0+128),w
  3819  041E  00E5               	movwf	(_E1+1)^(0+128)
  3820  041F  0868               	movf	_E^(0+128),w
  3821  0420  00E4               	movwf	_E1^(0+128)
  3822                           
  3823                           ;ADC.c: 196:     chot = 6000 - out;
  3824  0421  0857               	movf	(_out+3)^(0+128),w
  3825  0422  00A3               	movwf	(___flsub@a+3)^(0+128)
  3826  0423  0856               	movf	(_out+2)^(0+128),w
  3827  0424  00A2               	movwf	(___flsub@a+2)^(0+128)
  3828  0425  0855               	movf	(_out+1)^(0+128),w
  3829  0426  00A1               	movwf	(___flsub@a+1)^(0+128)
  3830  0427  0854               	movf	_out^(0+128),w
  3831  0428  00A0               	movwf	___flsub@a^(0+128)
  3832  0429  3045               	movlw	69
  3833  042A  00A7               	movwf	(___flsub@b+3)^(0+128)
  3834  042B  30BB               	movlw	187
  3835  042C  00A6               	movwf	(___flsub@b+2)^(0+128)
  3836  042D  3080               	movlw	128
  3837  042E  00A5               	movwf	(___flsub@b+1)^(0+128)
  3838  042F  3000               	movlw	0
  3839  0430  00A4               	movwf	___flsub@b^(0+128)
  3840  0431  160A  118A  24BA  120A  118A  	fcall	___flsub
  3841  0436  1683               	bsf	3,5	;RP0=1, select bank1
  3842  0437  1303               	bcf	3,6	;RP1=0, select bank1
  3843  0438  0823               	movf	(?___flsub+3)^(0+128),w
  3844  0439  1683               	bsf	3,5	;RP0=1, select bank3
  3845  043A  1703               	bsf	3,6	;RP1=1, select bank3
  3846  043B  0093               	movwf	(_chot+3)^(0+384)
  3847  043C  1683               	bsf	3,5	;RP0=1, select bank1
  3848  043D  1303               	bcf	3,6	;RP1=0, select bank1
  3849  043E  0822               	movf	(?___flsub+2)^(0+128),w
  3850  043F  1683               	bsf	3,5	;RP0=1, select bank3
  3851  0440  1703               	bsf	3,6	;RP1=1, select bank3
  3852  0441  0092               	movwf	(_chot+2)^(0+384)
  3853  0442  1683               	bsf	3,5	;RP0=1, select bank1
  3854  0443  1303               	bcf	3,6	;RP1=0, select bank1
  3855  0444  0821               	movf	(?___flsub+1)^(0+128),w
  3856  0445  1683               	bsf	3,5	;RP0=1, select bank3
  3857  0446  1703               	bsf	3,6	;RP1=1, select bank3
  3858  0447  0091               	movwf	(_chot+1)^(0+384)
  3859  0448  1683               	bsf	3,5	;RP0=1, select bank1
  3860  0449  1303               	bcf	3,6	;RP1=0, select bank1
  3861  044A  0820               	movf	?___flsub^(0+128),w
  3862  044B  1683               	bsf	3,5	;RP0=1, select bank3
  3863  044C  1703               	bsf	3,6	;RP1=1, select bank3
  3864  044D  0090               	movwf	_chot^(0+384)
  3865                           
  3866                           ;ADC.c: 197:     if(chot < 0) chot = 0;
  3867  044E  0813               	movf	(_chot+3)^(0+384),w
  3868  044F  00F5               	movwf	___flge@ff1+3
  3869  0450  0812               	movf	(_chot+2)^(0+384),w
  3870  0451  00F4               	movwf	___flge@ff1+2
  3871  0452  0811               	movf	(_chot+1)^(0+384),w
  3872  0453  00F3               	movwf	___flge@ff1+1
  3873  0454  0810               	movf	_chot^(0+384),w
  3874  0455  00F2               	movwf	___flge@ff1
  3875  0456  3000               	movlw	0
  3876  0457  00F9               	movwf	___flge@ff2+3
  3877  0458  3000               	movlw	0
  3878  0459  00F8               	movwf	___flge@ff2+2
  3879  045A  3000               	movlw	0
  3880  045B  00F7               	movwf	___flge@ff2+1
  3881  045C  3000               	movlw	0
  3882  045D  00F6               	movwf	___flge@ff2
  3883  045E  160A  118A  26C6  120A  118A  	fcall	___flge
  3884  0463  1803               	btfsc	3,0
  3885  0464  2C6F               	goto	l2789
  3886  0465  3000               	movlw	0
  3887  0466  1683               	bsf	3,5	;RP0=1, select bank3
  3888  0467  1703               	bsf	3,6	;RP1=1, select bank3
  3889  0468  0093               	movwf	(_chot+3)^(0+384)
  3890  0469  3000               	movlw	0
  3891  046A  0092               	movwf	(_chot+2)^(0+384)
  3892  046B  3000               	movlw	0
  3893  046C  0091               	movwf	(_chot+1)^(0+384)
  3894  046D  3000               	movlw	0
  3895  046E  0090               	movwf	_chot^(0+384)
  3896  046F                     l2789:	
  3897                           
  3898                           ;ADC.c: 198:     if(out<0) out = 0;
  3899  046F  1683               	bsf	3,5	;RP0=1, select bank1
  3900  0470  1303               	bcf	3,6	;RP1=0, select bank1
  3901  0471  0857               	movf	(_out+3)^(0+128),w
  3902  0472  00F5               	movwf	___flge@ff1+3
  3903  0473  0856               	movf	(_out+2)^(0+128),w
  3904  0474  00F4               	movwf	___flge@ff1+2
  3905  0475  0855               	movf	(_out+1)^(0+128),w
  3906  0476  00F3               	movwf	___flge@ff1+1
  3907  0477  0854               	movf	_out^(0+128),w
  3908  0478  00F2               	movwf	___flge@ff1
  3909  0479  3000               	movlw	0
  3910  047A  00F9               	movwf	___flge@ff2+3
  3911  047B  3000               	movlw	0
  3912  047C  00F8               	movwf	___flge@ff2+2
  3913  047D  3000               	movlw	0
  3914  047E  00F7               	movwf	___flge@ff2+1
  3915  047F  3000               	movlw	0
  3916  0480  00F6               	movwf	___flge@ff2
  3917  0481  160A  118A  26C6  120A  118A  	fcall	___flge
  3918  0486  1803               	btfsc	3,0
  3919  0487  2C92               	goto	l2793
  3920  0488  3000               	movlw	0
  3921  0489  1683               	bsf	3,5	;RP0=1, select bank1
  3922  048A  1303               	bcf	3,6	;RP1=0, select bank1
  3923  048B  00D7               	movwf	(_out+3)^(0+128)
  3924  048C  3000               	movlw	0
  3925  048D  00D6               	movwf	(_out+2)^(0+128)
  3926  048E  3000               	movlw	0
  3927  048F  00D5               	movwf	(_out+1)^(0+128)
  3928  0490  3000               	movlw	0
  3929  0491  00D4               	movwf	_out^(0+128)
  3930  0492                     l2793:	
  3931                           
  3932                           ;ADC.c: 199:     if(out>6000) out = 6000;
  3933  0492  3045               	movlw	69
  3934  0493  00F5               	movwf	___flge@ff1+3
  3935  0494  30BB               	movlw	187
  3936  0495  00F4               	movwf	___flge@ff1+2
  3937  0496  3080               	movlw	128
  3938  0497  00F3               	movwf	___flge@ff1+1
  3939  0498  3000               	movlw	0
  3940  0499  00F2               	movwf	___flge@ff1
  3941  049A  1683               	bsf	3,5	;RP0=1, select bank1
  3942  049B  1303               	bcf	3,6	;RP1=0, select bank1
  3943  049C  0857               	movf	(_out+3)^(0+128),w
  3944  049D  00F9               	movwf	___flge@ff2+3
  3945  049E  0856               	movf	(_out+2)^(0+128),w
  3946  049F  00F8               	movwf	___flge@ff2+2
  3947  04A0  0855               	movf	(_out+1)^(0+128),w
  3948  04A1  00F7               	movwf	___flge@ff2+1
  3949  04A2  0854               	movf	_out^(0+128),w
  3950  04A3  00F6               	movwf	___flge@ff2
  3951  04A4  160A  118A  26C6  120A  118A  	fcall	___flge
  3952  04A9  1803               	btfsc	3,0
  3953  04AA  2CB5               	goto	l2797
  3954  04AB  3045               	movlw	69
  3955  04AC  1683               	bsf	3,5	;RP0=1, select bank1
  3956  04AD  1303               	bcf	3,6	;RP1=0, select bank1
  3957  04AE  00D7               	movwf	(_out+3)^(0+128)
  3958  04AF  30BB               	movlw	187
  3959  04B0  00D6               	movwf	(_out+2)^(0+128)
  3960  04B1  3080               	movlw	128
  3961  04B2  00D5               	movwf	(_out+1)^(0+128)
  3962  04B3  3000               	movlw	0
  3963  04B4  00D4               	movwf	_out^(0+128)
  3964  04B5                     l2797:	
  3965                           
  3966                           ;ADC.c: 200:     time = 65536-(1000+out)/(8*0.2f);
  3967  04B5  1683               	bsf	3,5	;RP0=1, select bank1
  3968  04B6  1303               	bcf	3,6	;RP1=0, select bank1
  3969  04B7  0857               	movf	(_out+3)^(0+128),w
  3970  04B8  1283               	bcf	3,5	;RP0=0, select bank0
  3971  04B9  1303               	bcf	3,6	;RP1=0, select bank0
  3972  04BA  00E1               	movwf	___fladd@a+3
  3973  04BB  1683               	bsf	3,5	;RP0=1, select bank1
  3974  04BC  1303               	bcf	3,6	;RP1=0, select bank1
  3975  04BD  0856               	movf	(_out+2)^(0+128),w
  3976  04BE  1283               	bcf	3,5	;RP0=0, select bank0
  3977  04BF  1303               	bcf	3,6	;RP1=0, select bank0
  3978  04C0  00E0               	movwf	___fladd@a+2
  3979  04C1  1683               	bsf	3,5	;RP0=1, select bank1
  3980  04C2  1303               	bcf	3,6	;RP1=0, select bank1
  3981  04C3  0855               	movf	(_out+1)^(0+128),w
  3982  04C4  1283               	bcf	3,5	;RP0=0, select bank0
  3983  04C5  1303               	bcf	3,6	;RP1=0, select bank0
  3984  04C6  00DF               	movwf	___fladd@a+1
  3985  04C7  1683               	bsf	3,5	;RP0=1, select bank1
  3986  04C8  1303               	bcf	3,6	;RP1=0, select bank1
  3987  04C9  0854               	movf	_out^(0+128),w
  3988  04CA  1283               	bcf	3,5	;RP0=0, select bank0
  3989  04CB  1303               	bcf	3,6	;RP1=0, select bank0
  3990  04CC  00DE               	movwf	___fladd@a
  3991  04CD  3044               	movlw	68
  3992  04CE  00DD               	movwf	___fladd@b+3
  3993  04CF  307A               	movlw	122
  3994  04D0  00DC               	movwf	___fladd@b+2
  3995  04D1  3000               	movlw	0
  3996  04D2  00DB               	movwf	___fladd@b+1
  3997  04D3  3000               	movlw	0
  3998  04D4  00DA               	movwf	___fladd@b
  3999  04D5  120A  158A  22BC  120A  118A  	fcall	___fladd
  4000  04DA  1283               	bcf	3,5	;RP0=0, select bank0
  4001  04DB  1303               	bcf	3,6	;RP1=0, select bank0
  4002  04DC  085D               	movf	?___fladd+3,w
  4003  04DD  00C7               	movwf	___fldiv@b+3
  4004  04DE  085C               	movf	?___fladd+2,w
  4005  04DF  00C6               	movwf	___fldiv@b+2
  4006  04E0  085B               	movf	?___fladd+1,w
  4007  04E1  00C5               	movwf	___fldiv@b+1
  4008  04E2  085A               	movf	?___fladd,w
  4009  04E3  00C4               	movwf	___fldiv@b
  4010  04E4  303F               	movlw	63
  4011  04E5  00C3               	movwf	___fldiv@a+3
  4012  04E6  30CC               	movlw	204
  4013  04E7  00C2               	movwf	___fldiv@a+2
  4014  04E8  30CC               	movlw	204
  4015  04E9  00C1               	movwf	___fldiv@a+1
  4016  04EA  30CD               	movlw	205
  4017  04EB  00C0               	movwf	___fldiv@a
  4018  04EC  120A  158A  2119  120A  118A  	fcall	___fldiv
  4019  04F1  1283               	bcf	3,5	;RP0=0, select bank0
  4020  04F2  1303               	bcf	3,6	;RP1=0, select bank0
  4021  04F3  0843               	movf	?___fldiv+3,w
  4022  04F4  1683               	bsf	3,5	;RP0=1, select bank1
  4023  04F5  1303               	bcf	3,6	;RP1=0, select bank1
  4024  04F6  00C0               	movwf	(_PID_Init$864+3)^(0+128)
  4025  04F7  1283               	bcf	3,5	;RP0=0, select bank0
  4026  04F8  1303               	bcf	3,6	;RP1=0, select bank0
  4027  04F9  0842               	movf	?___fldiv+2,w
  4028  04FA  1683               	bsf	3,5	;RP0=1, select bank1
  4029  04FB  1303               	bcf	3,6	;RP1=0, select bank1
  4030  04FC  00BF               	movwf	(_PID_Init$864+2)^(0+128)
  4031  04FD  1283               	bcf	3,5	;RP0=0, select bank0
  4032  04FE  1303               	bcf	3,6	;RP1=0, select bank0
  4033  04FF  0841               	movf	?___fldiv+1,w
  4034  0500  1683               	bsf	3,5	;RP0=1, select bank1
  4035  0501  1303               	bcf	3,6	;RP1=0, select bank1
  4036  0502  00BE               	movwf	(_PID_Init$864+1)^(0+128)
  4037  0503  1283               	bcf	3,5	;RP0=0, select bank0
  4038  0504  1303               	bcf	3,6	;RP1=0, select bank0
  4039  0505  0840               	movf	?___fldiv,w
  4040  0506  1683               	bsf	3,5	;RP0=1, select bank1
  4041  0507  1303               	bcf	3,6	;RP1=0, select bank1
  4042  0508  00BD               	movwf	_PID_Init$864^(0+128)
  4043                           
  4044                           ;ADC.c: 200:     time = 65536-(1000+out)/(8*0.2f);
  4045  0509  3047               	movlw	71
  4046  050A  00A7               	movwf	(___flsub@b+3)^(0+128)
  4047  050B  3080               	movlw	128
  4048  050C  00A6               	movwf	(___flsub@b+2)^(0+128)
  4049  050D  3000               	movlw	0
  4050  050E  00A5               	movwf	(___flsub@b+1)^(0+128)
  4051  050F  3000               	movlw	0
  4052  0510  00A4               	movwf	___flsub@b^(0+128)
  4053  0511  0840               	movf	(_PID_Init$864+3)^(0+128),w
  4054  0512  00A3               	movwf	(___flsub@a+3)^(0+128)
  4055  0513  083F               	movf	(_PID_Init$864+2)^(0+128),w
  4056  0514  00A2               	movwf	(___flsub@a+2)^(0+128)
  4057  0515  083E               	movf	(_PID_Init$864+1)^(0+128),w
  4058  0516  00A1               	movwf	(___flsub@a+1)^(0+128)
  4059  0517  083D               	movf	_PID_Init$864^(0+128),w
  4060  0518  00A0               	movwf	___flsub@a^(0+128)
  4061  0519  160A  118A  24BA  120A  118A  	fcall	___flsub
  4062  051E  1683               	bsf	3,5	;RP0=1, select bank1
  4063  051F  1303               	bcf	3,6	;RP1=0, select bank1
  4064  0520  0823               	movf	(?___flsub+3)^(0+128),w
  4065  0521  00AB               	movwf	(___fltol@f1+3)^(0+128)
  4066  0522  0822               	movf	(?___flsub+2)^(0+128),w
  4067  0523  00AA               	movwf	(___fltol@f1+2)^(0+128)
  4068  0524  0821               	movf	(?___flsub+1)^(0+128),w
  4069  0525  00A9               	movwf	(___fltol@f1+1)^(0+128)
  4070  0526  0820               	movf	?___flsub^(0+128),w
  4071  0527  00A8               	movwf	___fltol@f1^(0+128)
  4072  0528  160A  118A  25B4   	fcall	___fltol
  4073  052B  1683               	bsf	3,5	;RP0=1, select bank1
  4074  052C  1303               	bcf	3,6	;RP1=0, select bank1
  4075  052D  0829               	movf	(?___fltol+1)^(0+128),w
  4076  052E  00ED               	movwf	(_time+1)^(0+128)
  4077  052F  0828               	movf	?___fltol^(0+128),w
  4078  0530  00EC               	movwf	_time^(0+128)
  4079  0531  0008               	return
  4080  0532                     __end_of_PID_Init:	
  4081                           
  4082                           	psect	text12
  4083  175B                     __ptext12:	
  4084 ;; *************** function ___xxtofl *****************
  4085 ;; Defined at:
  4086 ;;		line 10 in file "D:\Mplab X\xc8\pic\sources\c90\common\xxtofl.c"
  4087 ;; Parameters:    Size  Location     Type
  4088 ;;  sign            1    wreg     unsigned char 
  4089 ;;  val             4    2[COMMON] long 
  4090 ;; Auto vars:     Size  Location     Type
  4091 ;;  sign            1    0[BANK0 ] unsigned char 
  4092 ;;  arg             4    2[BANK0 ] unsigned long 
  4093 ;;  exp             1    1[BANK0 ] unsigned char 
  4094 ;; Return value:  Size  Location     Type
  4095 ;;                  4    2[COMMON] unsigned char 
  4096 ;; Registers used:
  4097 ;;		wreg, status,2, status,0
  4098 ;; Tracked objects:
  4099 ;;		On entry : 0/0
  4100 ;;		On exit  : 0/0
  4101 ;;		Unchanged: 0/0
  4102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4103 ;;      Params:         4       0       0       0       0
  4104 ;;      Locals:         0       6       0       0       0
  4105 ;;      Temps:          4       0       0       0       0
  4106 ;;      Totals:         8       6       0       0       0
  4107 ;;Total ram usage:       14 bytes
  4108 ;; Hardware stack levels used:    1
  4109 ;; Hardware stack levels required when called:    1
  4110 ;; This function calls:
  4111 ;;		Nothing
  4112 ;; This function is called by:
  4113 ;;		_main
  4114 ;;		_PID_Init
  4115 ;; This function uses a non-reentrant model
  4116 ;;
  4117                           
  4118                           
  4119                           ;psect for function ___xxtofl
  4120  175B                     ___xxtofl:	
  4121                           
  4122                           ;incstack = 0
  4123                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4124                           ;___xxtofl@sign stored from wreg
  4125  175B  1283               	bcf	3,5	;RP0=0, select bank0
  4126  175C  1303               	bcf	3,6	;RP1=0, select bank0
  4127  175D  00A0               	movwf	___xxtofl@sign
  4128  175E  0820               	movf	___xxtofl@sign,w
  4129  175F  1D03               	btfss	3,2
  4130  1760  1FF5               	btfss	___xxtofl@val+3,7
  4131  1761  2F72               	goto	l2603
  4132  1762  0972               	comf	___xxtofl@val,w
  4133  1763  00A2               	movwf	___xxtofl@arg
  4134  1764  0973               	comf	___xxtofl@val+1,w
  4135  1765  00A3               	movwf	___xxtofl@arg+1
  4136  1766  0974               	comf	___xxtofl@val+2,w
  4137  1767  00A4               	movwf	___xxtofl@arg+2
  4138  1768  0975               	comf	___xxtofl@val+3,w
  4139  1769  00A5               	movwf	___xxtofl@arg+3
  4140  176A  0AA2               	incf	___xxtofl@arg,f
  4141  176B  1903               	skipnz
  4142  176C  0AA3               	incf	___xxtofl@arg+1,f
  4143  176D  1903               	skipnz
  4144  176E  0AA4               	incf	___xxtofl@arg+2,f
  4145  176F  1903               	skipnz
  4146  1770  0AA5               	incf	___xxtofl@arg+3,f
  4147  1771  2F7A               	goto	l826
  4148  1772                     l2603:	
  4149  1772  0875               	movf	___xxtofl@val+3,w
  4150  1773  00A5               	movwf	___xxtofl@arg+3
  4151  1774  0874               	movf	___xxtofl@val+2,w
  4152  1775  00A4               	movwf	___xxtofl@arg+2
  4153  1776  0873               	movf	___xxtofl@val+1,w
  4154  1777  00A3               	movwf	___xxtofl@arg+1
  4155  1778  0872               	movf	___xxtofl@val,w
  4156  1779  00A2               	movwf	___xxtofl@arg
  4157  177A                     l826:	
  4158  177A  0875               	movf	___xxtofl@val+3,w
  4159  177B  0474               	iorwf	___xxtofl@val+2,w
  4160  177C  0473               	iorwf	___xxtofl@val+1,w
  4161  177D  0472               	iorwf	___xxtofl@val,w
  4162  177E  1D03               	skipz
  4163  177F  2F89               	goto	l2609
  4164  1780  3000               	movlw	0
  4165  1781  00F5               	movwf	?___xxtofl+3
  4166  1782  3000               	movlw	0
  4167  1783  00F4               	movwf	?___xxtofl+2
  4168  1784  3000               	movlw	0
  4169  1785  00F3               	movwf	?___xxtofl+1
  4170  1786  3000               	movlw	0
  4171  1787  00F2               	movwf	?___xxtofl
  4172  1788  0008               	return
  4173  1789                     l2609:	
  4174  1789  3096               	movlw	150
  4175  178A  00F6               	movwf	??___xxtofl
  4176  178B  0876               	movf	??___xxtofl,w
  4177  178C  00A1               	movwf	___xxtofl@exp
  4178  178D                     l2613:	
  4179  178D  30FE               	movlw	254
  4180  178E  0525               	andwf	___xxtofl@arg+3,w
  4181  178F  1903               	btfsc	3,2
  4182  1790  2FBA               	goto	l832
  4183  1791  3001               	movlw	1
  4184  1792  00F6               	movwf	??___xxtofl
  4185  1793  0876               	movf	??___xxtofl,w
  4186  1794  07A1               	addwf	___xxtofl@exp,f
  4187  1795  3001               	movlw	1
  4188  1796                     u3595:	
  4189  1796  1003               	clrc
  4190  1797  0CA5               	rrf	___xxtofl@arg+3,f
  4191  1798  0CA4               	rrf	___xxtofl@arg+2,f
  4192  1799  0CA3               	rrf	___xxtofl@arg+1,f
  4193  179A  0CA2               	rrf	___xxtofl@arg,f
  4194  179B  3EFF               	addlw	-1
  4195  179C  1D03               	skipz
  4196  179D  2F96               	goto	u3595
  4197  179E  2F8D               	goto	l2613
  4198  179F                     l2615:	
  4199  179F  3001               	movlw	1
  4200  17A0  00F6               	movwf	??___xxtofl
  4201  17A1  0876               	movf	??___xxtofl,w
  4202  17A2  07A1               	addwf	___xxtofl@exp,f
  4203  17A3  3001               	movlw	1
  4204  17A4  07A2               	addwf	___xxtofl@arg,f
  4205  17A5  3000               	movlw	0
  4206  17A6  1803               	skipnc
  4207  17A7  3001               	movlw	1
  4208  17A8  07A3               	addwf	___xxtofl@arg+1,f
  4209  17A9  3000               	movlw	0
  4210  17AA  1803               	skipnc
  4211  17AB  3001               	movlw	1
  4212  17AC  07A4               	addwf	___xxtofl@arg+2,f
  4213  17AD  3000               	movlw	0
  4214  17AE  1803               	skipnc
  4215  17AF  3001               	movlw	1
  4216  17B0  07A5               	addwf	___xxtofl@arg+3,f
  4217  17B1  3001               	movlw	1
  4218  17B2                     u3615:	
  4219  17B2  1003               	clrc
  4220  17B3  0CA5               	rrf	___xxtofl@arg+3,f
  4221  17B4  0CA4               	rrf	___xxtofl@arg+2,f
  4222  17B5  0CA3               	rrf	___xxtofl@arg+1,f
  4223  17B6  0CA2               	rrf	___xxtofl@arg,f
  4224  17B7  3EFF               	addlw	-1
  4225  17B8  1D03               	skipz
  4226  17B9  2FB2               	goto	u3615
  4227  17BA                     l832:	
  4228  17BA  30FF               	movlw	255
  4229  17BB  0525               	andwf	___xxtofl@arg+3,w
  4230  17BC  1903               	btfsc	3,2
  4231  17BD  2FCE               	goto	l2623
  4232  17BE  2F9F               	goto	l2615
  4233  17BF                     l2625:	
  4234  17BF  3002               	movlw	2
  4235  17C0  0221               	subwf	___xxtofl@exp,w
  4236  17C1  1C03               	btfss	3,0
  4237  17C2  2FD0               	goto	l839
  4238  17C3  3001               	movlw	1
  4239  17C4  02A1               	subwf	___xxtofl@exp,f
  4240  17C5  3001               	movlw	1
  4241  17C6  00F6               	movwf	??___xxtofl
  4242  17C7                     u3635:	
  4243  17C7  1003               	clrc
  4244  17C8  0DA2               	rlf	___xxtofl@arg,f
  4245  17C9  0DA3               	rlf	___xxtofl@arg+1,f
  4246  17CA  0DA4               	rlf	___xxtofl@arg+2,f
  4247  17CB  0DA5               	rlf	___xxtofl@arg+3,f
  4248  17CC  0BF6               	decfsz	??___xxtofl,f
  4249  17CD  2FC7               	goto	u3635
  4250  17CE                     l2623:	
  4251  17CE  1FA4               	btfss	___xxtofl@arg+2,7
  4252  17CF  2FBF               	goto	l2625
  4253  17D0                     l839:	
  4254  17D0  1821               	btfsc	___xxtofl@exp,0
  4255  17D1  2FDA               	goto	l840
  4256  17D2  30FF               	movlw	255
  4257  17D3  05A2               	andwf	___xxtofl@arg,f
  4258  17D4  30FF               	movlw	255
  4259  17D5  05A3               	andwf	___xxtofl@arg+1,f
  4260  17D6  307F               	movlw	127
  4261  17D7  05A4               	andwf	___xxtofl@arg+2,f
  4262  17D8  30FF               	movlw	255
  4263  17D9  05A5               	andwf	___xxtofl@arg+3,f
  4264  17DA                     l840:	
  4265  17DA  1003               	clrc
  4266  17DB  0CA1               	rrf	___xxtofl@exp,f
  4267  17DC  0821               	movf	___xxtofl@exp,w
  4268  17DD  00F6               	movwf	??___xxtofl
  4269  17DE  01F7               	clrf	??___xxtofl+1
  4270  17DF  01F8               	clrf	??___xxtofl+2
  4271  17E0  01F9               	clrf	??___xxtofl+3
  4272  17E1  3018               	movlw	24
  4273  17E2                     u3675:	
  4274  17E2  1003               	clrc
  4275  17E3  0DF6               	rlf	??___xxtofl,f
  4276  17E4  0DF7               	rlf	??___xxtofl+1,f
  4277  17E5  0DF8               	rlf	??___xxtofl+2,f
  4278  17E6  0DF9               	rlf	??___xxtofl+3,f
  4279  17E7  3EFF               	addlw	-1
  4280  17E8  1D03               	skipz
  4281  17E9  2FE2               	goto	u3675
  4282  17EA  0876               	movf	??___xxtofl,w
  4283  17EB  04A2               	iorwf	___xxtofl@arg,f
  4284  17EC  0877               	movf	??___xxtofl+1,w
  4285  17ED  04A3               	iorwf	___xxtofl@arg+1,f
  4286  17EE  0878               	movf	??___xxtofl+2,w
  4287  17EF  04A4               	iorwf	___xxtofl@arg+2,f
  4288  17F0  0879               	movf	??___xxtofl+3,w
  4289  17F1  04A5               	iorwf	___xxtofl@arg+3,f
  4290  17F2  0820               	movf	___xxtofl@sign,w
  4291  17F3  1D03               	btfss	3,2
  4292  17F4  1FF5               	btfss	___xxtofl@val+3,7
  4293  17F5  2FF7               	goto	l2637
  4294  17F6  17A5               	bsf	___xxtofl@arg+3,7
  4295  17F7                     l2637:	
  4296  17F7  0825               	movf	___xxtofl@arg+3,w
  4297  17F8  00F5               	movwf	?___xxtofl+3
  4298  17F9  0824               	movf	___xxtofl@arg+2,w
  4299  17FA  00F4               	movwf	?___xxtofl+2
  4300  17FB  0823               	movf	___xxtofl@arg+1,w
  4301  17FC  00F3               	movwf	?___xxtofl+1
  4302  17FD  0822               	movf	___xxtofl@arg,w
  4303  17FE  00F2               	movwf	?___xxtofl
  4304  17FF  0008               	return
  4305  1800                     __end_of___xxtofl:	
  4306                           
  4307                           	psect	text13
  4308  15B4                     __ptext13:	
  4309 ;; *************** function ___fltol *****************
  4310 ;; Defined at:
  4311 ;;		line 43 in file "D:\Mplab X\xc8\pic\sources\c90\common\fltol.c"
  4312 ;; Parameters:    Size  Location     Type
  4313 ;;  f1              4    8[BANK1 ] unsigned char 
  4314 ;; Auto vars:     Size  Location     Type
  4315 ;;  exp1            1   79[BANK0 ] unsigned char 
  4316 ;;  sign1           1   78[BANK0 ] unsigned char 
  4317 ;; Return value:  Size  Location     Type
  4318 ;;                  4    8[BANK1 ] long 
  4319 ;; Registers used:
  4320 ;;		wreg, status,2, status,0
  4321 ;; Tracked objects:
  4322 ;;		On entry : 0/0
  4323 ;;		On exit  : 0/0
  4324 ;;		Unchanged: 0/0
  4325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4326 ;;      Params:         0       0       4       0       0
  4327 ;;      Locals:         0       2       0       0       0
  4328 ;;      Temps:          0       0       5       0       0
  4329 ;;      Totals:         0       2       9       0       0
  4330 ;;Total ram usage:       11 bytes
  4331 ;; Hardware stack levels used:    1
  4332 ;; Hardware stack levels required when called:    1
  4333 ;; This function calls:
  4334 ;;		Nothing
  4335 ;; This function is called by:
  4336 ;;		_main
  4337 ;;		_PID_Init
  4338 ;; This function uses a non-reentrant model
  4339 ;;
  4340                           
  4341                           
  4342                           ;psect for function ___fltol
  4343  15B4                     ___fltol:	
  4344                           
  4345                           ;incstack = 0
  4346                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  4347  15B4  1003               	clrc
  4348  15B5  1683               	bsf	3,5	;RP0=1, select bank1
  4349  15B6  1303               	bcf	3,6	;RP1=0, select bank1
  4350  15B7  0D2A               	rlf	(___fltol@f1+2)^(0+128),w
  4351  15B8  0D2B               	rlf	(___fltol@f1+3)^(0+128),w
  4352  15B9  00AC               	movwf	??___fltol^(0+128)
  4353  15BA  082C               	movf	??___fltol^(0+128),w
  4354  15BB  1283               	bcf	3,5	;RP0=0, select bank0
  4355  15BC  1303               	bcf	3,6	;RP1=0, select bank0
  4356  15BD  00EF               	movwf	___fltol@exp1
  4357  15BE  086F               	movf	___fltol@exp1,w
  4358  15BF  1D03               	btfss	3,2
  4359  15C0  2DCC               	goto	l2279
  4360  15C1                     l2275:	
  4361  15C1  3000               	movlw	0
  4362  15C2  1683               	bsf	3,5	;RP0=1, select bank1
  4363  15C3  1303               	bcf	3,6	;RP1=0, select bank1
  4364  15C4  00AB               	movwf	(?___fltol+3)^(0+128)
  4365  15C5  3000               	movlw	0
  4366  15C6  00AA               	movwf	(?___fltol+2)^(0+128)
  4367  15C7  3000               	movlw	0
  4368  15C8  00A9               	movwf	(?___fltol+1)^(0+128)
  4369  15C9  3000               	movlw	0
  4370  15CA  00A8               	movwf	?___fltol^(0+128)
  4371  15CB  0008               	return
  4372  15CC                     l2279:	
  4373  15CC  1683               	bsf	3,5	;RP0=1, select bank1
  4374  15CD  1303               	bcf	3,6	;RP1=0, select bank1
  4375  15CE  0828               	movf	___fltol@f1^(0+128),w
  4376  15CF  00AC               	movwf	??___fltol^(0+128)
  4377  15D0  0829               	movf	(___fltol@f1+1)^(0+128),w
  4378  15D1  00AD               	movwf	(??___fltol^(0+128)+1)
  4379  15D2  082A               	movf	(___fltol@f1+2)^(0+128),w
  4380  15D3  00AE               	movwf	(??___fltol^(0+128)+2)
  4381  15D4  082B               	movf	(___fltol@f1+3)^(0+128),w
  4382  15D5  00AF               	movwf	(??___fltol^(0+128)+3)
  4383  15D6  301F               	movlw	31
  4384  15D7                     u2815:	
  4385  15D7  1003               	clrc
  4386  15D8  0CAF               	rrf	(??___fltol^(0+128)+3),f
  4387  15D9  0CAE               	rrf	(??___fltol^(0+128)+2),f
  4388  15DA  0CAD               	rrf	(??___fltol^(0+128)+1),f
  4389  15DB  0CAC               	rrf	??___fltol^(0+128),f
  4390  15DC  3EFF               	addlw	-1
  4391  15DD  1D03               	skipz
  4392  15DE  2DD7               	goto	u2815
  4393  15DF  082C               	movf	??___fltol^(0+128),w
  4394  15E0  00B0               	movwf	(??___fltol+4)^(0+128)
  4395  15E1  0830               	movf	(??___fltol+4)^(0+128),w
  4396  15E2  1283               	bcf	3,5	;RP0=0, select bank0
  4397  15E3  1303               	bcf	3,6	;RP1=0, select bank0
  4398  15E4  00EE               	movwf	___fltol@sign1
  4399  15E5  1683               	bsf	3,5	;RP0=1, select bank1
  4400  15E6  1303               	bcf	3,6	;RP1=0, select bank1
  4401  15E7  17AA               	bsf	(___fltol@f1^(0+128)+2),7
  4402  15E8  30FF               	movlw	255
  4403  15E9  05A8               	andwf	___fltol@f1^(0+128),f
  4404  15EA  30FF               	movlw	255
  4405  15EB  05A9               	andwf	(___fltol@f1+1)^(0+128),f
  4406  15EC  30FF               	movlw	255
  4407  15ED  05AA               	andwf	(___fltol@f1+2)^(0+128),f
  4408  15EE  3000               	movlw	0
  4409  15EF  05AB               	andwf	(___fltol@f1+3)^(0+128),f
  4410  15F0  3096               	movlw	150
  4411  15F1  1283               	bcf	3,5	;RP0=0, select bank0
  4412  15F2  1303               	bcf	3,6	;RP1=0, select bank0
  4413  15F3  02EF               	subwf	___fltol@exp1,f
  4414  15F4  1FEF               	btfss	___fltol@exp1,7
  4415  15F5  2E0F               	goto	l2297
  4416  15F6  086F               	movf	___fltol@exp1,w
  4417  15F7  3A80               	xorlw	128
  4418  15F8  3E97               	addlw	151
  4419  15F9  1C03               	btfss	3,0
  4420  15FA  2DC1               	goto	l2275
  4421  15FB                     l2295:	
  4422  15FB  3001               	movlw	1
  4423  15FC                     u2845:	
  4424  15FC  1003               	clrc
  4425  15FD  1683               	bsf	3,5	;RP0=1, select bank1
  4426  15FE  1303               	bcf	3,6	;RP1=0, select bank1
  4427  15FF  0CAB               	rrf	(___fltol@f1+3)^(0+128),f
  4428  1600  0CAA               	rrf	(___fltol@f1+2)^(0+128),f
  4429  1601  0CA9               	rrf	(___fltol@f1+1)^(0+128),f
  4430  1602  0CA8               	rrf	___fltol@f1^(0+128),f
  4431  1603  3EFF               	addlw	-1
  4432  1604  1D03               	skipz
  4433  1605  2DFC               	goto	u2845
  4434  1606  3001               	movlw	1
  4435  1607  00AC               	movwf	??___fltol^(0+128)
  4436  1608  082C               	movf	??___fltol^(0+128),w
  4437  1609  1283               	bcf	3,5	;RP0=0, select bank0
  4438  160A  1303               	bcf	3,6	;RP1=0, select bank0
  4439  160B  07EF               	addwf	___fltol@exp1,f
  4440  160C  1903               	btfsc	3,2
  4441  160D  2E26               	goto	l2305
  4442  160E  2DFB               	goto	l2295
  4443  160F                     l2297:	
  4444  160F  3020               	movlw	32
  4445  1610  026F               	subwf	___fltol@exp1,w
  4446  1611  1803               	btfsc	3,0
  4447  1612  2DC1               	goto	l2275
  4448  1613                     l592:	
  4449  1613  086F               	movf	___fltol@exp1,w
  4450  1614  1903               	btfsc	3,2
  4451  1615  2E26               	goto	l2305
  4452  1616  3001               	movlw	1
  4453  1617  1683               	bsf	3,5	;RP0=1, select bank1
  4454  1618  1303               	bcf	3,6	;RP1=0, select bank1
  4455  1619  00AC               	movwf	??___fltol^(0+128)
  4456  161A                     u2875:	
  4457  161A  1003               	clrc
  4458  161B  0DA8               	rlf	___fltol@f1^(0+128),f
  4459  161C  0DA9               	rlf	(___fltol@f1+1)^(0+128),f
  4460  161D  0DAA               	rlf	(___fltol@f1+2)^(0+128),f
  4461  161E  0DAB               	rlf	(___fltol@f1+3)^(0+128),f
  4462  161F  0BAC               	decfsz	??___fltol^(0+128),f
  4463  1620  2E1A               	goto	u2875
  4464  1621  3001               	movlw	1
  4465  1622  1283               	bcf	3,5	;RP0=0, select bank0
  4466  1623  1303               	bcf	3,6	;RP1=0, select bank0
  4467  1624  02EF               	subwf	___fltol@exp1,f
  4468  1625  2E13               	goto	l592
  4469  1626                     l2305:	
  4470  1626  086E               	movf	___fltol@sign1,w
  4471  1627  1903               	btfsc	3,2
  4472  1628  0008               	return
  4473  1629  1683               	bsf	3,5	;RP0=1, select bank1
  4474  162A  1303               	bcf	3,6	;RP1=0, select bank1
  4475  162B  09A8               	comf	___fltol@f1^(0+128),f
  4476  162C  09A9               	comf	(___fltol@f1+1)^(0+128),f
  4477  162D  09AA               	comf	(___fltol@f1+2)^(0+128),f
  4478  162E  09AB               	comf	(___fltol@f1+3)^(0+128),f
  4479  162F  0AA8               	incf	___fltol@f1^(0+128),f
  4480  1630  1903               	skipnz
  4481  1631  0AA9               	incf	(___fltol@f1+1)^(0+128),f
  4482  1632  1903               	skipnz
  4483  1633  0AAA               	incf	(___fltol@f1+2)^(0+128),f
  4484  1634  1903               	skipnz
  4485  1635  0AAB               	incf	(___fltol@f1+3)^(0+128),f
  4486  1636  0008               	return
  4487  1637                     __end_of___fltol:	
  4488                           
  4489                           	psect	text14
  4490  14BA                     __ptext14:	
  4491 ;; *************** function ___flsub *****************
  4492 ;; Defined at:
  4493 ;;		line 242 in file "D:\Mplab X\xc8\pic\sources\c90\common\sprcadd.c"
  4494 ;; Parameters:    Size  Location     Type
  4495 ;;  a               4    0[BANK1 ] long 
  4496 ;;  b               4    4[BANK1 ] long 
  4497 ;; Auto vars:     Size  Location     Type
  4498 ;;		None
  4499 ;; Return value:  Size  Location     Type
  4500 ;;                  4    0[BANK1 ] long 
  4501 ;; Registers used:
  4502 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4503 ;; Tracked objects:
  4504 ;;		On entry : 0/0
  4505 ;;		On exit  : 0/0
  4506 ;;		Unchanged: 0/0
  4507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4508 ;;      Params:         0       0       8       0       0
  4509 ;;      Locals:         0       0       0       0       0
  4510 ;;      Temps:          0       0       0       0       0
  4511 ;;      Totals:         0       0       8       0       0
  4512 ;;Total ram usage:        8 bytes
  4513 ;; Hardware stack levels used:    1
  4514 ;; Hardware stack levels required when called:    2
  4515 ;; This function calls:
  4516 ;;		___fladd
  4517 ;; This function is called by:
  4518 ;;		_PID_Init
  4519 ;; This function uses a non-reentrant model
  4520 ;;
  4521                           
  4522                           
  4523                           ;psect for function ___flsub
  4524  14BA                     ___flsub:	
  4525                           
  4526                           ;incstack = 0
  4527                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4528  14BA  3080               	movlw	128
  4529  14BB  1683               	bsf	3,5	;RP0=1, select bank1
  4530  14BC  1303               	bcf	3,6	;RP1=0, select bank1
  4531  14BD  06A3               	xorwf	(___flsub@a+3)^(0+128),f
  4532  14BE  0827               	movf	(___flsub@b+3)^(0+128),w
  4533  14BF  1283               	bcf	3,5	;RP0=0, select bank0
  4534  14C0  1303               	bcf	3,6	;RP1=0, select bank0
  4535  14C1  00DD               	movwf	___fladd@b+3
  4536  14C2  1683               	bsf	3,5	;RP0=1, select bank1
  4537  14C3  1303               	bcf	3,6	;RP1=0, select bank1
  4538  14C4  0826               	movf	(___flsub@b+2)^(0+128),w
  4539  14C5  1283               	bcf	3,5	;RP0=0, select bank0
  4540  14C6  1303               	bcf	3,6	;RP1=0, select bank0
  4541  14C7  00DC               	movwf	___fladd@b+2
  4542  14C8  1683               	bsf	3,5	;RP0=1, select bank1
  4543  14C9  1303               	bcf	3,6	;RP1=0, select bank1
  4544  14CA  0825               	movf	(___flsub@b+1)^(0+128),w
  4545  14CB  1283               	bcf	3,5	;RP0=0, select bank0
  4546  14CC  1303               	bcf	3,6	;RP1=0, select bank0
  4547  14CD  00DB               	movwf	___fladd@b+1
  4548  14CE  1683               	bsf	3,5	;RP0=1, select bank1
  4549  14CF  1303               	bcf	3,6	;RP1=0, select bank1
  4550  14D0  0824               	movf	___flsub@b^(0+128),w
  4551  14D1  1283               	bcf	3,5	;RP0=0, select bank0
  4552  14D2  1303               	bcf	3,6	;RP1=0, select bank0
  4553  14D3  00DA               	movwf	___fladd@b
  4554  14D4  1683               	bsf	3,5	;RP0=1, select bank1
  4555  14D5  1303               	bcf	3,6	;RP1=0, select bank1
  4556  14D6  0823               	movf	(___flsub@a+3)^(0+128),w
  4557  14D7  1283               	bcf	3,5	;RP0=0, select bank0
  4558  14D8  1303               	bcf	3,6	;RP1=0, select bank0
  4559  14D9  00E1               	movwf	___fladd@a+3
  4560  14DA  1683               	bsf	3,5	;RP0=1, select bank1
  4561  14DB  1303               	bcf	3,6	;RP1=0, select bank1
  4562  14DC  0822               	movf	(___flsub@a+2)^(0+128),w
  4563  14DD  1283               	bcf	3,5	;RP0=0, select bank0
  4564  14DE  1303               	bcf	3,6	;RP1=0, select bank0
  4565  14DF  00E0               	movwf	___fladd@a+2
  4566  14E0  1683               	bsf	3,5	;RP0=1, select bank1
  4567  14E1  1303               	bcf	3,6	;RP1=0, select bank1
  4568  14E2  0821               	movf	(___flsub@a+1)^(0+128),w
  4569  14E3  1283               	bcf	3,5	;RP0=0, select bank0
  4570  14E4  1303               	bcf	3,6	;RP1=0, select bank0
  4571  14E5  00DF               	movwf	___fladd@a+1
  4572  14E6  1683               	bsf	3,5	;RP0=1, select bank1
  4573  14E7  1303               	bcf	3,6	;RP1=0, select bank1
  4574  14E8  0820               	movf	___flsub@a^(0+128),w
  4575  14E9  1283               	bcf	3,5	;RP0=0, select bank0
  4576  14EA  1303               	bcf	3,6	;RP1=0, select bank0
  4577  14EB  00DE               	movwf	___fladd@a
  4578  14EC  120A  158A  22BC   	fcall	___fladd
  4579  14EF  1283               	bcf	3,5	;RP0=0, select bank0
  4580  14F0  1303               	bcf	3,6	;RP1=0, select bank0
  4581  14F1  085D               	movf	?___fladd+3,w
  4582  14F2  1683               	bsf	3,5	;RP0=1, select bank1
  4583  14F3  1303               	bcf	3,6	;RP1=0, select bank1
  4584  14F4  00A3               	movwf	(?___flsub+3)^(0+128)
  4585  14F5  1283               	bcf	3,5	;RP0=0, select bank0
  4586  14F6  1303               	bcf	3,6	;RP1=0, select bank0
  4587  14F7  085C               	movf	?___fladd+2,w
  4588  14F8  1683               	bsf	3,5	;RP0=1, select bank1
  4589  14F9  1303               	bcf	3,6	;RP1=0, select bank1
  4590  14FA  00A2               	movwf	(?___flsub+2)^(0+128)
  4591  14FB  1283               	bcf	3,5	;RP0=0, select bank0
  4592  14FC  1303               	bcf	3,6	;RP1=0, select bank0
  4593  14FD  085B               	movf	?___fladd+1,w
  4594  14FE  1683               	bsf	3,5	;RP0=1, select bank1
  4595  14FF  1303               	bcf	3,6	;RP1=0, select bank1
  4596  1500  00A1               	movwf	(?___flsub+1)^(0+128)
  4597  1501  1283               	bcf	3,5	;RP0=0, select bank0
  4598  1502  1303               	bcf	3,6	;RP1=0, select bank0
  4599  1503  085A               	movf	?___fladd,w
  4600  1504  1683               	bsf	3,5	;RP0=1, select bank1
  4601  1505  1303               	bcf	3,6	;RP1=0, select bank1
  4602  1506  00A0               	movwf	?___flsub^(0+128)
  4603  1507  0008               	return
  4604  1508                     __end_of___flsub:	
  4605                           
  4606                           	psect	text15
  4607  0ABC                     __ptext15:	
  4608 ;; *************** function ___fladd *****************
  4609 ;; Defined at:
  4610 ;;		line 10 in file "D:\Mplab X\xc8\pic\sources\c90\common\sprcadd.c"
  4611 ;; Parameters:    Size  Location     Type
  4612 ;;  b               4   58[BANK0 ] long 
  4613 ;;  a               4   62[BANK0 ] long 
  4614 ;; Auto vars:     Size  Location     Type
  4615 ;;  grs             1   77[BANK0 ] unsigned char 
  4616 ;;  bexp            1   76[BANK0 ] unsigned char 
  4617 ;;  aexp            1   75[BANK0 ] unsigned char 
  4618 ;;  signs           1   74[BANK0 ] unsigned char 
  4619 ;; Return value:  Size  Location     Type
  4620 ;;                  4   58[BANK0 ] unsigned char 
  4621 ;; Registers used:
  4622 ;;		wreg, status,2, status,0, btemp+1
  4623 ;; Tracked objects:
  4624 ;;		On entry : 0/0
  4625 ;;		On exit  : 0/0
  4626 ;;		Unchanged: 0/0
  4627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4628 ;;      Params:         0       8       0       0       0
  4629 ;;      Locals:         0       4       0       0       0
  4630 ;;      Temps:          0       8       0       0       0
  4631 ;;      Totals:         0      20       0       0       0
  4632 ;;Total ram usage:       20 bytes
  4633 ;; Hardware stack levels used:    1
  4634 ;; Hardware stack levels required when called:    1
  4635 ;; This function calls:
  4636 ;;		Nothing
  4637 ;; This function is called by:
  4638 ;;		_PID_Init
  4639 ;;		___flsub
  4640 ;; This function uses a non-reentrant model
  4641 ;;
  4642                           
  4643                           
  4644                           ;psect for function ___fladd
  4645  0ABC                     ___fladd:	
  4646                           
  4647                           ;incstack = 0
  4648                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  4649  0ABC  1283               	bcf	3,5	;RP0=0, select bank0
  4650  0ABD  1303               	bcf	3,6	;RP1=0, select bank0
  4651  0ABE  085D               	movf	___fladd@b+3,w
  4652  0ABF  3980               	andlw	128
  4653  0AC0  00E2               	movwf	??___fladd
  4654  0AC1  0862               	movf	??___fladd,w
  4655  0AC2  00EA               	movwf	___fladd@signs
  4656  0AC3  085D               	movf	___fladd@b+3,w
  4657  0AC4  00E2               	movwf	??___fladd
  4658  0AC5  0762               	addwf	??___fladd,w
  4659  0AC6  00E3               	movwf	??___fladd+1
  4660  0AC7  0863               	movf	??___fladd+1,w
  4661  0AC8  00EC               	movwf	___fladd@bexp
  4662  0AC9  1BDC               	btfsc	___fladd@b+2,7
  4663  0ACA  146C               	bsf	___fladd@bexp,0
  4664  0ACB  086C               	movf	___fladd@bexp,w
  4665  0ACC  1903               	btfsc	3,2
  4666  0ACD  2ADC               	goto	l1987
  4667  0ACE  0A6C               	incf	___fladd@bexp,w
  4668  0ACF  1D03               	btfss	3,2
  4669  0AD0  2AD9               	goto	l1983
  4670  0AD1  3000               	movlw	0
  4671  0AD2  00DD               	movwf	___fladd@b+3
  4672  0AD3  3000               	movlw	0
  4673  0AD4  00DC               	movwf	___fladd@b+2
  4674  0AD5  3000               	movlw	0
  4675  0AD6  00DB               	movwf	___fladd@b+1
  4676  0AD7  3000               	movlw	0
  4677  0AD8  00DA               	movwf	___fladd@b
  4678  0AD9                     l1983:	
  4679  0AD9  17DC               	bsf	___fladd@b+2,7
  4680  0ADA  01DD               	clrf	___fladd@b+3
  4681  0ADB  2AE4               	goto	l1989
  4682  0ADC                     l1987:	
  4683  0ADC  3000               	movlw	0
  4684  0ADD  00DD               	movwf	___fladd@b+3
  4685  0ADE  3000               	movlw	0
  4686  0ADF  00DC               	movwf	___fladd@b+2
  4687  0AE0  3000               	movlw	0
  4688  0AE1  00DB               	movwf	___fladd@b+1
  4689  0AE2  3000               	movlw	0
  4690  0AE3  00DA               	movwf	___fladd@b
  4691  0AE4                     l1989:	
  4692  0AE4  0861               	movf	___fladd@a+3,w
  4693  0AE5  3980               	andlw	128
  4694  0AE6  00E2               	movwf	??___fladd
  4695  0AE7  0862               	movf	??___fladd,w
  4696  0AE8  00EB               	movwf	___fladd@aexp
  4697  0AE9  086B               	movf	___fladd@aexp,w
  4698  0AEA  066A               	xorwf	___fladd@signs,w
  4699  0AEB  1D03               	btfss	3,2
  4700  0AEC  176A               	bsf	___fladd@signs,6
  4701  0AED  0861               	movf	___fladd@a+3,w
  4702  0AEE  00E2               	movwf	??___fladd
  4703  0AEF  0762               	addwf	??___fladd,w
  4704  0AF0  00E3               	movwf	??___fladd+1
  4705  0AF1  0863               	movf	??___fladd+1,w
  4706  0AF2  00EB               	movwf	___fladd@aexp
  4707  0AF3  1BE0               	btfsc	___fladd@a+2,7
  4708  0AF4  146B               	bsf	___fladd@aexp,0
  4709  0AF5  086B               	movf	___fladd@aexp,w
  4710  0AF6  1903               	btfsc	3,2
  4711  0AF7  2B06               	goto	l2011
  4712  0AF8  0A6B               	incf	___fladd@aexp,w
  4713  0AF9  1D03               	btfss	3,2
  4714  0AFA  2B03               	goto	l2007
  4715  0AFB  3000               	movlw	0
  4716  0AFC  00E1               	movwf	___fladd@a+3
  4717  0AFD  3000               	movlw	0
  4718  0AFE  00E0               	movwf	___fladd@a+2
  4719  0AFF  3000               	movlw	0
  4720  0B00  00DF               	movwf	___fladd@a+1
  4721  0B01  3000               	movlw	0
  4722  0B02  00DE               	movwf	___fladd@a
  4723  0B03                     l2007:	
  4724  0B03  17E0               	bsf	___fladd@a+2,7
  4725  0B04  01E1               	clrf	___fladd@a+3
  4726  0B05  2B0E               	goto	l692
  4727  0B06                     l2011:	
  4728  0B06  3000               	movlw	0
  4729  0B07  00E1               	movwf	___fladd@a+3
  4730  0B08  3000               	movlw	0
  4731  0B09  00E0               	movwf	___fladd@a+2
  4732  0B0A  3000               	movlw	0
  4733  0B0B  00DF               	movwf	___fladd@a+1
  4734  0B0C  3000               	movlw	0
  4735  0B0D  00DE               	movwf	___fladd@a
  4736  0B0E                     l692:	
  4737  0B0E  086C               	movf	___fladd@bexp,w
  4738  0B0F  026B               	subwf	___fladd@aexp,w
  4739  0B10  1803               	skipnc
  4740  0B11  2B54               	goto	l2047
  4741  0B12  1F6A               	btfss	___fladd@signs,6
  4742  0B13  2B18               	goto	l2017
  4743  0B14  3080               	movlw	128
  4744  0B15  00E2               	movwf	??___fladd
  4745  0B16  0862               	movf	??___fladd,w
  4746  0B17  06EA               	xorwf	___fladd@signs,f
  4747  0B18                     l2017:	
  4748  0B18  086C               	movf	___fladd@bexp,w
  4749  0B19  00E2               	movwf	??___fladd
  4750  0B1A  0862               	movf	??___fladd,w
  4751  0B1B  00ED               	movwf	___fladd@grs
  4752  0B1C  086B               	movf	___fladd@aexp,w
  4753  0B1D  00E2               	movwf	??___fladd
  4754  0B1E  0862               	movf	??___fladd,w
  4755  0B1F  00EC               	movwf	___fladd@bexp
  4756  0B20  086D               	movf	___fladd@grs,w
  4757  0B21  00E2               	movwf	??___fladd
  4758  0B22  0862               	movf	??___fladd,w
  4759  0B23  00EB               	movwf	___fladd@aexp
  4760  0B24  085A               	movf	___fladd@b,w
  4761  0B25  00E2               	movwf	??___fladd
  4762  0B26  0862               	movf	??___fladd,w
  4763  0B27  00ED               	movwf	___fladd@grs
  4764  0B28  085E               	movf	___fladd@a,w
  4765  0B29  00E2               	movwf	??___fladd
  4766  0B2A  0862               	movf	??___fladd,w
  4767  0B2B  00DA               	movwf	___fladd@b
  4768  0B2C  086D               	movf	___fladd@grs,w
  4769  0B2D  00E2               	movwf	??___fladd
  4770  0B2E  0862               	movf	??___fladd,w
  4771  0B2F  00DE               	movwf	___fladd@a
  4772  0B30  085B               	movf	___fladd@b+1,w
  4773  0B31  00E2               	movwf	??___fladd
  4774  0B32  0862               	movf	??___fladd,w
  4775  0B33  00ED               	movwf	___fladd@grs
  4776  0B34  085F               	movf	___fladd@a+1,w
  4777  0B35  00E2               	movwf	??___fladd
  4778  0B36  0862               	movf	??___fladd,w
  4779  0B37  00DB               	movwf	___fladd@b+1
  4780  0B38  086D               	movf	___fladd@grs,w
  4781  0B39  00E2               	movwf	??___fladd
  4782  0B3A  0862               	movf	??___fladd,w
  4783  0B3B  00DF               	movwf	___fladd@a+1
  4784  0B3C  085C               	movf	___fladd@b+2,w
  4785  0B3D  00E2               	movwf	??___fladd
  4786  0B3E  0862               	movf	??___fladd,w
  4787  0B3F  00ED               	movwf	___fladd@grs
  4788  0B40  0860               	movf	___fladd@a+2,w
  4789  0B41  00E2               	movwf	??___fladd
  4790  0B42  0862               	movf	??___fladd,w
  4791  0B43  00DC               	movwf	___fladd@b+2
  4792  0B44  086D               	movf	___fladd@grs,w
  4793  0B45  00E2               	movwf	??___fladd
  4794  0B46  0862               	movf	??___fladd,w
  4795  0B47  00E0               	movwf	___fladd@a+2
  4796  0B48  085D               	movf	___fladd@b+3,w
  4797  0B49  00E2               	movwf	??___fladd
  4798  0B4A  0862               	movf	??___fladd,w
  4799  0B4B  00ED               	movwf	___fladd@grs
  4800  0B4C  0861               	movf	___fladd@a+3,w
  4801  0B4D  00E2               	movwf	??___fladd
  4802  0B4E  0862               	movf	??___fladd,w
  4803  0B4F  00DD               	movwf	___fladd@b+3
  4804  0B50  086D               	movf	___fladd@grs,w
  4805  0B51  00E2               	movwf	??___fladd
  4806  0B52  0862               	movf	??___fladd,w
  4807  0B53  00E1               	movwf	___fladd@a+3
  4808  0B54                     l2047:	
  4809  0B54  01ED               	clrf	___fladd@grs
  4810  0B55  086B               	movf	___fladd@aexp,w
  4811  0B56  00E2               	movwf	??___fladd
  4812  0B57  01E3               	clrf	??___fladd+1
  4813  0B58  0863               	movf	??___fladd+1,w
  4814  0B59  00E5               	movwf	??___fladd+3
  4815  0B5A  086C               	movf	___fladd@bexp,w
  4816  0B5B  0262               	subwf	??___fladd,w
  4817  0B5C  00E4               	movwf	??___fladd+2
  4818  0B5D  1C03               	skipc
  4819  0B5E  03E5               	decf	??___fladd+3,f
  4820  0B5F  0865               	movf	??___fladd+3,w
  4821  0B60  3A80               	xorlw	128
  4822  0B61  00FF               	movwf	127
  4823  0B62  3080               	movlw	128
  4824  0B63  027F               	subwf	127,w
  4825  0B64  1D03               	skipz
  4826  0B65  2B68               	goto	u2215
  4827  0B66  301A               	movlw	26
  4828  0B67  0264               	subwf	??___fladd+2,w
  4829  0B68                     u2215:	
  4830  0B68  1C03               	skipc
  4831  0B69  2BA1               	goto	l2065
  4832  0B6A  1283               	bcf	3,5	;RP0=0, select bank0
  4833  0B6B  1303               	bcf	3,6	;RP1=0, select bank0
  4834  0B6C  085D               	movf	___fladd@b+3,w
  4835  0B6D  045C               	iorwf	___fladd@b+2,w
  4836  0B6E  045B               	iorwf	___fladd@b+1,w
  4837  0B6F  045A               	iorwf	___fladd@b,w
  4838  0B70  1903               	btfsc	3,2
  4839  0B71  2B74               	goto	u2220
  4840  0B72  3001               	movlw	1
  4841  0B73  2B75               	goto	u2230
  4842  0B74                     u2220:	
  4843  0B74  3000               	movlw	0
  4844  0B75                     u2230:	
  4845  0B75  00E2               	movwf	??___fladd
  4846  0B76  0862               	movf	??___fladd,w
  4847  0B77  00ED               	movwf	___fladd@grs
  4848  0B78  3000               	movlw	0
  4849  0B79  00DD               	movwf	___fladd@b+3
  4850  0B7A  3000               	movlw	0
  4851  0B7B  00DC               	movwf	___fladd@b+2
  4852  0B7C  3000               	movlw	0
  4853  0B7D  00DB               	movwf	___fladd@b+1
  4854  0B7E  3000               	movlw	0
  4855  0B7F  00DA               	movwf	___fladd@b
  4856  0B80  086B               	movf	___fladd@aexp,w
  4857  0B81  00E2               	movwf	??___fladd
  4858  0B82  0862               	movf	??___fladd,w
  4859  0B83  00EC               	movwf	___fladd@bexp
  4860  0B84  2BA7               	goto	l696
  4861  0B85                     l698:	
  4862  0B85  1C6D               	btfss	___fladd@grs,0
  4863  0B86  2B90               	goto	l2055
  4864  0B87  086D               	movf	___fladd@grs,w
  4865  0B88  00E2               	movwf	??___fladd
  4866  0B89  1003               	clrc
  4867  0B8A  0C62               	rrf	??___fladd,w
  4868  0B8B  3801               	iorlw	1
  4869  0B8C  00E3               	movwf	??___fladd+1
  4870  0B8D  0863               	movf	??___fladd+1,w
  4871  0B8E  00ED               	movwf	___fladd@grs
  4872  0B8F  2B92               	goto	l2057
  4873  0B90                     l2055:	
  4874  0B90  1003               	clrc
  4875  0B91  0CED               	rrf	___fladd@grs,f
  4876  0B92                     l2057:	
  4877  0B92  185A               	btfsc	___fladd@b,0
  4878  0B93  17ED               	bsf	___fladd@grs,7
  4879  0B94  3001               	movlw	1
  4880  0B95  00E2               	movwf	??___fladd
  4881  0B96                     u2265:	
  4882  0B96  0D5D               	rlf	___fladd@b+3,w
  4883  0B97  0CDD               	rrf	___fladd@b+3,f
  4884  0B98  0CDC               	rrf	___fladd@b+2,f
  4885  0B99  0CDB               	rrf	___fladd@b+1,f
  4886  0B9A  0CDA               	rrf	___fladd@b,f
  4887  0B9B  0BE2               	decfsz	??___fladd& (0+127),f
  4888  0B9C  2B96               	goto	u2265
  4889  0B9D  3001               	movlw	1
  4890  0B9E  00E2               	movwf	??___fladd
  4891  0B9F  0862               	movf	??___fladd,w
  4892  0BA0  07EC               	addwf	___fladd@bexp,f
  4893  0BA1                     l2065:	
  4894  0BA1  1283               	bcf	3,5	;RP0=0, select bank0
  4895  0BA2  1303               	bcf	3,6	;RP1=0, select bank0
  4896  0BA3  086B               	movf	___fladd@aexp,w
  4897  0BA4  026C               	subwf	___fladd@bexp,w
  4898  0BA5  1C03               	skipc
  4899  0BA6  2B85               	goto	l698
  4900  0BA7                     l696:	
  4901  0BA7  1B6A               	btfsc	___fladd@signs,6
  4902  0BA8  2BE8               	goto	l2091
  4903  0BA9  086C               	movf	___fladd@bexp,w
  4904  0BAA  1D03               	btfss	3,2
  4905  0BAB  2BB5               	goto	l2073
  4906  0BAC  3000               	movlw	0
  4907  0BAD  00DD               	movwf	?___fladd+3
  4908  0BAE  3000               	movlw	0
  4909  0BAF  00DC               	movwf	?___fladd+2
  4910  0BB0  3000               	movlw	0
  4911  0BB1  00DB               	movwf	?___fladd+1
  4912  0BB2  3000               	movlw	0
  4913  0BB3  00DA               	movwf	?___fladd
  4914  0BB4  0008               	return
  4915  0BB5                     l2073:	
  4916  0BB5  085E               	movf	___fladd@a,w
  4917  0BB6  07DA               	addwf	___fladd@b,f
  4918  0BB7  085F               	movf	___fladd@a+1,w
  4919  0BB8  1103               	clrz
  4920  0BB9  1803               	skipnc
  4921  0BBA  3E01               	addlw	1
  4922  0BBB  1D03               	btfss	3,2
  4923  0BBC  07DB               	addwf	___fladd@b+1,f
  4924  0BBD  0860               	movf	___fladd@a+2,w
  4925  0BBE  1103               	clrz
  4926  0BBF  1803               	skipnc
  4927  0BC0  3E01               	addlw	1
  4928  0BC1  1D03               	btfss	3,2
  4929  0BC2  07DC               	addwf	___fladd@b+2,f
  4930  0BC3  0861               	movf	___fladd@a+3,w
  4931  0BC4  1103               	clrz
  4932  0BC5  1803               	skipnc
  4933  0BC6  3E01               	addlw	1
  4934  0BC7  1D03               	btfss	3,2
  4935  0BC8  07DD               	addwf	___fladd@b+3,f
  4936  0BC9  1C5D               	btfss	___fladd@b+3,0
  4937  0BCA  2C8A               	goto	l2125
  4938  0BCB  1C6D               	btfss	___fladd@grs,0
  4939  0BCC  2BD6               	goto	l2081
  4940  0BCD  086D               	movf	___fladd@grs,w
  4941  0BCE  00E2               	movwf	??___fladd
  4942  0BCF  1003               	clrc
  4943  0BD0  0C62               	rrf	??___fladd,w
  4944  0BD1  3801               	iorlw	1
  4945  0BD2  00E3               	movwf	??___fladd+1
  4946  0BD3  0863               	movf	??___fladd+1,w
  4947  0BD4  00ED               	movwf	___fladd@grs
  4948  0BD5  2BD8               	goto	l2083
  4949  0BD6                     l2081:	
  4950  0BD6  1003               	clrc
  4951  0BD7  0CED               	rrf	___fladd@grs,f
  4952  0BD8                     l2083:	
  4953  0BD8  185A               	btfsc	___fladd@b,0
  4954  0BD9  17ED               	bsf	___fladd@grs,7
  4955  0BDA  3001               	movlw	1
  4956  0BDB  00E2               	movwf	??___fladd
  4957  0BDC                     u2345:	
  4958  0BDC  0D5D               	rlf	___fladd@b+3,w
  4959  0BDD  0CDD               	rrf	___fladd@b+3,f
  4960  0BDE  0CDC               	rrf	___fladd@b+2,f
  4961  0BDF  0CDB               	rrf	___fladd@b+1,f
  4962  0BE0  0CDA               	rrf	___fladd@b,f
  4963  0BE1  0BE2               	decfsz	??___fladd& (0+127),f
  4964  0BE2  2BDC               	goto	u2345
  4965  0BE3  3001               	movlw	1
  4966  0BE4  00E2               	movwf	??___fladd
  4967  0BE5  0862               	movf	??___fladd,w
  4968  0BE6  07EC               	addwf	___fladd@bexp,f
  4969  0BE7  2C8A               	goto	l2125
  4970  0BE8                     l2091:	
  4971  0BE8  085D               	movf	___fladd@b+3,w
  4972  0BE9  3A80               	xorlw	128
  4973  0BEA  00FF               	movwf	127
  4974  0BEB  0861               	movf	___fladd@a+3,w
  4975  0BEC  3A80               	xorlw	128
  4976  0BED  027F               	subwf	127,w
  4977  0BEE  1D03               	skipz
  4978  0BEF  2BFA               	goto	u2353
  4979  0BF0  0860               	movf	___fladd@a+2,w
  4980  0BF1  025C               	subwf	___fladd@b+2,w
  4981  0BF2  1D03               	skipz
  4982  0BF3  2BFA               	goto	u2353
  4983  0BF4  085F               	movf	___fladd@a+1,w
  4984  0BF5  025B               	subwf	___fladd@b+1,w
  4985  0BF6  1D03               	skipz
  4986  0BF7  2BFA               	goto	u2353
  4987  0BF8  085E               	movf	___fladd@a,w
  4988  0BF9  025A               	subwf	___fladd@b,w
  4989  0BFA                     u2353:	
  4990  0BFA  1803               	skipnc
  4991  0BFB  2C52               	goto	l2101
  4992  0BFC  30FF               	movlw	255
  4993  0BFD  00E2               	movwf	??___fladd
  4994  0BFE  30FF               	movlw	255
  4995  0BFF  00E3               	movwf	??___fladd+1
  4996  0C00  30FF               	movlw	255
  4997  0C01  00E4               	movwf	??___fladd+2
  4998  0C02  30FF               	movlw	255
  4999  0C03  00E5               	movwf	??___fladd+3
  5000  0C04  085E               	movf	___fladd@a,w
  5001  0C05  00E6               	movwf	??___fladd+4
  5002  0C06  085F               	movf	___fladd@a+1,w
  5003  0C07  00E7               	movwf	??___fladd+5
  5004  0C08  0860               	movf	___fladd@a+2,w
  5005  0C09  00E8               	movwf	??___fladd+6
  5006  0C0A  0861               	movf	___fladd@a+3,w
  5007  0C0B  00E9               	movwf	??___fladd+7
  5008  0C0C  085A               	movf	___fladd@b,w
  5009  0C0D  02E6               	subwf	??___fladd+4,f
  5010  0C0E  085B               	movf	___fladd@b+1,w
  5011  0C0F  1C03               	skipc
  5012  0C10  0F5B               	incfsz	___fladd@b+1,w
  5013  0C11  2C13               	goto	u2361
  5014  0C12  2C14               	goto	u2362
  5015  0C13                     u2361:	
  5016  0C13  02E7               	subwf	??___fladd+5,f
  5017  0C14                     u2362:	
  5018  0C14  085C               	movf	___fladd@b+2,w
  5019  0C15  1C03               	skipc
  5020  0C16  0F5C               	incfsz	___fladd@b+2,w
  5021  0C17  2C19               	goto	u2363
  5022  0C18  2C1A               	goto	u2364
  5023  0C19                     u2363:	
  5024  0C19  02E8               	subwf	??___fladd+6,f
  5025  0C1A                     u2364:	
  5026  0C1A  085D               	movf	___fladd@b+3,w
  5027  0C1B  1C03               	skipc
  5028  0C1C  0F5D               	incfsz	___fladd@b+3,w
  5029  0C1D  2C1F               	goto	u2365
  5030  0C1E  2C20               	goto	u2366
  5031  0C1F                     u2365:	
  5032  0C1F  02E9               	subwf	??___fladd+7,f
  5033  0C20                     u2366:	
  5034  0C20  0866               	movf	??___fladd+4,w
  5035  0C21  07E2               	addwf	??___fladd,f
  5036  0C22  0867               	movf	??___fladd+5,w
  5037  0C23  1803               	skipnc
  5038  0C24  0F67               	incfsz	??___fladd+5,w
  5039  0C25  2C27               	goto	u2370
  5040  0C26  2C28               	goto	u2371
  5041  0C27                     u2370:	
  5042  0C27  07E3               	addwf	??___fladd+1,f
  5043  0C28                     u2371:	
  5044  0C28  0868               	movf	??___fladd+6,w
  5045  0C29  1803               	skipnc
  5046  0C2A  0F68               	incfsz	??___fladd+6,w
  5047  0C2B  2C2D               	goto	u2372
  5048  0C2C  2C2E               	goto	u2373
  5049  0C2D                     u2372:	
  5050  0C2D  07E4               	addwf	??___fladd+2,f
  5051  0C2E                     u2373:	
  5052  0C2E  0869               	movf	??___fladd+7,w
  5053  0C2F  1803               	skipnc
  5054  0C30  0A69               	incf	??___fladd+7,w
  5055  0C31  07E5               	addwf	??___fladd+3,f
  5056  0C32  0865               	movf	??___fladd+3,w
  5057  0C33  00DD               	movwf	___fladd@b+3
  5058  0C34  0864               	movf	??___fladd+2,w
  5059  0C35  00DC               	movwf	___fladd@b+2
  5060  0C36  0863               	movf	??___fladd+1,w
  5061  0C37  00DB               	movwf	___fladd@b+1
  5062  0C38  0862               	movf	??___fladd,w
  5063  0C39  00DA               	movwf	___fladd@b
  5064  0C3A  3080               	movlw	128
  5065  0C3B  00E2               	movwf	??___fladd
  5066  0C3C  0862               	movf	??___fladd,w
  5067  0C3D  06EA               	xorwf	___fladd@signs,f
  5068  0C3E  09ED               	comf	___fladd@grs,f
  5069  0C3F  0AED               	incf	___fladd@grs,f
  5070  0C40  086D               	movf	___fladd@grs,w
  5071  0C41  1D03               	btfss	3,2
  5072  0C42  2C60               	goto	l713
  5073  0C43  3001               	movlw	1
  5074  0C44  07DA               	addwf	___fladd@b,f
  5075  0C45  3000               	movlw	0
  5076  0C46  1803               	skipnc
  5077  0C47  3001               	movlw	1
  5078  0C48  07DB               	addwf	___fladd@b+1,f
  5079  0C49  3000               	movlw	0
  5080  0C4A  1803               	skipnc
  5081  0C4B  3001               	movlw	1
  5082  0C4C  07DC               	addwf	___fladd@b+2,f
  5083  0C4D  3000               	movlw	0
  5084  0C4E  1803               	skipnc
  5085  0C4F  3001               	movlw	1
  5086  0C50  07DD               	addwf	___fladd@b+3,f
  5087  0C51  2C60               	goto	l713
  5088  0C52                     l2101:	
  5089  0C52  085E               	movf	___fladd@a,w
  5090  0C53  02DA               	subwf	___fladd@b,f
  5091  0C54  085F               	movf	___fladd@a+1,w
  5092  0C55  1C03               	skipc
  5093  0C56  0F5F               	incfsz	___fladd@a+1,w
  5094  0C57  02DB               	subwf	___fladd@b+1,f
  5095  0C58  0860               	movf	___fladd@a+2,w
  5096  0C59  1C03               	skipc
  5097  0C5A  0F60               	incfsz	___fladd@a+2,w
  5098  0C5B  02DC               	subwf	___fladd@b+2,f
  5099  0C5C  0861               	movf	___fladd@a+3,w
  5100  0C5D  1C03               	skipc
  5101  0C5E  0F61               	incfsz	___fladd@a+3,w
  5102  0C5F  02DD               	subwf	___fladd@b+3,f
  5103  0C60                     l713:	
  5104  0C60  085D               	movf	___fladd@b+3,w
  5105  0C61  045C               	iorwf	___fladd@b+2,w
  5106  0C62  045B               	iorwf	___fladd@b+1,w
  5107  0C63  045A               	iorwf	___fladd@b,w
  5108  0C64  1D03               	skipz
  5109  0C65  2C88               	goto	l2123
  5110  0C66  086D               	movf	___fladd@grs,w
  5111  0C67  1D03               	btfss	3,2
  5112  0C68  2C88               	goto	l2123
  5113  0C69  3000               	movlw	0
  5114  0C6A  00DD               	movwf	?___fladd+3
  5115  0C6B  3000               	movlw	0
  5116  0C6C  00DC               	movwf	?___fladd+2
  5117  0C6D  3000               	movlw	0
  5118  0C6E  00DB               	movwf	?___fladd+1
  5119  0C6F  3000               	movlw	0
  5120  0C70  00DA               	movwf	?___fladd
  5121  0C71  0008               	return
  5122  0C72                     l2109:	
  5123  0C72  3001               	movlw	1
  5124  0C73  00E2               	movwf	??___fladd
  5125  0C74                     u2415:	
  5126  0C74  1003               	clrc
  5127  0C75  0DDA               	rlf	___fladd@b,f
  5128  0C76  0DDB               	rlf	___fladd@b+1,f
  5129  0C77  0DDC               	rlf	___fladd@b+2,f
  5130  0C78  0DDD               	rlf	___fladd@b+3,f
  5131  0C79  0BE2               	decfsz	??___fladd,f
  5132  0C7A  2C74               	goto	u2415
  5133  0C7B  1BED               	btfsc	___fladd@grs,7
  5134  0C7C  145A               	bsf	___fladd@b,0
  5135  0C7D  1C6D               	btfss	___fladd@grs,0
  5136  0C7E  2C81               	goto	l2117
  5137  0C7F  1403               	setc
  5138  0C80  2C82               	goto	L1
  5139  0C81                     l2117:	
  5140  0C81  1003               	clrc
  5141  0C82                     L1:	
  5142  0C82  0DED               	rlf	___fladd@grs,f
  5143  0C83  086C               	movf	___fladd@bexp,w
  5144  0C84  1903               	btfsc	3,2
  5145  0C85  2C88               	goto	l2123
  5146  0C86  3001               	movlw	1
  5147  0C87  02EC               	subwf	___fladd@bexp,f
  5148  0C88                     l2123:	
  5149  0C88  1FDC               	btfss	___fladd@b+2,7
  5150  0C89  2C72               	goto	l2109
  5151  0C8A                     l2125:	
  5152  0C8A  01EB               	clrf	___fladd@aexp
  5153  0C8B  1FED               	btfss	___fladd@grs,7
  5154  0C8C  2C95               	goto	l2135
  5155  0C8D  086D               	movf	___fladd@grs,w
  5156  0C8E  397F               	andlw	127
  5157  0C8F  1903               	btfsc	3,2
  5158  0C90  185A               	btfsc	___fladd@b,0
  5159  0C91  2C93               	goto	l2131
  5160  0C92  2C95               	goto	l2135
  5161  0C93                     l2131:	
  5162  0C93  01EB               	clrf	___fladd@aexp
  5163  0C94  0AEB               	incf	___fladd@aexp,f
  5164  0C95                     l2135:	
  5165  0C95  086B               	movf	___fladd@aexp,w
  5166  0C96  1903               	btfsc	3,2
  5167  0C97  2CC8               	goto	l726
  5168  0C98  3001               	movlw	1
  5169  0C99  07DA               	addwf	___fladd@b,f
  5170  0C9A  3000               	movlw	0
  5171  0C9B  1803               	skipnc
  5172  0C9C  3001               	movlw	1
  5173  0C9D  07DB               	addwf	___fladd@b+1,f
  5174  0C9E  3000               	movlw	0
  5175  0C9F  1803               	skipnc
  5176  0CA0  3001               	movlw	1
  5177  0CA1  07DC               	addwf	___fladd@b+2,f
  5178  0CA2  3000               	movlw	0
  5179  0CA3  1803               	skipnc
  5180  0CA4  3001               	movlw	1
  5181  0CA5  07DD               	addwf	___fladd@b+3,f
  5182  0CA6  1C5D               	btfss	___fladd@b+3,0
  5183  0CA7  2CC8               	goto	l726
  5184  0CA8  085A               	movf	___fladd@b,w
  5185  0CA9  00E2               	movwf	??___fladd
  5186  0CAA  085B               	movf	___fladd@b+1,w
  5187  0CAB  00E3               	movwf	??___fladd+1
  5188  0CAC  085C               	movf	___fladd@b+2,w
  5189  0CAD  00E4               	movwf	??___fladd+2
  5190  0CAE  085D               	movf	___fladd@b+3,w
  5191  0CAF  00E5               	movwf	??___fladd+3
  5192  0CB0  3001               	movlw	1
  5193  0CB1  00E6               	movwf	??___fladd+4
  5194  0CB2                     u2515:	
  5195  0CB2  0D65               	rlf	??___fladd+3,w
  5196  0CB3  0CE5               	rrf	??___fladd+3,f
  5197  0CB4  0CE4               	rrf	??___fladd+2,f
  5198  0CB5  0CE3               	rrf	??___fladd+1,f
  5199  0CB6  0CE2               	rrf	??___fladd,f
  5200  0CB7  0BE6               	decfsz	??___fladd+4,f
  5201  0CB8  2CB2               	goto	u2515
  5202  0CB9  0865               	movf	??___fladd+3,w
  5203  0CBA  00DD               	movwf	___fladd@b+3
  5204  0CBB  0864               	movf	??___fladd+2,w
  5205  0CBC  00DC               	movwf	___fladd@b+2
  5206  0CBD  0863               	movf	??___fladd+1,w
  5207  0CBE  00DB               	movwf	___fladd@b+1
  5208  0CBF  0862               	movf	??___fladd,w
  5209  0CC0  00DA               	movwf	___fladd@b
  5210  0CC1  0A6C               	incf	___fladd@bexp,w
  5211  0CC2  1903               	btfsc	3,2
  5212  0CC3  2CC8               	goto	l726
  5213  0CC4  3001               	movlw	1
  5214  0CC5  00E2               	movwf	??___fladd
  5215  0CC6  0862               	movf	??___fladd,w
  5216  0CC7  07EC               	addwf	___fladd@bexp,f
  5217  0CC8                     l726:	
  5218  0CC8  0A6C               	incf	___fladd@bexp,w
  5219  0CC9  1D03               	btfss	3,2
  5220  0CCA  086C               	movf	___fladd@bexp,w
  5221  0CCB  1D03               	btfss	3,2
  5222  0CCC  2CD8               	goto	l2153
  5223  0CCD  3000               	movlw	0
  5224  0CCE  00DD               	movwf	___fladd@b+3
  5225  0CCF  3000               	movlw	0
  5226  0CD0  00DC               	movwf	___fladd@b+2
  5227  0CD1  3000               	movlw	0
  5228  0CD2  00DB               	movwf	___fladd@b+1
  5229  0CD3  3000               	movlw	0
  5230  0CD4  00DA               	movwf	___fladd@b
  5231  0CD5  086C               	movf	___fladd@bexp,w
  5232  0CD6  1903               	btfsc	3,2
  5233  0CD7  01EA               	clrf	___fladd@signs
  5234  0CD8                     l2153:	
  5235  0CD8  1C6C               	btfss	___fladd@bexp,0
  5236  0CD9  2CDC               	goto	l2157
  5237  0CDA  17DC               	bsf	___fladd@b+2,7
  5238  0CDB  2CE0               	goto	l734
  5239  0CDC                     l2157:	
  5240  0CDC  307F               	movlw	127
  5241  0CDD  00E2               	movwf	??___fladd
  5242  0CDE  0862               	movf	??___fladd,w
  5243  0CDF  05DC               	andwf	___fladd@b+2,f
  5244  0CE0                     l734:	
  5245  0CE0  086C               	movf	___fladd@bexp,w
  5246  0CE1  00E2               	movwf	??___fladd
  5247  0CE2  1003               	clrc
  5248  0CE3  0C62               	rrf	??___fladd,w
  5249  0CE4  00E3               	movwf	??___fladd+1
  5250  0CE5  0863               	movf	??___fladd+1,w
  5251  0CE6  00DD               	movwf	___fladd@b+3
  5252  0CE7  1FEA               	btfss	___fladd@signs,7
  5253  0CE8  0008               	return
  5254  0CE9  17DD               	bsf	___fladd@b+3,7
  5255  0CEA  0008               	return
  5256  0CEB                     __end_of___fladd:	
  5257                           
  5258                           	psect	text16
  5259  0CEB                     __ptext16:	
  5260 ;; *************** function ___flmul *****************
  5261 ;; Defined at:
  5262 ;;		line 8 in file "D:\Mplab X\xc8\pic\sources\c90\common\sprcmul.c"
  5263 ;; Parameters:    Size  Location     Type
  5264 ;;  b               4    6[BANK0 ] unsigned char 
  5265 ;;  a               4   10[BANK0 ] unsigned char 
  5266 ;; Auto vars:     Size  Location     Type
  5267 ;;  prod            4   26[BANK0 ] struct .
  5268 ;;  grs             4   20[BANK0 ] unsigned long 
  5269 ;;  temp            2   30[BANK0 ] struct .
  5270 ;;  bexp            1   25[BANK0 ] unsigned char 
  5271 ;;  aexp            1   24[BANK0 ] unsigned char 
  5272 ;;  sign            1   19[BANK0 ] unsigned char 
  5273 ;; Return value:  Size  Location     Type
  5274 ;;                  4    6[BANK0 ] unsigned char 
  5275 ;; Registers used:
  5276 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5277 ;; Tracked objects:
  5278 ;;		On entry : 0/0
  5279 ;;		On exit  : 0/0
  5280 ;;		Unchanged: 0/0
  5281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5282 ;;      Params:         0       8       0       0       0
  5283 ;;      Locals:         0      13       0       0       0
  5284 ;;      Temps:          0       5       0       0       0
  5285 ;;      Totals:         0      26       0       0       0
  5286 ;;Total ram usage:       26 bytes
  5287 ;; Hardware stack levels used:    1
  5288 ;; Hardware stack levels required when called:    2
  5289 ;; This function calls:
  5290 ;;		__Umul8_16
  5291 ;; This function is called by:
  5292 ;;		_main
  5293 ;;		_PID_Init
  5294 ;; This function uses a non-reentrant model
  5295 ;;
  5296                           
  5297                           
  5298                           ;psect for function ___flmul
  5299  0CEB                     ___flmul:	
  5300                           
  5301                           ;incstack = 0
  5302                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5303  0CEB  1283               	bcf	3,5	;RP0=0, select bank0
  5304  0CEC  1303               	bcf	3,6	;RP1=0, select bank0
  5305  0CED  0829               	movf	___flmul@b+3,w
  5306  0CEE  3980               	andlw	128
  5307  0CEF  00AE               	movwf	??___flmul
  5308  0CF0  082E               	movf	??___flmul,w
  5309  0CF1  00B3               	movwf	___flmul@sign
  5310  0CF2  0829               	movf	___flmul@b+3,w
  5311  0CF3  00AE               	movwf	??___flmul
  5312  0CF4  072E               	addwf	??___flmul,w
  5313  0CF5  00AF               	movwf	??___flmul+1
  5314  0CF6  082F               	movf	??___flmul+1,w
  5315  0CF7  00B9               	movwf	___flmul@bexp
  5316  0CF8  1BA8               	btfsc	___flmul@b+2,7
  5317  0CF9  1439               	bsf	___flmul@bexp,0
  5318  0CFA  0839               	movf	___flmul@bexp,w
  5319  0CFB  1903               	btfsc	3,2
  5320  0CFC  2D0A               	goto	l2473
  5321  0CFD  0A39               	incf	___flmul@bexp,w
  5322  0CFE  1D03               	btfss	3,2
  5323  0CFF  2D08               	goto	l2471
  5324  0D00  3000               	movlw	0
  5325  0D01  00A9               	movwf	___flmul@b+3
  5326  0D02  3000               	movlw	0
  5327  0D03  00A8               	movwf	___flmul@b+2
  5328  0D04  3000               	movlw	0
  5329  0D05  00A7               	movwf	___flmul@b+1
  5330  0D06  3000               	movlw	0
  5331  0D07  00A6               	movwf	___flmul@b
  5332  0D08                     l2471:	
  5333  0D08  17A8               	bsf	___flmul@b+2,7
  5334  0D09  2D12               	goto	l2475
  5335  0D0A                     l2473:	
  5336  0D0A  3000               	movlw	0
  5337  0D0B  00A9               	movwf	___flmul@b+3
  5338  0D0C  3000               	movlw	0
  5339  0D0D  00A8               	movwf	___flmul@b+2
  5340  0D0E  3000               	movlw	0
  5341  0D0F  00A7               	movwf	___flmul@b+1
  5342  0D10  3000               	movlw	0
  5343  0D11  00A6               	movwf	___flmul@b
  5344  0D12                     l2475:	
  5345  0D12  082D               	movf	___flmul@a+3,w
  5346  0D13  3980               	andlw	128
  5347  0D14  00AE               	movwf	??___flmul
  5348  0D15  082E               	movf	??___flmul,w
  5349  0D16  06B3               	xorwf	___flmul@sign,f
  5350  0D17  082D               	movf	___flmul@a+3,w
  5351  0D18  00AE               	movwf	??___flmul
  5352  0D19  072E               	addwf	??___flmul,w
  5353  0D1A  00AF               	movwf	??___flmul+1
  5354  0D1B  082F               	movf	??___flmul+1,w
  5355  0D1C  00B8               	movwf	___flmul@aexp
  5356  0D1D  1BAC               	btfsc	___flmul@a+2,7
  5357  0D1E  1438               	bsf	___flmul@aexp,0
  5358  0D1F  0838               	movf	___flmul@aexp,w
  5359  0D20  1903               	btfsc	3,2
  5360  0D21  2D2F               	goto	l2491
  5361  0D22  0A38               	incf	___flmul@aexp,w
  5362  0D23  1D03               	btfss	3,2
  5363  0D24  2D2D               	goto	l2489
  5364  0D25  3000               	movlw	0
  5365  0D26  00AD               	movwf	___flmul@a+3
  5366  0D27  3000               	movlw	0
  5367  0D28  00AC               	movwf	___flmul@a+2
  5368  0D29  3000               	movlw	0
  5369  0D2A  00AB               	movwf	___flmul@a+1
  5370  0D2B  3000               	movlw	0
  5371  0D2C  00AA               	movwf	___flmul@a
  5372  0D2D                     l2489:	
  5373  0D2D  17AC               	bsf	___flmul@a+2,7
  5374  0D2E  2D37               	goto	l2493
  5375  0D2F                     l2491:	
  5376  0D2F  3000               	movlw	0
  5377  0D30  00AD               	movwf	___flmul@a+3
  5378  0D31  3000               	movlw	0
  5379  0D32  00AC               	movwf	___flmul@a+2
  5380  0D33  3000               	movlw	0
  5381  0D34  00AB               	movwf	___flmul@a+1
  5382  0D35  3000               	movlw	0
  5383  0D36  00AA               	movwf	___flmul@a
  5384  0D37                     l2493:	
  5385  0D37  0838               	movf	___flmul@aexp,w
  5386  0D38  1D03               	btfss	3,2
  5387  0D39  0839               	movf	___flmul@bexp,w
  5388  0D3A  1D03               	btfss	3,2
  5389  0D3B  2D45               	goto	l2501
  5390  0D3C  3000               	movlw	0
  5391  0D3D  00A9               	movwf	?___flmul+3
  5392  0D3E  3000               	movlw	0
  5393  0D3F  00A8               	movwf	?___flmul+2
  5394  0D40  3000               	movlw	0
  5395  0D41  00A7               	movwf	?___flmul+1
  5396  0D42  3000               	movlw	0
  5397  0D43  00A6               	movwf	?___flmul
  5398  0D44  0008               	return
  5399  0D45                     l2501:	
  5400  0D45  0826               	movf	___flmul@b,w
  5401  0D46  00AE               	movwf	??___flmul
  5402  0D47  082E               	movf	??___flmul,w
  5403  0D48  00F2               	movwf	__Umul8_16@multiplicand
  5404  0D49  082C               	movf	___flmul@a+2,w
  5405  0D4A  160A  118A  23F2  120A  158A  	fcall	__Umul8_16
  5406  0D4F  0873               	movf	?__Umul8_16+1,w
  5407  0D50  1283               	bcf	3,5	;RP0=0, select bank0
  5408  0D51  1303               	bcf	3,6	;RP1=0, select bank0
  5409  0D52  00BF               	movwf	___flmul@temp+1
  5410  0D53  0872               	movf	?__Umul8_16,w
  5411  0D54  00BE               	movwf	___flmul@temp
  5412  0D55  083E               	movf	___flmul@temp,w
  5413  0D56  00AE               	movwf	??___flmul
  5414  0D57  01AF               	clrf	??___flmul+1
  5415  0D58  01B0               	clrf	??___flmul+2
  5416  0D59  01B1               	clrf	??___flmul+3
  5417  0D5A  0831               	movf	??___flmul+3,w
  5418  0D5B  00B7               	movwf	___flmul@grs+3
  5419  0D5C  0830               	movf	??___flmul+2,w
  5420  0D5D  00B6               	movwf	___flmul@grs+2
  5421  0D5E  082F               	movf	??___flmul+1,w
  5422  0D5F  00B5               	movwf	___flmul@grs+1
  5423  0D60  082E               	movf	??___flmul,w
  5424  0D61  00B4               	movwf	___flmul@grs
  5425  0D62  083F               	movf	___flmul@temp+1,w
  5426  0D63  00AE               	movwf	??___flmul
  5427  0D64  01AF               	clrf	??___flmul+1
  5428  0D65  01B0               	clrf	??___flmul+2
  5429  0D66  01B1               	clrf	??___flmul+3
  5430  0D67  0831               	movf	??___flmul+3,w
  5431  0D68  00BD               	movwf	___flmul@prod+3
  5432  0D69  0830               	movf	??___flmul+2,w
  5433  0D6A  00BC               	movwf	___flmul@prod+2
  5434  0D6B  082F               	movf	??___flmul+1,w
  5435  0D6C  00BB               	movwf	___flmul@prod+1
  5436  0D6D  082E               	movf	??___flmul,w
  5437  0D6E  00BA               	movwf	___flmul@prod
  5438  0D6F  0827               	movf	___flmul@b+1,w
  5439  0D70  00AE               	movwf	??___flmul
  5440  0D71  082E               	movf	??___flmul,w
  5441  0D72  00F2               	movwf	__Umul8_16@multiplicand
  5442  0D73  082B               	movf	___flmul@a+1,w
  5443  0D74  160A  118A  23F2  120A  158A  	fcall	__Umul8_16
  5444  0D79  0873               	movf	?__Umul8_16+1,w
  5445  0D7A  1283               	bcf	3,5	;RP0=0, select bank0
  5446  0D7B  1303               	bcf	3,6	;RP1=0, select bank0
  5447  0D7C  00BF               	movwf	___flmul@temp+1
  5448  0D7D  0872               	movf	?__Umul8_16,w
  5449  0D7E  00BE               	movwf	___flmul@temp
  5450  0D7F  083E               	movf	___flmul@temp,w
  5451  0D80  00AE               	movwf	??___flmul
  5452  0D81  01AF               	clrf	??___flmul+1
  5453  0D82  01B0               	clrf	??___flmul+2
  5454  0D83  01B1               	clrf	??___flmul+3
  5455  0D84  082E               	movf	??___flmul,w
  5456  0D85  07B4               	addwf	___flmul@grs,f
  5457  0D86  082F               	movf	??___flmul+1,w
  5458  0D87  1103               	clrz
  5459  0D88  1803               	skipnc
  5460  0D89  3E01               	addlw	1
  5461  0D8A  1D03               	btfss	3,2
  5462  0D8B  07B5               	addwf	___flmul@grs+1,f
  5463  0D8C  0830               	movf	??___flmul+2,w
  5464  0D8D  1103               	clrz
  5465  0D8E  1803               	skipnc
  5466  0D8F  3E01               	addlw	1
  5467  0D90  1D03               	btfss	3,2
  5468  0D91  07B6               	addwf	___flmul@grs+2,f
  5469  0D92  0831               	movf	??___flmul+3,w
  5470  0D93  1103               	clrz
  5471  0D94  1803               	skipnc
  5472  0D95  3E01               	addlw	1
  5473  0D96  1D03               	btfss	3,2
  5474  0D97  07B7               	addwf	___flmul@grs+3,f
  5475  0D98  083F               	movf	___flmul@temp+1,w
  5476  0D99  00AE               	movwf	??___flmul
  5477  0D9A  01AF               	clrf	??___flmul+1
  5478  0D9B  01B0               	clrf	??___flmul+2
  5479  0D9C  01B1               	clrf	??___flmul+3
  5480  0D9D  082E               	movf	??___flmul,w
  5481  0D9E  07BA               	addwf	___flmul@prod,f
  5482  0D9F  082F               	movf	??___flmul+1,w
  5483  0DA0  1103               	clrz
  5484  0DA1  1803               	skipnc
  5485  0DA2  3E01               	addlw	1
  5486  0DA3  1D03               	btfss	3,2
  5487  0DA4  07BB               	addwf	___flmul@prod+1,f
  5488  0DA5  0830               	movf	??___flmul+2,w
  5489  0DA6  1103               	clrz
  5490  0DA7  1803               	skipnc
  5491  0DA8  3E01               	addlw	1
  5492  0DA9  1D03               	btfss	3,2
  5493  0DAA  07BC               	addwf	___flmul@prod+2,f
  5494  0DAB  0831               	movf	??___flmul+3,w
  5495  0DAC  1103               	clrz
  5496  0DAD  1803               	skipnc
  5497  0DAE  3E01               	addlw	1
  5498  0DAF  1D03               	btfss	3,2
  5499  0DB0  07BD               	addwf	___flmul@prod+3,f
  5500  0DB1  0828               	movf	___flmul@b+2,w
  5501  0DB2  00AE               	movwf	??___flmul
  5502  0DB3  082E               	movf	??___flmul,w
  5503  0DB4  00F2               	movwf	__Umul8_16@multiplicand
  5504  0DB5  082A               	movf	___flmul@a,w
  5505  0DB6  160A  118A  23F2  120A  158A  	fcall	__Umul8_16
  5506  0DBB  0873               	movf	?__Umul8_16+1,w
  5507  0DBC  1283               	bcf	3,5	;RP0=0, select bank0
  5508  0DBD  1303               	bcf	3,6	;RP1=0, select bank0
  5509  0DBE  00BF               	movwf	___flmul@temp+1
  5510  0DBF  0872               	movf	?__Umul8_16,w
  5511  0DC0  00BE               	movwf	___flmul@temp
  5512  0DC1  083E               	movf	___flmul@temp,w
  5513  0DC2  00AE               	movwf	??___flmul
  5514  0DC3  01AF               	clrf	??___flmul+1
  5515  0DC4  01B0               	clrf	??___flmul+2
  5516  0DC5  01B1               	clrf	??___flmul+3
  5517  0DC6  082E               	movf	??___flmul,w
  5518  0DC7  07B4               	addwf	___flmul@grs,f
  5519  0DC8  082F               	movf	??___flmul+1,w
  5520  0DC9  1103               	clrz
  5521  0DCA  1803               	skipnc
  5522  0DCB  3E01               	addlw	1
  5523  0DCC  1D03               	btfss	3,2
  5524  0DCD  07B5               	addwf	___flmul@grs+1,f
  5525  0DCE  0830               	movf	??___flmul+2,w
  5526  0DCF  1103               	clrz
  5527  0DD0  1803               	skipnc
  5528  0DD1  3E01               	addlw	1
  5529  0DD2  1D03               	btfss	3,2
  5530  0DD3  07B6               	addwf	___flmul@grs+2,f
  5531  0DD4  0831               	movf	??___flmul+3,w
  5532  0DD5  1103               	clrz
  5533  0DD6  1803               	skipnc
  5534  0DD7  3E01               	addlw	1
  5535  0DD8  1D03               	btfss	3,2
  5536  0DD9  07B7               	addwf	___flmul@grs+3,f
  5537  0DDA  083F               	movf	___flmul@temp+1,w
  5538  0DDB  00AE               	movwf	??___flmul
  5539  0DDC  01AF               	clrf	??___flmul+1
  5540  0DDD  01B0               	clrf	??___flmul+2
  5541  0DDE  01B1               	clrf	??___flmul+3
  5542  0DDF  082E               	movf	??___flmul,w
  5543  0DE0  07BA               	addwf	___flmul@prod,f
  5544  0DE1  082F               	movf	??___flmul+1,w
  5545  0DE2  1103               	clrz
  5546  0DE3  1803               	skipnc
  5547  0DE4  3E01               	addlw	1
  5548  0DE5  1D03               	btfss	3,2
  5549  0DE6  07BB               	addwf	___flmul@prod+1,f
  5550  0DE7  0830               	movf	??___flmul+2,w
  5551  0DE8  1103               	clrz
  5552  0DE9  1803               	skipnc
  5553  0DEA  3E01               	addlw	1
  5554  0DEB  1D03               	btfss	3,2
  5555  0DEC  07BC               	addwf	___flmul@prod+2,f
  5556  0DED  0831               	movf	??___flmul+3,w
  5557  0DEE  1103               	clrz
  5558  0DEF  1803               	skipnc
  5559  0DF0  3E01               	addlw	1
  5560  0DF1  1D03               	btfss	3,2
  5561  0DF2  07BD               	addwf	___flmul@prod+3,f
  5562  0DF3  3008               	movlw	8
  5563  0DF4  00AE               	movwf	??___flmul
  5564  0DF5                     u3315:	
  5565  0DF5  1003               	clrc
  5566  0DF6  0DB4               	rlf	___flmul@grs,f
  5567  0DF7  0DB5               	rlf	___flmul@grs+1,f
  5568  0DF8  0DB6               	rlf	___flmul@grs+2,f
  5569  0DF9  0DB7               	rlf	___flmul@grs+3,f
  5570  0DFA  0BAE               	decfsz	??___flmul,f
  5571  0DFB  2DF5               	goto	u3315
  5572  0DFC  0827               	movf	___flmul@b+1,w
  5573  0DFD  00AE               	movwf	??___flmul
  5574  0DFE  082E               	movf	??___flmul,w
  5575  0DFF  00F2               	movwf	__Umul8_16@multiplicand
  5576  0E00  082A               	movf	___flmul@a,w
  5577  0E01  160A  118A  23F2  120A  158A  	fcall	__Umul8_16
  5578  0E06  0873               	movf	?__Umul8_16+1,w
  5579  0E07  1283               	bcf	3,5	;RP0=0, select bank0
  5580  0E08  1303               	bcf	3,6	;RP1=0, select bank0
  5581  0E09  00BF               	movwf	___flmul@temp+1
  5582  0E0A  0872               	movf	?__Umul8_16,w
  5583  0E0B  00BE               	movwf	___flmul@temp
  5584  0E0C  083E               	movf	___flmul@temp,w
  5585  0E0D  00AE               	movwf	??___flmul
  5586  0E0E  083F               	movf	___flmul@temp+1,w
  5587  0E0F  00AF               	movwf	??___flmul+1
  5588  0E10  01B0               	clrf	??___flmul+2
  5589  0E11  01B1               	clrf	??___flmul+3
  5590  0E12  082E               	movf	??___flmul,w
  5591  0E13  07B4               	addwf	___flmul@grs,f
  5592  0E14  082F               	movf	??___flmul+1,w
  5593  0E15  1103               	clrz
  5594  0E16  1803               	skipnc
  5595  0E17  3E01               	addlw	1
  5596  0E18  1D03               	btfss	3,2
  5597  0E19  07B5               	addwf	___flmul@grs+1,f
  5598  0E1A  0830               	movf	??___flmul+2,w
  5599  0E1B  1103               	clrz
  5600  0E1C  1803               	skipnc
  5601  0E1D  3E01               	addlw	1
  5602  0E1E  1D03               	btfss	3,2
  5603  0E1F  07B6               	addwf	___flmul@grs+2,f
  5604  0E20  0831               	movf	??___flmul+3,w
  5605  0E21  1103               	clrz
  5606  0E22  1803               	skipnc
  5607  0E23  3E01               	addlw	1
  5608  0E24  1D03               	btfss	3,2
  5609  0E25  07B7               	addwf	___flmul@grs+3,f
  5610  0E26  0826               	movf	___flmul@b,w
  5611  0E27  00AE               	movwf	??___flmul
  5612  0E28  082E               	movf	??___flmul,w
  5613  0E29  00F2               	movwf	__Umul8_16@multiplicand
  5614  0E2A  082B               	movf	___flmul@a+1,w
  5615  0E2B  160A  118A  23F2  120A  158A  	fcall	__Umul8_16
  5616  0E30  0873               	movf	?__Umul8_16+1,w
  5617  0E31  1283               	bcf	3,5	;RP0=0, select bank0
  5618  0E32  1303               	bcf	3,6	;RP1=0, select bank0
  5619  0E33  00BF               	movwf	___flmul@temp+1
  5620  0E34  0872               	movf	?__Umul8_16,w
  5621  0E35  00BE               	movwf	___flmul@temp
  5622  0E36  083E               	movf	___flmul@temp,w
  5623  0E37  00AE               	movwf	??___flmul
  5624  0E38  083F               	movf	___flmul@temp+1,w
  5625  0E39  00AF               	movwf	??___flmul+1
  5626  0E3A  01B0               	clrf	??___flmul+2
  5627  0E3B  01B1               	clrf	??___flmul+3
  5628  0E3C  082E               	movf	??___flmul,w
  5629  0E3D  07B4               	addwf	___flmul@grs,f
  5630  0E3E  082F               	movf	??___flmul+1,w
  5631  0E3F  1103               	clrz
  5632  0E40  1803               	skipnc
  5633  0E41  3E01               	addlw	1
  5634  0E42  1D03               	btfss	3,2
  5635  0E43  07B5               	addwf	___flmul@grs+1,f
  5636  0E44  0830               	movf	??___flmul+2,w
  5637  0E45  1103               	clrz
  5638  0E46  1803               	skipnc
  5639  0E47  3E01               	addlw	1
  5640  0E48  1D03               	btfss	3,2
  5641  0E49  07B6               	addwf	___flmul@grs+2,f
  5642  0E4A  0831               	movf	??___flmul+3,w
  5643  0E4B  1103               	clrz
  5644  0E4C  1803               	skipnc
  5645  0E4D  3E01               	addlw	1
  5646  0E4E  1D03               	btfss	3,2
  5647  0E4F  07B7               	addwf	___flmul@grs+3,f
  5648  0E50  3008               	movlw	8
  5649  0E51  00AE               	movwf	??___flmul
  5650  0E52                     u3345:	
  5651  0E52  1003               	clrc
  5652  0E53  0DB4               	rlf	___flmul@grs,f
  5653  0E54  0DB5               	rlf	___flmul@grs+1,f
  5654  0E55  0DB6               	rlf	___flmul@grs+2,f
  5655  0E56  0DB7               	rlf	___flmul@grs+3,f
  5656  0E57  0BAE               	decfsz	??___flmul,f
  5657  0E58  2E52               	goto	u3345
  5658  0E59  0826               	movf	___flmul@b,w
  5659  0E5A  00AE               	movwf	??___flmul
  5660  0E5B  082E               	movf	??___flmul,w
  5661  0E5C  00F2               	movwf	__Umul8_16@multiplicand
  5662  0E5D  082A               	movf	___flmul@a,w
  5663  0E5E  160A  118A  23F2  120A  158A  	fcall	__Umul8_16
  5664  0E63  0873               	movf	?__Umul8_16+1,w
  5665  0E64  1283               	bcf	3,5	;RP0=0, select bank0
  5666  0E65  1303               	bcf	3,6	;RP1=0, select bank0
  5667  0E66  00BF               	movwf	___flmul@temp+1
  5668  0E67  0872               	movf	?__Umul8_16,w
  5669  0E68  00BE               	movwf	___flmul@temp
  5670  0E69  083E               	movf	___flmul@temp,w
  5671  0E6A  00AE               	movwf	??___flmul
  5672  0E6B  083F               	movf	___flmul@temp+1,w
  5673  0E6C  00AF               	movwf	??___flmul+1
  5674  0E6D  01B0               	clrf	??___flmul+2
  5675  0E6E  01B1               	clrf	??___flmul+3
  5676  0E6F  082E               	movf	??___flmul,w
  5677  0E70  07B4               	addwf	___flmul@grs,f
  5678  0E71  082F               	movf	??___flmul+1,w
  5679  0E72  1103               	clrz
  5680  0E73  1803               	skipnc
  5681  0E74  3E01               	addlw	1
  5682  0E75  1D03               	btfss	3,2
  5683  0E76  07B5               	addwf	___flmul@grs+1,f
  5684  0E77  0830               	movf	??___flmul+2,w
  5685  0E78  1103               	clrz
  5686  0E79  1803               	skipnc
  5687  0E7A  3E01               	addlw	1
  5688  0E7B  1D03               	btfss	3,2
  5689  0E7C  07B6               	addwf	___flmul@grs+2,f
  5690  0E7D  0831               	movf	??___flmul+3,w
  5691  0E7E  1103               	clrz
  5692  0E7F  1803               	skipnc
  5693  0E80  3E01               	addlw	1
  5694  0E81  1D03               	btfss	3,2
  5695  0E82  07B7               	addwf	___flmul@grs+3,f
  5696  0E83  0827               	movf	___flmul@b+1,w
  5697  0E84  00AE               	movwf	??___flmul
  5698  0E85  082E               	movf	??___flmul,w
  5699  0E86  00F2               	movwf	__Umul8_16@multiplicand
  5700  0E87  082C               	movf	___flmul@a+2,w
  5701  0E88  160A  118A  23F2  120A  158A  	fcall	__Umul8_16
  5702  0E8D  0873               	movf	?__Umul8_16+1,w
  5703  0E8E  1283               	bcf	3,5	;RP0=0, select bank0
  5704  0E8F  1303               	bcf	3,6	;RP1=0, select bank0
  5705  0E90  00BF               	movwf	___flmul@temp+1
  5706  0E91  0872               	movf	?__Umul8_16,w
  5707  0E92  00BE               	movwf	___flmul@temp
  5708  0E93  083E               	movf	___flmul@temp,w
  5709  0E94  00AE               	movwf	??___flmul
  5710  0E95  083F               	movf	___flmul@temp+1,w
  5711  0E96  00AF               	movwf	??___flmul+1
  5712  0E97  01B0               	clrf	??___flmul+2
  5713  0E98  01B1               	clrf	??___flmul+3
  5714  0E99  082E               	movf	??___flmul,w
  5715  0E9A  07BA               	addwf	___flmul@prod,f
  5716  0E9B  082F               	movf	??___flmul+1,w
  5717  0E9C  1103               	clrz
  5718  0E9D  1803               	skipnc
  5719  0E9E  3E01               	addlw	1
  5720  0E9F  1D03               	btfss	3,2
  5721  0EA0  07BB               	addwf	___flmul@prod+1,f
  5722  0EA1  0830               	movf	??___flmul+2,w
  5723  0EA2  1103               	clrz
  5724  0EA3  1803               	skipnc
  5725  0EA4  3E01               	addlw	1
  5726  0EA5  1D03               	btfss	3,2
  5727  0EA6  07BC               	addwf	___flmul@prod+2,f
  5728  0EA7  0831               	movf	??___flmul+3,w
  5729  0EA8  1103               	clrz
  5730  0EA9  1803               	skipnc
  5731  0EAA  3E01               	addlw	1
  5732  0EAB  1D03               	btfss	3,2
  5733  0EAC  07BD               	addwf	___flmul@prod+3,f
  5734  0EAD  0828               	movf	___flmul@b+2,w
  5735  0EAE  00AE               	movwf	??___flmul
  5736  0EAF  082E               	movf	??___flmul,w
  5737  0EB0  00F2               	movwf	__Umul8_16@multiplicand
  5738  0EB1  082B               	movf	___flmul@a+1,w
  5739  0EB2  160A  118A  23F2  120A  158A  	fcall	__Umul8_16
  5740  0EB7  0873               	movf	?__Umul8_16+1,w
  5741  0EB8  1283               	bcf	3,5	;RP0=0, select bank0
  5742  0EB9  1303               	bcf	3,6	;RP1=0, select bank0
  5743  0EBA  00BF               	movwf	___flmul@temp+1
  5744  0EBB  0872               	movf	?__Umul8_16,w
  5745  0EBC  00BE               	movwf	___flmul@temp
  5746  0EBD  083E               	movf	___flmul@temp,w
  5747  0EBE  00AE               	movwf	??___flmul
  5748  0EBF  083F               	movf	___flmul@temp+1,w
  5749  0EC0  00AF               	movwf	??___flmul+1
  5750  0EC1  01B0               	clrf	??___flmul+2
  5751  0EC2  01B1               	clrf	??___flmul+3
  5752  0EC3  082E               	movf	??___flmul,w
  5753  0EC4  07BA               	addwf	___flmul@prod,f
  5754  0EC5  082F               	movf	??___flmul+1,w
  5755  0EC6  1103               	clrz
  5756  0EC7  1803               	skipnc
  5757  0EC8  3E01               	addlw	1
  5758  0EC9  1D03               	btfss	3,2
  5759  0ECA  07BB               	addwf	___flmul@prod+1,f
  5760  0ECB  0830               	movf	??___flmul+2,w
  5761  0ECC  1103               	clrz
  5762  0ECD  1803               	skipnc
  5763  0ECE  3E01               	addlw	1
  5764  0ECF  1D03               	btfss	3,2
  5765  0ED0  07BC               	addwf	___flmul@prod+2,f
  5766  0ED1  0831               	movf	??___flmul+3,w
  5767  0ED2  1103               	clrz
  5768  0ED3  1803               	skipnc
  5769  0ED4  3E01               	addlw	1
  5770  0ED5  1D03               	btfss	3,2
  5771  0ED6  07BD               	addwf	___flmul@prod+3,f
  5772  0ED7  0828               	movf	___flmul@b+2,w
  5773  0ED8  00AE               	movwf	??___flmul
  5774  0ED9  082E               	movf	??___flmul,w
  5775  0EDA  00F2               	movwf	__Umul8_16@multiplicand
  5776  0EDB  082C               	movf	___flmul@a+2,w
  5777  0EDC  160A  118A  23F2  120A  158A  	fcall	__Umul8_16
  5778  0EE1  0873               	movf	?__Umul8_16+1,w
  5779  0EE2  1283               	bcf	3,5	;RP0=0, select bank0
  5780  0EE3  1303               	bcf	3,6	;RP1=0, select bank0
  5781  0EE4  00BF               	movwf	___flmul@temp+1
  5782  0EE5  0872               	movf	?__Umul8_16,w
  5783  0EE6  00BE               	movwf	___flmul@temp
  5784  0EE7  083E               	movf	___flmul@temp,w
  5785  0EE8  00AE               	movwf	??___flmul
  5786  0EE9  083F               	movf	___flmul@temp+1,w
  5787  0EEA  00AF               	movwf	??___flmul+1
  5788  0EEB  01B0               	clrf	??___flmul+2
  5789  0EEC  01B1               	clrf	??___flmul+3
  5790  0EED  3008               	movlw	8
  5791  0EEE                     u3385:	
  5792  0EEE  1003               	clrc
  5793  0EEF  0DAE               	rlf	??___flmul,f
  5794  0EF0  0DAF               	rlf	??___flmul+1,f
  5795  0EF1  0DB0               	rlf	??___flmul+2,f
  5796  0EF2  0DB1               	rlf	??___flmul+3,f
  5797  0EF3  3EFF               	addlw	-1
  5798  0EF4  1D03               	skipz
  5799  0EF5  2EEE               	goto	u3385
  5800  0EF6  082E               	movf	??___flmul,w
  5801  0EF7  07BA               	addwf	___flmul@prod,f
  5802  0EF8  082F               	movf	??___flmul+1,w
  5803  0EF9  1103               	clrz
  5804  0EFA  1803               	skipnc
  5805  0EFB  3E01               	addlw	1
  5806  0EFC  1D03               	btfss	3,2
  5807  0EFD  07BB               	addwf	___flmul@prod+1,f
  5808  0EFE  0830               	movf	??___flmul+2,w
  5809  0EFF  1103               	clrz
  5810  0F00  1803               	skipnc
  5811  0F01  3E01               	addlw	1
  5812  0F02  1D03               	btfss	3,2
  5813  0F03  07BC               	addwf	___flmul@prod+2,f
  5814  0F04  0831               	movf	??___flmul+3,w
  5815  0F05  1103               	clrz
  5816  0F06  1803               	skipnc
  5817  0F07  3E01               	addlw	1
  5818  0F08  1D03               	btfss	3,2
  5819  0F09  07BD               	addwf	___flmul@prod+3,f
  5820  0F0A  0834               	movf	___flmul@grs,w
  5821  0F0B  00AE               	movwf	??___flmul
  5822  0F0C  0835               	movf	___flmul@grs+1,w
  5823  0F0D  00AF               	movwf	??___flmul+1
  5824  0F0E  0836               	movf	___flmul@grs+2,w
  5825  0F0F  00B0               	movwf	??___flmul+2
  5826  0F10  0837               	movf	___flmul@grs+3,w
  5827  0F11  00B1               	movwf	??___flmul+3
  5828  0F12  3018               	movlw	24
  5829  0F13                     u3405:	
  5830  0F13  1003               	clrc
  5831  0F14  0CB1               	rrf	??___flmul+3,f
  5832  0F15  0CB0               	rrf	??___flmul+2,f
  5833  0F16  0CAF               	rrf	??___flmul+1,f
  5834  0F17  0CAE               	rrf	??___flmul,f
  5835  0F18  3EFF               	addlw	-1
  5836  0F19  1D03               	skipz
  5837  0F1A  2F13               	goto	u3405
  5838  0F1B  082E               	movf	??___flmul,w
  5839  0F1C  07BA               	addwf	___flmul@prod,f
  5840  0F1D  082F               	movf	??___flmul+1,w
  5841  0F1E  1103               	clrz
  5842  0F1F  1803               	skipnc
  5843  0F20  3E01               	addlw	1
  5844  0F21  1D03               	btfss	3,2
  5845  0F22  07BB               	addwf	___flmul@prod+1,f
  5846  0F23  0830               	movf	??___flmul+2,w
  5847  0F24  1103               	clrz
  5848  0F25  1803               	skipnc
  5849  0F26  3E01               	addlw	1
  5850  0F27  1D03               	btfss	3,2
  5851  0F28  07BC               	addwf	___flmul@prod+2,f
  5852  0F29  0831               	movf	??___flmul+3,w
  5853  0F2A  1103               	clrz
  5854  0F2B  1803               	skipnc
  5855  0F2C  3E01               	addlw	1
  5856  0F2D  1D03               	btfss	3,2
  5857  0F2E  07BD               	addwf	___flmul@prod+3,f
  5858  0F2F  3008               	movlw	8
  5859  0F30  00AE               	movwf	??___flmul
  5860  0F31                     u3425:	
  5861  0F31  1003               	clrc
  5862  0F32  0DB4               	rlf	___flmul@grs,f
  5863  0F33  0DB5               	rlf	___flmul@grs+1,f
  5864  0F34  0DB6               	rlf	___flmul@grs+2,f
  5865  0F35  0DB7               	rlf	___flmul@grs+3,f
  5866  0F36  0BAE               	decfsz	??___flmul,f
  5867  0F37  2F31               	goto	u3425
  5868  0F38  0839               	movf	___flmul@bexp,w
  5869  0F39  0738               	addwf	___flmul@aexp,w
  5870  0F3A  00AE               	movwf	??___flmul
  5871  0F3B  01AF               	clrf	??___flmul+1
  5872  0F3C  0DAF               	rlf	??___flmul+1,f
  5873  0F3D  082E               	movf	??___flmul,w
  5874  0F3E  3E82               	addlw	130
  5875  0F3F  00BE               	movwf	___flmul@temp
  5876  0F40  082F               	movf	??___flmul+1,w
  5877  0F41  1803               	skipnc
  5878  0F42  3E01               	addlw	1
  5879  0F43  3EFF               	addlw	255
  5880  0F44  00BF               	movwf	___flmul@temp+1
  5881  0F45                     l2553:	
  5882  0F45  1BBC               	btfsc	___flmul@prod+2,7
  5883  0F46  2F62               	goto	l2555
  5884  0F47  3001               	movlw	1
  5885  0F48  00AE               	movwf	??___flmul
  5886  0F49                     u3435:	
  5887  0F49  1003               	clrc
  5888  0F4A  0DBA               	rlf	___flmul@prod,f
  5889  0F4B  0DBB               	rlf	___flmul@prod+1,f
  5890  0F4C  0DBC               	rlf	___flmul@prod+2,f
  5891  0F4D  0DBD               	rlf	___flmul@prod+3,f
  5892  0F4E  0BAE               	decfsz	??___flmul,f
  5893  0F4F  2F49               	goto	u3435
  5894  0F50  1BB7               	btfsc	___flmul@grs+3,7
  5895  0F51  143A               	bsf	___flmul@prod,0
  5896  0F52  3001               	movlw	1
  5897  0F53  00AE               	movwf	??___flmul
  5898  0F54                     u3455:	
  5899  0F54  1003               	clrc
  5900  0F55  0DB4               	rlf	___flmul@grs,f
  5901  0F56  0DB5               	rlf	___flmul@grs+1,f
  5902  0F57  0DB6               	rlf	___flmul@grs+2,f
  5903  0F58  0DB7               	rlf	___flmul@grs+3,f
  5904  0F59  0BAE               	decfsz	??___flmul,f
  5905  0F5A  2F54               	goto	u3455
  5906  0F5B  30FF               	movlw	255
  5907  0F5C  07BE               	addwf	___flmul@temp,f
  5908  0F5D  1803               	skipnc
  5909  0F5E  0ABF               	incf	___flmul@temp+1,f
  5910  0F5F  30FF               	movlw	255
  5911  0F60  07BF               	addwf	___flmul@temp+1,f
  5912  0F61  2F45               	goto	l2553
  5913  0F62                     l2555:	
  5914  0F62  01B8               	clrf	___flmul@aexp
  5915  0F63  1FB7               	btfss	___flmul@grs+3,7
  5916  0F64  2F7B               	goto	l2565
  5917  0F65  30FF               	movlw	255
  5918  0F66  0534               	andwf	___flmul@grs,w
  5919  0F67  00AE               	movwf	??___flmul
  5920  0F68  30FF               	movlw	255
  5921  0F69  0535               	andwf	___flmul@grs+1,w
  5922  0F6A  00AF               	movwf	??___flmul+1
  5923  0F6B  30FF               	movlw	255
  5924  0F6C  0536               	andwf	___flmul@grs+2,w
  5925  0F6D  00B0               	movwf	??___flmul+2
  5926  0F6E  307F               	movlw	127
  5927  0F6F  0537               	andwf	___flmul@grs+3,w
  5928  0F70  00B1               	movwf	??___flmul+3
  5929  0F71  0831               	movf	??___flmul+3,w
  5930  0F72  0430               	iorwf	??___flmul+2,w
  5931  0F73  042F               	iorwf	??___flmul+1,w
  5932  0F74  042E               	iorwf	??___flmul,w
  5933  0F75  1903               	skipnz
  5934  0F76  183A               	btfsc	___flmul@prod,0
  5935  0F77  2F79               	goto	l2561
  5936  0F78  2F7B               	goto	l2565
  5937  0F79                     l2561:	
  5938  0F79  01B8               	clrf	___flmul@aexp
  5939  0F7A  0AB8               	incf	___flmul@aexp,f
  5940  0F7B                     l2565:	
  5941  0F7B  0838               	movf	___flmul@aexp,w
  5942  0F7C  1903               	btfsc	3,2
  5943  0F7D  2FAD               	goto	l2575
  5944  0F7E  3001               	movlw	1
  5945  0F7F  07BA               	addwf	___flmul@prod,f
  5946  0F80  3000               	movlw	0
  5947  0F81  1803               	skipnc
  5948  0F82  3001               	movlw	1
  5949  0F83  07BB               	addwf	___flmul@prod+1,f
  5950  0F84  3000               	movlw	0
  5951  0F85  1803               	skipnc
  5952  0F86  3001               	movlw	1
  5953  0F87  07BC               	addwf	___flmul@prod+2,f
  5954  0F88  3000               	movlw	0
  5955  0F89  1803               	skipnc
  5956  0F8A  3001               	movlw	1
  5957  0F8B  07BD               	addwf	___flmul@prod+3,f
  5958  0F8C  1C3D               	btfss	___flmul@prod+3,0
  5959  0F8D  2FAD               	goto	l2575
  5960  0F8E  083A               	movf	___flmul@prod,w
  5961  0F8F  00AE               	movwf	??___flmul
  5962  0F90  083B               	movf	___flmul@prod+1,w
  5963  0F91  00AF               	movwf	??___flmul+1
  5964  0F92  083C               	movf	___flmul@prod+2,w
  5965  0F93  00B0               	movwf	??___flmul+2
  5966  0F94  083D               	movf	___flmul@prod+3,w
  5967  0F95  00B1               	movwf	??___flmul+3
  5968  0F96  3001               	movlw	1
  5969  0F97  00B2               	movwf	??___flmul+4
  5970  0F98                     u3525:	
  5971  0F98  0D31               	rlf	??___flmul+3,w
  5972  0F99  0CB1               	rrf	??___flmul+3,f
  5973  0F9A  0CB0               	rrf	??___flmul+2,f
  5974  0F9B  0CAF               	rrf	??___flmul+1,f
  5975  0F9C  0CAE               	rrf	??___flmul,f
  5976  0F9D  0BB2               	decfsz	??___flmul+4,f
  5977  0F9E  2F98               	goto	u3525
  5978  0F9F  0831               	movf	??___flmul+3,w
  5979  0FA0  00BD               	movwf	___flmul@prod+3
  5980  0FA1  0830               	movf	??___flmul+2,w
  5981  0FA2  00BC               	movwf	___flmul@prod+2
  5982  0FA3  082F               	movf	??___flmul+1,w
  5983  0FA4  00BB               	movwf	___flmul@prod+1
  5984  0FA5  082E               	movf	??___flmul,w
  5985  0FA6  00BA               	movwf	___flmul@prod
  5986  0FA7  3001               	movlw	1
  5987  0FA8  07BE               	addwf	___flmul@temp,f
  5988  0FA9  1803               	skipnc
  5989  0FAA  0ABF               	incf	___flmul@temp+1,f
  5990  0FAB  3000               	movlw	0
  5991  0FAC  07BF               	addwf	___flmul@temp+1,f
  5992  0FAD                     l2575:	
  5993  0FAD  083F               	movf	___flmul@temp+1,w
  5994  0FAE  3A80               	xorlw	128
  5995  0FAF  00FF               	movwf	127
  5996  0FB0  3080               	movlw	128
  5997  0FB1  027F               	subwf	127,w
  5998  0FB2  1D03               	skipz
  5999  0FB3  2FB6               	goto	u3535
  6000  0FB4  30FF               	movlw	255
  6001  0FB5  023E               	subwf	___flmul@temp,w
  6002  0FB6                     u3535:	
  6003  0FB6  1C03               	skipc
  6004  0FB7  2FC3               	goto	l2579
  6005  0FB8  307F               	movlw	127
  6006  0FB9  1283               	bcf	3,5	;RP0=0, select bank0
  6007  0FBA  1303               	bcf	3,6	;RP1=0, select bank0
  6008  0FBB  00BD               	movwf	___flmul@prod+3
  6009  0FBC  3080               	movlw	128
  6010  0FBD  00BC               	movwf	___flmul@prod+2
  6011  0FBE  3000               	movlw	0
  6012  0FBF  00BB               	movwf	___flmul@prod+1
  6013  0FC0  3000               	movlw	0
  6014  0FC1  00BA               	movwf	___flmul@prod
  6015  0FC2  2FF3               	goto	l800
  6016  0FC3                     l2579:	
  6017  0FC3  1283               	bcf	3,5	;RP0=0, select bank0
  6018  0FC4  1303               	bcf	3,6	;RP1=0, select bank0
  6019  0FC5  083F               	movf	___flmul@temp+1,w
  6020  0FC6  3A80               	xorlw	128
  6021  0FC7  00FF               	movwf	127
  6022  0FC8  3080               	movlw	128
  6023  0FC9  027F               	subwf	127,w
  6024  0FCA  1D03               	skipz
  6025  0FCB  2FCE               	goto	u3545
  6026  0FCC  3001               	movlw	1
  6027  0FCD  023E               	subwf	___flmul@temp,w
  6028  0FCE                     u3545:	
  6029  0FCE  1803               	skipnc
  6030  0FCF  2FDC               	goto	l2585
  6031  0FD0  3000               	movlw	0
  6032  0FD1  1283               	bcf	3,5	;RP0=0, select bank0
  6033  0FD2  1303               	bcf	3,6	;RP1=0, select bank0
  6034  0FD3  00BD               	movwf	___flmul@prod+3
  6035  0FD4  3000               	movlw	0
  6036  0FD5  00BC               	movwf	___flmul@prod+2
  6037  0FD6  3000               	movlw	0
  6038  0FD7  00BB               	movwf	___flmul@prod+1
  6039  0FD8  3000               	movlw	0
  6040  0FD9  00BA               	movwf	___flmul@prod
  6041  0FDA  01B3               	clrf	___flmul@sign
  6042  0FDB  2FF3               	goto	l800
  6043  0FDC                     l2585:	
  6044  0FDC  1283               	bcf	3,5	;RP0=0, select bank0
  6045  0FDD  1303               	bcf	3,6	;RP1=0, select bank0
  6046  0FDE  083E               	movf	___flmul@temp,w
  6047  0FDF  00AE               	movwf	??___flmul
  6048  0FE0  082E               	movf	??___flmul,w
  6049  0FE1  00B9               	movwf	___flmul@bexp
  6050  0FE2  30FF               	movlw	255
  6051  0FE3  05BA               	andwf	___flmul@prod,f
  6052  0FE4  30FF               	movlw	255
  6053  0FE5  05BB               	andwf	___flmul@prod+1,f
  6054  0FE6  307F               	movlw	127
  6055  0FE7  05BC               	andwf	___flmul@prod+2,f
  6056  0FE8  3000               	movlw	0
  6057  0FE9  05BD               	andwf	___flmul@prod+3,f
  6058  0FEA  1839               	btfsc	___flmul@bexp,0
  6059  0FEB  17BC               	bsf	___flmul@prod+2,7
  6060  0FEC  0839               	movf	___flmul@bexp,w
  6061  0FED  00AE               	movwf	??___flmul
  6062  0FEE  1003               	clrc
  6063  0FEF  0C2E               	rrf	??___flmul,w
  6064  0FF0  00AF               	movwf	??___flmul+1
  6065  0FF1  082F               	movf	??___flmul+1,w
  6066  0FF2  00BD               	movwf	___flmul@prod+3
  6067  0FF3                     l800:	
  6068  0FF3  0833               	movf	___flmul@sign,w
  6069  0FF4  00AE               	movwf	??___flmul
  6070  0FF5  082E               	movf	??___flmul,w
  6071  0FF6  04BD               	iorwf	___flmul@prod+3,f
  6072  0FF7  083D               	movf	___flmul@prod+3,w
  6073  0FF8  00A9               	movwf	?___flmul+3
  6074  0FF9  083C               	movf	___flmul@prod+2,w
  6075  0FFA  00A8               	movwf	?___flmul+2
  6076  0FFB  083B               	movf	___flmul@prod+1,w
  6077  0FFC  00A7               	movwf	?___flmul+1
  6078  0FFD  083A               	movf	___flmul@prod,w
  6079  0FFE  00A6               	movwf	?___flmul
  6080  0FFF  0008               	return
  6081  1000                     __end_of___flmul:	
  6082                           
  6083                           	psect	text17
  6084  13F2                     __ptext17:	
  6085 ;; *************** function __Umul8_16 *****************
  6086 ;; Defined at:
  6087 ;;		line 4 in file "D:\Mplab X\xc8\pic\sources\c90\common\Umul8_16.c"
  6088 ;; Parameters:    Size  Location     Type
  6089 ;;  multiplier      1    wreg     unsigned char 
  6090 ;;  multiplicand    1    2[COMMON] unsigned char 
  6091 ;; Auto vars:     Size  Location     Type
  6092 ;;  multiplier      1   10[COMMON] unsigned char 
  6093 ;;  word_mpld       2    8[COMMON] unsigned int 
  6094 ;;  product         2    6[COMMON] unsigned int 
  6095 ;; Return value:  Size  Location     Type
  6096 ;;                  2    2[COMMON] unsigned int 
  6097 ;; Registers used:
  6098 ;;		wreg, status,2, status,0
  6099 ;; Tracked objects:
  6100 ;;		On entry : 0/0
  6101 ;;		On exit  : 0/0
  6102 ;;		Unchanged: 0/0
  6103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6104 ;;      Params:         2       0       0       0       0
  6105 ;;      Locals:         5       0       0       0       0
  6106 ;;      Temps:          2       0       0       0       0
  6107 ;;      Totals:         9       0       0       0       0
  6108 ;;Total ram usage:        9 bytes
  6109 ;; Hardware stack levels used:    1
  6110 ;; Hardware stack levels required when called:    1
  6111 ;; This function calls:
  6112 ;;		Nothing
  6113 ;; This function is called by:
  6114 ;;		___flmul
  6115 ;; This function uses a non-reentrant model
  6116 ;;
  6117                           
  6118                           
  6119                           ;psect for function __Umul8_16
  6120  13F2                     __Umul8_16:	
  6121                           
  6122                           ;incstack = 0
  6123                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6124                           ;__Umul8_16@multiplier stored from wreg
  6125  13F2  00FA               	movwf	__Umul8_16@multiplier
  6126  13F3  01F6               	clrf	__Umul8_16@product
  6127  13F4  01F7               	clrf	__Umul8_16@product+1
  6128  13F5  0872               	movf	__Umul8_16@multiplicand,w
  6129  13F6  00F4               	movwf	??__Umul8_16
  6130  13F7  01F5               	clrf	??__Umul8_16+1
  6131  13F8  0874               	movf	??__Umul8_16,w
  6132  13F9  00F8               	movwf	__Umul8_16@word_mpld
  6133  13FA  0875               	movf	??__Umul8_16+1,w
  6134  13FB  00F9               	movwf	__Umul8_16@word_mpld+1
  6135  13FC                     l2167:	
  6136  13FC  1C7A               	btfss	__Umul8_16@multiplier,0
  6137  13FD  2C04               	goto	l845
  6138  13FE  0878               	movf	__Umul8_16@word_mpld,w
  6139  13FF  07F6               	addwf	__Umul8_16@product,f
  6140  1400  1803               	skipnc
  6141  1401  0AF7               	incf	__Umul8_16@product+1,f
  6142  1402  0879               	movf	__Umul8_16@word_mpld+1,w
  6143  1403  07F7               	addwf	__Umul8_16@product+1,f
  6144  1404                     l845:	
  6145  1404  3001               	movlw	1
  6146  1405                     u2595:	
  6147  1405  1003               	clrc
  6148  1406  0DF8               	rlf	__Umul8_16@word_mpld,f
  6149  1407  0DF9               	rlf	__Umul8_16@word_mpld+1,f
  6150  1408  3EFF               	addlw	-1
  6151  1409  1D03               	skipz
  6152  140A  2C05               	goto	u2595
  6153  140B  1003               	clrc
  6154  140C  0CFA               	rrf	__Umul8_16@multiplier,f
  6155  140D  087A               	movf	__Umul8_16@multiplier,w
  6156  140E  1D03               	btfss	3,2
  6157  140F  2BFC               	goto	l2167
  6158  1410  0877               	movf	__Umul8_16@product+1,w
  6159  1411  00F3               	movwf	?__Umul8_16+1
  6160  1412  0876               	movf	__Umul8_16@product,w
  6161  1413  00F2               	movwf	?__Umul8_16
  6162  1414  0008               	return
  6163  1415                     __end_of__Umul8_16:	
  6164                           
  6165                           	psect	text18
  6166  16C6                     __ptext18:	
  6167 ;; *************** function ___flge *****************
  6168 ;; Defined at:
  6169 ;;		line 4 in file "D:\Mplab X\xc8\pic\sources\c90\common\flge.c"
  6170 ;; Parameters:    Size  Location     Type
  6171 ;;  ff1             4    2[COMMON] unsigned int 
  6172 ;;  ff2             4    6[COMMON] unsigned int 
  6173 ;; Auto vars:     Size  Location     Type
  6174 ;;		None
  6175 ;; Return value:  Size  Location     Type
  6176 ;;		None               void
  6177 ;; Registers used:
  6178 ;;		wreg, status,2, status,0
  6179 ;; Tracked objects:
  6180 ;;		On entry : 0/0
  6181 ;;		On exit  : 0/0
  6182 ;;		Unchanged: 0/0
  6183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6184 ;;      Params:         8       0       0       0       0
  6185 ;;      Locals:         0       0       0       0       0
  6186 ;;      Temps:          0       4       0       0       0
  6187 ;;      Totals:         8       4       0       0       0
  6188 ;;Total ram usage:       12 bytes
  6189 ;; Hardware stack levels used:    1
  6190 ;; Hardware stack levels required when called:    1
  6191 ;; This function calls:
  6192 ;;		Nothing
  6193 ;; This function is called by:
  6194 ;;		_PID_Init
  6195 ;; This function uses a non-reentrant model
  6196 ;;
  6197                           
  6198                           
  6199                           ;psect for function ___flge
  6200  16C6                     ___flge:	
  6201                           
  6202                           ;incstack = 0
  6203                           ; Regs used in ___flge: [wreg+status,2+status,0]
  6204  16C6  3000               	movlw	0
  6205  16C7  0572               	andwf	___flge@ff1,w
  6206  16C8  1283               	bcf	3,5	;RP0=0, select bank0
  6207  16C9  1303               	bcf	3,6	;RP1=0, select bank0
  6208  16CA  00A0               	movwf	??___flge
  6209  16CB  3000               	movlw	0
  6210  16CC  0573               	andwf	___flge@ff1+1,w
  6211  16CD  00A1               	movwf	??___flge+1
  6212  16CE  3080               	movlw	128
  6213  16CF  0574               	andwf	___flge@ff1+2,w
  6214  16D0  00A2               	movwf	??___flge+2
  6215  16D1  307F               	movlw	127
  6216  16D2  0575               	andwf	___flge@ff1+3,w
  6217  16D3  00A3               	movwf	??___flge+3
  6218  16D4  0823               	movf	??___flge+3,w
  6219  16D5  0422               	iorwf	??___flge+2,w
  6220  16D6  0421               	iorwf	??___flge+1,w
  6221  16D7  0420               	iorwf	??___flge,w
  6222  16D8  1D03               	skipz
  6223  16D9  2EE2               	goto	l573
  6224  16DA  3000               	movlw	0
  6225  16DB  00F5               	movwf	___flge@ff1+3
  6226  16DC  3000               	movlw	0
  6227  16DD  00F4               	movwf	___flge@ff1+2
  6228  16DE  3000               	movlw	0
  6229  16DF  00F3               	movwf	___flge@ff1+1
  6230  16E0  3000               	movlw	0
  6231  16E1  00F2               	movwf	___flge@ff1
  6232  16E2                     l573:	
  6233  16E2  3000               	movlw	0
  6234  16E3  0576               	andwf	___flge@ff2,w
  6235  16E4  00A0               	movwf	??___flge
  6236  16E5  3000               	movlw	0
  6237  16E6  0577               	andwf	___flge@ff2+1,w
  6238  16E7  00A1               	movwf	??___flge+1
  6239  16E8  3080               	movlw	128
  6240  16E9  0578               	andwf	___flge@ff2+2,w
  6241  16EA  00A2               	movwf	??___flge+2
  6242  16EB  307F               	movlw	127
  6243  16EC  0579               	andwf	___flge@ff2+3,w
  6244  16ED  00A3               	movwf	??___flge+3
  6245  16EE  0823               	movf	??___flge+3,w
  6246  16EF  0422               	iorwf	??___flge+2,w
  6247  16F0  0421               	iorwf	??___flge+1,w
  6248  16F1  0420               	iorwf	??___flge,w
  6249  16F2  1D03               	skipz
  6250  16F3  2EFC               	goto	l2259
  6251  16F4  3000               	movlw	0
  6252  16F5  00F9               	movwf	___flge@ff2+3
  6253  16F6  3000               	movlw	0
  6254  16F7  00F8               	movwf	___flge@ff2+2
  6255  16F8  3000               	movlw	0
  6256  16F9  00F7               	movwf	___flge@ff2+1
  6257  16FA  3000               	movlw	0
  6258  16FB  00F6               	movwf	___flge@ff2
  6259  16FC                     l2259:	
  6260  16FC  1FF5               	btfss	___flge@ff1+3,7
  6261  16FD  2F22               	goto	l2263
  6262  16FE  3000               	movlw	0
  6263  16FF  00A0               	movwf	??___flge
  6264  1700  3000               	movlw	0
  6265  1701  00A1               	movwf	??___flge+1
  6266  1702  3000               	movlw	0
  6267  1703  00A2               	movwf	??___flge+2
  6268  1704  3080               	movlw	128
  6269  1705  00A3               	movwf	??___flge+3
  6270  1706  0872               	movf	___flge@ff1,w
  6271  1707  02A0               	subwf	??___flge,f
  6272  1708  0873               	movf	___flge@ff1+1,w
  6273  1709  1C03               	skipc
  6274  170A  0F73               	incfsz	___flge@ff1+1,w
  6275  170B  2F0D               	goto	u2761
  6276  170C  2F0E               	goto	u2762
  6277  170D                     u2761:	
  6278  170D  02A1               	subwf	??___flge+1,f
  6279  170E                     u2762:	
  6280  170E  0874               	movf	___flge@ff1+2,w
  6281  170F  1C03               	skipc
  6282  1710  0F74               	incfsz	___flge@ff1+2,w
  6283  1711  2F13               	goto	u2763
  6284  1712  2F14               	goto	u2764
  6285  1713                     u2763:	
  6286  1713  02A2               	subwf	??___flge+2,f
  6287  1714                     u2764:	
  6288  1714  0875               	movf	___flge@ff1+3,w
  6289  1715  1C03               	skipc
  6290  1716  0F75               	incfsz	___flge@ff1+3,w
  6291  1717  2F19               	goto	u2765
  6292  1718  2F1A               	goto	u2766
  6293  1719                     u2765:	
  6294  1719  02A3               	subwf	??___flge+3,f
  6295  171A                     u2766:	
  6296  171A  0823               	movf	??___flge+3,w
  6297  171B  00F5               	movwf	___flge@ff1+3
  6298  171C  0822               	movf	??___flge+2,w
  6299  171D  00F4               	movwf	___flge@ff1+2
  6300  171E  0821               	movf	??___flge+1,w
  6301  171F  00F3               	movwf	___flge@ff1+1
  6302  1720  0820               	movf	??___flge,w
  6303  1721  00F2               	movwf	___flge@ff1
  6304  1722                     l2263:	
  6305  1722  1FF9               	btfss	___flge@ff2+3,7
  6306  1723  2F48               	goto	l576
  6307  1724  3000               	movlw	0
  6308  1725  00A0               	movwf	??___flge
  6309  1726  3000               	movlw	0
  6310  1727  00A1               	movwf	??___flge+1
  6311  1728  3000               	movlw	0
  6312  1729  00A2               	movwf	??___flge+2
  6313  172A  3080               	movlw	128
  6314  172B  00A3               	movwf	??___flge+3
  6315  172C  0876               	movf	___flge@ff2,w
  6316  172D  02A0               	subwf	??___flge,f
  6317  172E  0877               	movf	___flge@ff2+1,w
  6318  172F  1C03               	skipc
  6319  1730  0F77               	incfsz	___flge@ff2+1,w
  6320  1731  2F33               	goto	u2781
  6321  1732  2F34               	goto	u2782
  6322  1733                     u2781:	
  6323  1733  02A1               	subwf	??___flge+1,f
  6324  1734                     u2782:	
  6325  1734  0878               	movf	___flge@ff2+2,w
  6326  1735  1C03               	skipc
  6327  1736  0F78               	incfsz	___flge@ff2+2,w
  6328  1737  2F39               	goto	u2783
  6329  1738  2F3A               	goto	u2784
  6330  1739                     u2783:	
  6331  1739  02A2               	subwf	??___flge+2,f
  6332  173A                     u2784:	
  6333  173A  0879               	movf	___flge@ff2+3,w
  6334  173B  1C03               	skipc
  6335  173C  0F79               	incfsz	___flge@ff2+3,w
  6336  173D  2F3F               	goto	u2785
  6337  173E  2F40               	goto	u2786
  6338  173F                     u2785:	
  6339  173F  02A3               	subwf	??___flge+3,f
  6340  1740                     u2786:	
  6341  1740  0823               	movf	??___flge+3,w
  6342  1741  00F9               	movwf	___flge@ff2+3
  6343  1742  0822               	movf	??___flge+2,w
  6344  1743  00F8               	movwf	___flge@ff2+2
  6345  1744  0821               	movf	??___flge+1,w
  6346  1745  00F7               	movwf	___flge@ff2+1
  6347  1746  0820               	movf	??___flge,w
  6348  1747  00F6               	movwf	___flge@ff2
  6349  1748                     l576:	
  6350  1748  3080               	movlw	128
  6351  1749  06F5               	xorwf	___flge@ff1+3,f
  6352  174A  3080               	movlw	128
  6353  174B  06F9               	xorwf	___flge@ff2+3,f
  6354  174C  0879               	movf	___flge@ff2+3,w
  6355  174D  0275               	subwf	___flge@ff1+3,w
  6356  174E  1D03               	skipz
  6357  174F  0008               	return
  6358  1750  0878               	movf	___flge@ff2+2,w
  6359  1751  0274               	subwf	___flge@ff1+2,w
  6360  1752  1D03               	skipz
  6361  1753  0008               	return
  6362  1754  0877               	movf	___flge@ff2+1,w
  6363  1755  0273               	subwf	___flge@ff1+1,w
  6364  1756  1D03               	skipz
  6365  1757  0008               	return
  6366  1758  0876               	movf	___flge@ff2,w
  6367  1759  0272               	subwf	___flge@ff1,w
  6368  175A  0008               	return
  6369  175B                     __end_of___flge:	
  6370                           
  6371                           	psect	text19
  6372  0919                     __ptext19:	
  6373 ;; *************** function ___fldiv *****************
  6374 ;; Defined at:
  6375 ;;		line 8 in file "D:\Mplab X\xc8\pic\sources\c90\common\sprcdiv.c"
  6376 ;; Parameters:    Size  Location     Type
  6377 ;;  a               4   32[BANK0 ] unsigned int 
  6378 ;;  b               4   36[BANK0 ] unsigned int 
  6379 ;; Auto vars:     Size  Location     Type
  6380 ;;  grs             4   52[BANK0 ] unsigned long 
  6381 ;;  rem             4   45[BANK0 ] unsigned long 
  6382 ;;  new_exp         2   50[BANK0 ] int 
  6383 ;;  aexp            1   57[BANK0 ] unsigned char 
  6384 ;;  bexp            1   56[BANK0 ] unsigned char 
  6385 ;;  sign            1   49[BANK0 ] unsigned char 
  6386 ;; Return value:  Size  Location     Type
  6387 ;;                  4   32[BANK0 ] unsigned char 
  6388 ;; Registers used:
  6389 ;;		wreg, status,2, status,0, btemp+1
  6390 ;; Tracked objects:
  6391 ;;		On entry : 0/0
  6392 ;;		On exit  : 0/0
  6393 ;;		Unchanged: 0/0
  6394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6395 ;;      Params:         0       8       0       0       0
  6396 ;;      Locals:         0      13       0       0       0
  6397 ;;      Temps:          0       5       0       0       0
  6398 ;;      Totals:         0      26       0       0       0
  6399 ;;Total ram usage:       26 bytes
  6400 ;; Hardware stack levels used:    1
  6401 ;; Hardware stack levels required when called:    1
  6402 ;; This function calls:
  6403 ;;		Nothing
  6404 ;; This function is called by:
  6405 ;;		_PID_Init
  6406 ;; This function uses a non-reentrant model
  6407 ;;
  6408                           
  6409                           
  6410                           ;psect for function ___fldiv
  6411  0919                     ___fldiv:	
  6412                           
  6413                           ;incstack = 0
  6414                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  6415  0919  1283               	bcf	3,5	;RP0=0, select bank0
  6416  091A  1303               	bcf	3,6	;RP1=0, select bank0
  6417  091B  0847               	movf	___fldiv@b+3,w
  6418  091C  3980               	andlw	128
  6419  091D  00C8               	movwf	??___fldiv
  6420  091E  0848               	movf	??___fldiv,w
  6421  091F  00D1               	movwf	___fldiv@sign
  6422  0920  0847               	movf	___fldiv@b+3,w
  6423  0921  00C8               	movwf	??___fldiv
  6424  0922  0748               	addwf	??___fldiv,w
  6425  0923  00C9               	movwf	??___fldiv+1
  6426  0924  0849               	movf	??___fldiv+1,w
  6427  0925  00D8               	movwf	___fldiv@bexp
  6428  0926  1BC6               	btfsc	___fldiv@b+2,7
  6429  0927  1458               	bsf	___fldiv@bexp,0
  6430  0928  0858               	movf	___fldiv@bexp,w
  6431  0929  1903               	btfsc	3,2
  6432  092A  2939               	goto	l2333
  6433  092B  0A58               	incf	___fldiv@bexp,w
  6434  092C  1D03               	btfss	3,2
  6435  092D  2936               	goto	l2329
  6436  092E  3000               	movlw	0
  6437  092F  00C7               	movwf	___fldiv@b+3
  6438  0930  3000               	movlw	0
  6439  0931  00C6               	movwf	___fldiv@b+2
  6440  0932  3000               	movlw	0
  6441  0933  00C5               	movwf	___fldiv@b+1
  6442  0934  3000               	movlw	0
  6443  0935  00C4               	movwf	___fldiv@b
  6444  0936                     l2329:	
  6445  0936  17C6               	bsf	___fldiv@b+2,7
  6446  0937  01C7               	clrf	___fldiv@b+3
  6447  0938  2941               	goto	l2335
  6448  0939                     l2333:	
  6449  0939  3000               	movlw	0
  6450  093A  00C7               	movwf	___fldiv@b+3
  6451  093B  3000               	movlw	0
  6452  093C  00C6               	movwf	___fldiv@b+2
  6453  093D  3000               	movlw	0
  6454  093E  00C5               	movwf	___fldiv@b+1
  6455  093F  3000               	movlw	0
  6456  0940  00C4               	movwf	___fldiv@b
  6457  0941                     l2335:	
  6458  0941  0843               	movf	___fldiv@a+3,w
  6459  0942  3980               	andlw	128
  6460  0943  00C8               	movwf	??___fldiv
  6461  0944  0848               	movf	??___fldiv,w
  6462  0945  06D1               	xorwf	___fldiv@sign,f
  6463  0946  0843               	movf	___fldiv@a+3,w
  6464  0947  00C8               	movwf	??___fldiv
  6465  0948  0748               	addwf	??___fldiv,w
  6466  0949  00C9               	movwf	??___fldiv+1
  6467  094A  0849               	movf	??___fldiv+1,w
  6468  094B  00D9               	movwf	___fldiv@aexp
  6469  094C  1BC2               	btfsc	___fldiv@a+2,7
  6470  094D  1459               	bsf	___fldiv@aexp,0
  6471  094E  0859               	movf	___fldiv@aexp,w
  6472  094F  1903               	btfsc	3,2
  6473  0950  295F               	goto	l2353
  6474  0951  0A59               	incf	___fldiv@aexp,w
  6475  0952  1D03               	btfss	3,2
  6476  0953  295C               	goto	l2349
  6477  0954  3000               	movlw	0
  6478  0955  00C3               	movwf	___fldiv@a+3
  6479  0956  3000               	movlw	0
  6480  0957  00C2               	movwf	___fldiv@a+2
  6481  0958  3000               	movlw	0
  6482  0959  00C1               	movwf	___fldiv@a+1
  6483  095A  3000               	movlw	0
  6484  095B  00C0               	movwf	___fldiv@a
  6485  095C                     l2349:	
  6486  095C  17C2               	bsf	___fldiv@a+2,7
  6487  095D  01C3               	clrf	___fldiv@a+3
  6488  095E  2967               	goto	l748
  6489  095F                     l2353:	
  6490  095F  3000               	movlw	0
  6491  0960  00C3               	movwf	___fldiv@a+3
  6492  0961  3000               	movlw	0
  6493  0962  00C2               	movwf	___fldiv@a+2
  6494  0963  3000               	movlw	0
  6495  0964  00C1               	movwf	___fldiv@a+1
  6496  0965  3000               	movlw	0
  6497  0966  00C0               	movwf	___fldiv@a
  6498  0967                     l748:	
  6499  0967  0843               	movf	___fldiv@a+3,w
  6500  0968  0442               	iorwf	___fldiv@a+2,w
  6501  0969  0441               	iorwf	___fldiv@a+1,w
  6502  096A  0440               	iorwf	___fldiv@a,w
  6503  096B  1D03               	skipz
  6504  096C  2986               	goto	l2363
  6505  096D  3000               	movlw	0
  6506  096E  00C7               	movwf	___fldiv@b+3
  6507  096F  3000               	movlw	0
  6508  0970  00C6               	movwf	___fldiv@b+2
  6509  0971  3000               	movlw	0
  6510  0972  00C5               	movwf	___fldiv@b+1
  6511  0973  3000               	movlw	0
  6512  0974  00C4               	movwf	___fldiv@b
  6513  0975  3080               	movlw	128
  6514  0976  04C6               	iorwf	___fldiv@b+2,f
  6515  0977  307F               	movlw	127
  6516  0978  04C7               	iorwf	___fldiv@b+3,f
  6517  0979                     L3:	
  6518  0979  0851               	movf	___fldiv@sign,w
  6519  097A  00C8               	movwf	??___fldiv
  6520  097B  0848               	movf	??___fldiv,w
  6521  097C  04C7               	iorwf	___fldiv@b+3,f
  6522  097D  0847               	movf	___fldiv@b+3,w
  6523  097E  00C3               	movwf	?___fldiv+3
  6524  097F  0846               	movf	___fldiv@b+2,w
  6525  0980  00C2               	movwf	?___fldiv+2
  6526  0981  0845               	movf	___fldiv@b+1,w
  6527  0982  00C1               	movwf	?___fldiv+1
  6528  0983  0844               	movf	___fldiv@b,w
  6529  0984  00C0               	movwf	?___fldiv
  6530  0985  0008               	return
  6531  0986                     l2363:	
  6532  0986  0858               	movf	___fldiv@bexp,w
  6533  0987  1D03               	btfss	3,2
  6534  0988  2992               	goto	l2369
  6535  0989  3000               	movlw	0
  6536  098A  00C3               	movwf	?___fldiv+3
  6537  098B  3000               	movlw	0
  6538  098C  00C2               	movwf	?___fldiv+2
  6539  098D  3000               	movlw	0
  6540  098E  00C1               	movwf	?___fldiv+1
  6541  098F  3000               	movlw	0
  6542  0990  00C0               	movwf	?___fldiv
  6543  0991  0008               	return
  6544  0992                     l2369:	
  6545  0992  0858               	movf	___fldiv@bexp,w
  6546  0993  00C8               	movwf	??___fldiv
  6547  0994  01C9               	clrf	??___fldiv+1
  6548  0995  0849               	movf	??___fldiv+1,w
  6549  0996  00CB               	movwf	??___fldiv+3
  6550  0997  0859               	movf	___fldiv@aexp,w
  6551  0998  0248               	subwf	??___fldiv,w
  6552  0999  00CA               	movwf	??___fldiv+2
  6553  099A  1C03               	skipc
  6554  099B  03CB               	decf	??___fldiv+3,f
  6555  099C  084A               	movf	??___fldiv+2,w
  6556  099D  3E7F               	addlw	127
  6557  099E  00D2               	movwf	___fldiv@new_exp
  6558  099F  084B               	movf	??___fldiv+3,w
  6559  09A0  1803               	skipnc
  6560  09A1  3E01               	addlw	1
  6561  09A2  3E00               	addlw	0
  6562  09A3  00D3               	movwf	___fldiv@new_exp+1
  6563  09A4  0847               	movf	___fldiv@b+3,w
  6564  09A5  00D0               	movwf	___fldiv@rem+3
  6565  09A6  0846               	movf	___fldiv@b+2,w
  6566  09A7  00CF               	movwf	___fldiv@rem+2
  6567  09A8  0845               	movf	___fldiv@b+1,w
  6568  09A9  00CE               	movwf	___fldiv@rem+1
  6569  09AA  0844               	movf	___fldiv@b,w
  6570  09AB  00CD               	movwf	___fldiv@rem
  6571  09AC  3000               	movlw	0
  6572  09AD  00C7               	movwf	___fldiv@b+3
  6573  09AE  3000               	movlw	0
  6574  09AF  00C6               	movwf	___fldiv@b+2
  6575  09B0  3000               	movlw	0
  6576  09B1  00C5               	movwf	___fldiv@b+1
  6577  09B2  3000               	movlw	0
  6578  09B3  00C4               	movwf	___fldiv@b
  6579  09B4  3000               	movlw	0
  6580  09B5  00D7               	movwf	___fldiv@grs+3
  6581  09B6  3000               	movlw	0
  6582  09B7  00D6               	movwf	___fldiv@grs+2
  6583  09B8  3000               	movlw	0
  6584  09B9  00D5               	movwf	___fldiv@grs+1
  6585  09BA  3000               	movlw	0
  6586  09BB  00D4               	movwf	___fldiv@grs
  6587  09BC  01D9               	clrf	___fldiv@aexp
  6588  09BD                     l2397:	
  6589  09BD  301A               	movlw	26
  6590  09BE  0259               	subwf	___fldiv@aexp,w
  6591  09BF  1803               	btfsc	3,0
  6592  09C0  2A05               	goto	l2399
  6593  09C1  0859               	movf	___fldiv@aexp,w
  6594  09C2  1903               	btfsc	3,2
  6595  09C3  29E1               	goto	l2389
  6596  09C4  3001               	movlw	1
  6597  09C5  00C8               	movwf	??___fldiv
  6598  09C6                     u2995:	
  6599  09C6  1003               	clrc
  6600  09C7  0DCD               	rlf	___fldiv@rem,f
  6601  09C8  0DCE               	rlf	___fldiv@rem+1,f
  6602  09C9  0DCF               	rlf	___fldiv@rem+2,f
  6603  09CA  0DD0               	rlf	___fldiv@rem+3,f
  6604  09CB  0BC8               	decfsz	??___fldiv,f
  6605  09CC  29C6               	goto	u2995
  6606  09CD  3001               	movlw	1
  6607  09CE  00C8               	movwf	??___fldiv
  6608  09CF                     u3005:	
  6609  09CF  1003               	clrc
  6610  09D0  0DC4               	rlf	___fldiv@b,f
  6611  09D1  0DC5               	rlf	___fldiv@b+1,f
  6612  09D2  0DC6               	rlf	___fldiv@b+2,f
  6613  09D3  0DC7               	rlf	___fldiv@b+3,f
  6614  09D4  0BC8               	decfsz	??___fldiv,f
  6615  09D5  29CF               	goto	u3005
  6616  09D6  1BD7               	btfsc	___fldiv@grs+3,7
  6617  09D7  1444               	bsf	___fldiv@b,0
  6618  09D8  3001               	movlw	1
  6619  09D9  00C8               	movwf	??___fldiv
  6620  09DA                     u3025:	
  6621  09DA  1003               	clrc
  6622  09DB  0DD4               	rlf	___fldiv@grs,f
  6623  09DC  0DD5               	rlf	___fldiv@grs+1,f
  6624  09DD  0DD6               	rlf	___fldiv@grs+2,f
  6625  09DE  0DD7               	rlf	___fldiv@grs+3,f
  6626  09DF  0BC8               	decfsz	??___fldiv,f
  6627  09E0  29DA               	goto	u3025
  6628  09E1                     l2389:	
  6629  09E1  0843               	movf	___fldiv@a+3,w
  6630  09E2  0250               	subwf	___fldiv@rem+3,w
  6631  09E3  1D03               	skipz
  6632  09E4  29EF               	goto	u3035
  6633  09E5  0842               	movf	___fldiv@a+2,w
  6634  09E6  024F               	subwf	___fldiv@rem+2,w
  6635  09E7  1D03               	skipz
  6636  09E8  29EF               	goto	u3035
  6637  09E9  0841               	movf	___fldiv@a+1,w
  6638  09EA  024E               	subwf	___fldiv@rem+1,w
  6639  09EB  1D03               	skipz
  6640  09EC  29EF               	goto	u3035
  6641  09ED  0840               	movf	___fldiv@a,w
  6642  09EE  024D               	subwf	___fldiv@rem,w
  6643  09EF                     u3035:	
  6644  09EF  1C03               	skipc
  6645  09F0  2A00               	goto	l2395
  6646  09F1  1757               	bsf	___fldiv@grs+3,6
  6647  09F2  0840               	movf	___fldiv@a,w
  6648  09F3  02CD               	subwf	___fldiv@rem,f
  6649  09F4  0841               	movf	___fldiv@a+1,w
  6650  09F5  1C03               	skipc
  6651  09F6  0F41               	incfsz	___fldiv@a+1,w
  6652  09F7  02CE               	subwf	___fldiv@rem+1,f
  6653  09F8  0842               	movf	___fldiv@a+2,w
  6654  09F9  1C03               	skipc
  6655  09FA  0F42               	incfsz	___fldiv@a+2,w
  6656  09FB  02CF               	subwf	___fldiv@rem+2,f
  6657  09FC  0843               	movf	___fldiv@a+3,w
  6658  09FD  1C03               	skipc
  6659  09FE  0F43               	incfsz	___fldiv@a+3,w
  6660  09FF  02D0               	subwf	___fldiv@rem+3,f
  6661  0A00                     l2395:	
  6662  0A00  3001               	movlw	1
  6663  0A01  00C8               	movwf	??___fldiv
  6664  0A02  0848               	movf	??___fldiv,w
  6665  0A03  07D9               	addwf	___fldiv@aexp,f
  6666  0A04  29BD               	goto	l2397
  6667  0A05                     l2399:	
  6668  0A05  0850               	movf	___fldiv@rem+3,w
  6669  0A06  044F               	iorwf	___fldiv@rem+2,w
  6670  0A07  044E               	iorwf	___fldiv@rem+1,w
  6671  0A08  044D               	iorwf	___fldiv@rem,w
  6672  0A09  1D03               	btfss	3,2
  6673  0A0A  1454               	bsf	___fldiv@grs,0
  6674  0A0B                     l2413:	
  6675  0A0B  1BC6               	btfsc	___fldiv@b+2,7
  6676  0A0C  2A28               	goto	l2415
  6677  0A0D  3001               	movlw	1
  6678  0A0E  00C8               	movwf	??___fldiv
  6679  0A0F                     u3065:	
  6680  0A0F  1003               	clrc
  6681  0A10  0DC4               	rlf	___fldiv@b,f
  6682  0A11  0DC5               	rlf	___fldiv@b+1,f
  6683  0A12  0DC6               	rlf	___fldiv@b+2,f
  6684  0A13  0DC7               	rlf	___fldiv@b+3,f
  6685  0A14  0BC8               	decfsz	??___fldiv,f
  6686  0A15  2A0F               	goto	u3065
  6687  0A16  1BD7               	btfsc	___fldiv@grs+3,7
  6688  0A17  1444               	bsf	___fldiv@b,0
  6689  0A18  3001               	movlw	1
  6690  0A19  00C8               	movwf	??___fldiv
  6691  0A1A                     u3085:	
  6692  0A1A  1003               	clrc
  6693  0A1B  0DD4               	rlf	___fldiv@grs,f
  6694  0A1C  0DD5               	rlf	___fldiv@grs+1,f
  6695  0A1D  0DD6               	rlf	___fldiv@grs+2,f
  6696  0A1E  0DD7               	rlf	___fldiv@grs+3,f
  6697  0A1F  0BC8               	decfsz	??___fldiv,f
  6698  0A20  2A1A               	goto	u3085
  6699  0A21  30FF               	movlw	255
  6700  0A22  07D2               	addwf	___fldiv@new_exp,f
  6701  0A23  1803               	skipnc
  6702  0A24  0AD3               	incf	___fldiv@new_exp+1,f
  6703  0A25  30FF               	movlw	255
  6704  0A26  07D3               	addwf	___fldiv@new_exp+1,f
  6705  0A27  2A0B               	goto	l2413
  6706  0A28                     l2415:	
  6707  0A28  01D9               	clrf	___fldiv@aexp
  6708  0A29  1FD7               	btfss	___fldiv@grs+3,7
  6709  0A2A  2A41               	goto	l2425
  6710  0A2B  30FF               	movlw	255
  6711  0A2C  0554               	andwf	___fldiv@grs,w
  6712  0A2D  00C8               	movwf	??___fldiv
  6713  0A2E  30FF               	movlw	255
  6714  0A2F  0555               	andwf	___fldiv@grs+1,w
  6715  0A30  00C9               	movwf	??___fldiv+1
  6716  0A31  30FF               	movlw	255
  6717  0A32  0556               	andwf	___fldiv@grs+2,w
  6718  0A33  00CA               	movwf	??___fldiv+2
  6719  0A34  307F               	movlw	127
  6720  0A35  0557               	andwf	___fldiv@grs+3,w
  6721  0A36  00CB               	movwf	??___fldiv+3
  6722  0A37  084B               	movf	??___fldiv+3,w
  6723  0A38  044A               	iorwf	??___fldiv+2,w
  6724  0A39  0449               	iorwf	??___fldiv+1,w
  6725  0A3A  0448               	iorwf	??___fldiv,w
  6726  0A3B  1903               	skipnz
  6727  0A3C  1844               	btfsc	___fldiv@b,0
  6728  0A3D  2A3F               	goto	l2421
  6729  0A3E  2A41               	goto	l2425
  6730  0A3F                     l2421:	
  6731  0A3F  01D9               	clrf	___fldiv@aexp
  6732  0A40  0AD9               	incf	___fldiv@aexp,f
  6733  0A41                     l2425:	
  6734  0A41  0859               	movf	___fldiv@aexp,w
  6735  0A42  1903               	btfsc	3,2
  6736  0A43  2A73               	goto	l2435
  6737  0A44  3001               	movlw	1
  6738  0A45  07C4               	addwf	___fldiv@b,f
  6739  0A46  3000               	movlw	0
  6740  0A47  1803               	skipnc
  6741  0A48  3001               	movlw	1
  6742  0A49  07C5               	addwf	___fldiv@b+1,f
  6743  0A4A  3000               	movlw	0
  6744  0A4B  1803               	skipnc
  6745  0A4C  3001               	movlw	1
  6746  0A4D  07C6               	addwf	___fldiv@b+2,f
  6747  0A4E  3000               	movlw	0
  6748  0A4F  1803               	skipnc
  6749  0A50  3001               	movlw	1
  6750  0A51  07C7               	addwf	___fldiv@b+3,f
  6751  0A52  1C47               	btfss	___fldiv@b+3,0
  6752  0A53  2A73               	goto	l2435
  6753  0A54  0844               	movf	___fldiv@b,w
  6754  0A55  00C8               	movwf	??___fldiv
  6755  0A56  0845               	movf	___fldiv@b+1,w
  6756  0A57  00C9               	movwf	??___fldiv+1
  6757  0A58  0846               	movf	___fldiv@b+2,w
  6758  0A59  00CA               	movwf	??___fldiv+2
  6759  0A5A  0847               	movf	___fldiv@b+3,w
  6760  0A5B  00CB               	movwf	??___fldiv+3
  6761  0A5C  3001               	movlw	1
  6762  0A5D  00CC               	movwf	??___fldiv+4
  6763  0A5E                     u3155:	
  6764  0A5E  0D4B               	rlf	??___fldiv+3,w
  6765  0A5F  0CCB               	rrf	??___fldiv+3,f
  6766  0A60  0CCA               	rrf	??___fldiv+2,f
  6767  0A61  0CC9               	rrf	??___fldiv+1,f
  6768  0A62  0CC8               	rrf	??___fldiv,f
  6769  0A63  0BCC               	decfsz	??___fldiv+4,f
  6770  0A64  2A5E               	goto	u3155
  6771  0A65  084B               	movf	??___fldiv+3,w
  6772  0A66  00C7               	movwf	___fldiv@b+3
  6773  0A67  084A               	movf	??___fldiv+2,w
  6774  0A68  00C6               	movwf	___fldiv@b+2
  6775  0A69  0849               	movf	??___fldiv+1,w
  6776  0A6A  00C5               	movwf	___fldiv@b+1
  6777  0A6B  0848               	movf	??___fldiv,w
  6778  0A6C  00C4               	movwf	___fldiv@b
  6779  0A6D  3001               	movlw	1
  6780  0A6E  07D2               	addwf	___fldiv@new_exp,f
  6781  0A6F  1803               	skipnc
  6782  0A70  0AD3               	incf	___fldiv@new_exp+1,f
  6783  0A71  3000               	movlw	0
  6784  0A72  07D3               	addwf	___fldiv@new_exp+1,f
  6785  0A73                     l2435:	
  6786  0A73  0853               	movf	___fldiv@new_exp+1,w
  6787  0A74  3A80               	xorlw	128
  6788  0A75  00FF               	movwf	127
  6789  0A76  3080               	movlw	128
  6790  0A77  027F               	subwf	127,w
  6791  0A78  1D03               	skipz
  6792  0A79  2A7C               	goto	u3165
  6793  0A7A  30FF               	movlw	255
  6794  0A7B  0252               	subwf	___fldiv@new_exp,w
  6795  0A7C                     u3165:	
  6796  0A7C  1C03               	skipc
  6797  0A7D  2A8C               	goto	l2439
  6798  0A7E  30FF               	movlw	255
  6799  0A7F  1283               	bcf	3,5	;RP0=0, select bank0
  6800  0A80  1303               	bcf	3,6	;RP1=0, select bank0
  6801  0A81  00D2               	movwf	___fldiv@new_exp
  6802  0A82  3000               	movlw	0
  6803  0A83  00D3               	movwf	___fldiv@new_exp+1
  6804  0A84  3000               	movlw	0
  6805  0A85  00C7               	movwf	___fldiv@b+3
  6806  0A86  3000               	movlw	0
  6807  0A87  00C6               	movwf	___fldiv@b+2
  6808  0A88  3000               	movlw	0
  6809  0A89  00C5               	movwf	___fldiv@b+1
  6810  0A8A  3000               	movlw	0
  6811  0A8B  00C4               	movwf	___fldiv@b
  6812  0A8C                     l2439:	
  6813  0A8C  1283               	bcf	3,5	;RP0=0, select bank0
  6814  0A8D  1303               	bcf	3,6	;RP1=0, select bank0
  6815  0A8E  0853               	movf	___fldiv@new_exp+1,w
  6816  0A8F  3A80               	xorlw	128
  6817  0A90  00FF               	movwf	127
  6818  0A91  3080               	movlw	128
  6819  0A92  027F               	subwf	127,w
  6820  0A93  1D03               	skipz
  6821  0A94  2A97               	goto	u3175
  6822  0A95  3001               	movlw	1
  6823  0A96  0252               	subwf	___fldiv@new_exp,w
  6824  0A97                     u3175:	
  6825  0A97  1803               	skipnc
  6826  0A98  2AA6               	goto	l770
  6827  0A99  1283               	bcf	3,5	;RP0=0, select bank0
  6828  0A9A  1303               	bcf	3,6	;RP1=0, select bank0
  6829  0A9B  01D2               	clrf	___fldiv@new_exp
  6830  0A9C  01D3               	clrf	___fldiv@new_exp+1
  6831  0A9D  3000               	movlw	0
  6832  0A9E  00C7               	movwf	___fldiv@b+3
  6833  0A9F  3000               	movlw	0
  6834  0AA0  00C6               	movwf	___fldiv@b+2
  6835  0AA1  3000               	movlw	0
  6836  0AA2  00C5               	movwf	___fldiv@b+1
  6837  0AA3  3000               	movlw	0
  6838  0AA4  00C4               	movwf	___fldiv@b
  6839  0AA5  01D1               	clrf	___fldiv@sign
  6840  0AA6                     l770:	
  6841  0AA6  1283               	bcf	3,5	;RP0=0, select bank0
  6842  0AA7  1303               	bcf	3,6	;RP1=0, select bank0
  6843  0AA8  0852               	movf	___fldiv@new_exp,w
  6844  0AA9  00C8               	movwf	??___fldiv
  6845  0AAA  0848               	movf	??___fldiv,w
  6846  0AAB  00D8               	movwf	___fldiv@bexp
  6847  0AAC  1C58               	btfss	___fldiv@bexp,0
  6848  0AAD  2AB0               	goto	l2451
  6849  0AAE  17C6               	bsf	___fldiv@b+2,7
  6850  0AAF  2AB4               	goto	l772
  6851  0AB0                     l2451:	
  6852  0AB0  307F               	movlw	127
  6853  0AB1  00C8               	movwf	??___fldiv
  6854  0AB2  0848               	movf	??___fldiv,w
  6855  0AB3  05C6               	andwf	___fldiv@b+2,f
  6856  0AB4                     l772:	
  6857  0AB4  0858               	movf	___fldiv@bexp,w
  6858  0AB5  00C8               	movwf	??___fldiv
  6859  0AB6  1003               	clrc
  6860  0AB7  0C48               	rrf	??___fldiv,w
  6861  0AB8  00C9               	movwf	??___fldiv+1
  6862  0AB9  0849               	movf	??___fldiv+1,w
  6863  0ABA  00C7               	movwf	___fldiv@b+3
  6864  0ABB  2979               	goto	L3
  6865  0ABC                     __end_of___fldiv:	
  6866                           
  6867                           	psect	text20
  6868  13D0                     __ptext20:	
  6869 ;; *************** function _Lcd_Write_String *****************
  6870 ;; Defined at:
  6871 ;;		line 98 in file "lcd4.c"
  6872 ;; Parameters:    Size  Location     Type
  6873 ;;  a               1    wreg     PTR unsigned char 
  6874 ;;		 -> STR_2(7), STR_1(12), 
  6875 ;; Auto vars:     Size  Location     Type
  6876 ;;  a               1    9[COMMON] PTR unsigned char 
  6877 ;;		 -> STR_2(7), STR_1(12), 
  6878 ;;  i               2    7[COMMON] int 
  6879 ;; Return value:  Size  Location     Type
  6880 ;;                  1    wreg      void 
  6881 ;; Registers used:
  6882 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6883 ;; Tracked objects:
  6884 ;;		On entry : 0/0
  6885 ;;		On exit  : 0/0
  6886 ;;		Unchanged: 0/0
  6887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6888 ;;      Params:         0       0       0       0       0
  6889 ;;      Locals:         3       0       0       0       0
  6890 ;;      Temps:          0       0       0       0       0
  6891 ;;      Totals:         3       0       0       0       0
  6892 ;;Total ram usage:        3 bytes
  6893 ;; Hardware stack levels used:    1
  6894 ;; Hardware stack levels required when called:    3
  6895 ;; This function calls:
  6896 ;;		_Lcd_Write_Char
  6897 ;; This function is called by:
  6898 ;;		_main
  6899 ;; This function uses a non-reentrant model
  6900 ;;
  6901                           
  6902                           
  6903                           ;psect for function _Lcd_Write_String
  6904  13D0                     _Lcd_Write_String:	
  6905                           
  6906                           ;incstack = 0
  6907                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6908                           ;Lcd_Write_String@a stored from wreg
  6909  13D0  00F9               	movwf	Lcd_Write_String@a
  6910                           
  6911                           ;lcd4.c: 98: void Lcd_Write_String(char *a);lcd4.c: 99: {;lcd4.c: 100:  int i;;lcd4.c: 1
      +                          01:  for(i=0;a[i]!='\0';i++)
  6912  13D1  01F7               	clrf	Lcd_Write_String@i
  6913  13D2  01F8               	clrf	Lcd_Write_String@i+1
  6914  13D3                     l2711:	
  6915  13D3  0877               	movf	Lcd_Write_String@i,w
  6916  13D4  0779               	addwf	Lcd_Write_String@a,w
  6917  13D5  0084               	movwf	4
  6918  13D6  160A  118A  2000  160A  118A  	fcall	stringdir
  6919  13DB  3A00               	xorlw	0
  6920  13DC  1903               	btfsc	3,2
  6921  13DD  0008               	return
  6922                           
  6923                           ;lcd4.c: 102:     Lcd_Write_Char(a[i]);
  6924  13DE  0877               	movf	Lcd_Write_String@i,w
  6925  13DF  0779               	addwf	Lcd_Write_String@a,w
  6926  13E0  0084               	movwf	4
  6927  13E1  160A  118A  2000  160A  118A  	fcall	stringdir
  6928  13E6  160A  118A  2447  160A  118A  	fcall	_Lcd_Write_Char
  6929  13EB  3001               	movlw	1
  6930  13EC  07F7               	addwf	Lcd_Write_String@i,f
  6931  13ED  1803               	skipnc
  6932  13EE  0AF8               	incf	Lcd_Write_String@i+1,f
  6933  13EF  3000               	movlw	0
  6934  13F0  07F8               	addwf	Lcd_Write_String@i+1,f
  6935  13F1  2BD3               	goto	l2711
  6936  13F2                     __end_of_Lcd_Write_String:	
  6937                           
  6938                           	psect	text21
  6939  1447                     __ptext21:	
  6940 ;; *************** function _Lcd_Write_Char *****************
  6941 ;; Defined at:
  6942 ;;		line 82 in file "lcd4.c"
  6943 ;; Parameters:    Size  Location     Type
  6944 ;;  a               1    wreg     unsigned char 
  6945 ;; Auto vars:     Size  Location     Type
  6946 ;;  a               1    6[COMMON] unsigned char 
  6947 ;;  y               1    5[COMMON] unsigned char 
  6948 ;;  temp            1    4[COMMON] unsigned char 
  6949 ;; Return value:  Size  Location     Type
  6950 ;;                  1    wreg      void 
  6951 ;; Registers used:
  6952 ;;		wreg, status,2, status,0, pclath, cstack
  6953 ;; Tracked objects:
  6954 ;;		On entry : 0/0
  6955 ;;		On exit  : 0/0
  6956 ;;		Unchanged: 0/0
  6957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6958 ;;      Params:         0       0       0       0       0
  6959 ;;      Locals:         3       0       0       0       0
  6960 ;;      Temps:          1       0       0       0       0
  6961 ;;      Totals:         4       0       0       0       0
  6962 ;;Total ram usage:        4 bytes
  6963 ;; Hardware stack levels used:    1
  6964 ;; Hardware stack levels required when called:    2
  6965 ;; This function calls:
  6966 ;;		_Lcd_Port
  6967 ;; This function is called by:
  6968 ;;		_main
  6969 ;;		_Lcd_Write_String
  6970 ;; This function uses a non-reentrant model
  6971 ;;
  6972                           
  6973                           
  6974                           ;psect for function _Lcd_Write_Char
  6975  1447                     _Lcd_Write_Char:	
  6976                           
  6977                           ;incstack = 0
  6978                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  6979                           ;Lcd_Write_Char@a stored from wreg
  6980  1447  00F6               	movwf	Lcd_Write_Char@a
  6981                           
  6982                           ;lcd4.c: 82: void Lcd_Write_Char(char a);lcd4.c: 83: {;lcd4.c: 84:    char temp,y;;lcd4.
      +                          c: 85:    temp = a&0x0F;
  6983  1448  0876               	movf	Lcd_Write_Char@a,w
  6984  1449  390F               	andlw	15
  6985  144A  00F3               	movwf	??_Lcd_Write_Char
  6986  144B  0873               	movf	??_Lcd_Write_Char,w
  6987  144C  00F4               	movwf	Lcd_Write_Char@temp
  6988                           
  6989                           ;lcd4.c: 86:    y = a&0xF0;
  6990  144D  0876               	movf	Lcd_Write_Char@a,w
  6991  144E  39F0               	andlw	240
  6992  144F  00F3               	movwf	??_Lcd_Write_Char
  6993  1450  0873               	movf	??_Lcd_Write_Char,w
  6994  1451  00F5               	movwf	Lcd_Write_Char@y
  6995                           
  6996                           ;lcd4.c: 87:    RD0 = 1;
  6997  1452  1283               	bcf	3,5	;RP0=0, select bank0
  6998  1453  1303               	bcf	3,6	;RP1=0, select bank0
  6999  1454  1408               	bsf	8,0	;volatile
  7000                           
  7001                           ;lcd4.c: 88:    Lcd_Port(y>>4);
  7002  1455  0875               	movf	Lcd_Write_Char@y,w
  7003  1456  00F3               	movwf	??_Lcd_Write_Char
  7004  1457  3004               	movlw	4
  7005  1458                     u2625:	
  7006  1458  1003               	clrc
  7007  1459  0CF3               	rrf	??_Lcd_Write_Char,f
  7008  145A  3EFF               	addlw	-1
  7009  145B  1D03               	skipz
  7010  145C  2C58               	goto	u2625
  7011  145D  0873               	movf	??_Lcd_Write_Char,w
  7012  145E  160A  118A  233B  160A  118A  	fcall	_Lcd_Port
  7013                           
  7014                           ;lcd4.c: 89:    RD1 = 1;
  7015  1463  1283               	bcf	3,5	;RP0=0, select bank0
  7016  1464  1303               	bcf	3,6	;RP1=0, select bank0
  7017  1465  1488               	bsf	8,1	;volatile
  7018                           
  7019                           ;lcd4.c: 90:    _delay((unsigned long)((40)*(20000000/4000000.0)));
  7020  1466  3042               	movlw	66
  7021  1467  00F3               	movwf	??_Lcd_Write_Char
  7022  1468                     u4187:	
  7023  1468  0BF3               	decfsz	??_Lcd_Write_Char,f
  7024  1469  2C68               	goto	u4187
  7025  146A  0000               	nop
  7026                           
  7027                           ;lcd4.c: 91:    RD1 = 0;
  7028  146B  1283               	bcf	3,5	;RP0=0, select bank0
  7029  146C  1303               	bcf	3,6	;RP1=0, select bank0
  7030  146D  1088               	bcf	8,1	;volatile
  7031                           
  7032                           ;lcd4.c: 92:    Lcd_Port(temp);
  7033  146E  0874               	movf	Lcd_Write_Char@temp,w
  7034  146F  160A  118A  233B  160A  118A  	fcall	_Lcd_Port
  7035                           
  7036                           ;lcd4.c: 93:    RD1 = 1;
  7037  1474  1283               	bcf	3,5	;RP0=0, select bank0
  7038  1475  1303               	bcf	3,6	;RP1=0, select bank0
  7039  1476  1488               	bsf	8,1	;volatile
  7040                           
  7041                           ;lcd4.c: 94:    _delay((unsigned long)((40)*(20000000/4000000.0)));
  7042  1477  3042               	movlw	66
  7043  1478  00F3               	movwf	??_Lcd_Write_Char
  7044  1479                     u4197:	
  7045  1479  0BF3               	decfsz	??_Lcd_Write_Char,f
  7046  147A  2C79               	goto	u4197
  7047  147B  0000               	nop
  7048                           
  7049                           ;lcd4.c: 95:    RD1 = 0;
  7050  147C  1283               	bcf	3,5	;RP0=0, select bank0
  7051  147D  1303               	bcf	3,6	;RP1=0, select bank0
  7052  147E  1088               	bcf	8,1	;volatile
  7053  147F  0008               	return
  7054  1480                     __end_of_Lcd_Write_Char:	
  7055                           
  7056                           	psect	text22
  7057  1508                     __ptext22:	
  7058 ;; *************** function _Lcd_Set_Cursor *****************
  7059 ;; Defined at:
  7060 ;;		line 42 in file "lcd4.c"
  7061 ;; Parameters:    Size  Location     Type
  7062 ;;  a               1    wreg     unsigned char 
  7063 ;;  b               1    6[COMMON] unsigned char 
  7064 ;; Auto vars:     Size  Location     Type
  7065 ;;  a               1    0[BANK0 ] unsigned char 
  7066 ;;  temp            1    3[BANK0 ] unsigned char 
  7067 ;;  y               1    2[BANK0 ] unsigned char 
  7068 ;;  z               1    1[BANK0 ] unsigned char 
  7069 ;; Return value:  Size  Location     Type
  7070 ;;                  1    wreg      void 
  7071 ;; Registers used:
  7072 ;;		wreg, status,2, status,0, pclath, cstack
  7073 ;; Tracked objects:
  7074 ;;		On entry : 0/0
  7075 ;;		On exit  : 0/0
  7076 ;;		Unchanged: 0/0
  7077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7078 ;;      Params:         1       0       0       0       0
  7079 ;;      Locals:         0       4       0       0       0
  7080 ;;      Temps:          2       0       0       0       0
  7081 ;;      Totals:         3       4       0       0       0
  7082 ;;Total ram usage:        7 bytes
  7083 ;; Hardware stack levels used:    1
  7084 ;; Hardware stack levels required when called:    3
  7085 ;; This function calls:
  7086 ;;		_Lcd_Cmd
  7087 ;; This function is called by:
  7088 ;;		_main
  7089 ;; This function uses a non-reentrant model
  7090 ;;
  7091                           
  7092                           
  7093                           ;psect for function _Lcd_Set_Cursor
  7094  1508                     _Lcd_Set_Cursor:	
  7095                           
  7096                           ;incstack = 0
  7097                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  7098                           ;Lcd_Set_Cursor@a stored from wreg
  7099  1508  1283               	bcf	3,5	;RP0=0, select bank0
  7100  1509  1303               	bcf	3,6	;RP1=0, select bank0
  7101  150A  00A0               	movwf	Lcd_Set_Cursor@a
  7102                           
  7103                           ;lcd4.c: 42: void Lcd_Set_Cursor(char a, char b);lcd4.c: 43: {;lcd4.c: 44:  char temp,z,
      +                          y;;lcd4.c: 45:  if(a == 1)
  7104  150B  0320               	decf	Lcd_Set_Cursor@a,w
  7105  150C  1D03               	btfss	3,2
  7106  150D  2D31               	goto	l2723
  7107                           
  7108                           ;lcd4.c: 46:  {;lcd4.c: 47:    temp = 0x80 + b - 1;
  7109  150E  0876               	movf	Lcd_Set_Cursor@b,w
  7110  150F  3E7F               	addlw	127
  7111  1510  00F7               	movwf	??_Lcd_Set_Cursor
  7112  1511  0877               	movf	??_Lcd_Set_Cursor,w
  7113  1512  00A3               	movwf	Lcd_Set_Cursor@temp
  7114                           
  7115                           ;lcd4.c: 48:   z = temp>>4;
  7116  1513  0823               	movf	Lcd_Set_Cursor@temp,w
  7117  1514  00F7               	movwf	??_Lcd_Set_Cursor
  7118  1515  3004               	movlw	4
  7119  1516                     u3805:	
  7120  1516  1003               	clrc
  7121  1517  0CF7               	rrf	??_Lcd_Set_Cursor,f
  7122  1518  3EFF               	addlw	-1
  7123  1519  1D03               	skipz
  7124  151A  2D16               	goto	u3805
  7125  151B  0877               	movf	??_Lcd_Set_Cursor,w
  7126  151C  00F8               	movwf	??_Lcd_Set_Cursor+1
  7127  151D  0878               	movf	??_Lcd_Set_Cursor+1,w
  7128  151E  00A1               	movwf	Lcd_Set_Cursor@z
  7129                           
  7130                           ;lcd4.c: 49:   y = temp & 0x0F;
  7131  151F  0823               	movf	Lcd_Set_Cursor@temp,w
  7132  1520  390F               	andlw	15
  7133  1521  00F7               	movwf	??_Lcd_Set_Cursor
  7134  1522  0877               	movf	??_Lcd_Set_Cursor,w
  7135  1523  00A2               	movwf	Lcd_Set_Cursor@y
  7136                           
  7137                           ;lcd4.c: 50:   Lcd_Cmd(z);
  7138  1524  0821               	movf	Lcd_Set_Cursor@z,w
  7139  1525  160A  118A  2355  160A  118A  	fcall	_Lcd_Cmd
  7140                           
  7141                           ;lcd4.c: 51:   Lcd_Cmd(y);
  7142  152A  1283               	bcf	3,5	;RP0=0, select bank0
  7143  152B  1303               	bcf	3,6	;RP1=0, select bank0
  7144  152C  0822               	movf	Lcd_Set_Cursor@y,w
  7145  152D  160A  118A  2355   	fcall	_Lcd_Cmd
  7146                           
  7147                           ;lcd4.c: 52:  }
  7148  1530  0008               	return
  7149  1531                     l2723:	
  7150  1531  3002               	movlw	2
  7151  1532  0620               	xorwf	Lcd_Set_Cursor@a,w
  7152  1533  1D03               	btfss	3,2
  7153  1534  0008               	return
  7154                           
  7155                           ;lcd4.c: 54:  {;lcd4.c: 55:   temp = 0xC0 + b - 1;
  7156  1535  0876               	movf	Lcd_Set_Cursor@b,w
  7157  1536  3EBF               	addlw	191
  7158  1537  00F7               	movwf	??_Lcd_Set_Cursor
  7159  1538  0877               	movf	??_Lcd_Set_Cursor,w
  7160  1539  00A3               	movwf	Lcd_Set_Cursor@temp
  7161                           
  7162                           ;lcd4.c: 56:   z = temp>>4;
  7163  153A  0823               	movf	Lcd_Set_Cursor@temp,w
  7164  153B  00F7               	movwf	??_Lcd_Set_Cursor
  7165  153C  3004               	movlw	4
  7166  153D                     u3825:	
  7167  153D  1003               	clrc
  7168  153E  0CF7               	rrf	??_Lcd_Set_Cursor,f
  7169  153F  3EFF               	addlw	-1
  7170  1540  1D03               	skipz
  7171  1541  2D3D               	goto	u3825
  7172  1542  0877               	movf	??_Lcd_Set_Cursor,w
  7173  1543  00F8               	movwf	??_Lcd_Set_Cursor+1
  7174  1544  0878               	movf	??_Lcd_Set_Cursor+1,w
  7175  1545  00A1               	movwf	Lcd_Set_Cursor@z
  7176                           
  7177                           ;lcd4.c: 57:   y = temp & 0x0F;
  7178  1546  0823               	movf	Lcd_Set_Cursor@temp,w
  7179  1547  390F               	andlw	15
  7180  1548  00F7               	movwf	??_Lcd_Set_Cursor
  7181  1549  0877               	movf	??_Lcd_Set_Cursor,w
  7182  154A  00A2               	movwf	Lcd_Set_Cursor@y
  7183                           
  7184                           ;lcd4.c: 58:   Lcd_Cmd(z);
  7185  154B  0821               	movf	Lcd_Set_Cursor@z,w
  7186  154C  160A  118A  2355  160A  118A  	fcall	_Lcd_Cmd
  7187                           
  7188                           ;lcd4.c: 59:   Lcd_Cmd(y);
  7189  1551  1283               	bcf	3,5	;RP0=0, select bank0
  7190  1552  1303               	bcf	3,6	;RP1=0, select bank0
  7191  1553  0822               	movf	Lcd_Set_Cursor@y,w
  7192  1554  160A  118A  2355   	fcall	_Lcd_Cmd
  7193  1557  0008               	return
  7194  1558                     __end_of_Lcd_Set_Cursor:	
  7195                           
  7196                           	psect	text23
  7197  1558                     __ptext23:	
  7198 ;; *************** function _Lcd_Init *****************
  7199 ;; Defined at:
  7200 ;;		line 63 in file "lcd4.c"
  7201 ;; Parameters:    Size  Location     Type
  7202 ;;		None
  7203 ;; Auto vars:     Size  Location     Type
  7204 ;;		None
  7205 ;; Return value:  Size  Location     Type
  7206 ;;                  1    wreg      void 
  7207 ;; Registers used:
  7208 ;;		wreg, status,2, status,0, pclath, cstack
  7209 ;; Tracked objects:
  7210 ;;		On entry : 0/0
  7211 ;;		On exit  : 0/0
  7212 ;;		Unchanged: 0/0
  7213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7214 ;;      Params:         0       0       0       0       0
  7215 ;;      Locals:         0       0       0       0       0
  7216 ;;      Temps:          2       0       0       0       0
  7217 ;;      Totals:         2       0       0       0       0
  7218 ;;Total ram usage:        2 bytes
  7219 ;; Hardware stack levels used:    1
  7220 ;; Hardware stack levels required when called:    3
  7221 ;; This function calls:
  7222 ;;		_Lcd_Cmd
  7223 ;;		_Lcd_Port
  7224 ;; This function is called by:
  7225 ;;		_main
  7226 ;; This function uses a non-reentrant model
  7227 ;;
  7228                           
  7229                           
  7230                           ;psect for function _Lcd_Init
  7231  1558                     _Lcd_Init:	
  7232                           
  7233                           ;lcd4.c: 65:   Lcd_Port(0x00);
  7234                           
  7235                           ;incstack = 0
  7236                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  7237  1558  3000               	movlw	0
  7238  1559  160A  118A  233B  160A  118A  	fcall	_Lcd_Port
  7239                           
  7240                           ;lcd4.c: 66:    _delay((unsigned long)((20)*(20000000/4000.0)));
  7241  155E  3082               	movlw	130
  7242  155F  00F7               	movwf	??_Lcd_Init+1
  7243  1560  30DD               	movlw	221
  7244  1561  00F6               	movwf	??_Lcd_Init
  7245  1562                     u4207:	
  7246  1562  0BF6               	decfsz	??_Lcd_Init,f
  7247  1563  2D62               	goto	u4207
  7248  1564  0BF7               	decfsz	??_Lcd_Init+1,f
  7249  1565  2D62               	goto	u4207
  7250  1566  2D67               	nop2
  7251                           
  7252                           ;lcd4.c: 67:   Lcd_Cmd(0x03);
  7253  1567  3003               	movlw	3
  7254  1568  160A  118A  2355  160A  118A  	fcall	_Lcd_Cmd
  7255                           
  7256                           ;lcd4.c: 68:  _delay((unsigned long)((5)*(20000000/4000.0)));
  7257  156D  3021               	movlw	33
  7258  156E  00F7               	movwf	??_Lcd_Init+1
  7259  156F  3076               	movlw	118
  7260  1570  00F6               	movwf	??_Lcd_Init
  7261  1571                     u4217:	
  7262  1571  0BF6               	decfsz	??_Lcd_Init,f
  7263  1572  2D71               	goto	u4217
  7264  1573  0BF7               	decfsz	??_Lcd_Init+1,f
  7265  1574  2D71               	goto	u4217
  7266  1575  0000               	nop
  7267                           
  7268                           ;lcd4.c: 69:   Lcd_Cmd(0x03);
  7269  1576  3003               	movlw	3
  7270  1577  160A  118A  2355  160A  118A  	fcall	_Lcd_Cmd
  7271                           
  7272                           ;lcd4.c: 70:  _delay((unsigned long)((11)*(20000000/4000.0)));
  7273  157C  3048               	movlw	72
  7274  157D  00F7               	movwf	??_Lcd_Init+1
  7275  157E  306C               	movlw	108
  7276  157F  00F6               	movwf	??_Lcd_Init
  7277  1580                     u4227:	
  7278  1580  0BF6               	decfsz	??_Lcd_Init,f
  7279  1581  2D80               	goto	u4227
  7280  1582  0BF7               	decfsz	??_Lcd_Init+1,f
  7281  1583  2D80               	goto	u4227
  7282  1584  0000               	nop
  7283                           
  7284                           ;lcd4.c: 71:   Lcd_Cmd(0x03);
  7285  1585  3003               	movlw	3
  7286  1586  160A  118A  2355  160A  118A  	fcall	_Lcd_Cmd
  7287                           
  7288                           ;lcd4.c: 73:   Lcd_Cmd(0x02);
  7289  158B  3002               	movlw	2
  7290  158C  160A  118A  2355  160A  118A  	fcall	_Lcd_Cmd
  7291                           
  7292                           ;lcd4.c: 74:   Lcd_Cmd(0x02);
  7293  1591  3002               	movlw	2
  7294  1592  160A  118A  2355  160A  118A  	fcall	_Lcd_Cmd
  7295                           
  7296                           ;lcd4.c: 75:   Lcd_Cmd(0x08);
  7297  1597  3008               	movlw	8
  7298  1598  160A  118A  2355  160A  118A  	fcall	_Lcd_Cmd
  7299                           
  7300                           ;lcd4.c: 76:   Lcd_Cmd(0x00);
  7301  159D  3000               	movlw	0
  7302  159E  160A  118A  2355  160A  118A  	fcall	_Lcd_Cmd
  7303                           
  7304                           ;lcd4.c: 77:   Lcd_Cmd(0x0C);
  7305  15A3  300C               	movlw	12
  7306  15A4  160A  118A  2355  160A  118A  	fcall	_Lcd_Cmd
  7307                           
  7308                           ;lcd4.c: 78:   Lcd_Cmd(0x00);
  7309  15A9  3000               	movlw	0
  7310  15AA  160A  118A  2355  160A  118A  	fcall	_Lcd_Cmd
  7311                           
  7312                           ;lcd4.c: 79:   Lcd_Cmd(0x06);
  7313  15AF  3006               	movlw	6
  7314  15B0  160A  118A  2355   	fcall	_Lcd_Cmd
  7315  15B3  0008               	return
  7316  15B4                     __end_of_Lcd_Init:	
  7317                           
  7318                           	psect	text24
  7319  1355                     __ptext24:	
  7320 ;; *************** function _Lcd_Cmd *****************
  7321 ;; Defined at:
  7322 ;;		line 27 in file "lcd4.c"
  7323 ;; Parameters:    Size  Location     Type
  7324 ;;  a               1    wreg     unsigned char 
  7325 ;; Auto vars:     Size  Location     Type
  7326 ;;  a               1    5[COMMON] unsigned char 
  7327 ;; Return value:  Size  Location     Type
  7328 ;;                  1    wreg      void 
  7329 ;; Registers used:
  7330 ;;		wreg, status,2, status,0, pclath, cstack
  7331 ;; Tracked objects:
  7332 ;;		On entry : 0/0
  7333 ;;		On exit  : 0/0
  7334 ;;		Unchanged: 0/0
  7335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7336 ;;      Params:         0       0       0       0       0
  7337 ;;      Locals:         1       0       0       0       0
  7338 ;;      Temps:          2       0       0       0       0
  7339 ;;      Totals:         3       0       0       0       0
  7340 ;;Total ram usage:        3 bytes
  7341 ;; Hardware stack levels used:    1
  7342 ;; Hardware stack levels required when called:    2
  7343 ;; This function calls:
  7344 ;;		_Lcd_Port
  7345 ;; This function is called by:
  7346 ;;		_Lcd_Set_Cursor
  7347 ;;		_Lcd_Init
  7348 ;;		_Lcd_Clear
  7349 ;;		_Lcd_Shift_Right
  7350 ;;		_Lcd_Shift_Left
  7351 ;; This function uses a non-reentrant model
  7352 ;;
  7353                           
  7354                           
  7355                           ;psect for function _Lcd_Cmd
  7356  1355                     _Lcd_Cmd:	
  7357                           
  7358                           ;incstack = 0
  7359                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  7360                           ;Lcd_Cmd@a stored from wreg
  7361  1355  00F5               	movwf	Lcd_Cmd@a
  7362                           
  7363                           ;lcd4.c: 27: void Lcd_Cmd(char a);lcd4.c: 28: {;lcd4.c: 29:  RD0 = 0;
  7364  1356  1283               	bcf	3,5	;RP0=0, select bank0
  7365  1357  1303               	bcf	3,6	;RP1=0, select bank0
  7366  1358  1008               	bcf	8,0	;volatile
  7367                           
  7368                           ;lcd4.c: 30:  Lcd_Port(a);
  7369  1359  0875               	movf	Lcd_Cmd@a,w
  7370  135A  160A  118A  233B  160A  118A  	fcall	_Lcd_Port
  7371                           
  7372                           ;lcd4.c: 31:  RD1 = 1;
  7373  135F  1283               	bcf	3,5	;RP0=0, select bank0
  7374  1360  1303               	bcf	3,6	;RP1=0, select bank0
  7375  1361  1488               	bsf	8,1	;volatile
  7376                           
  7377                           ;lcd4.c: 32:         _delay((unsigned long)((4)*(20000000/4000.0)));
  7378  1362  301A               	movlw	26
  7379  1363  00F4               	movwf	??_Lcd_Cmd+1
  7380  1364  30F8               	movlw	248
  7381  1365  00F3               	movwf	??_Lcd_Cmd
  7382  1366                     u4237:	
  7383  1366  0BF3               	decfsz	??_Lcd_Cmd,f
  7384  1367  2B66               	goto	u4237
  7385  1368  0BF4               	decfsz	??_Lcd_Cmd+1,f
  7386  1369  2B66               	goto	u4237
  7387  136A  0000               	nop
  7388                           
  7389                           ;lcd4.c: 33:         RD1 = 0;
  7390  136B  1283               	bcf	3,5	;RP0=0, select bank0
  7391  136C  1303               	bcf	3,6	;RP1=0, select bank0
  7392  136D  1088               	bcf	8,1	;volatile
  7393  136E  0008               	return
  7394  136F                     __end_of_Lcd_Cmd:	
  7395                           
  7396                           	psect	text25
  7397  133B                     __ptext25:	
  7398 ;; *************** function _Lcd_Port *****************
  7399 ;; Defined at:
  7400 ;;		line 5 in file "lcd4.c"
  7401 ;; Parameters:    Size  Location     Type
  7402 ;;  a               1    wreg     unsigned char 
  7403 ;; Auto vars:     Size  Location     Type
  7404 ;;  a               1    2[COMMON] unsigned char 
  7405 ;; Return value:  Size  Location     Type
  7406 ;;                  1    wreg      void 
  7407 ;; Registers used:
  7408 ;;		wreg
  7409 ;; Tracked objects:
  7410 ;;		On entry : 0/0
  7411 ;;		On exit  : 0/0
  7412 ;;		Unchanged: 0/0
  7413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7414 ;;      Params:         0       0       0       0       0
  7415 ;;      Locals:         1       0       0       0       0
  7416 ;;      Temps:          0       0       0       0       0
  7417 ;;      Totals:         1       0       0       0       0
  7418 ;;Total ram usage:        1 bytes
  7419 ;; Hardware stack levels used:    1
  7420 ;; Hardware stack levels required when called:    1
  7421 ;; This function calls:
  7422 ;;		Nothing
  7423 ;; This function is called by:
  7424 ;;		_Lcd_Cmd
  7425 ;;		_Lcd_Init
  7426 ;;		_Lcd_Write_Char
  7427 ;; This function uses a non-reentrant model
  7428 ;;
  7429                           
  7430                           
  7431                           ;psect for function _Lcd_Port
  7432  133B                     _Lcd_Port:	
  7433                           
  7434                           ;incstack = 0
  7435                           ; Regs used in _Lcd_Port: [wreg]
  7436                           ;Lcd_Port@a stored from wreg
  7437  133B  00F2               	movwf	Lcd_Port@a
  7438                           
  7439                           ;lcd4.c: 5: void Lcd_Port(char a);lcd4.c: 6: {;lcd4.c: 7:  if(a & 1)
  7440  133C  1C72               	btfss	Lcd_Port@a,0
  7441  133D  2B42               	goto	l216
  7442                           
  7443                           ;lcd4.c: 8:   RD2 = 1;
  7444  133E  1283               	bcf	3,5	;RP0=0, select bank0
  7445  133F  1303               	bcf	3,6	;RP1=0, select bank0
  7446  1340  1508               	bsf	8,2	;volatile
  7447  1341  2B45               	goto	l217
  7448  1342                     l216:	
  7449                           ;lcd4.c: 9:  else
  7450                           
  7451                           
  7452                           ;lcd4.c: 10:   RD2 = 0;
  7453  1342  1283               	bcf	3,5	;RP0=0, select bank0
  7454  1343  1303               	bcf	3,6	;RP1=0, select bank0
  7455  1344  1108               	bcf	8,2	;volatile
  7456  1345                     l217:	
  7457                           
  7458                           ;lcd4.c: 12:  if(a & 2)
  7459  1345  1CF2               	btfss	Lcd_Port@a,1
  7460  1346  2B49               	goto	l218
  7461                           
  7462                           ;lcd4.c: 13:   RD3 = 1;
  7463  1347  1588               	bsf	8,3	;volatile
  7464  1348  2B4A               	goto	l219
  7465  1349                     l218:	
  7466                           ;lcd4.c: 14:  else
  7467                           
  7468                           
  7469                           ;lcd4.c: 15:   RD3 = 0;
  7470  1349  1188               	bcf	8,3	;volatile
  7471  134A                     l219:	
  7472                           
  7473                           ;lcd4.c: 17:  if(a & 4)
  7474  134A  1D72               	btfss	Lcd_Port@a,2
  7475  134B  2B4E               	goto	l220
  7476                           
  7477                           ;lcd4.c: 18:   RD4 = 1;
  7478  134C  1608               	bsf	8,4	;volatile
  7479  134D  2B4F               	goto	l221
  7480  134E                     l220:	
  7481                           ;lcd4.c: 19:  else
  7482                           
  7483                           
  7484                           ;lcd4.c: 20:   RD4 = 0;
  7485  134E  1208               	bcf	8,4	;volatile
  7486  134F                     l221:	
  7487                           
  7488                           ;lcd4.c: 22:  if(a & 8)
  7489  134F  1DF2               	btfss	Lcd_Port@a,3
  7490  1350  2B53               	goto	l222
  7491                           
  7492                           ;lcd4.c: 23:   RD5 = 1;
  7493  1351  1688               	bsf	8,5	;volatile
  7494  1352  0008               	return
  7495  1353                     l222:	
  7496                           ;lcd4.c: 24:  else
  7497                           
  7498                           
  7499                           ;lcd4.c: 25:   RD5 = 0;
  7500  1353  1288               	bcf	8,5	;volatile
  7501  1354  0008               	return
  7502  1355                     __end_of_Lcd_Port:	
  7503                           
  7504                           	psect	text26
  7505  1311                     __ptext26:	
  7506 ;; *************** function _Interrupt_Init *****************
  7507 ;; Defined at:
  7508 ;;		line 160 in file "ADC.c"
  7509 ;; Parameters:    Size  Location     Type
  7510 ;;		None
  7511 ;; Auto vars:     Size  Location     Type
  7512 ;;		None
  7513 ;; Return value:  Size  Location     Type
  7514 ;;                  1    wreg      void 
  7515 ;; Registers used:
  7516 ;;		None
  7517 ;; Tracked objects:
  7518 ;;		On entry : 0/0
  7519 ;;		On exit  : 0/0
  7520 ;;		Unchanged: 0/0
  7521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7522 ;;      Params:         0       0       0       0       0
  7523 ;;      Locals:         0       0       0       0       0
  7524 ;;      Temps:          0       0       0       0       0
  7525 ;;      Totals:         0       0       0       0       0
  7526 ;;Total ram usage:        0 bytes
  7527 ;; Hardware stack levels used:    1
  7528 ;; Hardware stack levels required when called:    1
  7529 ;; This function calls:
  7530 ;;		Nothing
  7531 ;; This function is called by:
  7532 ;;		_main
  7533 ;; This function uses a non-reentrant model
  7534 ;;
  7535                           
  7536                           
  7537                           ;psect for function _Interrupt_Init
  7538  1311                     _Interrupt_Init:	
  7539                           
  7540                           ;ADC.c: 162:     TRISB0 = 1;
  7541                           
  7542                           ;incstack = 0
  7543                           ; Regs used in _Interrupt_Init: []
  7544  1311  1683               	bsf	3,5	;RP0=1, select bank1
  7545  1312  1303               	bcf	3,6	;RP1=0, select bank1
  7546  1313  1406               	bsf	6,0	;volatile
  7547                           
  7548                           ;ADC.c: 164:     INTEDG = 1;
  7549  1314  1701               	bsf	1,6	;volatile
  7550                           
  7551                           ;ADC.c: 166:     GIE = 1;
  7552  1315  178B               	bsf	11,7	;volatile
  7553                           
  7554                           ;ADC.c: 167:     PEIE = 1;
  7555  1316  170B               	bsf	11,6	;volatile
  7556                           
  7557                           ;ADC.c: 168:     INTE = 1;
  7558  1317  160B               	bsf	11,4	;volatile
  7559  1318  0008               	return
  7560  1319                     __end_of_Interrupt_Init:	
  7561                           
  7562                           	psect	text27
  7563  07B9                     __ptext27:	
  7564 ;; *************** function _ADC_Init *****************
  7565 ;; Defined at:
  7566 ;;		line 96 in file "ADC.c"
  7567 ;; Parameters:    Size  Location     Type
  7568 ;;  channel         1    wreg     unsigned char 
  7569 ;; Auto vars:     Size  Location     Type
  7570 ;;  channel         1    4[COMMON] unsigned char 
  7571 ;; Return value:  Size  Location     Type
  7572 ;;                  1    wreg      void 
  7573 ;; Registers used:
  7574 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7575 ;; Tracked objects:
  7576 ;;		On entry : 0/0
  7577 ;;		On exit  : 0/0
  7578 ;;		Unchanged: 0/0
  7579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7580 ;;      Params:         0       0       0       0       0
  7581 ;;      Locals:         1       0       0       0       0
  7582 ;;      Temps:          2       0       0       0       0
  7583 ;;      Totals:         3       0       0       0       0
  7584 ;;Total ram usage:        3 bytes
  7585 ;; Hardware stack levels used:    1
  7586 ;; Hardware stack levels required when called:    1
  7587 ;; This function calls:
  7588 ;;		Nothing
  7589 ;; This function is called by:
  7590 ;;		_main
  7591 ;; This function uses a non-reentrant model
  7592 ;;
  7593                           
  7594                           
  7595                           ;psect for function _ADC_Init
  7596  07B9                     _ADC_Init:	
  7597                           
  7598                           ;incstack = 0
  7599                           ; Regs used in _ADC_Init: [wreg-fsr0h+status,2+status,0]
  7600                           ;ADC_Init@channel stored from wreg
  7601  07B9  00F4               	movwf	ADC_Init@channel
  7602                           
  7603                           ;ADC.c: 96: void ADC_Init(unsigned char channel);ADC.c: 97: {;ADC.c: 99:     PCFG0 = 0;
  7604  07BA  1683               	bsf	3,5	;RP0=1, select bank1
  7605  07BB  1303               	bcf	3,6	;RP1=0, select bank1
  7606  07BC  101F               	bcf	31,0	;volatile
  7607                           
  7608                           ;ADC.c: 100:     PCFG1 = 0;
  7609  07BD  109F               	bcf	31,1	;volatile
  7610                           
  7611                           ;ADC.c: 101:     PCFG2 = 1;
  7612  07BE  151F               	bsf	31,2	;volatile
  7613                           
  7614                           ;ADC.c: 102:     PCFG3 = 0;
  7615  07BF  119F               	bcf	31,3	;volatile
  7616                           
  7617                           ;ADC.c: 104:     ADCS0 = 0;
  7618  07C0  1283               	bcf	3,5	;RP0=0, select bank0
  7619  07C1  1303               	bcf	3,6	;RP1=0, select bank0
  7620  07C2  131F               	bcf	31,6	;volatile
  7621                           
  7622                           ;ADC.c: 105:     ADCS1 = 1;
  7623  07C3  179F               	bsf	31,7	;volatile
  7624                           
  7625                           ;ADC.c: 106:     ADCS2 = 1;
  7626  07C4  1683               	bsf	3,5	;RP0=1, select bank1
  7627  07C5  1303               	bcf	3,6	;RP1=0, select bank1
  7628  07C6  171F               	bsf	31,6	;volatile
  7629                           
  7630                           ;ADC.c: 108:     ADFM = 1;
  7631  07C7  179F               	bsf	31,7	;volatile
  7632                           
  7633                           ;ADC.c: 110:     ADON = 1;
  7634  07C8  1283               	bcf	3,5	;RP0=0, select bank0
  7635  07C9  1303               	bcf	3,6	;RP1=0, select bank0
  7636  07CA  141F               	bsf	31,0	;volatile
  7637                           
  7638                           ;ADC.c: 112:     ADIE = 0;
  7639  07CB  1683               	bsf	3,5	;RP0=1, select bank1
  7640  07CC  1303               	bcf	3,6	;RP1=0, select bank1
  7641  07CD  130C               	bcf	12,6	;volatile
  7642                           
  7643                           ;ADC.c: 113:     ADIF = 0;
  7644  07CE  1283               	bcf	3,5	;RP0=0, select bank0
  7645  07CF  1303               	bcf	3,6	;RP1=0, select bank0
  7646  07D0  130C               	bcf	12,6	;volatile
  7647                           
  7648                           ;ADC.c: 115:     switch (channel)
  7649  07D1  2FE2               	goto	l2645
  7650  07D2                     l165:	
  7651                           ;ADC.c: 116:     {;ADC.c: 117:         case 1:
  7652                           
  7653                           
  7654                           ;ADC.c: 118:             TRISA0 = 1;
  7655  07D2  1683               	bsf	3,5	;RP0=1, select bank1
  7656  07D3  1303               	bcf	3,6	;RP1=0, select bank1
  7657  07D4  1405               	bsf	5,0	;volatile
  7658                           
  7659                           ;ADC.c: 119:             break;
  7660  07D5  0008               	return
  7661  07D6                     l167:	
  7662                           ;ADC.c: 120:         case 2:
  7663                           
  7664                           
  7665                           ;ADC.c: 121:             TRISA1 = 1;
  7666  07D6  1683               	bsf	3,5	;RP0=1, select bank1
  7667  07D7  1303               	bcf	3,6	;RP1=0, select bank1
  7668  07D8  1485               	bsf	5,1	;volatile
  7669                           
  7670                           ;ADC.c: 122:             break;
  7671  07D9  0008               	return
  7672  07DA                     l168:	
  7673                           ;ADC.c: 123:         case 3:
  7674                           
  7675                           
  7676                           ;ADC.c: 124:             TRISA2 = 1;
  7677  07DA  1683               	bsf	3,5	;RP0=1, select bank1
  7678  07DB  1303               	bcf	3,6	;RP1=0, select bank1
  7679  07DC  1505               	bsf	5,2	;volatile
  7680                           
  7681                           ;ADC.c: 125:             break;
  7682  07DD  0008               	return
  7683  07DE                     l169:	
  7684                           ;ADC.c: 126:         case 4:
  7685                           
  7686                           
  7687                           ;ADC.c: 127:             TRISA3 = 1;
  7688  07DE  1683               	bsf	3,5	;RP0=1, select bank1
  7689  07DF  1303               	bcf	3,6	;RP1=0, select bank1
  7690  07E0  1585               	bsf	5,3	;volatile
  7691                           
  7692                           ;ADC.c: 128:             break;
  7693  07E1  0008               	return
  7694  07E2                     l2645:	
  7695  07E2  0874               	movf	ADC_Init@channel,w
  7696  07E3  00F2               	movwf	??_ADC_Init
  7697  07E4  01F3               	clrf	??_ADC_Init+1
  7698                           
  7699                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7700                           ; Switch size 1, requested type "simple"
  7701                           ; Number of cases is 1, Range of values is 0 to 0
  7702                           ; switch strategies available:
  7703                           ; Name         Instructions Cycles
  7704                           ; simple_byte            4     3 (average)
  7705                           ; direct_byte           11     8 (fixed)
  7706                           ; jumptable            260     6 (fixed)
  7707                           ;	Chosen strategy is simple_byte
  7708  07E5  0873               	movf	??_ADC_Init+1,w
  7709  07E6  3A00               	xorlw	0	; case 0
  7710  07E7  1903               	skipnz
  7711  07E8  2FEA               	goto	l2993
  7712  07E9  2FF8               	goto	l171
  7713  07EA                     l2993:	
  7714                           
  7715                           ; Switch size 1, requested type "simple"
  7716                           ; Number of cases is 4, Range of values is 1 to 4
  7717                           ; switch strategies available:
  7718                           ; Name         Instructions Cycles
  7719                           ; simple_byte           13     7 (average)
  7720                           ; direct_byte           23    11 (fixed)
  7721                           ; jumptable            263     9 (fixed)
  7722                           ;	Chosen strategy is simple_byte
  7723  07EA  0872               	movf	??_ADC_Init,w
  7724  07EB  3A01               	xorlw	1	; case 1
  7725  07EC  1903               	skipnz
  7726  07ED  2FD2               	goto	l165
  7727  07EE  3A03               	xorlw	3	; case 2
  7728  07EF  1903               	skipnz
  7729  07F0  2FD6               	goto	l167
  7730  07F1  3A01               	xorlw	1	; case 3
  7731  07F2  1903               	skipnz
  7732  07F3  2FDA               	goto	l168
  7733  07F4  3A07               	xorlw	7	; case 4
  7734  07F5  1903               	skipnz
  7735  07F6  2FDE               	goto	l169
  7736  07F7  2FF8               	goto	l171
  7737  07F8                     l171:	
  7738  07F8  0008               	return
  7739  07F9                     __end_of_ADC_Init:	
  7740                           
  7741                           	psect	text28
  7742  136F                     __ptext28:	
  7743 ;; *************** function _My_interrupt *****************
  7744 ;; Defined at:
  7745 ;;		line 170 in file "ADC.c"
  7746 ;; Parameters:    Size  Location     Type
  7747 ;;		None
  7748 ;; Auto vars:     Size  Location     Type
  7749 ;;		None
  7750 ;; Return value:  Size  Location     Type
  7751 ;;                  1    wreg      void 
  7752 ;; Registers used:
  7753 ;;		wreg
  7754 ;; Tracked objects:
  7755 ;;		On entry : 0/0
  7756 ;;		On exit  : 0/0
  7757 ;;		Unchanged: 0/0
  7758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7759 ;;      Params:         0       0       0       0       0
  7760 ;;      Locals:         0       0       0       0       0
  7761 ;;      Temps:          2       0       0       0       0
  7762 ;;      Totals:         2       0       0       0       0
  7763 ;;Total ram usage:        2 bytes
  7764 ;; Hardware stack levels used:    1
  7765 ;; This function calls:
  7766 ;;		Nothing
  7767 ;; This function is called by:
  7768 ;;		Interrupt level 1
  7769 ;; This function uses a non-reentrant model
  7770 ;;
  7771                           
  7772                           
  7773                           ;psect for function _My_interrupt
  7774  136F                     _My_interrupt:	
  7775                           
  7776                           ;ADC.c: 172:     if(INTE == 1 && INTF == 1)
  7777  136F  1A0B               	btfsc	11,4	;volatile
  7778  1370  1C8B               	btfss	11,1	;volatile
  7779  1371  2B88               	goto	i1l193
  7780                           
  7781                           ;ADC.c: 173:     {;ADC.c: 174:         RC0 = 0;
  7782  1372  1283               	bcf	3,5	;RP0=0, select bank0
  7783  1373  1303               	bcf	3,6	;RP1=0, select bank0
  7784  1374  1007               	bcf	7,0	;volatile
  7785                           
  7786                           ;ADC.c: 176:         TMR1ON = 1;
  7787  1375  1410               	bsf	16,0	;volatile
  7788  1376                     i1l190:	
  7789                           ;ADC.c: 177:         while(TMR1IF==0);
  7790                           
  7791  1376  1C0C               	btfss	12,0	;volatile
  7792  1377  2B76               	goto	i1l190
  7793                           
  7794                           ;ADC.c: 178:         TMR1ON = 0;
  7795  1378  1010               	bcf	16,0	;volatile
  7796                           
  7797                           ;ADC.c: 179:         TMR1= time;
  7798  1379  1683               	bsf	3,5	;RP0=1, select bank1
  7799  137A  1303               	bcf	3,6	;RP1=0, select bank1
  7800  137B  086D               	movf	(_time+1)^(0+128),w
  7801  137C  1283               	bcf	3,5	;RP0=0, select bank0
  7802  137D  1303               	bcf	3,6	;RP1=0, select bank0
  7803  137E  008F               	movwf	15	;volatile
  7804  137F  1683               	bsf	3,5	;RP0=1, select bank1
  7805  1380  1303               	bcf	3,6	;RP1=0, select bank1
  7806  1381  086C               	movf	_time^(0+128),w
  7807  1382  1283               	bcf	3,5	;RP0=0, select bank0
  7808  1383  1303               	bcf	3,6	;RP1=0, select bank0
  7809  1384  008E               	movwf	14	;volatile
  7810                           
  7811                           ;ADC.c: 180:         TMR1IF = 0;
  7812  1385  100C               	bcf	12,0	;volatile
  7813                           
  7814                           ;ADC.c: 182:         RC0 = 1;
  7815  1386  1407               	bsf	7,0	;volatile
  7816                           
  7817                           ;ADC.c: 183:         INTF = 0;
  7818  1387  108B               	bcf	11,1	;volatile
  7819  1388                     i1l193:	
  7820  1388  0871               	movf	??_My_interrupt+1,w
  7821  1389  008A               	movwf	10
  7822  138A  0E70               	swapf	??_My_interrupt^(0+4294967168),w
  7823  138B  0083               	movwf	3
  7824  138C  0EFE               	swapf	126,f
  7825  138D  0E7E               	swapf	126,w
  7826  138E  0009               	retfie
  7827  138F                     __end_of_My_interrupt:	
  7828  007E                     btemp	set	126	;btemp
  7829  007E                     wtemp0	set	126
  7830                           
  7831                           	psect	intentry
  7832  0004                     __pintentry:	
  7833                           ;incstack = 0
  7834                           ; Regs used in _My_interrupt: [wreg]
  7835                           
  7836  0004                     interrupt_function:	
  7837  007E                     saved_w	set	btemp
  7838  0004  00FE               	movwf	btemp
  7839  0005  0E03               	swapf	3,w
  7840  0006  00F0               	movwf	??_My_interrupt
  7841  0007  080A               	movf	10,w
  7842  0008  00F1               	movwf	??_My_interrupt+1
  7843  0009  160A  118A  2B6F   	ljmp	_My_interrupt


Data Sizes:
    Strings     19
    Constant    0
    Data        2
    BSS         60
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80     80      80
    BANK1            80     52      78
    BANK3            96      0      36
    BANK2            96      0       0

Pointer List with Targets:

    UART_Read_Text@Output	PTR unsigned char  size(1) Largest target is 2
		 -> main@buffer(BANK1[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 12
		 -> STR_2(CODE[7]), STR_1(CODE[12]), 


Critical Paths under _main in COMMON

    _main->___lwdiv
    ___lwdiv->___lwmod
    _UART_Init->___aldiv
    ___flmul->__Umul8_16
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _My_interrupt in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___fltol
    _UART_Init->___aldiv
    _PID_Init->___fltol
    ___fltol->___fladd
    ___flsub->___fladd
    ___fladd->___fldiv
    ___flmul->___xxtofl
    ___fldiv->___flmul

Critical Paths under _My_interrupt in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_PID_Init
    _PID_Init->___fltol
    ___fltol->___flsub

Critical Paths under _My_interrupt in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _My_interrupt in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _My_interrupt in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                15    15      0   23173
                                             37 BANK1     15    15      0
                           _ADC_Init
                     _Interrupt_Init
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                           _PID_Init
                           _Read_ADC
                        _Timer1_Init
                          _UART_Init
                          _UART_Read
                     _UART_Read_Text
                         _UART_Write
                            ___flmul
                            ___fltol
                            ___lwdiv
                            ___lwmod
                             ___wmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     244
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              6     2      4     919
                                              2 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              8     4      4     922
                                              8 COMMON     4     0      4
                                              0 BANK0      4     4      0
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _UART_Write                                           1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Read_Text                                       9     7      2     199
                                              2 COMMON     7     5      2
                          _UART_Read
 ---------------------------------------------------------------------------------
 (2) _UART_Read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           18    14      4     836
                                              6 BANK0     18    14      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     604
                                              2 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _Timer1_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Read_ADC                                             9     7      2      67
                                              2 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (1) _PID_Init                                            20    16      4   13915
                                             17 BANK1     20    16      4
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     474
                                              2 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             11     7      4     381
                                             78 BANK0      2     2      0
                                              8 BANK1      9     5      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    3701
                                              0 BANK1      8     0      8
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    3048
                                             58 BANK0     20    12      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             26    18      8    3329
                                              6 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __Umul8_16                                            9     7      2     799
                                              2 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     638
                                              2 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    2033
                                             32 BANK0     26    18      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     334
                                              7 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              3 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     684
                                              6 COMMON     3     2      1
                                              0 BANK0      4     4      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              6 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              3 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Interrupt_Init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             3     3      0      22
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _My_interrupt                                         2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _Interrupt_Init
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _PID_Init
     ___fladd
       ___fldiv (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
     ___fldiv
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
     ___flge
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___flsub
       ___fladd
         ___fldiv (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
     ___fltol
       ___fladd (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___flsub (ARG)
         ___fladd
           ___fldiv (ARG)
             ___flmul (ARG)
               __Umul8_16
               ___xxtofl (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl
   _Read_ADC
   _Timer1_Init
   _UART_Init
     ___aldiv
   _UART_Read
   _UART_Read_Text
     _UART_Read
   _UART_Write
   ___flmul
     __Umul8_16
     ___xxtofl (ARG)
   ___fltol
     ___fladd (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
     ___fldiv (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
     ___flmul (ARG)
       __Umul8_16
       ___xxtofl (ARG)
     ___flsub (ARG)
       ___fladd
         ___fldiv (ARG)
           ___flmul (ARG)
             __Umul8_16
             ___xxtofl (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___lwdiv
     ___lwmod (ARG)
   ___lwmod
   ___wmul
   ___xxtofl

 _My_interrupt (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      24       9       37.5%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     34      4E       7       97.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     50      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      CE      12        0.0%
ABS                  0      0      CE       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Apr 10 08:38:28 2019

         ??_Interrupt_Init 0072                          _E 00E8                          _T 00E0  
             ___fldiv@aexp 0059               ___fldiv@bexp 0058                          pc 0002  
             ___fldiv@sign 0051                __CFG_CP$OFF 0000                         _E1 00E4  
                       _E2 01B0                         _a1 01AC                         _a2 01A8  
                       _a3 01A4                         _Kd 00D8                         _Ki 0198  
                       _Kp 00DC                         fsr 0004        ___wmul@multiplicand 0074  
      __Umul8_16@word_mpld 0078                        l220 134E                        l221 134F  
                      l222 1353                        l216 1342                        l304 1322  
                      l217 1345                        l218 1349                        l171 07F8  
                      l219 134A                        l155 07A6                        l165 07D2  
                      l167 07D6                        l168 07DA                        l176 149F  
                      l169 07DE                        l292 07F9                        l800 0FF3  
                      l464 1649                        l713 0C60                        l573 16E2  
                      l734 0CE0                        l726 0CC8                        l399 13B9  
                      l576 1748                        l592 1613                        l840 17DA  
                      l832 17BA                        l770 0AA6                        l826 177A  
                      l772 0AB4                        l748 0967                        l692 0B0E  
                      l845 1404                        l839 17D0                        l696 0BA7  
                      l698 0B85                        _GIE 005F                        _RC0 0038  
                      _RD0 0040                        _RD1 0041                        _RD2 0042  
                      _RB7 0037                        _RD3 0043                        _RD4 0044  
                      _RD5 0045               __CFG_CPD$OFF 0000                        fsr0 0004  
                      _out 00D4                        indf 0000               __CFG_FOSC$HS 0000  
             ___flmul@aexp 0038               ___flmul@bexp 0039               ___flmul@sign 0033  
             ___flmul@temp 003E               ___flmul@prod 003A               __CFG_LVP$OFF 0000  
             ___fltol@exp1 006F                       l2011 0B06                       l2101 0C52  
                     l2007 0B03                       l2017 0B18                       l2131 0C93  
                     l2123 0C88                       l2117 0C81                       l2109 0C72  
                     l2125 0C8A                       l2135 0C95                       l2055 0B90  
                     l2047 0B54                       l2231 166A                       l2223 165A  
                     l2153 0CD8                       l2081 0BD6                       l2073 0BB5  
                     l2057 0B92                       l2065 0BA1                       l2305 1626  
                     l2241 16A2                       l2233 167A                       l2083 0BD8  
                     l2091 0BE8                       l2421 0A3F                       l2413 0A0B  
                     l2333 0939                       l2501 0D45                       l2157 0CDC  
                     l2245 16AF                       l2415 0A28                       l2335 0941  
                     l2263 1722                       l2167 13FC                       l2425 0A41  
                     l2353 095F                       l2329 0936                       l2249 16BD  
                     l2451 0AB0                       l2435 0A73                       l2363 0986  
                     l2259 16FC                       l2275 15C1                       l2603 1772  
                     l2349 095C                       l2613 178D                       l2711 13D3  
                     l2439 0A8C                       l2471 0D08                       l2295 15FB  
                     l2279 15CC                       l2623 17CE                       l2615 179F  
                     l2369 0992                       l2561 0F79                       l2553 0F45  
                     l2473 0D0A                       l2297 160F                       l2625 17BF  
                     l2609 1789                       l2723 1531                       l2395 0A00  
                     l2555 0F62                       l2491 0D2F                       l2475 0D12  
                     l2645 07E2                       l2389 09E1                       l2397 09BD  
                     l2565 0F7B                       l2493 0D37                       l2637 17F7  
                     l2399 0A05                       l2575 0FAD                       l2831 081A  
                     l2807 13B1                       l2585 0FDC                       l2489 0D2D  
                     l2841 083B                       l2579 0FC3                       l2747 1488  
                     l2659 08FE                       l2739 1392                       l2907 0620  
                     l2837 0830                       l2829 080C                       l2853 141B  
                     l2917 067B                       l1983 0AD9                       l2855 1429  
                     l2863 1442                       l2943 07A9                       l2793 0492  
                     l1987 0ADC                       l2859 1437                       l1989 0AE4  
                     l2797 04B5                       l2789 046F                       l2895 0604  
                     l2993 07EA                       _ADIE 0466                       _ADIF 0066  
                     _ADFM 04FF                       _ADON 00F8                       STR_1 1006  
                     STR_2 1012                       _BRGH 04C2                       _CREN 00C4  
                     u2220 0B74                       u3005 09CF                       u2230 0B75  
                     u2215 0B68                       u3025 09DA                       u3035 09EF  
                     u4005 0831                       u2415 0C74                       u3065 0A0F  
                     u2361 0C13                       u2353 0BFA                       u2345 0BDC  
                     u2265 0B96                       u4105 07A0                       u2370 0C27  
                     u2362 0C14                       u3155 0A5E                       u3315 0DF5  
                     u2515 0CB2                       u2371 0C28                       u2363 0C19  
                     u4035 141E                       u2372 0C2D                       u2364 0C1A  
                     u3165 0A7C                       u3085 0A1A                       u3405 0F13  
                     u2373 0C2E                       u2365 0C1F                       u2366 0C20  
                     u4207 1562                       u3175 0A97                       u4055 142F  
                     u4217 1571                       u2625 1458                       u3425 0F31  
                     u3345 0E52                       u2705 16A3                       u4065 1438  
                     u4227 1580                       u3435 0F49                       u4237 1366  
                     u3525 0F98                       u4157 053A                       u3535 0FB6  
                     u3455 0F54                       u2815 15D7                       u3615 17B2  
                     u4167 07B1                       u2761 170D                       u3545 0FCE  
                     u3385 0EEE                       u4177 1499                       u2665 166E  
                     u3721 087B                       u3705 084B                       u2762 170E  
                     u3722 087C                       u4187 1468                       u2763 1713  
                     u2595 1405                       u3635 17C7                       u3723 0881  
                     u3715 0864                       _PEIE 005E                       u2764 1714  
                     u3724 0882                       u3805 1516                       u4197 1479  
                     u2781 1733                       u2765 1719                       u2845 15FC  
                     u2685 167C                       u3725 0887                       _INTE 005C  
                     u2782 1734                       u2766 171A                       u3726 0888  
                     _INTF 0059                       u2783 1739                       u2695 1691  
                     u2784 173A                       u3825 153D                       u2785 173F  
                     u3761 08DB                       u3745 08AB                       u2786 1740  
                     u3762 08DC                       u2875 161A                       u3675 17E2  
                     u3595 1796                       u3763 08E1                       u3755 08C4  
                     u3835 1398                       u3764 08E2                       _RCIF 0065  
                     u3765 08E7                       u3925 13BA                       u3766 08E8  
                     u3855 148B                       u3935 13C1                       u2995 09C6  
                     u3965 080F                       u3985 081B                       u3995 0827  
                     _TMR1 000E                       _SPEN 00C7                       _TRMT 04C1  
                     _TXEN 04C5                       _SYNC 04C4               __CFG_WRT$OFF 0000  
                     _beta 01A0          ?_Lcd_Write_String 0070                       _chot 0190  
                     _main 0532                       _time 00EC                       btemp 007E  
         __end_of_ADC_Init 07F9                       start 000C         ??_Lcd_Write_String 0077  
          ___fldiv@new_exp 0052            __end_of_Lcd_Cmd 136F              ___fltol@sign1 006E  
          __end_of___aldiv 16C6                      _ADCS0 00FE                      _ADCS1 00FF  
                    _ADCS2 04FE            __end_of___fladd 0CEB                      ?_main 0070  
          __end_of___fldiv 0ABC              __CFG_WDTE$OFF 0000            __end_of___flmul 1000  
          __end_of___flsub 1508            __end_of___fltol 1637                      _PCFG0 04F8  
                    _PCFG1 04F9                      _PCFG2 04FA                      _PCFG3 04FB  
          __end_of___lwdiv 0840                      i1l190 1376                      i1l193 1388  
          __end_of___lwmod 1447                      _RCREG 001A       UART_Read_Text@Output 0076  
                    _TMR1H 000F                      _TMR1L 000E                      _SPBRG 0099  
  __size_of_Lcd_Set_Cursor 0050                      _TRISD 0088           __end_of_PID_Init 0532  
                    _TXREG 0019                ?_UART_Write 0070         __size_of_UART_Init 00D9  
       __size_of_UART_Read 0006       UART_Read_Text@length 0072                      _gamma 019C  
                    main@a 00CB                      main@t 00D0             __CFG_BOREN$OFF 0000  
                    pclath 000A                      status 0003                      wtemp0 007E  
         __end_of_Lcd_Init 15B4           __end_of_Lcd_Port 1355            __initialization 000F  
             __end_of_main 07B9           __end_of_Read_ADC 14BA                     ??_main 00C5  
                   _ADCON0 001F                     _ADRESH 001E                     _ADRESL 009E  
                   _T1SYNC 0082                     _INTEDG 040E                  ??_Lcd_Cmd 0073  
                   _TMR1IE 0460                     _TMR1IF 0060                     _TMR1CS 0081  
                   _TMR1ON 0080    __size_of_Lcd_Write_Char 0039                     _TRISA0 0428  
                   _TRISA1 0429                     _TRISB0 0430                     _TRISA2 042A  
                   _TRISA3 042B                     _TRISC0 0438                     _TRISB7 0437  
                   _TRISC6 043E                     _TRISC7 043F           __end_of___xxtofl 1800  
           __CFG_PWRTE$OFF 0000            ADC_Init@channel 0074              ??_Timer1_Init 0072  
        __end_of_UART_Init 0919          __end_of_UART_Read 07FF                     ___flge 16C6  
          Read_ADC@channel 007A        __size_of_UART_Write 000A                  ??___aldiv 007A  
                ??___fladd 0062                     ___wmul 13AF                  ??___fldiv 0048  
                ??___flmul 002E                  ??___flsub 007B                  ??___fltol 00AC  
                ??___lwdiv 0020                  ??___lwmod 0076    __size_of_UART_Read_Text 0020  
       __size_of__Umul8_16 0023                  ?_ADC_Init 0070                     saved_w 007E  
          Lcd_Set_Cursor@a 0020            Lcd_Set_Cursor@b 0076            Lcd_Set_Cursor@y 0022  
          Lcd_Set_Cursor@z 0021                 ___flge@ff1 0072                 ___flge@ff2 0076  
             ___xxtofl@arg 0022               ___xxtofl@exp 0021               ___xxtofl@val 0072  
  __end_of__initialization 002D                 ___fltol@f1 00A8                  ?_PID_Init 00B1  
           __pcstackCOMMON 0070               __pidataBANK1 0800        __end_of_Timer1_Init 133B  
           _Lcd_Set_Cursor 1508                 ??_ADC_Init 0072                  ?_Lcd_Init 0070  
                ?_Lcd_Port 0070                 __pbssBANK1 00D4                 __pbssBANK3 0190  
                ?_Read_ADC 0072          __end_of__Umul8_16 1415                 ??_PID_Init 007B  
               __pmaintext 0532                    ?___flge 0072              ?_My_interrupt 0070  
                  ?___wmul 0072                 __pintentry 0004  __size_of_Lcd_Write_String 0022  
   __end_of_Lcd_Set_Cursor 1558                    _T1CKPS0 0084                    _T1CKPS1 0085  
                  _T1OSCEN 0083                  ?___xxtofl 0072               ??_UART_Write 0072  
               ??_Lcd_Init 0076                 ??_Lcd_Port 0072                 __stringtab 1000  
               ??_Read_ADC 0074             _Lcd_Write_Char 1447                    _Lcd_Cmd 1355  
              _Timer1_Init 132B             ??_My_interrupt 0070                    ___aldiv 1637  
          __size_of___flge 0095                    ___fladd 0ABC                    ___fldiv 0919  
                  ___flmul 0CEB                    ___flsub 14BA                    ___fltol 15B4  
          __size_of___wmul 0021         __end_of_UART_Write 132B                    ___lwdiv 0802  
                  ___lwmod 1415             _UART_Read_Text 138F            ?_Lcd_Set_Cursor 0076  
                  __ptext1 13AF                    __ptext2 1415                    __ptext3 0802  
                  __ptext4 1321                    __ptext5 138F                    __ptext6 07F9  
                  __ptext7 0840                    __ptext8 1637                    __ptext9 132B  
  __size_of_Interrupt_Init 0008                 ??___xxtofl 0076           ___aldiv@dividend 0076  
                  _pre_out 0194                    clrloop0 131A     __end_of_Lcd_Write_Char 1480  
     end_of_initialization 002D     __end_of_UART_Read_Text 13AF           ___aldiv@quotient 0022  
                Lcd_Port@a 0072                  _UART_Init 0840                  _UART_Read 07F9  
           UART_Write@data 0072                ___fladd@grs 006D              ___xxtofl@sign 0020  
              ___fldiv@grs 0054                ___fldiv@rem 004D          __size_of_ADC_Init 0040  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0079          Lcd_Write_String@i 0077  
              ___flmul@grs 0034                  Read_ADC@N 0078                 main@buffer 00CE  
               main@t_load 00D2            ?_UART_Read_Text 0072        UART_Read_Text@i_230 0077  
        __size_of_PID_Init 0501             __end_of___flge 175B             __end_of___wmul 13D0  
         _Lcd_Write_String 13D0                 ?_UART_Init 0026                 ?_UART_Read 0070  
      start_initialization 000F       __end_of_My_interrupt 138F          __size_of_Lcd_Init 005C  
        __size_of_Lcd_Port 001A         PID_Init@nhietdodat 00B3          __size_of_Read_ADC 003A  
                 ??___flge 0020                   ??___wmul 0076                  __Umul8_16 13F2  
              __pdataBANK1 00EC            Lcd_Write_Char@a 0076            Lcd_Write_Char@y 0075  
                ___fladd@a 005E                  ___fladd@b 005A             _Interrupt_Init 1311  
                ___fldiv@a 0040                  ___fldiv@b 0044                  ___flmul@a 002A  
                ___flmul@b 0026                  ___flsub@a 00A0                  ___flsub@b 00A4  
                ___latbits 0002              __pcstackBANK0 0020              __pcstackBANK1 00A0  
        __size_of___xxtofl 00A5                   ?_Lcd_Cmd 0070               ?_Timer1_Init 0070  
         ___lwdiv@dividend 007A           ??_Lcd_Set_Cursor 0077                   ?___aldiv 0072  
                 ?___fladd 005A                   ?___fldiv 0040                   ?___flmul 0026  
                 ?___flsub 00A0                   ?___fltol 00A8                 ?__Umul8_16 0072  
                 ?___lwdiv 0078                   ?___lwmod 0072                ??_UART_Init 002A  
              ??_UART_Read 0072     __end_of_Interrupt_Init 1319                  __pstrings 1000  
                 _ADC_Init 07B9           ___lwdiv@quotient 0021                 UART_Init@x 0036  
          ___aldiv@divisor 0072          interrupt_function 0004            ___aldiv@counter 0020  
           ___wmul@product 0076               _PID_Init$861 00C1               _PID_Init$862 00B5  
             _PID_Init$863 00B9               _PID_Init$864 00BD                  clear_ram0 1319  
                 Lcd_Cmd@a 0075                   _PID_Init 0031                   _GO_nDONE 00FA  
        UART_Init@baudrate 0026            ?_Interrupt_Init 0070                __stringbase 1005  
        ___wmul@multiplier 0072      __size_of_My_interrupt 0020           ??_Lcd_Write_Char 0073  
                main@start 00CD                   _Lcd_Init 1558                   _Lcd_Port 133B  
                 _Read_ADC 1480   __end_of_Lcd_Write_String 13F2           ??_UART_Read_Text 0074  
         __size_of_Lcd_Cmd 001A               _My_interrupt 136F                ??__Umul8_16 0074  
         __size_of___aldiv 008F           __size_of___fladd 022F           __size_of___fldiv 01A3  
         __size_of___flmul 0315           __size_of___flsub 004E           __size_of___fltol 0083  
         __size_of___lwdiv 003E           __size_of___lwmod 0032         __end_of__stringtab 1006  
          PID_Init@nhietdo 00B1                   ___xxtofl 175B            ___lwdiv@divisor 0078  
          ___lwdiv@counter 0023                   __ptext10 1480                   __ptext11 0031  
                 __ptext20 13D0                   __ptext12 175B                   __ptext21 1447  
                 __ptext13 15B4                   __ptext22 1508                   __ptext14 14BA  
                 __ptext23 1558                   __ptext15 0ABC                   __ptext24 1355  
                 __ptext16 0CEB                   __ptext25 133B                   __ptext17 13F2  
                 __ptext26 1311                   __ptext18 16C6                   __ptext27 07B9  
                 __ptext19 0919                   __ptext28 136F              __size_of_main 0287  
     __size_of_Timer1_Init 0010         Lcd_Write_Char@temp 0074                   intlevel1 0000  
         ___lwmod@dividend 0074                  stringcode 1000         Lcd_Set_Cursor@temp 0023  
   __Umul8_16@multiplicand 0072            ___lwmod@divisor 0072            ___lwmod@counter 0077  
                 stringdir 1000                   stringtab 1000               ___aldiv@sign 0021  
               _UART_Write 1321              ___fladd@signs 006A               ___fladd@aexp 006B  
             ___fladd@bexp 006C       __Umul8_16@multiplier 007A          __Umul8_16@product 0076  
