

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Mar 09 23:11:28 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    10                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    11                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2
    21                           	psect	text13,local,class=CODE,merge=1,delta=2
    22                           	psect	text14,local,class=CODE,merge=1,delta=2
    23                           	dabs	1,0x7E,2
    24  0000                     
    25                           ; Version 2.05
    26                           ; Generated 20/12/2018 GMT
    27                           ; 
    28                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC16F877A Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  0007                     	;# 
    67  0008                     	;# 
    68  0009                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000D                     	;# 
    73  000E                     	;# 
    74  000E                     	;# 
    75  000F                     	;# 
    76  0010                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0014                     	;# 
    81  0015                     	;# 
    82  0015                     	;# 
    83  0016                     	;# 
    84  0017                     	;# 
    85  0018                     	;# 
    86  0019                     	;# 
    87  001A                     	;# 
    88  001B                     	;# 
    89  001B                     	;# 
    90  001C                     	;# 
    91  001D                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  0081                     	;# 
    95  0085                     	;# 
    96  0086                     	;# 
    97  0087                     	;# 
    98  0088                     	;# 
    99  0089                     	;# 
   100  008C                     	;# 
   101  008D                     	;# 
   102  008E                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  010C                     	;# 
   114  010D                     	;# 
   115  010E                     	;# 
   116  010F                     	;# 
   117  018C                     	;# 
   118  018D                     	;# 
   119  0000                     	;# 
   120  0001                     	;# 
   121  0002                     	;# 
   122  0003                     	;# 
   123  0004                     	;# 
   124  0005                     	;# 
   125  0006                     	;# 
   126  0007                     	;# 
   127  0008                     	;# 
   128  0009                     	;# 
   129  000A                     	;# 
   130  000B                     	;# 
   131  000C                     	;# 
   132  000D                     	;# 
   133  000E                     	;# 
   134  000E                     	;# 
   135  000F                     	;# 
   136  0010                     	;# 
   137  0011                     	;# 
   138  0012                     	;# 
   139  0013                     	;# 
   140  0014                     	;# 
   141  0015                     	;# 
   142  0015                     	;# 
   143  0016                     	;# 
   144  0017                     	;# 
   145  0018                     	;# 
   146  0019                     	;# 
   147  001A                     	;# 
   148  001B                     	;# 
   149  001B                     	;# 
   150  001C                     	;# 
   151  001D                     	;# 
   152  001E                     	;# 
   153  001F                     	;# 
   154  0081                     	;# 
   155  0085                     	;# 
   156  0086                     	;# 
   157  0087                     	;# 
   158  0088                     	;# 
   159  0089                     	;# 
   160  008C                     	;# 
   161  008D                     	;# 
   162  008E                     	;# 
   163  0091                     	;# 
   164  0092                     	;# 
   165  0093                     	;# 
   166  0094                     	;# 
   167  0098                     	;# 
   168  0099                     	;# 
   169  009C                     	;# 
   170  009D                     	;# 
   171  009E                     	;# 
   172  009F                     	;# 
   173  010C                     	;# 
   174  010D                     	;# 
   175  010E                     	;# 
   176  010F                     	;# 
   177  018C                     	;# 
   178  018D                     	;# 
   179  0000                     	;# 
   180  0001                     	;# 
   181  0002                     	;# 
   182  0003                     	;# 
   183  0004                     	;# 
   184  0005                     	;# 
   185  0006                     	;# 
   186  0007                     	;# 
   187  0008                     	;# 
   188  0009                     	;# 
   189  000A                     	;# 
   190  000B                     	;# 
   191  000C                     	;# 
   192  000D                     	;# 
   193  000E                     	;# 
   194  000E                     	;# 
   195  000F                     	;# 
   196  0010                     	;# 
   197  0011                     	;# 
   198  0012                     	;# 
   199  0013                     	;# 
   200  0014                     	;# 
   201  0015                     	;# 
   202  0015                     	;# 
   203  0016                     	;# 
   204  0017                     	;# 
   205  0018                     	;# 
   206  0019                     	;# 
   207  001A                     	;# 
   208  001B                     	;# 
   209  001B                     	;# 
   210  001C                     	;# 
   211  001D                     	;# 
   212  001E                     	;# 
   213  001F                     	;# 
   214  0081                     	;# 
   215  0085                     	;# 
   216  0086                     	;# 
   217  0087                     	;# 
   218  0088                     	;# 
   219  0089                     	;# 
   220  008C                     	;# 
   221  008D                     	;# 
   222  008E                     	;# 
   223  0091                     	;# 
   224  0092                     	;# 
   225  0093                     	;# 
   226  0094                     	;# 
   227  0098                     	;# 
   228  0099                     	;# 
   229  009C                     	;# 
   230  009D                     	;# 
   231  009E                     	;# 
   232  009F                     	;# 
   233  010C                     	;# 
   234  010D                     	;# 
   235  010E                     	;# 
   236  010F                     	;# 
   237  018C                     	;# 
   238  018D                     	;# 
   239  001E                     _ADRESH	set	30
   240  001F                     _ADCON0	set	31
   241  0041                     _RD1	set	65
   242  0040                     _RD0	set	64
   243  0045                     _RD5	set	69
   244  0044                     _RD4	set	68
   245  0043                     _RD3	set	67
   246  0042                     _RD2	set	66
   247  00FA                     _GO_nDONE	set	250
   248  0046                     _RD6	set	70
   249  009E                     _ADRESL	set	158
   250  009F                     _ADCON1	set	159
   251  0088                     _TRISD	set	136
   252  0428                     _TRISA0	set	1064
   253                           
   254                           	psect	strings
   255  0800                     __pstrings:	
   256  0800                     stringtab:	
   257  0800                     __stringtab:	
   258  0800                     stringcode:	
   259                           ;	String table - string pointers are 1 byte each
   260                           
   261  0800                     stringdir:	
   262  0800  3008               	movlw	high stringdir
   263  0801  008A               	movwf	10
   264  0802  0804               	movf	4,w
   265  0803  0A84               	incf	4,f
   266  0804  0782               	addwf	2,f
   267  0805                     __stringbase:	
   268  0805  3400               	retlw	0
   269  0806                     __end_of__stringtab:	
   270  0806                     STR_2:	
   271  0806  344E               	retlw	78	;'N'
   272  0807  3468               	retlw	104	;'h'
   273  0808  3469               	retlw	105	;'i'
   274  0809  3465               	retlw	101	;'e'
   275  080A  3474               	retlw	116	;'t'
   276  080B  3420               	retlw	32	;' '
   277  080C  3464               	retlw	100	;'d'
   278  080D  346F               	retlw	111	;'o'
   279  080E  343A               	retlw	58	;':'
   280  080F  3420               	retlw	32	;' '
   281  0810  3400               	retlw	0
   282  0811                     STR_1:	
   283  0811  3447               	retlw	71	;'G'
   284  0812  3469               	retlw	105	;'i'
   285  0813  3461               	retlw	97	;'a'
   286  0814  3420               	retlw	32	;' '
   287  0815  3474               	retlw	116	;'t'
   288  0816  3472               	retlw	114	;'r'
   289  0817  3469               	retlw	105	;'i'
   290  0818  343A               	retlw	58	;':'
   291  0819  3420               	retlw	32	;' '
   292  081A  3400               	retlw	0
   293                           
   294                           ; #config settings
   295  0000                     
   296                           	psect	cinit
   297  07FC                     start_initialization:	
   298  07FC                     __initialization:	
   299  07FC                     end_of_initialization:	
   300                           ;End of C runtime variable initialization code
   301                           
   302  07FC                     __end_of__initialization:	
   303  07FC  0183               	clrf	3
   304  07FD  120A  118A  2954   	ljmp	_main	;jump to C main() function
   305                           
   306                           	psect	cstackCOMMON
   307  0070                     __pcstackCOMMON:	
   308  0070                     ?_Lcd_Init:	
   309  0070                     ?_Lcd_Write_String:	
   310                           ; 1 bytes @ 0x0
   311                           
   312  0070                     ?_Lcd_Write_Char:	
   313                           ; 1 bytes @ 0x0
   314                           
   315  0070                     ?_main:	
   316                           ; 1 bytes @ 0x0
   317                           
   318  0070                     ?_Lcd_Port:	
   319                           ; 1 bytes @ 0x0
   320                           
   321  0070                     ??_Lcd_Port:	
   322                           ; 1 bytes @ 0x0
   323                           
   324  0070                     ?_Lcd_Cmd:	
   325                           ; 1 bytes @ 0x0
   326                           
   327  0070                     ?_Read_ADC:	
   328                           ; 1 bytes @ 0x0
   329                           
   330  0070                     ?__Umul8_16:	
   331                           ; 2 bytes @ 0x0
   332                           
   333  0070                     ?___lwmod:	
   334                           ; 2 bytes @ 0x0
   335                           
   336  0070                     ?___xxtofl:	
   337                           ; 2 bytes @ 0x0
   338                           
   339  0070                     Lcd_Port@a:	
   340                           ; 4 bytes @ 0x0
   341                           
   342  0070                     __Umul8_16@multiplicand:	
   343                           ; 1 bytes @ 0x0
   344                           
   345  0070                     ___lwmod@divisor:	
   346                           ; 1 bytes @ 0x0
   347                           
   348  0070                     ___xxtofl@val:	
   349                           ; 2 bytes @ 0x0
   350                           
   351                           
   352                           ; 4 bytes @ 0x0
   353  0070                     	ds	1
   354  0071                     ??_Lcd_Write_Char:	
   355  0071                     ??_Lcd_Cmd:	
   356                           ; 1 bytes @ 0x1
   357                           
   358                           
   359                           ; 1 bytes @ 0x1
   360  0071                     	ds	1
   361  0072                     ??_Read_ADC:	
   362  0072                     ??__Umul8_16:	
   363                           ; 1 bytes @ 0x2
   364                           
   365  0072                     Lcd_Write_Char@temp:	
   366                           ; 1 bytes @ 0x2
   367                           
   368  0072                     ___lwmod@dividend:	
   369                           ; 1 bytes @ 0x2
   370                           
   371                           
   372                           ; 2 bytes @ 0x2
   373  0072                     	ds	1
   374  0073                     Lcd_Cmd@a:	
   375  0073                     Lcd_Write_Char@y:	
   376                           ; 1 bytes @ 0x3
   377                           
   378                           
   379                           ; 1 bytes @ 0x3
   380  0073                     	ds	1
   381  0074                     ??_Lcd_Init:	
   382  0074                     ?_Lcd_Set_Cursor:	
   383                           ; 1 bytes @ 0x4
   384                           
   385  0074                     ??___lwmod:	
   386                           ; 1 bytes @ 0x4
   387                           
   388  0074                     ??___xxtofl:	
   389                           ; 1 bytes @ 0x4
   390                           
   391  0074                     Read_ADC@channel:	
   392                           ; 1 bytes @ 0x4
   393                           
   394  0074                     Lcd_Set_Cursor@b:	
   395                           ; 1 bytes @ 0x4
   396                           
   397  0074                     Lcd_Write_Char@a:	
   398                           ; 1 bytes @ 0x4
   399                           
   400  0074                     __Umul8_16@product:	
   401                           ; 1 bytes @ 0x4
   402                           
   403                           
   404                           ; 2 bytes @ 0x4
   405  0074                     	ds	1
   406  0075                     ??_Lcd_Write_String:	
   407  0075                     ??_Lcd_Set_Cursor:	
   408                           ; 1 bytes @ 0x5
   409                           
   410  0075                     ___lwmod@counter:	
   411                           ; 1 bytes @ 0x5
   412                           
   413  0075                     Lcd_Write_String@i:	
   414                           ; 1 bytes @ 0x5
   415                           
   416                           
   417                           ; 2 bytes @ 0x5
   418  0075                     	ds	1
   419  0076                     ?___lwdiv:	
   420  0076                     ___lwdiv@divisor:	
   421                           ; 2 bytes @ 0x6
   422                           
   423  0076                     __Umul8_16@word_mpld:	
   424                           ; 2 bytes @ 0x6
   425                           
   426                           
   427                           ; 2 bytes @ 0x6
   428  0076                     	ds	1
   429  0077                     Lcd_Set_Cursor@a:	
   430  0077                     Lcd_Write_String@a:	
   431                           ; 1 bytes @ 0x7
   432                           
   433                           
   434                           ; 1 bytes @ 0x7
   435  0077                     	ds	1
   436  0078                     Lcd_Set_Cursor@z:	
   437  0078                     ___xxtofl@sign:	
   438                           ; 1 bytes @ 0x8
   439                           
   440  0078                     __Umul8_16@multiplier:	
   441                           ; 1 bytes @ 0x8
   442                           
   443  0078                     ___lwdiv@dividend:	
   444                           ; 1 bytes @ 0x8
   445                           
   446                           
   447                           ; 2 bytes @ 0x8
   448  0078                     	ds	1
   449  0079                     Lcd_Set_Cursor@y:	
   450  0079                     ___xxtofl@exp:	
   451                           ; 1 bytes @ 0x9
   452                           
   453                           
   454                           ; 1 bytes @ 0x9
   455  0079                     	ds	1
   456  007A                     ??___lwdiv:	
   457  007A                     Lcd_Set_Cursor@temp:	
   458                           ; 1 bytes @ 0xA
   459                           
   460  007A                     ___xxtofl@arg:	
   461                           ; 1 bytes @ 0xA
   462                           
   463                           
   464                           ; 4 bytes @ 0xA
   465  007A                     	ds	1
   466  007B                     ___lwdiv@quotient:	
   467                           
   468                           ; 2 bytes @ 0xB
   469  007B                     	ds	2
   470  007D                     ___lwdiv@counter:	
   471                           
   472                           ; 1 bytes @ 0xD
   473  007D                     	ds	1
   474                           
   475                           	psect	cstackBANK0
   476  0020                     __pcstackBANK0:	
   477  0020                     ?___flmul:	
   478  0020                     ___flmul@b:	
   479                           ; 4 bytes @ 0x0
   480                           
   481                           
   482                           ; 4 bytes @ 0x0
   483  0020                     	ds	4
   484  0024                     ___flmul@a:	
   485                           
   486                           ; 4 bytes @ 0x4
   487  0024                     	ds	4
   488  0028                     ??___flmul:	
   489                           
   490                           ; 1 bytes @ 0x8
   491  0028                     	ds	5
   492  002D                     ___flmul@sign:	
   493                           
   494                           ; 1 bytes @ 0xD
   495  002D                     	ds	1
   496  002E                     ___flmul@grs:	
   497                           
   498                           ; 4 bytes @ 0xE
   499  002E                     	ds	4
   500  0032                     ___flmul@aexp:	
   501                           
   502                           ; 1 bytes @ 0x12
   503  0032                     	ds	1
   504  0033                     ___flmul@bexp:	
   505                           
   506                           ; 1 bytes @ 0x13
   507  0033                     	ds	1
   508  0034                     ___flmul@prod:	
   509                           
   510                           ; 4 bytes @ 0x14
   511  0034                     	ds	4
   512  0038                     ___flmul@temp:	
   513                           
   514                           ; 2 bytes @ 0x18
   515  0038                     	ds	2
   516  003A                     ?___fladd:	
   517  003A                     ___fladd@b:	
   518                           ; 4 bytes @ 0x1A
   519                           
   520                           
   521                           ; 4 bytes @ 0x1A
   522  003A                     	ds	4
   523  003E                     ___fladd@a:	
   524                           
   525                           ; 4 bytes @ 0x1E
   526  003E                     	ds	4
   527  0042                     ??___fladd:	
   528                           
   529                           ; 1 bytes @ 0x22
   530  0042                     	ds	8
   531  004A                     ___fladd@signs:	
   532                           
   533                           ; 1 bytes @ 0x2A
   534  004A                     	ds	1
   535  004B                     ___fladd@aexp:	
   536                           
   537                           ; 1 bytes @ 0x2B
   538  004B                     	ds	1
   539  004C                     ___fladd@bexp:	
   540                           
   541                           ; 1 bytes @ 0x2C
   542  004C                     	ds	1
   543  004D                     ___fladd@grs:	
   544                           
   545                           ; 1 bytes @ 0x2D
   546  004D                     	ds	1
   547  004E                     ?___fltol:	
   548  004E                     ___fltol@f1:	
   549                           ; 4 bytes @ 0x2E
   550                           
   551                           
   552                           ; 4 bytes @ 0x2E
   553  004E                     	ds	4
   554  0052                     ??___fltol:	
   555                           
   556                           ; 1 bytes @ 0x32
   557  0052                     	ds	5
   558  0057                     ___fltol@sign1:	
   559                           
   560                           ; 1 bytes @ 0x37
   561  0057                     	ds	1
   562  0058                     ___fltol@exp1:	
   563                           
   564                           ; 1 bytes @ 0x38
   565  0058                     	ds	1
   566  0059                     ??_main:	
   567                           
   568                           ; 1 bytes @ 0x39
   569  0059                     	ds	1
   570  005A                     main@t:	
   571                           
   572                           ; 2 bytes @ 0x3A
   573  005A                     	ds	2
   574  005C                     main@a:	
   575                           
   576                           ; 2 bytes @ 0x3C
   577  005C                     	ds	2
   578                           
   579                           	psect	maintext
   580  0154                     __pmaintext:	
   581 ;;
   582 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   583 ;;
   584 ;; *************** function _main *****************
   585 ;; Defined at:
   586 ;;		line 4 in file "ADC.c"
   587 ;; Parameters:    Size  Location     Type
   588 ;;		None
   589 ;; Auto vars:     Size  Location     Type
   590 ;;  a               2   60[BANK0 ] unsigned int 
   591 ;;  t               2   58[BANK0 ] unsigned int 
   592 ;; Return value:  Size  Location     Type
   593 ;;                  1    wreg      void 
   594 ;; Registers used:
   595 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   596 ;; Tracked objects:
   597 ;;		On entry : B00/0
   598 ;;		On exit  : 0/0
   599 ;;		Unchanged: 0/0
   600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   601 ;;      Params:         0       0       0       0       0
   602 ;;      Locals:         0       4       0       0       0
   603 ;;      Temps:          0       1       0       0       0
   604 ;;      Totals:         0       5       0       0       0
   605 ;;Total ram usage:        5 bytes
   606 ;; Hardware stack levels required when called:    3
   607 ;; This function calls:
   608 ;;		_Lcd_Init
   609 ;;		_Lcd_Set_Cursor
   610 ;;		_Lcd_Write_Char
   611 ;;		_Lcd_Write_String
   612 ;;		_Read_ADC
   613 ;;		___fladd
   614 ;;		___flmul
   615 ;;		___fltol
   616 ;;		___lwdiv
   617 ;;		___lwmod
   618 ;;		___xxtofl
   619 ;; This function is called by:
   620 ;;		Startup code after reset
   621 ;; This function uses a non-reentrant model
   622 ;;
   623                           
   624                           
   625                           ;psect for function _main
   626  0154                     _main:	
   627                           
   628                           ;ADC.c: 6:     unsigned int a, t;;ADC.c: 7:     TRISD = 0x00;
   629                           
   630                           ;incstack = 0
   631                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   632  0154  1683               	bsf	3,5	;RP0=1, select bank1
   633  0155  1303               	bcf	3,6	;RP1=0, select bank1
   634  0156  0188               	clrf	8	;volatile
   635                           
   636                           ;ADC.c: 8:     TRISA0 = 1;
   637  0157  1405               	bsf	5,0	;volatile
   638                           
   639                           ;ADC.c: 9:     ADCON0 = 0x81;
   640  0158  3081               	movlw	129
   641  0159  1283               	bcf	3,5	;RP0=0, select bank0
   642  015A  1303               	bcf	3,6	;RP1=0, select bank0
   643  015B  009F               	movwf	31	;volatile
   644                           
   645                           ;ADC.c: 10:     ADCON1 = 0x80;
   646  015C  3080               	movlw	128
   647  015D  1683               	bsf	3,5	;RP0=1, select bank1
   648  015E  1303               	bcf	3,6	;RP1=0, select bank1
   649  015F  009F               	movwf	31	;volatile
   650                           
   651                           ;ADC.c: 11:     Lcd_Init();
   652  0160  120A  158A  27A4  120A  118A  	fcall	_Lcd_Init
   653                           
   654                           ;ADC.c: 12:     Lcd_Write_String("Gia tri: ");
   655  0165  300C               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   656  0166  120A  158A  2682  120A  118A  	fcall	_Lcd_Write_String
   657                           
   658                           ;ADC.c: 13:     Lcd_Set_Cursor(2,1);
   659  016B  01F4               	clrf	Lcd_Set_Cursor@b
   660  016C  0AF4               	incf	Lcd_Set_Cursor@b,f
   661  016D  3002               	movlw	2
   662  016E  120A  158A  275A  120A  118A  	fcall	_Lcd_Set_Cursor
   663                           
   664                           ;ADC.c: 14:     Lcd_Write_String("Nhiet do: ");
   665  0173  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   666  0174  120A  158A  2682  120A  118A  	fcall	_Lcd_Write_String
   667  0179  297B               	goto	l1896
   668  017A                     l1920:	
   669  017A  1708               	bsf	8,6	;volatile
   670  017B                     l1896:	
   671                           
   672                           ;ADC.c: 16:     {;ADC.c: 17:         a = Read_ADC(0);
   673  017B  3000               	movlw	0
   674  017C  120A  158A  26C7  120A  118A  	fcall	_Read_ADC
   675  0181  0871               	movf	?_Read_ADC+1,w
   676  0182  1283               	bcf	3,5	;RP0=0, select bank0
   677  0183  1303               	bcf	3,6	;RP1=0, select bank0
   678  0184  00DD               	movwf	main@a+1
   679  0185  0870               	movf	?_Read_ADC,w
   680  0186  00DC               	movwf	main@a
   681                           
   682                           ;ADC.c: 18:         t = a*0.488f+0.5f;
   683  0187  085C               	movf	main@a,w
   684  0188  00F0               	movwf	___xxtofl@val
   685  0189  085D               	movf	main@a+1,w
   686  018A  00F1               	movwf	___xxtofl@val+1
   687  018B  01F2               	clrf	___xxtofl@val+2
   688  018C  01F3               	clrf	___xxtofl@val+3
   689  018D  3000               	movlw	0
   690  018E  120A  118A  20B1  120A  118A  	fcall	___xxtofl
   691  0193  0873               	movf	?___xxtofl+3,w
   692  0194  1283               	bcf	3,5	;RP0=0, select bank0
   693  0195  1303               	bcf	3,6	;RP1=0, select bank0
   694  0196  00A7               	movwf	___flmul@a+3
   695  0197  0872               	movf	?___xxtofl+2,w
   696  0198  00A6               	movwf	___flmul@a+2
   697  0199  0871               	movf	?___xxtofl+1,w
   698  019A  00A5               	movwf	___flmul@a+1
   699  019B  0870               	movf	?___xxtofl,w
   700  019C  00A4               	movwf	___flmul@a
   701  019D  303E               	movlw	62
   702  019E  00A3               	movwf	___flmul@b+3
   703  019F  30F9               	movlw	249
   704  01A0  00A2               	movwf	___flmul@b+2
   705  01A1  30DB               	movlw	219
   706  01A2  00A1               	movwf	___flmul@b+1
   707  01A3  3023               	movlw	35
   708  01A4  00A0               	movwf	___flmul@b
   709  01A5  120A  118A  24E7  120A  118A  	fcall	___flmul
   710  01AA  1283               	bcf	3,5	;RP0=0, select bank0
   711  01AB  1303               	bcf	3,6	;RP1=0, select bank0
   712  01AC  0823               	movf	?___flmul+3,w
   713  01AD  00C1               	movwf	___fladd@a+3
   714  01AE  0822               	movf	?___flmul+2,w
   715  01AF  00C0               	movwf	___fladd@a+2
   716  01B0  0821               	movf	?___flmul+1,w
   717  01B1  00BF               	movwf	___fladd@a+1
   718  01B2  0820               	movf	?___flmul,w
   719  01B3  00BE               	movwf	___fladd@a
   720  01B4  303F               	movlw	63
   721  01B5  00BD               	movwf	___fladd@b+3
   722  01B6  3000               	movlw	0
   723  01B7  00BC               	movwf	___fladd@b+2
   724  01B8  3000               	movlw	0
   725  01B9  00BB               	movwf	___fladd@b+1
   726  01BA  3000               	movlw	0
   727  01BB  00BA               	movwf	___fladd@b
   728  01BC  120A  118A  22B8  120A  118A  	fcall	___fladd
   729  01C1  1283               	bcf	3,5	;RP0=0, select bank0
   730  01C2  1303               	bcf	3,6	;RP1=0, select bank0
   731  01C3  083D               	movf	?___fladd+3,w
   732  01C4  00D1               	movwf	___fltol@f1+3
   733  01C5  083C               	movf	?___fladd+2,w
   734  01C6  00D0               	movwf	___fltol@f1+2
   735  01C7  083B               	movf	?___fladd+1,w
   736  01C8  00CF               	movwf	___fltol@f1+1
   737  01C9  083A               	movf	?___fladd,w
   738  01CA  00CE               	movwf	___fltol@f1
   739  01CB  120A  118A  2044  120A  118A  	fcall	___fltol
   740  01D0  1283               	bcf	3,5	;RP0=0, select bank0
   741  01D1  1303               	bcf	3,6	;RP1=0, select bank0
   742  01D2  084F               	movf	?___fltol+1,w
   743  01D3  00DB               	movwf	main@t+1
   744  01D4  084E               	movf	?___fltol,w
   745  01D5  00DA               	movwf	main@t
   746                           
   747                           ;ADC.c: 20:         Lcd_Set_Cursor(1,10);
   748  01D6  300A               	movlw	10
   749  01D7  00D9               	movwf	??_main
   750  01D8  0859               	movf	??_main,w
   751  01D9  00F4               	movwf	Lcd_Set_Cursor@b
   752  01DA  3001               	movlw	1
   753  01DB  120A  158A  275A  120A  118A  	fcall	_Lcd_Set_Cursor
   754                           
   755                           ;ADC.c: 21:         Lcd_Write_Char(a/1000+48);
   756  01E0  30E8               	movlw	232
   757  01E1  00F6               	movwf	___lwdiv@divisor
   758  01E2  3003               	movlw	3
   759  01E3  00F7               	movwf	___lwdiv@divisor+1
   760  01E4  1283               	bcf	3,5	;RP0=0, select bank0
   761  01E5  1303               	bcf	3,6	;RP1=0, select bank0
   762  01E6  085D               	movf	main@a+1,w
   763  01E7  00F9               	movwf	___lwdiv@dividend+1
   764  01E8  085C               	movf	main@a,w
   765  01E9  00F8               	movwf	___lwdiv@dividend
   766  01EA  120A  118A  2008  120A  118A  	fcall	___lwdiv
   767  01EF  0876               	movf	?___lwdiv,w
   768  01F0  3E30               	addlw	48
   769  01F1  120A  158A  2721  120A  118A  	fcall	_Lcd_Write_Char
   770                           
   771                           ;ADC.c: 22:         Lcd_Write_Char((a%1000)/100+48);
   772  01F6  3064               	movlw	100
   773  01F7  00F6               	movwf	___lwdiv@divisor
   774  01F8  3000               	movlw	0
   775  01F9  00F7               	movwf	___lwdiv@divisor+1
   776  01FA  1283               	bcf	3,5	;RP0=0, select bank0
   777  01FB  1303               	bcf	3,6	;RP1=0, select bank0
   778  01FC  085D               	movf	main@a+1,w
   779  01FD  00F3               	movwf	___lwmod@dividend+1
   780  01FE  085C               	movf	main@a,w
   781  01FF  00F2               	movwf	___lwmod@dividend
   782  0200  30E8               	movlw	232
   783  0201  00F0               	movwf	___lwmod@divisor
   784  0202  3003               	movlw	3
   785  0203  00F1               	movwf	___lwmod@divisor+1
   786  0204  120A  158A  26EF  120A  118A  	fcall	___lwmod
   787  0209  0871               	movf	?___lwmod+1,w
   788  020A  00F9               	movwf	___lwdiv@dividend+1
   789  020B  0870               	movf	?___lwmod,w
   790  020C  00F8               	movwf	___lwdiv@dividend
   791  020D  120A  118A  2008  120A  118A  	fcall	___lwdiv
   792  0212  0876               	movf	?___lwdiv,w
   793  0213  3E30               	addlw	48
   794  0214  120A  158A  2721  120A  118A  	fcall	_Lcd_Write_Char
   795                           
   796                           ;ADC.c: 23:         Lcd_Write_Char((a%100)/10+48);
   797  0219  300A               	movlw	10
   798  021A  00F6               	movwf	___lwdiv@divisor
   799  021B  3000               	movlw	0
   800  021C  00F7               	movwf	___lwdiv@divisor+1
   801  021D  1283               	bcf	3,5	;RP0=0, select bank0
   802  021E  1303               	bcf	3,6	;RP1=0, select bank0
   803  021F  085D               	movf	main@a+1,w
   804  0220  00F3               	movwf	___lwmod@dividend+1
   805  0221  085C               	movf	main@a,w
   806  0222  00F2               	movwf	___lwmod@dividend
   807  0223  3064               	movlw	100
   808  0224  00F0               	movwf	___lwmod@divisor
   809  0225  3000               	movlw	0
   810  0226  00F1               	movwf	___lwmod@divisor+1
   811  0227  120A  158A  26EF  120A  118A  	fcall	___lwmod
   812  022C  0871               	movf	?___lwmod+1,w
   813  022D  00F9               	movwf	___lwdiv@dividend+1
   814  022E  0870               	movf	?___lwmod,w
   815  022F  00F8               	movwf	___lwdiv@dividend
   816  0230  120A  118A  2008  120A  118A  	fcall	___lwdiv
   817  0235  0876               	movf	?___lwdiv,w
   818  0236  3E30               	addlw	48
   819  0237  120A  158A  2721  120A  118A  	fcall	_Lcd_Write_Char
   820                           
   821                           ;ADC.c: 24:         Lcd_Write_Char(a%10+48);
   822  023C  300A               	movlw	10
   823  023D  00F0               	movwf	___lwmod@divisor
   824  023E  3000               	movlw	0
   825  023F  00F1               	movwf	___lwmod@divisor+1
   826  0240  1283               	bcf	3,5	;RP0=0, select bank0
   827  0241  1303               	bcf	3,6	;RP1=0, select bank0
   828  0242  085D               	movf	main@a+1,w
   829  0243  00F3               	movwf	___lwmod@dividend+1
   830  0244  085C               	movf	main@a,w
   831  0245  00F2               	movwf	___lwmod@dividend
   832  0246  120A  158A  26EF  120A  118A  	fcall	___lwmod
   833  024B  0870               	movf	?___lwmod,w
   834  024C  3E30               	addlw	48
   835  024D  120A  158A  2721  120A  118A  	fcall	_Lcd_Write_Char
   836                           
   837                           ;ADC.c: 26:         Lcd_Set_Cursor(2,11);
   838  0252  300B               	movlw	11
   839  0253  1283               	bcf	3,5	;RP0=0, select bank0
   840  0254  1303               	bcf	3,6	;RP1=0, select bank0
   841  0255  00D9               	movwf	??_main
   842  0256  0859               	movf	??_main,w
   843  0257  00F4               	movwf	Lcd_Set_Cursor@b
   844  0258  3002               	movlw	2
   845  0259  120A  158A  275A  120A  118A  	fcall	_Lcd_Set_Cursor
   846                           
   847                           ;ADC.c: 27:         Lcd_Write_Char(t/100+48);
   848  025E  3064               	movlw	100
   849  025F  00F6               	movwf	___lwdiv@divisor
   850  0260  3000               	movlw	0
   851  0261  00F7               	movwf	___lwdiv@divisor+1
   852  0262  1283               	bcf	3,5	;RP0=0, select bank0
   853  0263  1303               	bcf	3,6	;RP1=0, select bank0
   854  0264  085B               	movf	main@t+1,w
   855  0265  00F9               	movwf	___lwdiv@dividend+1
   856  0266  085A               	movf	main@t,w
   857  0267  00F8               	movwf	___lwdiv@dividend
   858  0268  120A  118A  2008  120A  118A  	fcall	___lwdiv
   859  026D  0876               	movf	?___lwdiv,w
   860  026E  3E30               	addlw	48
   861  026F  120A  158A  2721  120A  118A  	fcall	_Lcd_Write_Char
   862                           
   863                           ;ADC.c: 28:         Lcd_Write_Char((t%100)/10+48);
   864  0274  300A               	movlw	10
   865  0275  00F6               	movwf	___lwdiv@divisor
   866  0276  3000               	movlw	0
   867  0277  00F7               	movwf	___lwdiv@divisor+1
   868  0278  1283               	bcf	3,5	;RP0=0, select bank0
   869  0279  1303               	bcf	3,6	;RP1=0, select bank0
   870  027A  085B               	movf	main@t+1,w
   871  027B  00F3               	movwf	___lwmod@dividend+1
   872  027C  085A               	movf	main@t,w
   873  027D  00F2               	movwf	___lwmod@dividend
   874  027E  3064               	movlw	100
   875  027F  00F0               	movwf	___lwmod@divisor
   876  0280  3000               	movlw	0
   877  0281  00F1               	movwf	___lwmod@divisor+1
   878  0282  120A  158A  26EF  120A  118A  	fcall	___lwmod
   879  0287  0871               	movf	?___lwmod+1,w
   880  0288  00F9               	movwf	___lwdiv@dividend+1
   881  0289  0870               	movf	?___lwmod,w
   882  028A  00F8               	movwf	___lwdiv@dividend
   883  028B  120A  118A  2008  120A  118A  	fcall	___lwdiv
   884  0290  0876               	movf	?___lwdiv,w
   885  0291  3E30               	addlw	48
   886  0292  120A  158A  2721  120A  118A  	fcall	_Lcd_Write_Char
   887                           
   888                           ;ADC.c: 29:         Lcd_Write_Char(t%10+48);
   889  0297  300A               	movlw	10
   890  0298  00F0               	movwf	___lwmod@divisor
   891  0299  3000               	movlw	0
   892  029A  00F1               	movwf	___lwmod@divisor+1
   893  029B  1283               	bcf	3,5	;RP0=0, select bank0
   894  029C  1303               	bcf	3,6	;RP1=0, select bank0
   895  029D  085B               	movf	main@t+1,w
   896  029E  00F3               	movwf	___lwmod@dividend+1
   897  029F  085A               	movf	main@t,w
   898  02A0  00F2               	movwf	___lwmod@dividend
   899  02A1  120A  158A  26EF  120A  118A  	fcall	___lwmod
   900  02A6  0870               	movf	?___lwmod,w
   901  02A7  3E30               	addlw	48
   902  02A8  120A  158A  2721  120A  118A  	fcall	_Lcd_Write_Char
   903                           
   904                           ;ADC.c: 30:         if(t<=100) RD6 = 1; else RD6 = 0;
   905  02AD  3000               	movlw	0
   906  02AE  1283               	bcf	3,5	;RP0=0, select bank0
   907  02AF  1303               	bcf	3,6	;RP1=0, select bank0
   908  02B0  025B               	subwf	main@t+1,w
   909  02B1  3065               	movlw	101
   910  02B2  1903               	skipnz
   911  02B3  025A               	subwf	main@t,w
   912  02B4  1C03               	btfss	3,0
   913  02B5  297A               	goto	l1920
   914  02B6  1308               	bcf	8,6	;volatile
   915  02B7  297B               	goto	l1896
   916  02B8                     __end_of_main:	
   917                           
   918                           	psect	text1
   919  00B1                     __ptext1:	
   920 ;; *************** function ___xxtofl *****************
   921 ;; Defined at:
   922 ;;		line 10 in file "D:\Mplab X\xc8\pic\sources\c90\common\xxtofl.c"
   923 ;; Parameters:    Size  Location     Type
   924 ;;  sign            1    wreg     unsigned char 
   925 ;;  val             4    0[COMMON] long 
   926 ;; Auto vars:     Size  Location     Type
   927 ;;  sign            1    8[COMMON] unsigned char 
   928 ;;  arg             4   10[COMMON] unsigned long 
   929 ;;  exp             1    9[COMMON] unsigned char 
   930 ;; Return value:  Size  Location     Type
   931 ;;                  4    0[COMMON] unsigned char 
   932 ;; Registers used:
   933 ;;		wreg, status,2, status,0
   934 ;; Tracked objects:
   935 ;;		On entry : 0/0
   936 ;;		On exit  : 0/0
   937 ;;		Unchanged: 0/0
   938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   939 ;;      Params:         4       0       0       0       0
   940 ;;      Locals:         6       0       0       0       0
   941 ;;      Temps:          4       0       0       0       0
   942 ;;      Totals:        14       0       0       0       0
   943 ;;Total ram usage:       14 bytes
   944 ;; Hardware stack levels used:    1
   945 ;; This function calls:
   946 ;;		Nothing
   947 ;; This function is called by:
   948 ;;		_main
   949 ;; This function uses a non-reentrant model
   950 ;;
   951                           
   952                           
   953                           ;psect for function ___xxtofl
   954  00B1                     ___xxtofl:	
   955                           
   956                           ;incstack = 0
   957                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
   958                           ;___xxtofl@sign stored from wreg
   959  00B1  00F8               	movwf	___xxtofl@sign
   960  00B2  0878               	movf	___xxtofl@sign,w
   961  00B3  1D03               	btfss	3,2
   962  00B4  1FF3               	btfss	___xxtofl@val+3,7
   963  00B5  28C6               	goto	l1842
   964  00B6  0970               	comf	___xxtofl@val,w
   965  00B7  00FA               	movwf	___xxtofl@arg
   966  00B8  0971               	comf	___xxtofl@val+1,w
   967  00B9  00FB               	movwf	___xxtofl@arg+1
   968  00BA  0972               	comf	___xxtofl@val+2,w
   969  00BB  00FC               	movwf	___xxtofl@arg+2
   970  00BC  0973               	comf	___xxtofl@val+3,w
   971  00BD  00FD               	movwf	___xxtofl@arg+3
   972  00BE  0AFA               	incf	___xxtofl@arg,f
   973  00BF  1903               	skipnz
   974  00C0  0AFB               	incf	___xxtofl@arg+1,f
   975  00C1  1903               	skipnz
   976  00C2  0AFC               	incf	___xxtofl@arg+2,f
   977  00C3  1903               	skipnz
   978  00C4  0AFD               	incf	___xxtofl@arg+3,f
   979  00C5  28CE               	goto	l613
   980  00C6                     l1842:	
   981  00C6  0873               	movf	___xxtofl@val+3,w
   982  00C7  00FD               	movwf	___xxtofl@arg+3
   983  00C8  0872               	movf	___xxtofl@val+2,w
   984  00C9  00FC               	movwf	___xxtofl@arg+2
   985  00CA  0871               	movf	___xxtofl@val+1,w
   986  00CB  00FB               	movwf	___xxtofl@arg+1
   987  00CC  0870               	movf	___xxtofl@val,w
   988  00CD  00FA               	movwf	___xxtofl@arg
   989  00CE                     l613:	
   990  00CE  0873               	movf	___xxtofl@val+3,w
   991  00CF  0472               	iorwf	___xxtofl@val+2,w
   992  00D0  0471               	iorwf	___xxtofl@val+1,w
   993  00D1  0470               	iorwf	___xxtofl@val,w
   994  00D2  1D03               	skipz
   995  00D3  28DD               	goto	l1848
   996  00D4  3000               	movlw	0
   997  00D5  00F3               	movwf	?___xxtofl+3
   998  00D6  3000               	movlw	0
   999  00D7  00F2               	movwf	?___xxtofl+2
  1000  00D8  3000               	movlw	0
  1001  00D9  00F1               	movwf	?___xxtofl+1
  1002  00DA  3000               	movlw	0
  1003  00DB  00F0               	movwf	?___xxtofl
  1004  00DC  0008               	return
  1005  00DD                     l1848:	
  1006  00DD  3096               	movlw	150
  1007  00DE  00F4               	movwf	??___xxtofl
  1008  00DF  0874               	movf	??___xxtofl,w
  1009  00E0  00F9               	movwf	___xxtofl@exp
  1010  00E1                     l1852:	
  1011  00E1  30FE               	movlw	254
  1012  00E2  057D               	andwf	___xxtofl@arg+3,w
  1013  00E3  1903               	btfsc	3,2
  1014  00E4  290E               	goto	l619
  1015  00E5  3001               	movlw	1
  1016  00E6  00F4               	movwf	??___xxtofl
  1017  00E7  0874               	movf	??___xxtofl,w
  1018  00E8  07F9               	addwf	___xxtofl@exp,f
  1019  00E9  3001               	movlw	1
  1020  00EA                     u2635:	
  1021  00EA  1003               	clrc
  1022  00EB  0CFD               	rrf	___xxtofl@arg+3,f
  1023  00EC  0CFC               	rrf	___xxtofl@arg+2,f
  1024  00ED  0CFB               	rrf	___xxtofl@arg+1,f
  1025  00EE  0CFA               	rrf	___xxtofl@arg,f
  1026  00EF  3EFF               	addlw	-1
  1027  00F0  1D03               	skipz
  1028  00F1  28EA               	goto	u2635
  1029  00F2  28E1               	goto	l1852
  1030  00F3                     l1854:	
  1031  00F3  3001               	movlw	1
  1032  00F4  00F4               	movwf	??___xxtofl
  1033  00F5  0874               	movf	??___xxtofl,w
  1034  00F6  07F9               	addwf	___xxtofl@exp,f
  1035  00F7  3001               	movlw	1
  1036  00F8  07FA               	addwf	___xxtofl@arg,f
  1037  00F9  3000               	movlw	0
  1038  00FA  1803               	skipnc
  1039  00FB  3001               	movlw	1
  1040  00FC  07FB               	addwf	___xxtofl@arg+1,f
  1041  00FD  3000               	movlw	0
  1042  00FE  1803               	skipnc
  1043  00FF  3001               	movlw	1
  1044  0100  07FC               	addwf	___xxtofl@arg+2,f
  1045  0101  3000               	movlw	0
  1046  0102  1803               	skipnc
  1047  0103  3001               	movlw	1
  1048  0104  07FD               	addwf	___xxtofl@arg+3,f
  1049  0105  3001               	movlw	1
  1050  0106                     u2655:	
  1051  0106  1003               	clrc
  1052  0107  0CFD               	rrf	___xxtofl@arg+3,f
  1053  0108  0CFC               	rrf	___xxtofl@arg+2,f
  1054  0109  0CFB               	rrf	___xxtofl@arg+1,f
  1055  010A  0CFA               	rrf	___xxtofl@arg,f
  1056  010B  3EFF               	addlw	-1
  1057  010C  1D03               	skipz
  1058  010D  2906               	goto	u2655
  1059  010E                     l619:	
  1060  010E  30FF               	movlw	255
  1061  010F  057D               	andwf	___xxtofl@arg+3,w
  1062  0110  1903               	btfsc	3,2
  1063  0111  2922               	goto	l1862
  1064  0112  28F3               	goto	l1854
  1065  0113                     l1864:	
  1066  0113  3002               	movlw	2
  1067  0114  0279               	subwf	___xxtofl@exp,w
  1068  0115  1C03               	btfss	3,0
  1069  0116  2924               	goto	l626
  1070  0117  3001               	movlw	1
  1071  0118  02F9               	subwf	___xxtofl@exp,f
  1072  0119  3001               	movlw	1
  1073  011A  00F4               	movwf	??___xxtofl
  1074  011B                     u2675:	
  1075  011B  1003               	clrc
  1076  011C  0DFA               	rlf	___xxtofl@arg,f
  1077  011D  0DFB               	rlf	___xxtofl@arg+1,f
  1078  011E  0DFC               	rlf	___xxtofl@arg+2,f
  1079  011F  0DFD               	rlf	___xxtofl@arg+3,f
  1080  0120  0BF4               	decfsz	??___xxtofl,f
  1081  0121  291B               	goto	u2675
  1082  0122                     l1862:	
  1083  0122  1FFC               	btfss	___xxtofl@arg+2,7
  1084  0123  2913               	goto	l1864
  1085  0124                     l626:	
  1086  0124  1879               	btfsc	___xxtofl@exp,0
  1087  0125  292E               	goto	l627
  1088  0126  30FF               	movlw	255
  1089  0127  05FA               	andwf	___xxtofl@arg,f
  1090  0128  30FF               	movlw	255
  1091  0129  05FB               	andwf	___xxtofl@arg+1,f
  1092  012A  307F               	movlw	127
  1093  012B  05FC               	andwf	___xxtofl@arg+2,f
  1094  012C  30FF               	movlw	255
  1095  012D  05FD               	andwf	___xxtofl@arg+3,f
  1096  012E                     l627:	
  1097  012E  1003               	clrc
  1098  012F  0CF9               	rrf	___xxtofl@exp,f
  1099  0130  0879               	movf	___xxtofl@exp,w
  1100  0131  00F4               	movwf	??___xxtofl
  1101  0132  01F5               	clrf	??___xxtofl+1
  1102  0133  01F6               	clrf	??___xxtofl+2
  1103  0134  01F7               	clrf	??___xxtofl+3
  1104  0135  3018               	movlw	24
  1105  0136                     u2715:	
  1106  0136  1003               	clrc
  1107  0137  0DF4               	rlf	??___xxtofl,f
  1108  0138  0DF5               	rlf	??___xxtofl+1,f
  1109  0139  0DF6               	rlf	??___xxtofl+2,f
  1110  013A  0DF7               	rlf	??___xxtofl+3,f
  1111  013B  3EFF               	addlw	-1
  1112  013C  1D03               	skipz
  1113  013D  2936               	goto	u2715
  1114  013E  0874               	movf	??___xxtofl,w
  1115  013F  04FA               	iorwf	___xxtofl@arg,f
  1116  0140  0875               	movf	??___xxtofl+1,w
  1117  0141  04FB               	iorwf	___xxtofl@arg+1,f
  1118  0142  0876               	movf	??___xxtofl+2,w
  1119  0143  04FC               	iorwf	___xxtofl@arg+2,f
  1120  0144  0877               	movf	??___xxtofl+3,w
  1121  0145  04FD               	iorwf	___xxtofl@arg+3,f
  1122  0146  0878               	movf	___xxtofl@sign,w
  1123  0147  1D03               	btfss	3,2
  1124  0148  1FF3               	btfss	___xxtofl@val+3,7
  1125  0149  294B               	goto	l1876
  1126  014A  17FD               	bsf	___xxtofl@arg+3,7
  1127  014B                     l1876:	
  1128  014B  087D               	movf	___xxtofl@arg+3,w
  1129  014C  00F3               	movwf	?___xxtofl+3
  1130  014D  087C               	movf	___xxtofl@arg+2,w
  1131  014E  00F2               	movwf	?___xxtofl+2
  1132  014F  087B               	movf	___xxtofl@arg+1,w
  1133  0150  00F1               	movwf	?___xxtofl+1
  1134  0151  087A               	movf	___xxtofl@arg,w
  1135  0152  00F0               	movwf	?___xxtofl
  1136  0153  0008               	return
  1137  0154                     __end_of___xxtofl:	
  1138                           
  1139                           	psect	text2
  1140  0EEF                     __ptext2:	
  1141 ;; *************** function ___lwmod *****************
  1142 ;; Defined at:
  1143 ;;		line 5 in file "D:\Mplab X\xc8\pic\sources\c90\common\lwmod.c"
  1144 ;; Parameters:    Size  Location     Type
  1145 ;;  divisor         2    0[COMMON] unsigned int 
  1146 ;;  dividend        2    2[COMMON] unsigned int 
  1147 ;; Auto vars:     Size  Location     Type
  1148 ;;  counter         1    5[COMMON] unsigned char 
  1149 ;; Return value:  Size  Location     Type
  1150 ;;                  2    0[COMMON] unsigned int 
  1151 ;; Registers used:
  1152 ;;		wreg, status,2, status,0
  1153 ;; Tracked objects:
  1154 ;;		On entry : 0/0
  1155 ;;		On exit  : 0/0
  1156 ;;		Unchanged: 0/0
  1157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1158 ;;      Params:         4       0       0       0       0
  1159 ;;      Locals:         1       0       0       0       0
  1160 ;;      Temps:          1       0       0       0       0
  1161 ;;      Totals:         6       0       0       0       0
  1162 ;;Total ram usage:        6 bytes
  1163 ;; Hardware stack levels used:    1
  1164 ;; This function calls:
  1165 ;;		Nothing
  1166 ;; This function is called by:
  1167 ;;		_main
  1168 ;; This function uses a non-reentrant model
  1169 ;;
  1170                           
  1171                           
  1172                           ;psect for function ___lwmod
  1173  0EEF                     ___lwmod:	
  1174                           
  1175                           ;incstack = 0
  1176                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1177  0EEF  0870               	movf	___lwmod@divisor,w
  1178  0EF0  0471               	iorwf	___lwmod@divisor+1,w
  1179  0EF1  1903               	btfsc	3,2
  1180  0EF2  2F1C               	goto	l1498
  1181  0EF3  01F5               	clrf	___lwmod@counter
  1182  0EF4  0AF5               	incf	___lwmod@counter,f
  1183  0EF5                     l1488:	
  1184  0EF5  1BF1               	btfsc	___lwmod@divisor+1,7
  1185  0EF6  2F03               	goto	l1490
  1186  0EF7  3001               	movlw	1
  1187  0EF8                     u1725:	
  1188  0EF8  1003               	clrc
  1189  0EF9  0DF0               	rlf	___lwmod@divisor,f
  1190  0EFA  0DF1               	rlf	___lwmod@divisor+1,f
  1191  0EFB  3EFF               	addlw	-1
  1192  0EFC  1D03               	skipz
  1193  0EFD  2EF8               	goto	u1725
  1194  0EFE  3001               	movlw	1
  1195  0EFF  00F4               	movwf	??___lwmod
  1196  0F00  0874               	movf	??___lwmod,w
  1197  0F01  07F5               	addwf	___lwmod@counter,f
  1198  0F02  2EF5               	goto	l1488
  1199  0F03                     l1490:	
  1200  0F03  0871               	movf	___lwmod@divisor+1,w
  1201  0F04  0273               	subwf	___lwmod@dividend+1,w
  1202  0F05  1D03               	skipz
  1203  0F06  2F09               	goto	u1745
  1204  0F07  0870               	movf	___lwmod@divisor,w
  1205  0F08  0272               	subwf	___lwmod@dividend,w
  1206  0F09                     u1745:	
  1207  0F09  1C03               	skipc
  1208  0F0A  2F11               	goto	l1494
  1209  0F0B  0870               	movf	___lwmod@divisor,w
  1210  0F0C  02F2               	subwf	___lwmod@dividend,f
  1211  0F0D  0871               	movf	___lwmod@divisor+1,w
  1212  0F0E  1C03               	skipc
  1213  0F0F  03F3               	decf	___lwmod@dividend+1,f
  1214  0F10  02F3               	subwf	___lwmod@dividend+1,f
  1215  0F11                     l1494:	
  1216  0F11  3001               	movlw	1
  1217  0F12                     u1755:	
  1218  0F12  1003               	clrc
  1219  0F13  0CF1               	rrf	___lwmod@divisor+1,f
  1220  0F14  0CF0               	rrf	___lwmod@divisor,f
  1221  0F15  3EFF               	addlw	-1
  1222  0F16  1D03               	skipz
  1223  0F17  2F12               	goto	u1755
  1224  0F18  3001               	movlw	1
  1225  0F19  02F5               	subwf	___lwmod@counter,f
  1226  0F1A  1D03               	btfss	3,2
  1227  0F1B  2F03               	goto	l1490
  1228  0F1C                     l1498:	
  1229  0F1C  0873               	movf	___lwmod@dividend+1,w
  1230  0F1D  00F1               	movwf	?___lwmod+1
  1231  0F1E  0872               	movf	___lwmod@dividend,w
  1232  0F1F  00F0               	movwf	?___lwmod
  1233  0F20  0008               	return
  1234  0F21                     __end_of___lwmod:	
  1235                           
  1236                           	psect	text3
  1237  0008                     __ptext3:	
  1238 ;; *************** function ___lwdiv *****************
  1239 ;; Defined at:
  1240 ;;		line 5 in file "D:\Mplab X\xc8\pic\sources\c90\common\lwdiv.c"
  1241 ;; Parameters:    Size  Location     Type
  1242 ;;  divisor         2    6[COMMON] unsigned int 
  1243 ;;  dividend        2    8[COMMON] unsigned int 
  1244 ;; Auto vars:     Size  Location     Type
  1245 ;;  quotient        2   11[COMMON] unsigned int 
  1246 ;;  counter         1   13[COMMON] unsigned char 
  1247 ;; Return value:  Size  Location     Type
  1248 ;;                  2    6[COMMON] unsigned int 
  1249 ;; Registers used:
  1250 ;;		wreg, status,2, status,0
  1251 ;; Tracked objects:
  1252 ;;		On entry : 0/0
  1253 ;;		On exit  : 0/0
  1254 ;;		Unchanged: 0/0
  1255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1256 ;;      Params:         4       0       0       0       0
  1257 ;;      Locals:         3       0       0       0       0
  1258 ;;      Temps:          1       0       0       0       0
  1259 ;;      Totals:         8       0       0       0       0
  1260 ;;Total ram usage:        8 bytes
  1261 ;; Hardware stack levels used:    1
  1262 ;; This function calls:
  1263 ;;		Nothing
  1264 ;; This function is called by:
  1265 ;;		_main
  1266 ;; This function uses a non-reentrant model
  1267 ;;
  1268                           
  1269                           
  1270                           ;psect for function ___lwdiv
  1271  0008                     ___lwdiv:	
  1272                           
  1273                           ;incstack = 0
  1274                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1275  0008  01FB               	clrf	___lwdiv@quotient
  1276  0009  01FC               	clrf	___lwdiv@quotient+1
  1277  000A  0876               	movf	___lwdiv@divisor,w
  1278  000B  0477               	iorwf	___lwdiv@divisor+1,w
  1279  000C  1903               	btfsc	3,2
  1280  000D  283F               	goto	l1476
  1281  000E  01FD               	clrf	___lwdiv@counter
  1282  000F  0AFD               	incf	___lwdiv@counter,f
  1283  0010                     l1464:	
  1284  0010  1BF7               	btfsc	___lwdiv@divisor+1,7
  1285  0011  281E               	goto	l1466
  1286  0012  3001               	movlw	1
  1287  0013                     u1655:	
  1288  0013  1003               	clrc
  1289  0014  0DF6               	rlf	___lwdiv@divisor,f
  1290  0015  0DF7               	rlf	___lwdiv@divisor+1,f
  1291  0016  3EFF               	addlw	-1
  1292  0017  1D03               	skipz
  1293  0018  2813               	goto	u1655
  1294  0019  3001               	movlw	1
  1295  001A  00FA               	movwf	??___lwdiv
  1296  001B  087A               	movf	??___lwdiv,w
  1297  001C  07FD               	addwf	___lwdiv@counter,f
  1298  001D  2810               	goto	l1464
  1299  001E                     l1466:	
  1300  001E  3001               	movlw	1
  1301  001F                     u1675:	
  1302  001F  1003               	clrc
  1303  0020  0DFB               	rlf	___lwdiv@quotient,f
  1304  0021  0DFC               	rlf	___lwdiv@quotient+1,f
  1305  0022  3EFF               	addlw	-1
  1306  0023  1D03               	skipz
  1307  0024  281F               	goto	u1675
  1308  0025  0877               	movf	___lwdiv@divisor+1,w
  1309  0026  0279               	subwf	___lwdiv@dividend+1,w
  1310  0027  1D03               	skipz
  1311  0028  282B               	goto	u1685
  1312  0029  0876               	movf	___lwdiv@divisor,w
  1313  002A  0278               	subwf	___lwdiv@dividend,w
  1314  002B                     u1685:	
  1315  002B  1C03               	skipc
  1316  002C  2834               	goto	l1472
  1317  002D  0876               	movf	___lwdiv@divisor,w
  1318  002E  02F8               	subwf	___lwdiv@dividend,f
  1319  002F  0877               	movf	___lwdiv@divisor+1,w
  1320  0030  1C03               	skipc
  1321  0031  03F9               	decf	___lwdiv@dividend+1,f
  1322  0032  02F9               	subwf	___lwdiv@dividend+1,f
  1323  0033  147B               	bsf	___lwdiv@quotient,0
  1324  0034                     l1472:	
  1325  0034  3001               	movlw	1
  1326  0035                     u1695:	
  1327  0035  1003               	clrc
  1328  0036  0CF7               	rrf	___lwdiv@divisor+1,f
  1329  0037  0CF6               	rrf	___lwdiv@divisor,f
  1330  0038  3EFF               	addlw	-1
  1331  0039  1D03               	skipz
  1332  003A  2835               	goto	u1695
  1333  003B  3001               	movlw	1
  1334  003C  02FD               	subwf	___lwdiv@counter,f
  1335  003D  1D03               	btfss	3,2
  1336  003E  281E               	goto	l1466
  1337  003F                     l1476:	
  1338  003F  087C               	movf	___lwdiv@quotient+1,w
  1339  0040  00F7               	movwf	?___lwdiv+1
  1340  0041  087B               	movf	___lwdiv@quotient,w
  1341  0042  00F6               	movwf	?___lwdiv
  1342  0043  0008               	return
  1343  0044                     __end_of___lwdiv:	
  1344                           
  1345                           	psect	text4
  1346  0044                     __ptext4:	
  1347 ;; *************** function ___fltol *****************
  1348 ;; Defined at:
  1349 ;;		line 43 in file "D:\Mplab X\xc8\pic\sources\c90\common\fltol.c"
  1350 ;; Parameters:    Size  Location     Type
  1351 ;;  f1              4   46[BANK0 ] unsigned int 
  1352 ;; Auto vars:     Size  Location     Type
  1353 ;;  exp1            1   56[BANK0 ] unsigned char 
  1354 ;;  sign1           1   55[BANK0 ] unsigned char 
  1355 ;; Return value:  Size  Location     Type
  1356 ;;                  4   46[BANK0 ] long 
  1357 ;; Registers used:
  1358 ;;		wreg, status,2, status,0
  1359 ;; Tracked objects:
  1360 ;;		On entry : 0/0
  1361 ;;		On exit  : 0/0
  1362 ;;		Unchanged: 0/0
  1363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1364 ;;      Params:         0       4       0       0       0
  1365 ;;      Locals:         0       2       0       0       0
  1366 ;;      Temps:          0       5       0       0       0
  1367 ;;      Totals:         0      11       0       0       0
  1368 ;;Total ram usage:       11 bytes
  1369 ;; Hardware stack levels used:    1
  1370 ;; This function calls:
  1371 ;;		Nothing
  1372 ;; This function is called by:
  1373 ;;		_main
  1374 ;; This function uses a non-reentrant model
  1375 ;;
  1376                           
  1377                           
  1378                           ;psect for function ___fltol
  1379  0044                     ___fltol:	
  1380                           
  1381                           ;incstack = 0
  1382                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  1383  0044  1003               	clrc
  1384  0045  1283               	bcf	3,5	;RP0=0, select bank0
  1385  0046  1303               	bcf	3,6	;RP1=0, select bank0
  1386  0047  0D50               	rlf	___fltol@f1+2,w
  1387  0048  0D51               	rlf	___fltol@f1+3,w
  1388  0049  00D2               	movwf	??___fltol
  1389  004A  0852               	movf	??___fltol,w
  1390  004B  00D8               	movwf	___fltol@exp1
  1391  004C  0858               	movf	___fltol@exp1,w
  1392  004D  1D03               	btfss	3,2
  1393  004E  2858               	goto	l1424
  1394  004F                     l1420:	
  1395  004F  3000               	movlw	0
  1396  0050  00D1               	movwf	?___fltol+3
  1397  0051  3000               	movlw	0
  1398  0052  00D0               	movwf	?___fltol+2
  1399  0053  3000               	movlw	0
  1400  0054  00CF               	movwf	?___fltol+1
  1401  0055  3000               	movlw	0
  1402  0056  00CE               	movwf	?___fltol
  1403  0057  0008               	return
  1404  0058                     l1424:	
  1405  0058  084E               	movf	___fltol@f1,w
  1406  0059  00D2               	movwf	??___fltol
  1407  005A  084F               	movf	___fltol@f1+1,w
  1408  005B  00D3               	movwf	??___fltol+1
  1409  005C  0850               	movf	___fltol@f1+2,w
  1410  005D  00D4               	movwf	??___fltol+2
  1411  005E  0851               	movf	___fltol@f1+3,w
  1412  005F  00D5               	movwf	??___fltol+3
  1413  0060  301F               	movlw	31
  1414  0061                     u1555:	
  1415  0061  1003               	clrc
  1416  0062  0CD5               	rrf	??___fltol+3,f
  1417  0063  0CD4               	rrf	??___fltol+2,f
  1418  0064  0CD3               	rrf	??___fltol+1,f
  1419  0065  0CD2               	rrf	??___fltol,f
  1420  0066  3EFF               	addlw	-1
  1421  0067  1D03               	skipz
  1422  0068  2861               	goto	u1555
  1423  0069  0852               	movf	??___fltol,w
  1424  006A  00D6               	movwf	??___fltol+4
  1425  006B  0856               	movf	??___fltol+4,w
  1426  006C  00D7               	movwf	___fltol@sign1
  1427  006D  17D0               	bsf	___fltol@f1+2,7
  1428  006E  30FF               	movlw	255
  1429  006F  05CE               	andwf	___fltol@f1,f
  1430  0070  30FF               	movlw	255
  1431  0071  05CF               	andwf	___fltol@f1+1,f
  1432  0072  30FF               	movlw	255
  1433  0073  05D0               	andwf	___fltol@f1+2,f
  1434  0074  3000               	movlw	0
  1435  0075  05D1               	andwf	___fltol@f1+3,f
  1436  0076  3096               	movlw	150
  1437  0077  02D8               	subwf	___fltol@exp1,f
  1438  0078  1FD8               	btfss	___fltol@exp1,7
  1439  0079  288F               	goto	l1442
  1440  007A  0858               	movf	___fltol@exp1,w
  1441  007B  3A80               	xorlw	128
  1442  007C  3E97               	addlw	151
  1443  007D  1C03               	btfss	3,0
  1444  007E  284F               	goto	l1420
  1445  007F                     l1440:	
  1446  007F  3001               	movlw	1
  1447  0080                     u1585:	
  1448  0080  1003               	clrc
  1449  0081  0CD1               	rrf	___fltol@f1+3,f
  1450  0082  0CD0               	rrf	___fltol@f1+2,f
  1451  0083  0CCF               	rrf	___fltol@f1+1,f
  1452  0084  0CCE               	rrf	___fltol@f1,f
  1453  0085  3EFF               	addlw	-1
  1454  0086  1D03               	skipz
  1455  0087  2880               	goto	u1585
  1456  0088  3001               	movlw	1
  1457  0089  00D2               	movwf	??___fltol
  1458  008A  0852               	movf	??___fltol,w
  1459  008B  07D8               	addwf	___fltol@exp1,f
  1460  008C  1903               	btfsc	3,2
  1461  008D  28A2               	goto	l1450
  1462  008E  287F               	goto	l1440
  1463  008F                     l1442:	
  1464  008F  3020               	movlw	32
  1465  0090  0258               	subwf	___fltol@exp1,w
  1466  0091  1803               	btfsc	3,0
  1467  0092  284F               	goto	l1420
  1468  0093                     l379:	
  1469  0093  0858               	movf	___fltol@exp1,w
  1470  0094  1903               	btfsc	3,2
  1471  0095  28A2               	goto	l1450
  1472  0096  3001               	movlw	1
  1473  0097  00D2               	movwf	??___fltol
  1474  0098                     u1615:	
  1475  0098  1003               	clrc
  1476  0099  0DCE               	rlf	___fltol@f1,f
  1477  009A  0DCF               	rlf	___fltol@f1+1,f
  1478  009B  0DD0               	rlf	___fltol@f1+2,f
  1479  009C  0DD1               	rlf	___fltol@f1+3,f
  1480  009D  0BD2               	decfsz	??___fltol,f
  1481  009E  2898               	goto	u1615
  1482  009F  3001               	movlw	1
  1483  00A0  02D8               	subwf	___fltol@exp1,f
  1484  00A1  2893               	goto	l379
  1485  00A2                     l1450:	
  1486  00A2  0857               	movf	___fltol@sign1,w
  1487  00A3  1903               	btfsc	3,2
  1488  00A4  0008               	return
  1489  00A5  09CE               	comf	___fltol@f1,f
  1490  00A6  09CF               	comf	___fltol@f1+1,f
  1491  00A7  09D0               	comf	___fltol@f1+2,f
  1492  00A8  09D1               	comf	___fltol@f1+3,f
  1493  00A9  0ACE               	incf	___fltol@f1,f
  1494  00AA  1903               	skipnz
  1495  00AB  0ACF               	incf	___fltol@f1+1,f
  1496  00AC  1903               	skipnz
  1497  00AD  0AD0               	incf	___fltol@f1+2,f
  1498  00AE  1903               	skipnz
  1499  00AF  0AD1               	incf	___fltol@f1+3,f
  1500  00B0  0008               	return
  1501  00B1                     __end_of___fltol:	
  1502                           
  1503                           	psect	text5
  1504  04E7                     __ptext5:	
  1505 ;; *************** function ___flmul *****************
  1506 ;; Defined at:
  1507 ;;		line 8 in file "D:\Mplab X\xc8\pic\sources\c90\common\sprcmul.c"
  1508 ;; Parameters:    Size  Location     Type
  1509 ;;  b               4    0[BANK0 ] long 
  1510 ;;  a               4    4[BANK0 ] long 
  1511 ;; Auto vars:     Size  Location     Type
  1512 ;;  prod            4   20[BANK0 ] struct .
  1513 ;;  grs             4   14[BANK0 ] unsigned long 
  1514 ;;  temp            2   24[BANK0 ] struct .
  1515 ;;  bexp            1   19[BANK0 ] unsigned char 
  1516 ;;  aexp            1   18[BANK0 ] unsigned char 
  1517 ;;  sign            1   13[BANK0 ] unsigned char 
  1518 ;; Return value:  Size  Location     Type
  1519 ;;                  4    0[BANK0 ] unsigned char 
  1520 ;; Registers used:
  1521 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1522 ;; Tracked objects:
  1523 ;;		On entry : 0/0
  1524 ;;		On exit  : 0/0
  1525 ;;		Unchanged: 0/0
  1526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1527 ;;      Params:         0       8       0       0       0
  1528 ;;      Locals:         0      13       0       0       0
  1529 ;;      Temps:          0       5       0       0       0
  1530 ;;      Totals:         0      26       0       0       0
  1531 ;;Total ram usage:       26 bytes
  1532 ;; Hardware stack levels used:    1
  1533 ;; Hardware stack levels required when called:    1
  1534 ;; This function calls:
  1535 ;;		__Umul8_16
  1536 ;; This function is called by:
  1537 ;;		_main
  1538 ;; This function uses a non-reentrant model
  1539 ;;
  1540                           
  1541                           
  1542                           ;psect for function ___flmul
  1543  04E7                     ___flmul:	
  1544                           
  1545                           ;incstack = 0
  1546                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1547  04E7  1283               	bcf	3,5	;RP0=0, select bank0
  1548  04E8  1303               	bcf	3,6	;RP1=0, select bank0
  1549  04E9  0823               	movf	___flmul@b+3,w
  1550  04EA  3980               	andlw	128
  1551  04EB  00A8               	movwf	??___flmul
  1552  04EC  0828               	movf	??___flmul,w
  1553  04ED  00AD               	movwf	___flmul@sign
  1554  04EE  0823               	movf	___flmul@b+3,w
  1555  04EF  00A8               	movwf	??___flmul
  1556  04F0  0728               	addwf	??___flmul,w
  1557  04F1  00A9               	movwf	??___flmul+1
  1558  04F2  0829               	movf	??___flmul+1,w
  1559  04F3  00B3               	movwf	___flmul@bexp
  1560  04F4  1BA2               	btfsc	___flmul@b+2,7
  1561  04F5  1433               	bsf	___flmul@bexp,0
  1562  04F6  0833               	movf	___flmul@bexp,w
  1563  04F7  1903               	btfsc	3,2
  1564  04F8  2D06               	goto	l1712
  1565  04F9  0A33               	incf	___flmul@bexp,w
  1566  04FA  1D03               	btfss	3,2
  1567  04FB  2D04               	goto	l1710
  1568  04FC  3000               	movlw	0
  1569  04FD  00A3               	movwf	___flmul@b+3
  1570  04FE  3000               	movlw	0
  1571  04FF  00A2               	movwf	___flmul@b+2
  1572  0500  3000               	movlw	0
  1573  0501  00A1               	movwf	___flmul@b+1
  1574  0502  3000               	movlw	0
  1575  0503  00A0               	movwf	___flmul@b
  1576  0504                     l1710:	
  1577  0504  17A2               	bsf	___flmul@b+2,7
  1578  0505  2D0E               	goto	l1714
  1579  0506                     l1712:	
  1580  0506  3000               	movlw	0
  1581  0507  00A3               	movwf	___flmul@b+3
  1582  0508  3000               	movlw	0
  1583  0509  00A2               	movwf	___flmul@b+2
  1584  050A  3000               	movlw	0
  1585  050B  00A1               	movwf	___flmul@b+1
  1586  050C  3000               	movlw	0
  1587  050D  00A0               	movwf	___flmul@b
  1588  050E                     l1714:	
  1589  050E  0827               	movf	___flmul@a+3,w
  1590  050F  3980               	andlw	128
  1591  0510  00A8               	movwf	??___flmul
  1592  0511  0828               	movf	??___flmul,w
  1593  0512  06AD               	xorwf	___flmul@sign,f
  1594  0513  0827               	movf	___flmul@a+3,w
  1595  0514  00A8               	movwf	??___flmul
  1596  0515  0728               	addwf	??___flmul,w
  1597  0516  00A9               	movwf	??___flmul+1
  1598  0517  0829               	movf	??___flmul+1,w
  1599  0518  00B2               	movwf	___flmul@aexp
  1600  0519  1BA6               	btfsc	___flmul@a+2,7
  1601  051A  1432               	bsf	___flmul@aexp,0
  1602  051B  0832               	movf	___flmul@aexp,w
  1603  051C  1903               	btfsc	3,2
  1604  051D  2D2B               	goto	l1730
  1605  051E  0A32               	incf	___flmul@aexp,w
  1606  051F  1D03               	btfss	3,2
  1607  0520  2D29               	goto	l1728
  1608  0521  3000               	movlw	0
  1609  0522  00A7               	movwf	___flmul@a+3
  1610  0523  3000               	movlw	0
  1611  0524  00A6               	movwf	___flmul@a+2
  1612  0525  3000               	movlw	0
  1613  0526  00A5               	movwf	___flmul@a+1
  1614  0527  3000               	movlw	0
  1615  0528  00A4               	movwf	___flmul@a
  1616  0529                     l1728:	
  1617  0529  17A6               	bsf	___flmul@a+2,7
  1618  052A  2D33               	goto	l1732
  1619  052B                     l1730:	
  1620  052B  3000               	movlw	0
  1621  052C  00A7               	movwf	___flmul@a+3
  1622  052D  3000               	movlw	0
  1623  052E  00A6               	movwf	___flmul@a+2
  1624  052F  3000               	movlw	0
  1625  0530  00A5               	movwf	___flmul@a+1
  1626  0531  3000               	movlw	0
  1627  0532  00A4               	movwf	___flmul@a
  1628  0533                     l1732:	
  1629  0533  0832               	movf	___flmul@aexp,w
  1630  0534  1D03               	btfss	3,2
  1631  0535  0833               	movf	___flmul@bexp,w
  1632  0536  1D03               	btfss	3,2
  1633  0537  2D41               	goto	l1740
  1634  0538  3000               	movlw	0
  1635  0539  00A3               	movwf	?___flmul+3
  1636  053A  3000               	movlw	0
  1637  053B  00A2               	movwf	?___flmul+2
  1638  053C  3000               	movlw	0
  1639  053D  00A1               	movwf	?___flmul+1
  1640  053E  3000               	movlw	0
  1641  053F  00A0               	movwf	?___flmul
  1642  0540  0008               	return
  1643  0541                     l1740:	
  1644  0541  0820               	movf	___flmul@b,w
  1645  0542  00A8               	movwf	??___flmul
  1646  0543  0828               	movf	??___flmul,w
  1647  0544  00F0               	movwf	__Umul8_16@multiplicand
  1648  0545  0826               	movf	___flmul@a+2,w
  1649  0546  120A  158A  26A4  120A  118A  	fcall	__Umul8_16
  1650  054B  0871               	movf	?__Umul8_16+1,w
  1651  054C  1283               	bcf	3,5	;RP0=0, select bank0
  1652  054D  1303               	bcf	3,6	;RP1=0, select bank0
  1653  054E  00B9               	movwf	___flmul@temp+1
  1654  054F  0870               	movf	?__Umul8_16,w
  1655  0550  00B8               	movwf	___flmul@temp
  1656  0551  0838               	movf	___flmul@temp,w
  1657  0552  00A8               	movwf	??___flmul
  1658  0553  01A9               	clrf	??___flmul+1
  1659  0554  01AA               	clrf	??___flmul+2
  1660  0555  01AB               	clrf	??___flmul+3
  1661  0556  082B               	movf	??___flmul+3,w
  1662  0557  00B1               	movwf	___flmul@grs+3
  1663  0558  082A               	movf	??___flmul+2,w
  1664  0559  00B0               	movwf	___flmul@grs+2
  1665  055A  0829               	movf	??___flmul+1,w
  1666  055B  00AF               	movwf	___flmul@grs+1
  1667  055C  0828               	movf	??___flmul,w
  1668  055D  00AE               	movwf	___flmul@grs
  1669  055E  0839               	movf	___flmul@temp+1,w
  1670  055F  00A8               	movwf	??___flmul
  1671  0560  01A9               	clrf	??___flmul+1
  1672  0561  01AA               	clrf	??___flmul+2
  1673  0562  01AB               	clrf	??___flmul+3
  1674  0563  082B               	movf	??___flmul+3,w
  1675  0564  00B7               	movwf	___flmul@prod+3
  1676  0565  082A               	movf	??___flmul+2,w
  1677  0566  00B6               	movwf	___flmul@prod+2
  1678  0567  0829               	movf	??___flmul+1,w
  1679  0568  00B5               	movwf	___flmul@prod+1
  1680  0569  0828               	movf	??___flmul,w
  1681  056A  00B4               	movwf	___flmul@prod
  1682  056B  0821               	movf	___flmul@b+1,w
  1683  056C  00A8               	movwf	??___flmul
  1684  056D  0828               	movf	??___flmul,w
  1685  056E  00F0               	movwf	__Umul8_16@multiplicand
  1686  056F  0825               	movf	___flmul@a+1,w
  1687  0570  120A  158A  26A4  120A  118A  	fcall	__Umul8_16
  1688  0575  0871               	movf	?__Umul8_16+1,w
  1689  0576  1283               	bcf	3,5	;RP0=0, select bank0
  1690  0577  1303               	bcf	3,6	;RP1=0, select bank0
  1691  0578  00B9               	movwf	___flmul@temp+1
  1692  0579  0870               	movf	?__Umul8_16,w
  1693  057A  00B8               	movwf	___flmul@temp
  1694  057B  0838               	movf	___flmul@temp,w
  1695  057C  00A8               	movwf	??___flmul
  1696  057D  01A9               	clrf	??___flmul+1
  1697  057E  01AA               	clrf	??___flmul+2
  1698  057F  01AB               	clrf	??___flmul+3
  1699  0580  0828               	movf	??___flmul,w
  1700  0581  07AE               	addwf	___flmul@grs,f
  1701  0582  0829               	movf	??___flmul+1,w
  1702  0583  1103               	clrz
  1703  0584  1803               	skipnc
  1704  0585  3E01               	addlw	1
  1705  0586  1D03               	btfss	3,2
  1706  0587  07AF               	addwf	___flmul@grs+1,f
  1707  0588  082A               	movf	??___flmul+2,w
  1708  0589  1103               	clrz
  1709  058A  1803               	skipnc
  1710  058B  3E01               	addlw	1
  1711  058C  1D03               	btfss	3,2
  1712  058D  07B0               	addwf	___flmul@grs+2,f
  1713  058E  082B               	movf	??___flmul+3,w
  1714  058F  1103               	clrz
  1715  0590  1803               	skipnc
  1716  0591  3E01               	addlw	1
  1717  0592  1D03               	btfss	3,2
  1718  0593  07B1               	addwf	___flmul@grs+3,f
  1719  0594  0839               	movf	___flmul@temp+1,w
  1720  0595  00A8               	movwf	??___flmul
  1721  0596  01A9               	clrf	??___flmul+1
  1722  0597  01AA               	clrf	??___flmul+2
  1723  0598  01AB               	clrf	??___flmul+3
  1724  0599  0828               	movf	??___flmul,w
  1725  059A  07B4               	addwf	___flmul@prod,f
  1726  059B  0829               	movf	??___flmul+1,w
  1727  059C  1103               	clrz
  1728  059D  1803               	skipnc
  1729  059E  3E01               	addlw	1
  1730  059F  1D03               	btfss	3,2
  1731  05A0  07B5               	addwf	___flmul@prod+1,f
  1732  05A1  082A               	movf	??___flmul+2,w
  1733  05A2  1103               	clrz
  1734  05A3  1803               	skipnc
  1735  05A4  3E01               	addlw	1
  1736  05A5  1D03               	btfss	3,2
  1737  05A6  07B6               	addwf	___flmul@prod+2,f
  1738  05A7  082B               	movf	??___flmul+3,w
  1739  05A8  1103               	clrz
  1740  05A9  1803               	skipnc
  1741  05AA  3E01               	addlw	1
  1742  05AB  1D03               	btfss	3,2
  1743  05AC  07B7               	addwf	___flmul@prod+3,f
  1744  05AD  0822               	movf	___flmul@b+2,w
  1745  05AE  00A8               	movwf	??___flmul
  1746  05AF  0828               	movf	??___flmul,w
  1747  05B0  00F0               	movwf	__Umul8_16@multiplicand
  1748  05B1  0824               	movf	___flmul@a,w
  1749  05B2  120A  158A  26A4  120A  118A  	fcall	__Umul8_16
  1750  05B7  0871               	movf	?__Umul8_16+1,w
  1751  05B8  1283               	bcf	3,5	;RP0=0, select bank0
  1752  05B9  1303               	bcf	3,6	;RP1=0, select bank0
  1753  05BA  00B9               	movwf	___flmul@temp+1
  1754  05BB  0870               	movf	?__Umul8_16,w
  1755  05BC  00B8               	movwf	___flmul@temp
  1756  05BD  0838               	movf	___flmul@temp,w
  1757  05BE  00A8               	movwf	??___flmul
  1758  05BF  01A9               	clrf	??___flmul+1
  1759  05C0  01AA               	clrf	??___flmul+2
  1760  05C1  01AB               	clrf	??___flmul+3
  1761  05C2  0828               	movf	??___flmul,w
  1762  05C3  07AE               	addwf	___flmul@grs,f
  1763  05C4  0829               	movf	??___flmul+1,w
  1764  05C5  1103               	clrz
  1765  05C6  1803               	skipnc
  1766  05C7  3E01               	addlw	1
  1767  05C8  1D03               	btfss	3,2
  1768  05C9  07AF               	addwf	___flmul@grs+1,f
  1769  05CA  082A               	movf	??___flmul+2,w
  1770  05CB  1103               	clrz
  1771  05CC  1803               	skipnc
  1772  05CD  3E01               	addlw	1
  1773  05CE  1D03               	btfss	3,2
  1774  05CF  07B0               	addwf	___flmul@grs+2,f
  1775  05D0  082B               	movf	??___flmul+3,w
  1776  05D1  1103               	clrz
  1777  05D2  1803               	skipnc
  1778  05D3  3E01               	addlw	1
  1779  05D4  1D03               	btfss	3,2
  1780  05D5  07B1               	addwf	___flmul@grs+3,f
  1781  05D6  0839               	movf	___flmul@temp+1,w
  1782  05D7  00A8               	movwf	??___flmul
  1783  05D8  01A9               	clrf	??___flmul+1
  1784  05D9  01AA               	clrf	??___flmul+2
  1785  05DA  01AB               	clrf	??___flmul+3
  1786  05DB  0828               	movf	??___flmul,w
  1787  05DC  07B4               	addwf	___flmul@prod,f
  1788  05DD  0829               	movf	??___flmul+1,w
  1789  05DE  1103               	clrz
  1790  05DF  1803               	skipnc
  1791  05E0  3E01               	addlw	1
  1792  05E1  1D03               	btfss	3,2
  1793  05E2  07B5               	addwf	___flmul@prod+1,f
  1794  05E3  082A               	movf	??___flmul+2,w
  1795  05E4  1103               	clrz
  1796  05E5  1803               	skipnc
  1797  05E6  3E01               	addlw	1
  1798  05E7  1D03               	btfss	3,2
  1799  05E8  07B6               	addwf	___flmul@prod+2,f
  1800  05E9  082B               	movf	??___flmul+3,w
  1801  05EA  1103               	clrz
  1802  05EB  1803               	skipnc
  1803  05EC  3E01               	addlw	1
  1804  05ED  1D03               	btfss	3,2
  1805  05EE  07B7               	addwf	___flmul@prod+3,f
  1806  05EF  3008               	movlw	8
  1807  05F0  00A8               	movwf	??___flmul
  1808  05F1                     u2355:	
  1809  05F1  1003               	clrc
  1810  05F2  0DAE               	rlf	___flmul@grs,f
  1811  05F3  0DAF               	rlf	___flmul@grs+1,f
  1812  05F4  0DB0               	rlf	___flmul@grs+2,f
  1813  05F5  0DB1               	rlf	___flmul@grs+3,f
  1814  05F6  0BA8               	decfsz	??___flmul,f
  1815  05F7  2DF1               	goto	u2355
  1816  05F8  0821               	movf	___flmul@b+1,w
  1817  05F9  00A8               	movwf	??___flmul
  1818  05FA  0828               	movf	??___flmul,w
  1819  05FB  00F0               	movwf	__Umul8_16@multiplicand
  1820  05FC  0824               	movf	___flmul@a,w
  1821  05FD  120A  158A  26A4  120A  118A  	fcall	__Umul8_16
  1822  0602  0871               	movf	?__Umul8_16+1,w
  1823  0603  1283               	bcf	3,5	;RP0=0, select bank0
  1824  0604  1303               	bcf	3,6	;RP1=0, select bank0
  1825  0605  00B9               	movwf	___flmul@temp+1
  1826  0606  0870               	movf	?__Umul8_16,w
  1827  0607  00B8               	movwf	___flmul@temp
  1828  0608  0838               	movf	___flmul@temp,w
  1829  0609  00A8               	movwf	??___flmul
  1830  060A  0839               	movf	___flmul@temp+1,w
  1831  060B  00A9               	movwf	??___flmul+1
  1832  060C  01AA               	clrf	??___flmul+2
  1833  060D  01AB               	clrf	??___flmul+3
  1834  060E  0828               	movf	??___flmul,w
  1835  060F  07AE               	addwf	___flmul@grs,f
  1836  0610  0829               	movf	??___flmul+1,w
  1837  0611  1103               	clrz
  1838  0612  1803               	skipnc
  1839  0613  3E01               	addlw	1
  1840  0614  1D03               	btfss	3,2
  1841  0615  07AF               	addwf	___flmul@grs+1,f
  1842  0616  082A               	movf	??___flmul+2,w
  1843  0617  1103               	clrz
  1844  0618  1803               	skipnc
  1845  0619  3E01               	addlw	1
  1846  061A  1D03               	btfss	3,2
  1847  061B  07B0               	addwf	___flmul@grs+2,f
  1848  061C  082B               	movf	??___flmul+3,w
  1849  061D  1103               	clrz
  1850  061E  1803               	skipnc
  1851  061F  3E01               	addlw	1
  1852  0620  1D03               	btfss	3,2
  1853  0621  07B1               	addwf	___flmul@grs+3,f
  1854  0622  0820               	movf	___flmul@b,w
  1855  0623  00A8               	movwf	??___flmul
  1856  0624  0828               	movf	??___flmul,w
  1857  0625  00F0               	movwf	__Umul8_16@multiplicand
  1858  0626  0825               	movf	___flmul@a+1,w
  1859  0627  120A  158A  26A4  120A  118A  	fcall	__Umul8_16
  1860  062C  0871               	movf	?__Umul8_16+1,w
  1861  062D  1283               	bcf	3,5	;RP0=0, select bank0
  1862  062E  1303               	bcf	3,6	;RP1=0, select bank0
  1863  062F  00B9               	movwf	___flmul@temp+1
  1864  0630  0870               	movf	?__Umul8_16,w
  1865  0631  00B8               	movwf	___flmul@temp
  1866  0632  0838               	movf	___flmul@temp,w
  1867  0633  00A8               	movwf	??___flmul
  1868  0634  0839               	movf	___flmul@temp+1,w
  1869  0635  00A9               	movwf	??___flmul+1
  1870  0636  01AA               	clrf	??___flmul+2
  1871  0637  01AB               	clrf	??___flmul+3
  1872  0638  0828               	movf	??___flmul,w
  1873  0639  07AE               	addwf	___flmul@grs,f
  1874  063A  0829               	movf	??___flmul+1,w
  1875  063B  1103               	clrz
  1876  063C  1803               	skipnc
  1877  063D  3E01               	addlw	1
  1878  063E  1D03               	btfss	3,2
  1879  063F  07AF               	addwf	___flmul@grs+1,f
  1880  0640  082A               	movf	??___flmul+2,w
  1881  0641  1103               	clrz
  1882  0642  1803               	skipnc
  1883  0643  3E01               	addlw	1
  1884  0644  1D03               	btfss	3,2
  1885  0645  07B0               	addwf	___flmul@grs+2,f
  1886  0646  082B               	movf	??___flmul+3,w
  1887  0647  1103               	clrz
  1888  0648  1803               	skipnc
  1889  0649  3E01               	addlw	1
  1890  064A  1D03               	btfss	3,2
  1891  064B  07B1               	addwf	___flmul@grs+3,f
  1892  064C  3008               	movlw	8
  1893  064D  00A8               	movwf	??___flmul
  1894  064E                     u2385:	
  1895  064E  1003               	clrc
  1896  064F  0DAE               	rlf	___flmul@grs,f
  1897  0650  0DAF               	rlf	___flmul@grs+1,f
  1898  0651  0DB0               	rlf	___flmul@grs+2,f
  1899  0652  0DB1               	rlf	___flmul@grs+3,f
  1900  0653  0BA8               	decfsz	??___flmul,f
  1901  0654  2E4E               	goto	u2385
  1902  0655  0820               	movf	___flmul@b,w
  1903  0656  00A8               	movwf	??___flmul
  1904  0657  0828               	movf	??___flmul,w
  1905  0658  00F0               	movwf	__Umul8_16@multiplicand
  1906  0659  0824               	movf	___flmul@a,w
  1907  065A  120A  158A  26A4  120A  118A  	fcall	__Umul8_16
  1908  065F  0871               	movf	?__Umul8_16+1,w
  1909  0660  1283               	bcf	3,5	;RP0=0, select bank0
  1910  0661  1303               	bcf	3,6	;RP1=0, select bank0
  1911  0662  00B9               	movwf	___flmul@temp+1
  1912  0663  0870               	movf	?__Umul8_16,w
  1913  0664  00B8               	movwf	___flmul@temp
  1914  0665  0838               	movf	___flmul@temp,w
  1915  0666  00A8               	movwf	??___flmul
  1916  0667  0839               	movf	___flmul@temp+1,w
  1917  0668  00A9               	movwf	??___flmul+1
  1918  0669  01AA               	clrf	??___flmul+2
  1919  066A  01AB               	clrf	??___flmul+3
  1920  066B  0828               	movf	??___flmul,w
  1921  066C  07AE               	addwf	___flmul@grs,f
  1922  066D  0829               	movf	??___flmul+1,w
  1923  066E  1103               	clrz
  1924  066F  1803               	skipnc
  1925  0670  3E01               	addlw	1
  1926  0671  1D03               	btfss	3,2
  1927  0672  07AF               	addwf	___flmul@grs+1,f
  1928  0673  082A               	movf	??___flmul+2,w
  1929  0674  1103               	clrz
  1930  0675  1803               	skipnc
  1931  0676  3E01               	addlw	1
  1932  0677  1D03               	btfss	3,2
  1933  0678  07B0               	addwf	___flmul@grs+2,f
  1934  0679  082B               	movf	??___flmul+3,w
  1935  067A  1103               	clrz
  1936  067B  1803               	skipnc
  1937  067C  3E01               	addlw	1
  1938  067D  1D03               	btfss	3,2
  1939  067E  07B1               	addwf	___flmul@grs+3,f
  1940  067F  0821               	movf	___flmul@b+1,w
  1941  0680  00A8               	movwf	??___flmul
  1942  0681  0828               	movf	??___flmul,w
  1943  0682  00F0               	movwf	__Umul8_16@multiplicand
  1944  0683  0826               	movf	___flmul@a+2,w
  1945  0684  120A  158A  26A4  120A  118A  	fcall	__Umul8_16
  1946  0689  0871               	movf	?__Umul8_16+1,w
  1947  068A  1283               	bcf	3,5	;RP0=0, select bank0
  1948  068B  1303               	bcf	3,6	;RP1=0, select bank0
  1949  068C  00B9               	movwf	___flmul@temp+1
  1950  068D  0870               	movf	?__Umul8_16,w
  1951  068E  00B8               	movwf	___flmul@temp
  1952  068F  0838               	movf	___flmul@temp,w
  1953  0690  00A8               	movwf	??___flmul
  1954  0691  0839               	movf	___flmul@temp+1,w
  1955  0692  00A9               	movwf	??___flmul+1
  1956  0693  01AA               	clrf	??___flmul+2
  1957  0694  01AB               	clrf	??___flmul+3
  1958  0695  0828               	movf	??___flmul,w
  1959  0696  07B4               	addwf	___flmul@prod,f
  1960  0697  0829               	movf	??___flmul+1,w
  1961  0698  1103               	clrz
  1962  0699  1803               	skipnc
  1963  069A  3E01               	addlw	1
  1964  069B  1D03               	btfss	3,2
  1965  069C  07B5               	addwf	___flmul@prod+1,f
  1966  069D  082A               	movf	??___flmul+2,w
  1967  069E  1103               	clrz
  1968  069F  1803               	skipnc
  1969  06A0  3E01               	addlw	1
  1970  06A1  1D03               	btfss	3,2
  1971  06A2  07B6               	addwf	___flmul@prod+2,f
  1972  06A3  082B               	movf	??___flmul+3,w
  1973  06A4  1103               	clrz
  1974  06A5  1803               	skipnc
  1975  06A6  3E01               	addlw	1
  1976  06A7  1D03               	btfss	3,2
  1977  06A8  07B7               	addwf	___flmul@prod+3,f
  1978  06A9  0822               	movf	___flmul@b+2,w
  1979  06AA  00A8               	movwf	??___flmul
  1980  06AB  0828               	movf	??___flmul,w
  1981  06AC  00F0               	movwf	__Umul8_16@multiplicand
  1982  06AD  0825               	movf	___flmul@a+1,w
  1983  06AE  120A  158A  26A4  120A  118A  	fcall	__Umul8_16
  1984  06B3  0871               	movf	?__Umul8_16+1,w
  1985  06B4  1283               	bcf	3,5	;RP0=0, select bank0
  1986  06B5  1303               	bcf	3,6	;RP1=0, select bank0
  1987  06B6  00B9               	movwf	___flmul@temp+1
  1988  06B7  0870               	movf	?__Umul8_16,w
  1989  06B8  00B8               	movwf	___flmul@temp
  1990  06B9  0838               	movf	___flmul@temp,w
  1991  06BA  00A8               	movwf	??___flmul
  1992  06BB  0839               	movf	___flmul@temp+1,w
  1993  06BC  00A9               	movwf	??___flmul+1
  1994  06BD  01AA               	clrf	??___flmul+2
  1995  06BE  01AB               	clrf	??___flmul+3
  1996  06BF  0828               	movf	??___flmul,w
  1997  06C0  07B4               	addwf	___flmul@prod,f
  1998  06C1  0829               	movf	??___flmul+1,w
  1999  06C2  1103               	clrz
  2000  06C3  1803               	skipnc
  2001  06C4  3E01               	addlw	1
  2002  06C5  1D03               	btfss	3,2
  2003  06C6  07B5               	addwf	___flmul@prod+1,f
  2004  06C7  082A               	movf	??___flmul+2,w
  2005  06C8  1103               	clrz
  2006  06C9  1803               	skipnc
  2007  06CA  3E01               	addlw	1
  2008  06CB  1D03               	btfss	3,2
  2009  06CC  07B6               	addwf	___flmul@prod+2,f
  2010  06CD  082B               	movf	??___flmul+3,w
  2011  06CE  1103               	clrz
  2012  06CF  1803               	skipnc
  2013  06D0  3E01               	addlw	1
  2014  06D1  1D03               	btfss	3,2
  2015  06D2  07B7               	addwf	___flmul@prod+3,f
  2016  06D3  0822               	movf	___flmul@b+2,w
  2017  06D4  00A8               	movwf	??___flmul
  2018  06D5  0828               	movf	??___flmul,w
  2019  06D6  00F0               	movwf	__Umul8_16@multiplicand
  2020  06D7  0826               	movf	___flmul@a+2,w
  2021  06D8  120A  158A  26A4  120A  118A  	fcall	__Umul8_16
  2022  06DD  0871               	movf	?__Umul8_16+1,w
  2023  06DE  1283               	bcf	3,5	;RP0=0, select bank0
  2024  06DF  1303               	bcf	3,6	;RP1=0, select bank0
  2025  06E0  00B9               	movwf	___flmul@temp+1
  2026  06E1  0870               	movf	?__Umul8_16,w
  2027  06E2  00B8               	movwf	___flmul@temp
  2028  06E3  0838               	movf	___flmul@temp,w
  2029  06E4  00A8               	movwf	??___flmul
  2030  06E5  0839               	movf	___flmul@temp+1,w
  2031  06E6  00A9               	movwf	??___flmul+1
  2032  06E7  01AA               	clrf	??___flmul+2
  2033  06E8  01AB               	clrf	??___flmul+3
  2034  06E9  3008               	movlw	8
  2035  06EA                     u2425:	
  2036  06EA  1003               	clrc
  2037  06EB  0DA8               	rlf	??___flmul,f
  2038  06EC  0DA9               	rlf	??___flmul+1,f
  2039  06ED  0DAA               	rlf	??___flmul+2,f
  2040  06EE  0DAB               	rlf	??___flmul+3,f
  2041  06EF  3EFF               	addlw	-1
  2042  06F0  1D03               	skipz
  2043  06F1  2EEA               	goto	u2425
  2044  06F2  0828               	movf	??___flmul,w
  2045  06F3  07B4               	addwf	___flmul@prod,f
  2046  06F4  0829               	movf	??___flmul+1,w
  2047  06F5  1103               	clrz
  2048  06F6  1803               	skipnc
  2049  06F7  3E01               	addlw	1
  2050  06F8  1D03               	btfss	3,2
  2051  06F9  07B5               	addwf	___flmul@prod+1,f
  2052  06FA  082A               	movf	??___flmul+2,w
  2053  06FB  1103               	clrz
  2054  06FC  1803               	skipnc
  2055  06FD  3E01               	addlw	1
  2056  06FE  1D03               	btfss	3,2
  2057  06FF  07B6               	addwf	___flmul@prod+2,f
  2058  0700  082B               	movf	??___flmul+3,w
  2059  0701  1103               	clrz
  2060  0702  1803               	skipnc
  2061  0703  3E01               	addlw	1
  2062  0704  1D03               	btfss	3,2
  2063  0705  07B7               	addwf	___flmul@prod+3,f
  2064  0706  082E               	movf	___flmul@grs,w
  2065  0707  00A8               	movwf	??___flmul
  2066  0708  082F               	movf	___flmul@grs+1,w
  2067  0709  00A9               	movwf	??___flmul+1
  2068  070A  0830               	movf	___flmul@grs+2,w
  2069  070B  00AA               	movwf	??___flmul+2
  2070  070C  0831               	movf	___flmul@grs+3,w
  2071  070D  00AB               	movwf	??___flmul+3
  2072  070E  3018               	movlw	24
  2073  070F                     u2445:	
  2074  070F  1003               	clrc
  2075  0710  0CAB               	rrf	??___flmul+3,f
  2076  0711  0CAA               	rrf	??___flmul+2,f
  2077  0712  0CA9               	rrf	??___flmul+1,f
  2078  0713  0CA8               	rrf	??___flmul,f
  2079  0714  3EFF               	addlw	-1
  2080  0715  1D03               	skipz
  2081  0716  2F0F               	goto	u2445
  2082  0717  0828               	movf	??___flmul,w
  2083  0718  07B4               	addwf	___flmul@prod,f
  2084  0719  0829               	movf	??___flmul+1,w
  2085  071A  1103               	clrz
  2086  071B  1803               	skipnc
  2087  071C  3E01               	addlw	1
  2088  071D  1D03               	btfss	3,2
  2089  071E  07B5               	addwf	___flmul@prod+1,f
  2090  071F  082A               	movf	??___flmul+2,w
  2091  0720  1103               	clrz
  2092  0721  1803               	skipnc
  2093  0722  3E01               	addlw	1
  2094  0723  1D03               	btfss	3,2
  2095  0724  07B6               	addwf	___flmul@prod+2,f
  2096  0725  082B               	movf	??___flmul+3,w
  2097  0726  1103               	clrz
  2098  0727  1803               	skipnc
  2099  0728  3E01               	addlw	1
  2100  0729  1D03               	btfss	3,2
  2101  072A  07B7               	addwf	___flmul@prod+3,f
  2102  072B  3008               	movlw	8
  2103  072C  00A8               	movwf	??___flmul
  2104  072D                     u2465:	
  2105  072D  1003               	clrc
  2106  072E  0DAE               	rlf	___flmul@grs,f
  2107  072F  0DAF               	rlf	___flmul@grs+1,f
  2108  0730  0DB0               	rlf	___flmul@grs+2,f
  2109  0731  0DB1               	rlf	___flmul@grs+3,f
  2110  0732  0BA8               	decfsz	??___flmul,f
  2111  0733  2F2D               	goto	u2465
  2112  0734  0833               	movf	___flmul@bexp,w
  2113  0735  0732               	addwf	___flmul@aexp,w
  2114  0736  00A8               	movwf	??___flmul
  2115  0737  01A9               	clrf	??___flmul+1
  2116  0738  0DA9               	rlf	??___flmul+1,f
  2117  0739  0828               	movf	??___flmul,w
  2118  073A  3E82               	addlw	130
  2119  073B  00B8               	movwf	___flmul@temp
  2120  073C  0829               	movf	??___flmul+1,w
  2121  073D  1803               	skipnc
  2122  073E  3E01               	addlw	1
  2123  073F  3EFF               	addlw	255
  2124  0740  00B9               	movwf	___flmul@temp+1
  2125  0741                     l1792:	
  2126  0741  1BB6               	btfsc	___flmul@prod+2,7
  2127  0742  2F5E               	goto	l1794
  2128  0743  3001               	movlw	1
  2129  0744  00A8               	movwf	??___flmul
  2130  0745                     u2475:	
  2131  0745  1003               	clrc
  2132  0746  0DB4               	rlf	___flmul@prod,f
  2133  0747  0DB5               	rlf	___flmul@prod+1,f
  2134  0748  0DB6               	rlf	___flmul@prod+2,f
  2135  0749  0DB7               	rlf	___flmul@prod+3,f
  2136  074A  0BA8               	decfsz	??___flmul,f
  2137  074B  2F45               	goto	u2475
  2138  074C  1BB1               	btfsc	___flmul@grs+3,7
  2139  074D  1434               	bsf	___flmul@prod,0
  2140  074E  3001               	movlw	1
  2141  074F  00A8               	movwf	??___flmul
  2142  0750                     u2495:	
  2143  0750  1003               	clrc
  2144  0751  0DAE               	rlf	___flmul@grs,f
  2145  0752  0DAF               	rlf	___flmul@grs+1,f
  2146  0753  0DB0               	rlf	___flmul@grs+2,f
  2147  0754  0DB1               	rlf	___flmul@grs+3,f
  2148  0755  0BA8               	decfsz	??___flmul,f
  2149  0756  2F50               	goto	u2495
  2150  0757  30FF               	movlw	255
  2151  0758  07B8               	addwf	___flmul@temp,f
  2152  0759  1803               	skipnc
  2153  075A  0AB9               	incf	___flmul@temp+1,f
  2154  075B  30FF               	movlw	255
  2155  075C  07B9               	addwf	___flmul@temp+1,f
  2156  075D  2F41               	goto	l1792
  2157  075E                     l1794:	
  2158  075E  01B2               	clrf	___flmul@aexp
  2159  075F  1FB1               	btfss	___flmul@grs+3,7
  2160  0760  2F77               	goto	l1804
  2161  0761  30FF               	movlw	255
  2162  0762  052E               	andwf	___flmul@grs,w
  2163  0763  00A8               	movwf	??___flmul
  2164  0764  30FF               	movlw	255
  2165  0765  052F               	andwf	___flmul@grs+1,w
  2166  0766  00A9               	movwf	??___flmul+1
  2167  0767  30FF               	movlw	255
  2168  0768  0530               	andwf	___flmul@grs+2,w
  2169  0769  00AA               	movwf	??___flmul+2
  2170  076A  307F               	movlw	127
  2171  076B  0531               	andwf	___flmul@grs+3,w
  2172  076C  00AB               	movwf	??___flmul+3
  2173  076D  082B               	movf	??___flmul+3,w
  2174  076E  042A               	iorwf	??___flmul+2,w
  2175  076F  0429               	iorwf	??___flmul+1,w
  2176  0770  0428               	iorwf	??___flmul,w
  2177  0771  1903               	skipnz
  2178  0772  1834               	btfsc	___flmul@prod,0
  2179  0773  2F75               	goto	l1800
  2180  0774  2F77               	goto	l1804
  2181  0775                     l1800:	
  2182  0775  01B2               	clrf	___flmul@aexp
  2183  0776  0AB2               	incf	___flmul@aexp,f
  2184  0777                     l1804:	
  2185  0777  0832               	movf	___flmul@aexp,w
  2186  0778  1903               	btfsc	3,2
  2187  0779  2FA9               	goto	l1814
  2188  077A  3001               	movlw	1
  2189  077B  07B4               	addwf	___flmul@prod,f
  2190  077C  3000               	movlw	0
  2191  077D  1803               	skipnc
  2192  077E  3001               	movlw	1
  2193  077F  07B5               	addwf	___flmul@prod+1,f
  2194  0780  3000               	movlw	0
  2195  0781  1803               	skipnc
  2196  0782  3001               	movlw	1
  2197  0783  07B6               	addwf	___flmul@prod+2,f
  2198  0784  3000               	movlw	0
  2199  0785  1803               	skipnc
  2200  0786  3001               	movlw	1
  2201  0787  07B7               	addwf	___flmul@prod+3,f
  2202  0788  1C37               	btfss	___flmul@prod+3,0
  2203  0789  2FA9               	goto	l1814
  2204  078A  0834               	movf	___flmul@prod,w
  2205  078B  00A8               	movwf	??___flmul
  2206  078C  0835               	movf	___flmul@prod+1,w
  2207  078D  00A9               	movwf	??___flmul+1
  2208  078E  0836               	movf	___flmul@prod+2,w
  2209  078F  00AA               	movwf	??___flmul+2
  2210  0790  0837               	movf	___flmul@prod+3,w
  2211  0791  00AB               	movwf	??___flmul+3
  2212  0792  3001               	movlw	1
  2213  0793  00AC               	movwf	??___flmul+4
  2214  0794                     u2565:	
  2215  0794  0D2B               	rlf	??___flmul+3,w
  2216  0795  0CAB               	rrf	??___flmul+3,f
  2217  0796  0CAA               	rrf	??___flmul+2,f
  2218  0797  0CA9               	rrf	??___flmul+1,f
  2219  0798  0CA8               	rrf	??___flmul,f
  2220  0799  0BAC               	decfsz	??___flmul+4,f
  2221  079A  2F94               	goto	u2565
  2222  079B  082B               	movf	??___flmul+3,w
  2223  079C  00B7               	movwf	___flmul@prod+3
  2224  079D  082A               	movf	??___flmul+2,w
  2225  079E  00B6               	movwf	___flmul@prod+2
  2226  079F  0829               	movf	??___flmul+1,w
  2227  07A0  00B5               	movwf	___flmul@prod+1
  2228  07A1  0828               	movf	??___flmul,w
  2229  07A2  00B4               	movwf	___flmul@prod
  2230  07A3  3001               	movlw	1
  2231  07A4  07B8               	addwf	___flmul@temp,f
  2232  07A5  1803               	skipnc
  2233  07A6  0AB9               	incf	___flmul@temp+1,f
  2234  07A7  3000               	movlw	0
  2235  07A8  07B9               	addwf	___flmul@temp+1,f
  2236  07A9                     l1814:	
  2237  07A9  0839               	movf	___flmul@temp+1,w
  2238  07AA  3A80               	xorlw	128
  2239  07AB  00FF               	movwf	127
  2240  07AC  3080               	movlw	128
  2241  07AD  027F               	subwf	127,w
  2242  07AE  1D03               	skipz
  2243  07AF  2FB2               	goto	u2575
  2244  07B0  30FF               	movlw	255
  2245  07B1  0238               	subwf	___flmul@temp,w
  2246  07B2                     u2575:	
  2247  07B2  1C03               	skipc
  2248  07B3  2FBF               	goto	l1818
  2249  07B4  307F               	movlw	127
  2250  07B5  1283               	bcf	3,5	;RP0=0, select bank0
  2251  07B6  1303               	bcf	3,6	;RP1=0, select bank0
  2252  07B7  00B7               	movwf	___flmul@prod+3
  2253  07B8  3080               	movlw	128
  2254  07B9  00B6               	movwf	___flmul@prod+2
  2255  07BA  3000               	movlw	0
  2256  07BB  00B5               	movwf	___flmul@prod+1
  2257  07BC  3000               	movlw	0
  2258  07BD  00B4               	movwf	___flmul@prod
  2259  07BE  2FEF               	goto	l587
  2260  07BF                     l1818:	
  2261  07BF  1283               	bcf	3,5	;RP0=0, select bank0
  2262  07C0  1303               	bcf	3,6	;RP1=0, select bank0
  2263  07C1  0839               	movf	___flmul@temp+1,w
  2264  07C2  3A80               	xorlw	128
  2265  07C3  00FF               	movwf	127
  2266  07C4  3080               	movlw	128
  2267  07C5  027F               	subwf	127,w
  2268  07C6  1D03               	skipz
  2269  07C7  2FCA               	goto	u2585
  2270  07C8  3001               	movlw	1
  2271  07C9  0238               	subwf	___flmul@temp,w
  2272  07CA                     u2585:	
  2273  07CA  1803               	skipnc
  2274  07CB  2FD8               	goto	l1824
  2275  07CC  3000               	movlw	0
  2276  07CD  1283               	bcf	3,5	;RP0=0, select bank0
  2277  07CE  1303               	bcf	3,6	;RP1=0, select bank0
  2278  07CF  00B7               	movwf	___flmul@prod+3
  2279  07D0  3000               	movlw	0
  2280  07D1  00B6               	movwf	___flmul@prod+2
  2281  07D2  3000               	movlw	0
  2282  07D3  00B5               	movwf	___flmul@prod+1
  2283  07D4  3000               	movlw	0
  2284  07D5  00B4               	movwf	___flmul@prod
  2285  07D6  01AD               	clrf	___flmul@sign
  2286  07D7  2FEF               	goto	l587
  2287  07D8                     l1824:	
  2288  07D8  1283               	bcf	3,5	;RP0=0, select bank0
  2289  07D9  1303               	bcf	3,6	;RP1=0, select bank0
  2290  07DA  0838               	movf	___flmul@temp,w
  2291  07DB  00A8               	movwf	??___flmul
  2292  07DC  0828               	movf	??___flmul,w
  2293  07DD  00B3               	movwf	___flmul@bexp
  2294  07DE  30FF               	movlw	255
  2295  07DF  05B4               	andwf	___flmul@prod,f
  2296  07E0  30FF               	movlw	255
  2297  07E1  05B5               	andwf	___flmul@prod+1,f
  2298  07E2  307F               	movlw	127
  2299  07E3  05B6               	andwf	___flmul@prod+2,f
  2300  07E4  3000               	movlw	0
  2301  07E5  05B7               	andwf	___flmul@prod+3,f
  2302  07E6  1833               	btfsc	___flmul@bexp,0
  2303  07E7  17B6               	bsf	___flmul@prod+2,7
  2304  07E8  0833               	movf	___flmul@bexp,w
  2305  07E9  00A8               	movwf	??___flmul
  2306  07EA  1003               	clrc
  2307  07EB  0C28               	rrf	??___flmul,w
  2308  07EC  00A9               	movwf	??___flmul+1
  2309  07ED  0829               	movf	??___flmul+1,w
  2310  07EE  00B7               	movwf	___flmul@prod+3
  2311  07EF                     l587:	
  2312  07EF  082D               	movf	___flmul@sign,w
  2313  07F0  00A8               	movwf	??___flmul
  2314  07F1  0828               	movf	??___flmul,w
  2315  07F2  04B7               	iorwf	___flmul@prod+3,f
  2316  07F3  0837               	movf	___flmul@prod+3,w
  2317  07F4  00A3               	movwf	?___flmul+3
  2318  07F5  0836               	movf	___flmul@prod+2,w
  2319  07F6  00A2               	movwf	?___flmul+2
  2320  07F7  0835               	movf	___flmul@prod+1,w
  2321  07F8  00A1               	movwf	?___flmul+1
  2322  07F9  0834               	movf	___flmul@prod,w
  2323  07FA  00A0               	movwf	?___flmul
  2324  07FB  0008               	return
  2325  07FC                     __end_of___flmul:	
  2326                           
  2327                           	psect	text6
  2328  0EA4                     __ptext6:	
  2329 ;; *************** function __Umul8_16 *****************
  2330 ;; Defined at:
  2331 ;;		line 4 in file "D:\Mplab X\xc8\pic\sources\c90\common\Umul8_16.c"
  2332 ;; Parameters:    Size  Location     Type
  2333 ;;  multiplier      1    wreg     unsigned char 
  2334 ;;  multiplicand    1    0[COMMON] unsigned char 
  2335 ;; Auto vars:     Size  Location     Type
  2336 ;;  multiplier      1    8[COMMON] unsigned char 
  2337 ;;  word_mpld       2    6[COMMON] unsigned int 
  2338 ;;  product         2    4[COMMON] unsigned int 
  2339 ;; Return value:  Size  Location     Type
  2340 ;;                  2    0[COMMON] unsigned int 
  2341 ;; Registers used:
  2342 ;;		wreg, status,2, status,0
  2343 ;; Tracked objects:
  2344 ;;		On entry : 0/0
  2345 ;;		On exit  : 0/0
  2346 ;;		Unchanged: 0/0
  2347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2348 ;;      Params:         2       0       0       0       0
  2349 ;;      Locals:         5       0       0       0       0
  2350 ;;      Temps:          2       0       0       0       0
  2351 ;;      Totals:         9       0       0       0       0
  2352 ;;Total ram usage:        9 bytes
  2353 ;; Hardware stack levels used:    1
  2354 ;; This function calls:
  2355 ;;		Nothing
  2356 ;; This function is called by:
  2357 ;;		___flmul
  2358 ;; This function uses a non-reentrant model
  2359 ;;
  2360                           
  2361                           
  2362                           ;psect for function __Umul8_16
  2363  0EA4                     __Umul8_16:	
  2364                           
  2365                           ;incstack = 0
  2366                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  2367                           ;__Umul8_16@multiplier stored from wreg
  2368  0EA4  00F8               	movwf	__Umul8_16@multiplier
  2369  0EA5  01F4               	clrf	__Umul8_16@product
  2370  0EA6  01F5               	clrf	__Umul8_16@product+1
  2371  0EA7  0870               	movf	__Umul8_16@multiplicand,w
  2372  0EA8  00F2               	movwf	??__Umul8_16
  2373  0EA9  01F3               	clrf	??__Umul8_16+1
  2374  0EAA  0872               	movf	??__Umul8_16,w
  2375  0EAB  00F6               	movwf	__Umul8_16@word_mpld
  2376  0EAC  0873               	movf	??__Umul8_16+1,w
  2377  0EAD  00F7               	movwf	__Umul8_16@word_mpld+1
  2378  0EAE                     l1354:	
  2379  0EAE  1C78               	btfss	__Umul8_16@multiplier,0
  2380  0EAF  2EB6               	goto	l632
  2381  0EB0  0876               	movf	__Umul8_16@word_mpld,w
  2382  0EB1  07F4               	addwf	__Umul8_16@product,f
  2383  0EB2  1803               	skipnc
  2384  0EB3  0AF5               	incf	__Umul8_16@product+1,f
  2385  0EB4  0877               	movf	__Umul8_16@word_mpld+1,w
  2386  0EB5  07F5               	addwf	__Umul8_16@product+1,f
  2387  0EB6                     l632:	
  2388  0EB6  3001               	movlw	1
  2389  0EB7                     u1445:	
  2390  0EB7  1003               	clrc
  2391  0EB8  0DF6               	rlf	__Umul8_16@word_mpld,f
  2392  0EB9  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  2393  0EBA  3EFF               	addlw	-1
  2394  0EBB  1D03               	skipz
  2395  0EBC  2EB7               	goto	u1445
  2396  0EBD  1003               	clrc
  2397  0EBE  0CF8               	rrf	__Umul8_16@multiplier,f
  2398  0EBF  0878               	movf	__Umul8_16@multiplier,w
  2399  0EC0  1D03               	btfss	3,2
  2400  0EC1  2EAE               	goto	l1354
  2401  0EC2  0875               	movf	__Umul8_16@product+1,w
  2402  0EC3  00F1               	movwf	?__Umul8_16+1
  2403  0EC4  0874               	movf	__Umul8_16@product,w
  2404  0EC5  00F0               	movwf	?__Umul8_16
  2405  0EC6  0008               	return
  2406  0EC7                     __end_of__Umul8_16:	
  2407                           
  2408                           	psect	text7
  2409  02B8                     __ptext7:	
  2410 ;; *************** function ___fladd *****************
  2411 ;; Defined at:
  2412 ;;		line 10 in file "D:\Mplab X\xc8\pic\sources\c90\common\sprcadd.c"
  2413 ;; Parameters:    Size  Location     Type
  2414 ;;  b               4   26[BANK0 ] unsigned int 
  2415 ;;  a               4   30[BANK0 ] unsigned int 
  2416 ;; Auto vars:     Size  Location     Type
  2417 ;;  grs             1   45[BANK0 ] unsigned char 
  2418 ;;  bexp            1   44[BANK0 ] unsigned char 
  2419 ;;  aexp            1   43[BANK0 ] unsigned char 
  2420 ;;  signs           1   42[BANK0 ] unsigned char 
  2421 ;; Return value:  Size  Location     Type
  2422 ;;                  4   26[BANK0 ] unsigned char 
  2423 ;; Registers used:
  2424 ;;		wreg, status,2, status,0, btemp+1
  2425 ;; Tracked objects:
  2426 ;;		On entry : 0/0
  2427 ;;		On exit  : 0/0
  2428 ;;		Unchanged: 0/0
  2429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2430 ;;      Params:         0       8       0       0       0
  2431 ;;      Locals:         0       4       0       0       0
  2432 ;;      Temps:          0       8       0       0       0
  2433 ;;      Totals:         0      20       0       0       0
  2434 ;;Total ram usage:       20 bytes
  2435 ;; Hardware stack levels used:    1
  2436 ;; This function calls:
  2437 ;;		Nothing
  2438 ;; This function is called by:
  2439 ;;		_main
  2440 ;; This function uses a non-reentrant model
  2441 ;;
  2442                           
  2443                           
  2444                           ;psect for function ___fladd
  2445  02B8                     ___fladd:	
  2446                           
  2447                           ;incstack = 0
  2448                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  2449  02B8  1283               	bcf	3,5	;RP0=0, select bank0
  2450  02B9  1303               	bcf	3,6	;RP1=0, select bank0
  2451  02BA  083D               	movf	___fladd@b+3,w
  2452  02BB  3980               	andlw	128
  2453  02BC  00C2               	movwf	??___fladd
  2454  02BD  0842               	movf	??___fladd,w
  2455  02BE  00CA               	movwf	___fladd@signs
  2456  02BF  083D               	movf	___fladd@b+3,w
  2457  02C0  00C2               	movwf	??___fladd
  2458  02C1  0742               	addwf	??___fladd,w
  2459  02C2  00C3               	movwf	??___fladd+1
  2460  02C3  0843               	movf	??___fladd+1,w
  2461  02C4  00CC               	movwf	___fladd@bexp
  2462  02C5  1BBC               	btfsc	___fladd@b+2,7
  2463  02C6  144C               	bsf	___fladd@bexp,0
  2464  02C7  084C               	movf	___fladd@bexp,w
  2465  02C8  1903               	btfsc	3,2
  2466  02C9  2AD8               	goto	l1520
  2467  02CA  0A4C               	incf	___fladd@bexp,w
  2468  02CB  1D03               	btfss	3,2
  2469  02CC  2AD5               	goto	l1516
  2470  02CD  3000               	movlw	0
  2471  02CE  00BD               	movwf	___fladd@b+3
  2472  02CF  3000               	movlw	0
  2473  02D0  00BC               	movwf	___fladd@b+2
  2474  02D1  3000               	movlw	0
  2475  02D2  00BB               	movwf	___fladd@b+1
  2476  02D3  3000               	movlw	0
  2477  02D4  00BA               	movwf	___fladd@b
  2478  02D5                     l1516:	
  2479  02D5  17BC               	bsf	___fladd@b+2,7
  2480  02D6  01BD               	clrf	___fladd@b+3
  2481  02D7  2AE0               	goto	l1522
  2482  02D8                     l1520:	
  2483  02D8  3000               	movlw	0
  2484  02D9  00BD               	movwf	___fladd@b+3
  2485  02DA  3000               	movlw	0
  2486  02DB  00BC               	movwf	___fladd@b+2
  2487  02DC  3000               	movlw	0
  2488  02DD  00BB               	movwf	___fladd@b+1
  2489  02DE  3000               	movlw	0
  2490  02DF  00BA               	movwf	___fladd@b
  2491  02E0                     l1522:	
  2492  02E0  0841               	movf	___fladd@a+3,w
  2493  02E1  3980               	andlw	128
  2494  02E2  00C2               	movwf	??___fladd
  2495  02E3  0842               	movf	??___fladd,w
  2496  02E4  00CB               	movwf	___fladd@aexp
  2497  02E5  084B               	movf	___fladd@aexp,w
  2498  02E6  064A               	xorwf	___fladd@signs,w
  2499  02E7  1D03               	btfss	3,2
  2500  02E8  174A               	bsf	___fladd@signs,6
  2501  02E9  0841               	movf	___fladd@a+3,w
  2502  02EA  00C2               	movwf	??___fladd
  2503  02EB  0742               	addwf	??___fladd,w
  2504  02EC  00C3               	movwf	??___fladd+1
  2505  02ED  0843               	movf	??___fladd+1,w
  2506  02EE  00CB               	movwf	___fladd@aexp
  2507  02EF  1BC0               	btfsc	___fladd@a+2,7
  2508  02F0  144B               	bsf	___fladd@aexp,0
  2509  02F1  084B               	movf	___fladd@aexp,w
  2510  02F2  1903               	btfsc	3,2
  2511  02F3  2B02               	goto	l1544
  2512  02F4  0A4B               	incf	___fladd@aexp,w
  2513  02F5  1D03               	btfss	3,2
  2514  02F6  2AFF               	goto	l1540
  2515  02F7  3000               	movlw	0
  2516  02F8  00C1               	movwf	___fladd@a+3
  2517  02F9  3000               	movlw	0
  2518  02FA  00C0               	movwf	___fladd@a+2
  2519  02FB  3000               	movlw	0
  2520  02FC  00BF               	movwf	___fladd@a+1
  2521  02FD  3000               	movlw	0
  2522  02FE  00BE               	movwf	___fladd@a
  2523  02FF                     l1540:	
  2524  02FF  17C0               	bsf	___fladd@a+2,7
  2525  0300  01C1               	clrf	___fladd@a+3
  2526  0301  2B0A               	goto	l479
  2527  0302                     l1544:	
  2528  0302  3000               	movlw	0
  2529  0303  00C1               	movwf	___fladd@a+3
  2530  0304  3000               	movlw	0
  2531  0305  00C0               	movwf	___fladd@a+2
  2532  0306  3000               	movlw	0
  2533  0307  00BF               	movwf	___fladd@a+1
  2534  0308  3000               	movlw	0
  2535  0309  00BE               	movwf	___fladd@a
  2536  030A                     l479:	
  2537  030A  084C               	movf	___fladd@bexp,w
  2538  030B  024B               	subwf	___fladd@aexp,w
  2539  030C  1803               	skipnc
  2540  030D  2B50               	goto	l1580
  2541  030E  1F4A               	btfss	___fladd@signs,6
  2542  030F  2B14               	goto	l1550
  2543  0310  3080               	movlw	128
  2544  0311  00C2               	movwf	??___fladd
  2545  0312  0842               	movf	??___fladd,w
  2546  0313  06CA               	xorwf	___fladd@signs,f
  2547  0314                     l1550:	
  2548  0314  084C               	movf	___fladd@bexp,w
  2549  0315  00C2               	movwf	??___fladd
  2550  0316  0842               	movf	??___fladd,w
  2551  0317  00CD               	movwf	___fladd@grs
  2552  0318  084B               	movf	___fladd@aexp,w
  2553  0319  00C2               	movwf	??___fladd
  2554  031A  0842               	movf	??___fladd,w
  2555  031B  00CC               	movwf	___fladd@bexp
  2556  031C  084D               	movf	___fladd@grs,w
  2557  031D  00C2               	movwf	??___fladd
  2558  031E  0842               	movf	??___fladd,w
  2559  031F  00CB               	movwf	___fladd@aexp
  2560  0320  083A               	movf	___fladd@b,w
  2561  0321  00C2               	movwf	??___fladd
  2562  0322  0842               	movf	??___fladd,w
  2563  0323  00CD               	movwf	___fladd@grs
  2564  0324  083E               	movf	___fladd@a,w
  2565  0325  00C2               	movwf	??___fladd
  2566  0326  0842               	movf	??___fladd,w
  2567  0327  00BA               	movwf	___fladd@b
  2568  0328  084D               	movf	___fladd@grs,w
  2569  0329  00C2               	movwf	??___fladd
  2570  032A  0842               	movf	??___fladd,w
  2571  032B  00BE               	movwf	___fladd@a
  2572  032C  083B               	movf	___fladd@b+1,w
  2573  032D  00C2               	movwf	??___fladd
  2574  032E  0842               	movf	??___fladd,w
  2575  032F  00CD               	movwf	___fladd@grs
  2576  0330  083F               	movf	___fladd@a+1,w
  2577  0331  00C2               	movwf	??___fladd
  2578  0332  0842               	movf	??___fladd,w
  2579  0333  00BB               	movwf	___fladd@b+1
  2580  0334  084D               	movf	___fladd@grs,w
  2581  0335  00C2               	movwf	??___fladd
  2582  0336  0842               	movf	??___fladd,w
  2583  0337  00BF               	movwf	___fladd@a+1
  2584  0338  083C               	movf	___fladd@b+2,w
  2585  0339  00C2               	movwf	??___fladd
  2586  033A  0842               	movf	??___fladd,w
  2587  033B  00CD               	movwf	___fladd@grs
  2588  033C  0840               	movf	___fladd@a+2,w
  2589  033D  00C2               	movwf	??___fladd
  2590  033E  0842               	movf	??___fladd,w
  2591  033F  00BC               	movwf	___fladd@b+2
  2592  0340  084D               	movf	___fladd@grs,w
  2593  0341  00C2               	movwf	??___fladd
  2594  0342  0842               	movf	??___fladd,w
  2595  0343  00C0               	movwf	___fladd@a+2
  2596  0344  083D               	movf	___fladd@b+3,w
  2597  0345  00C2               	movwf	??___fladd
  2598  0346  0842               	movf	??___fladd,w
  2599  0347  00CD               	movwf	___fladd@grs
  2600  0348  0841               	movf	___fladd@a+3,w
  2601  0349  00C2               	movwf	??___fladd
  2602  034A  0842               	movf	??___fladd,w
  2603  034B  00BD               	movwf	___fladd@b+3
  2604  034C  084D               	movf	___fladd@grs,w
  2605  034D  00C2               	movwf	??___fladd
  2606  034E  0842               	movf	??___fladd,w
  2607  034F  00C1               	movwf	___fladd@a+3
  2608  0350                     l1580:	
  2609  0350  01CD               	clrf	___fladd@grs
  2610  0351  084B               	movf	___fladd@aexp,w
  2611  0352  00C2               	movwf	??___fladd
  2612  0353  01C3               	clrf	??___fladd+1
  2613  0354  0843               	movf	??___fladd+1,w
  2614  0355  00C5               	movwf	??___fladd+3
  2615  0356  084C               	movf	___fladd@bexp,w
  2616  0357  0242               	subwf	??___fladd,w
  2617  0358  00C4               	movwf	??___fladd+2
  2618  0359  1C03               	skipc
  2619  035A  03C5               	decf	??___fladd+3,f
  2620  035B  0845               	movf	??___fladd+3,w
  2621  035C  3A80               	xorlw	128
  2622  035D  00FF               	movwf	127
  2623  035E  3080               	movlw	128
  2624  035F  027F               	subwf	127,w
  2625  0360  1D03               	skipz
  2626  0361  2B64               	goto	u1865
  2627  0362  301A               	movlw	26
  2628  0363  0244               	subwf	??___fladd+2,w
  2629  0364                     u1865:	
  2630  0364  1C03               	skipc
  2631  0365  2B9D               	goto	l1598
  2632  0366  1283               	bcf	3,5	;RP0=0, select bank0
  2633  0367  1303               	bcf	3,6	;RP1=0, select bank0
  2634  0368  083D               	movf	___fladd@b+3,w
  2635  0369  043C               	iorwf	___fladd@b+2,w
  2636  036A  043B               	iorwf	___fladd@b+1,w
  2637  036B  043A               	iorwf	___fladd@b,w
  2638  036C  1903               	btfsc	3,2
  2639  036D  2B70               	goto	u1870
  2640  036E  3001               	movlw	1
  2641  036F  2B71               	goto	u1880
  2642  0370                     u1870:	
  2643  0370  3000               	movlw	0
  2644  0371                     u1880:	
  2645  0371  00C2               	movwf	??___fladd
  2646  0372  0842               	movf	??___fladd,w
  2647  0373  00CD               	movwf	___fladd@grs
  2648  0374  3000               	movlw	0
  2649  0375  00BD               	movwf	___fladd@b+3
  2650  0376  3000               	movlw	0
  2651  0377  00BC               	movwf	___fladd@b+2
  2652  0378  3000               	movlw	0
  2653  0379  00BB               	movwf	___fladd@b+1
  2654  037A  3000               	movlw	0
  2655  037B  00BA               	movwf	___fladd@b
  2656  037C  084B               	movf	___fladd@aexp,w
  2657  037D  00C2               	movwf	??___fladd
  2658  037E  0842               	movf	??___fladd,w
  2659  037F  00CC               	movwf	___fladd@bexp
  2660  0380  2BA3               	goto	l483
  2661  0381                     l485:	
  2662  0381  1C4D               	btfss	___fladd@grs,0
  2663  0382  2B8C               	goto	l1588
  2664  0383  084D               	movf	___fladd@grs,w
  2665  0384  00C2               	movwf	??___fladd
  2666  0385  1003               	clrc
  2667  0386  0C42               	rrf	??___fladd,w
  2668  0387  3801               	iorlw	1
  2669  0388  00C3               	movwf	??___fladd+1
  2670  0389  0843               	movf	??___fladd+1,w
  2671  038A  00CD               	movwf	___fladd@grs
  2672  038B  2B8E               	goto	l1590
  2673  038C                     l1588:	
  2674  038C  1003               	clrc
  2675  038D  0CCD               	rrf	___fladd@grs,f
  2676  038E                     l1590:	
  2677  038E  183A               	btfsc	___fladd@b,0
  2678  038F  17CD               	bsf	___fladd@grs,7
  2679  0390  3001               	movlw	1
  2680  0391  00C2               	movwf	??___fladd
  2681  0392                     u1915:	
  2682  0392  0D3D               	rlf	___fladd@b+3,w
  2683  0393  0CBD               	rrf	___fladd@b+3,f
  2684  0394  0CBC               	rrf	___fladd@b+2,f
  2685  0395  0CBB               	rrf	___fladd@b+1,f
  2686  0396  0CBA               	rrf	___fladd@b,f
  2687  0397  0BC2               	decfsz	??___fladd& (0+127),f
  2688  0398  2B92               	goto	u1915
  2689  0399  3001               	movlw	1
  2690  039A  00C2               	movwf	??___fladd
  2691  039B  0842               	movf	??___fladd,w
  2692  039C  07CC               	addwf	___fladd@bexp,f
  2693  039D                     l1598:	
  2694  039D  1283               	bcf	3,5	;RP0=0, select bank0
  2695  039E  1303               	bcf	3,6	;RP1=0, select bank0
  2696  039F  084B               	movf	___fladd@aexp,w
  2697  03A0  024C               	subwf	___fladd@bexp,w
  2698  03A1  1C03               	skipc
  2699  03A2  2B81               	goto	l485
  2700  03A3                     l483:	
  2701  03A3  1B4A               	btfsc	___fladd@signs,6
  2702  03A4  2BE4               	goto	l1624
  2703  03A5  084C               	movf	___fladd@bexp,w
  2704  03A6  1D03               	btfss	3,2
  2705  03A7  2BB1               	goto	l1606
  2706  03A8  3000               	movlw	0
  2707  03A9  00BD               	movwf	?___fladd+3
  2708  03AA  3000               	movlw	0
  2709  03AB  00BC               	movwf	?___fladd+2
  2710  03AC  3000               	movlw	0
  2711  03AD  00BB               	movwf	?___fladd+1
  2712  03AE  3000               	movlw	0
  2713  03AF  00BA               	movwf	?___fladd
  2714  03B0  0008               	return
  2715  03B1                     l1606:	
  2716  03B1  083E               	movf	___fladd@a,w
  2717  03B2  07BA               	addwf	___fladd@b,f
  2718  03B3  083F               	movf	___fladd@a+1,w
  2719  03B4  1103               	clrz
  2720  03B5  1803               	skipnc
  2721  03B6  3E01               	addlw	1
  2722  03B7  1D03               	btfss	3,2
  2723  03B8  07BB               	addwf	___fladd@b+1,f
  2724  03B9  0840               	movf	___fladd@a+2,w
  2725  03BA  1103               	clrz
  2726  03BB  1803               	skipnc
  2727  03BC  3E01               	addlw	1
  2728  03BD  1D03               	btfss	3,2
  2729  03BE  07BC               	addwf	___fladd@b+2,f
  2730  03BF  0841               	movf	___fladd@a+3,w
  2731  03C0  1103               	clrz
  2732  03C1  1803               	skipnc
  2733  03C2  3E01               	addlw	1
  2734  03C3  1D03               	btfss	3,2
  2735  03C4  07BD               	addwf	___fladd@b+3,f
  2736  03C5  1C3D               	btfss	___fladd@b+3,0
  2737  03C6  2C86               	goto	l1658
  2738  03C7  1C4D               	btfss	___fladd@grs,0
  2739  03C8  2BD2               	goto	l1614
  2740  03C9  084D               	movf	___fladd@grs,w
  2741  03CA  00C2               	movwf	??___fladd
  2742  03CB  1003               	clrc
  2743  03CC  0C42               	rrf	??___fladd,w
  2744  03CD  3801               	iorlw	1
  2745  03CE  00C3               	movwf	??___fladd+1
  2746  03CF  0843               	movf	??___fladd+1,w
  2747  03D0  00CD               	movwf	___fladd@grs
  2748  03D1  2BD4               	goto	l1616
  2749  03D2                     l1614:	
  2750  03D2  1003               	clrc
  2751  03D3  0CCD               	rrf	___fladd@grs,f
  2752  03D4                     l1616:	
  2753  03D4  183A               	btfsc	___fladd@b,0
  2754  03D5  17CD               	bsf	___fladd@grs,7
  2755  03D6  3001               	movlw	1
  2756  03D7  00C2               	movwf	??___fladd
  2757  03D8                     u1995:	
  2758  03D8  0D3D               	rlf	___fladd@b+3,w
  2759  03D9  0CBD               	rrf	___fladd@b+3,f
  2760  03DA  0CBC               	rrf	___fladd@b+2,f
  2761  03DB  0CBB               	rrf	___fladd@b+1,f
  2762  03DC  0CBA               	rrf	___fladd@b,f
  2763  03DD  0BC2               	decfsz	??___fladd& (0+127),f
  2764  03DE  2BD8               	goto	u1995
  2765  03DF  3001               	movlw	1
  2766  03E0  00C2               	movwf	??___fladd
  2767  03E1  0842               	movf	??___fladd,w
  2768  03E2  07CC               	addwf	___fladd@bexp,f
  2769  03E3  2C86               	goto	l1658
  2770  03E4                     l1624:	
  2771  03E4  083D               	movf	___fladd@b+3,w
  2772  03E5  3A80               	xorlw	128
  2773  03E6  00FF               	movwf	127
  2774  03E7  0841               	movf	___fladd@a+3,w
  2775  03E8  3A80               	xorlw	128
  2776  03E9  027F               	subwf	127,w
  2777  03EA  1D03               	skipz
  2778  03EB  2BF6               	goto	u2003
  2779  03EC  0840               	movf	___fladd@a+2,w
  2780  03ED  023C               	subwf	___fladd@b+2,w
  2781  03EE  1D03               	skipz
  2782  03EF  2BF6               	goto	u2003
  2783  03F0  083F               	movf	___fladd@a+1,w
  2784  03F1  023B               	subwf	___fladd@b+1,w
  2785  03F2  1D03               	skipz
  2786  03F3  2BF6               	goto	u2003
  2787  03F4  083E               	movf	___fladd@a,w
  2788  03F5  023A               	subwf	___fladd@b,w
  2789  03F6                     u2003:	
  2790  03F6  1803               	skipnc
  2791  03F7  2C4E               	goto	l1634
  2792  03F8  30FF               	movlw	255
  2793  03F9  00C2               	movwf	??___fladd
  2794  03FA  30FF               	movlw	255
  2795  03FB  00C3               	movwf	??___fladd+1
  2796  03FC  30FF               	movlw	255
  2797  03FD  00C4               	movwf	??___fladd+2
  2798  03FE  30FF               	movlw	255
  2799  03FF  00C5               	movwf	??___fladd+3
  2800  0400  083E               	movf	___fladd@a,w
  2801  0401  00C6               	movwf	??___fladd+4
  2802  0402  083F               	movf	___fladd@a+1,w
  2803  0403  00C7               	movwf	??___fladd+5
  2804  0404  0840               	movf	___fladd@a+2,w
  2805  0405  00C8               	movwf	??___fladd+6
  2806  0406  0841               	movf	___fladd@a+3,w
  2807  0407  00C9               	movwf	??___fladd+7
  2808  0408  083A               	movf	___fladd@b,w
  2809  0409  02C6               	subwf	??___fladd+4,f
  2810  040A  083B               	movf	___fladd@b+1,w
  2811  040B  1C03               	skipc
  2812  040C  0F3B               	incfsz	___fladd@b+1,w
  2813  040D  2C0F               	goto	u2011
  2814  040E  2C10               	goto	u2012
  2815  040F                     u2011:	
  2816  040F  02C7               	subwf	??___fladd+5,f
  2817  0410                     u2012:	
  2818  0410  083C               	movf	___fladd@b+2,w
  2819  0411  1C03               	skipc
  2820  0412  0F3C               	incfsz	___fladd@b+2,w
  2821  0413  2C15               	goto	u2013
  2822  0414  2C16               	goto	u2014
  2823  0415                     u2013:	
  2824  0415  02C8               	subwf	??___fladd+6,f
  2825  0416                     u2014:	
  2826  0416  083D               	movf	___fladd@b+3,w
  2827  0417  1C03               	skipc
  2828  0418  0F3D               	incfsz	___fladd@b+3,w
  2829  0419  2C1B               	goto	u2015
  2830  041A  2C1C               	goto	u2016
  2831  041B                     u2015:	
  2832  041B  02C9               	subwf	??___fladd+7,f
  2833  041C                     u2016:	
  2834  041C  0846               	movf	??___fladd+4,w
  2835  041D  07C2               	addwf	??___fladd,f
  2836  041E  0847               	movf	??___fladd+5,w
  2837  041F  1803               	skipnc
  2838  0420  0F47               	incfsz	??___fladd+5,w
  2839  0421  2C23               	goto	u2020
  2840  0422  2C24               	goto	u2021
  2841  0423                     u2020:	
  2842  0423  07C3               	addwf	??___fladd+1,f
  2843  0424                     u2021:	
  2844  0424  0848               	movf	??___fladd+6,w
  2845  0425  1803               	skipnc
  2846  0426  0F48               	incfsz	??___fladd+6,w
  2847  0427  2C29               	goto	u2022
  2848  0428  2C2A               	goto	u2023
  2849  0429                     u2022:	
  2850  0429  07C4               	addwf	??___fladd+2,f
  2851  042A                     u2023:	
  2852  042A  0849               	movf	??___fladd+7,w
  2853  042B  1803               	skipnc
  2854  042C  0A49               	incf	??___fladd+7,w
  2855  042D  07C5               	addwf	??___fladd+3,f
  2856  042E  0845               	movf	??___fladd+3,w
  2857  042F  00BD               	movwf	___fladd@b+3
  2858  0430  0844               	movf	??___fladd+2,w
  2859  0431  00BC               	movwf	___fladd@b+2
  2860  0432  0843               	movf	??___fladd+1,w
  2861  0433  00BB               	movwf	___fladd@b+1
  2862  0434  0842               	movf	??___fladd,w
  2863  0435  00BA               	movwf	___fladd@b
  2864  0436  3080               	movlw	128
  2865  0437  00C2               	movwf	??___fladd
  2866  0438  0842               	movf	??___fladd,w
  2867  0439  06CA               	xorwf	___fladd@signs,f
  2868  043A  09CD               	comf	___fladd@grs,f
  2869  043B  0ACD               	incf	___fladd@grs,f
  2870  043C  084D               	movf	___fladd@grs,w
  2871  043D  1D03               	btfss	3,2
  2872  043E  2C5C               	goto	l500
  2873  043F  3001               	movlw	1
  2874  0440  07BA               	addwf	___fladd@b,f
  2875  0441  3000               	movlw	0
  2876  0442  1803               	skipnc
  2877  0443  3001               	movlw	1
  2878  0444  07BB               	addwf	___fladd@b+1,f
  2879  0445  3000               	movlw	0
  2880  0446  1803               	skipnc
  2881  0447  3001               	movlw	1
  2882  0448  07BC               	addwf	___fladd@b+2,f
  2883  0449  3000               	movlw	0
  2884  044A  1803               	skipnc
  2885  044B  3001               	movlw	1
  2886  044C  07BD               	addwf	___fladd@b+3,f
  2887  044D  2C5C               	goto	l500
  2888  044E                     l1634:	
  2889  044E  083E               	movf	___fladd@a,w
  2890  044F  02BA               	subwf	___fladd@b,f
  2891  0450  083F               	movf	___fladd@a+1,w
  2892  0451  1C03               	skipc
  2893  0452  0F3F               	incfsz	___fladd@a+1,w
  2894  0453  02BB               	subwf	___fladd@b+1,f
  2895  0454  0840               	movf	___fladd@a+2,w
  2896  0455  1C03               	skipc
  2897  0456  0F40               	incfsz	___fladd@a+2,w
  2898  0457  02BC               	subwf	___fladd@b+2,f
  2899  0458  0841               	movf	___fladd@a+3,w
  2900  0459  1C03               	skipc
  2901  045A  0F41               	incfsz	___fladd@a+3,w
  2902  045B  02BD               	subwf	___fladd@b+3,f
  2903  045C                     l500:	
  2904  045C  083D               	movf	___fladd@b+3,w
  2905  045D  043C               	iorwf	___fladd@b+2,w
  2906  045E  043B               	iorwf	___fladd@b+1,w
  2907  045F  043A               	iorwf	___fladd@b,w
  2908  0460  1D03               	skipz
  2909  0461  2C84               	goto	l1656
  2910  0462  084D               	movf	___fladd@grs,w
  2911  0463  1D03               	btfss	3,2
  2912  0464  2C84               	goto	l1656
  2913  0465  3000               	movlw	0
  2914  0466  00BD               	movwf	?___fladd+3
  2915  0467  3000               	movlw	0
  2916  0468  00BC               	movwf	?___fladd+2
  2917  0469  3000               	movlw	0
  2918  046A  00BB               	movwf	?___fladd+1
  2919  046B  3000               	movlw	0
  2920  046C  00BA               	movwf	?___fladd
  2921  046D  0008               	return
  2922  046E                     l1642:	
  2923  046E  3001               	movlw	1
  2924  046F  00C2               	movwf	??___fladd
  2925  0470                     u2065:	
  2926  0470  1003               	clrc
  2927  0471  0DBA               	rlf	___fladd@b,f
  2928  0472  0DBB               	rlf	___fladd@b+1,f
  2929  0473  0DBC               	rlf	___fladd@b+2,f
  2930  0474  0DBD               	rlf	___fladd@b+3,f
  2931  0475  0BC2               	decfsz	??___fladd,f
  2932  0476  2C70               	goto	u2065
  2933  0477  1BCD               	btfsc	___fladd@grs,7
  2934  0478  143A               	bsf	___fladd@b,0
  2935  0479  1C4D               	btfss	___fladd@grs,0
  2936  047A  2C7D               	goto	l1650
  2937  047B  1403               	setc
  2938  047C  2C7E               	goto	L1
  2939  047D                     l1650:	
  2940  047D  1003               	clrc
  2941  047E                     L1:	
  2942  047E  0DCD               	rlf	___fladd@grs,f
  2943  047F  084C               	movf	___fladd@bexp,w
  2944  0480  1903               	btfsc	3,2
  2945  0481  2C84               	goto	l1656
  2946  0482  3001               	movlw	1
  2947  0483  02CC               	subwf	___fladd@bexp,f
  2948  0484                     l1656:	
  2949  0484  1FBC               	btfss	___fladd@b+2,7
  2950  0485  2C6E               	goto	l1642
  2951  0486                     l1658:	
  2952  0486  01CB               	clrf	___fladd@aexp
  2953  0487  1FCD               	btfss	___fladd@grs,7
  2954  0488  2C91               	goto	l1668
  2955  0489  084D               	movf	___fladd@grs,w
  2956  048A  397F               	andlw	127
  2957  048B  1903               	btfsc	3,2
  2958  048C  183A               	btfsc	___fladd@b,0
  2959  048D  2C8F               	goto	l1664
  2960  048E  2C91               	goto	l1668
  2961  048F                     l1664:	
  2962  048F  01CB               	clrf	___fladd@aexp
  2963  0490  0ACB               	incf	___fladd@aexp,f
  2964  0491                     l1668:	
  2965  0491  084B               	movf	___fladd@aexp,w
  2966  0492  1903               	btfsc	3,2
  2967  0493  2CC4               	goto	l513
  2968  0494  3001               	movlw	1
  2969  0495  07BA               	addwf	___fladd@b,f
  2970  0496  3000               	movlw	0
  2971  0497  1803               	skipnc
  2972  0498  3001               	movlw	1
  2973  0499  07BB               	addwf	___fladd@b+1,f
  2974  049A  3000               	movlw	0
  2975  049B  1803               	skipnc
  2976  049C  3001               	movlw	1
  2977  049D  07BC               	addwf	___fladd@b+2,f
  2978  049E  3000               	movlw	0
  2979  049F  1803               	skipnc
  2980  04A0  3001               	movlw	1
  2981  04A1  07BD               	addwf	___fladd@b+3,f
  2982  04A2  1C3D               	btfss	___fladd@b+3,0
  2983  04A3  2CC4               	goto	l513
  2984  04A4  083A               	movf	___fladd@b,w
  2985  04A5  00C2               	movwf	??___fladd
  2986  04A6  083B               	movf	___fladd@b+1,w
  2987  04A7  00C3               	movwf	??___fladd+1
  2988  04A8  083C               	movf	___fladd@b+2,w
  2989  04A9  00C4               	movwf	??___fladd+2
  2990  04AA  083D               	movf	___fladd@b+3,w
  2991  04AB  00C5               	movwf	??___fladd+3
  2992  04AC  3001               	movlw	1
  2993  04AD  00C6               	movwf	??___fladd+4
  2994  04AE                     u2165:	
  2995  04AE  0D45               	rlf	??___fladd+3,w
  2996  04AF  0CC5               	rrf	??___fladd+3,f
  2997  04B0  0CC4               	rrf	??___fladd+2,f
  2998  04B1  0CC3               	rrf	??___fladd+1,f
  2999  04B2  0CC2               	rrf	??___fladd,f
  3000  04B3  0BC6               	decfsz	??___fladd+4,f
  3001  04B4  2CAE               	goto	u2165
  3002  04B5  0845               	movf	??___fladd+3,w
  3003  04B6  00BD               	movwf	___fladd@b+3
  3004  04B7  0844               	movf	??___fladd+2,w
  3005  04B8  00BC               	movwf	___fladd@b+2
  3006  04B9  0843               	movf	??___fladd+1,w
  3007  04BA  00BB               	movwf	___fladd@b+1
  3008  04BB  0842               	movf	??___fladd,w
  3009  04BC  00BA               	movwf	___fladd@b
  3010  04BD  0A4C               	incf	___fladd@bexp,w
  3011  04BE  1903               	btfsc	3,2
  3012  04BF  2CC4               	goto	l513
  3013  04C0  3001               	movlw	1
  3014  04C1  00C2               	movwf	??___fladd
  3015  04C2  0842               	movf	??___fladd,w
  3016  04C3  07CC               	addwf	___fladd@bexp,f
  3017  04C4                     l513:	
  3018  04C4  0A4C               	incf	___fladd@bexp,w
  3019  04C5  1D03               	btfss	3,2
  3020  04C6  084C               	movf	___fladd@bexp,w
  3021  04C7  1D03               	btfss	3,2
  3022  04C8  2CD4               	goto	l1686
  3023  04C9  3000               	movlw	0
  3024  04CA  00BD               	movwf	___fladd@b+3
  3025  04CB  3000               	movlw	0
  3026  04CC  00BC               	movwf	___fladd@b+2
  3027  04CD  3000               	movlw	0
  3028  04CE  00BB               	movwf	___fladd@b+1
  3029  04CF  3000               	movlw	0
  3030  04D0  00BA               	movwf	___fladd@b
  3031  04D1  084C               	movf	___fladd@bexp,w
  3032  04D2  1903               	btfsc	3,2
  3033  04D3  01CA               	clrf	___fladd@signs
  3034  04D4                     l1686:	
  3035  04D4  1C4C               	btfss	___fladd@bexp,0
  3036  04D5  2CD8               	goto	l1690
  3037  04D6  17BC               	bsf	___fladd@b+2,7
  3038  04D7  2CDC               	goto	l521
  3039  04D8                     l1690:	
  3040  04D8  307F               	movlw	127
  3041  04D9  00C2               	movwf	??___fladd
  3042  04DA  0842               	movf	??___fladd,w
  3043  04DB  05BC               	andwf	___fladd@b+2,f
  3044  04DC                     l521:	
  3045  04DC  084C               	movf	___fladd@bexp,w
  3046  04DD  00C2               	movwf	??___fladd
  3047  04DE  1003               	clrc
  3048  04DF  0C42               	rrf	??___fladd,w
  3049  04E0  00C3               	movwf	??___fladd+1
  3050  04E1  0843               	movf	??___fladd+1,w
  3051  04E2  00BD               	movwf	___fladd@b+3
  3052  04E3  1FCA               	btfss	___fladd@signs,7
  3053  04E4  0008               	return
  3054  04E5  17BD               	bsf	___fladd@b+3,7
  3055  04E6  0008               	return
  3056  04E7                     __end_of___fladd:	
  3057                           
  3058                           	psect	text8
  3059  0EC7                     __ptext8:	
  3060 ;; *************** function _Read_ADC *****************
  3061 ;; Defined at:
  3062 ;;		line 34 in file "ADC.c"
  3063 ;; Parameters:    Size  Location     Type
  3064 ;;  channel         1    wreg     unsigned char 
  3065 ;; Auto vars:     Size  Location     Type
  3066 ;;  channel         1    4[COMMON] unsigned char 
  3067 ;; Return value:  Size  Location     Type
  3068 ;;                  2    0[COMMON] unsigned int 
  3069 ;; Registers used:
  3070 ;;		wreg, status,2, status,0
  3071 ;; Tracked objects:
  3072 ;;		On entry : 0/0
  3073 ;;		On exit  : 0/0
  3074 ;;		Unchanged: 0/0
  3075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3076 ;;      Params:         2       0       0       0       0
  3077 ;;      Locals:         1       0       0       0       0
  3078 ;;      Temps:          2       0       0       0       0
  3079 ;;      Totals:         5       0       0       0       0
  3080 ;;Total ram usage:        5 bytes
  3081 ;; Hardware stack levels used:    1
  3082 ;; This function calls:
  3083 ;;		Nothing
  3084 ;; This function is called by:
  3085 ;;		_main
  3086 ;; This function uses a non-reentrant model
  3087 ;;
  3088                           
  3089                           
  3090                           ;psect for function _Read_ADC
  3091  0EC7                     _Read_ADC:	
  3092                           
  3093                           ;incstack = 0
  3094                           ; Regs used in _Read_ADC: [wreg+status,2+status,0]
  3095                           ;Read_ADC@channel stored from wreg
  3096  0EC7  00F4               	movwf	Read_ADC@channel
  3097                           
  3098                           ;ADC.c: 34: unsigned int Read_ADC(unsigned char channel);ADC.c: 35: {;ADC.c: 36:     if(
      +                          channel > 7) return 0;
  3099  0EC8  3008               	movlw	8
  3100  0EC9  0274               	subwf	Read_ADC@channel,w
  3101  0ECA  1C03               	skipc
  3102  0ECB  2ECF               	goto	l1408
  3103  0ECC  01F0               	clrf	?_Read_ADC
  3104  0ECD  01F1               	clrf	?_Read_ADC+1
  3105  0ECE  0008               	return
  3106  0ECF                     l1408:	
  3107                           
  3108                           ;ADC.c: 37:     ADCON0 |= channel << 3;
  3109  0ECF  0874               	movf	Read_ADC@channel,w	;volatile
  3110  0ED0  00F2               	movwf	??_Read_ADC
  3111  0ED1  3002               	movlw	2
  3112  0ED2                     u1525:	
  3113  0ED2  1003               	clrc
  3114  0ED3  0DF2               	rlf	??_Read_ADC,f
  3115  0ED4  3EFF               	addlw	-1
  3116  0ED5  1D03               	skipz
  3117  0ED6  2ED2               	goto	u1525
  3118  0ED7  1003               	clrc
  3119  0ED8  0D72               	rlf	??_Read_ADC,w
  3120  0ED9  00F3               	movwf	??_Read_ADC+1
  3121  0EDA  0873               	movf	??_Read_ADC+1,w
  3122  0EDB  1283               	bcf	3,5	;RP0=0, select bank0
  3123  0EDC  1303               	bcf	3,6	;RP1=0, select bank0
  3124  0EDD  049F               	iorwf	31,f	;volatile
  3125                           
  3126                           ;ADC.c: 38:     _delay((unsigned long)((10)*(20000000/4000000.0)));
  3127  0EDE  3010               	movlw	16
  3128  0EDF  00F2               	movwf	??_Read_ADC
  3129  0EE0                     u2757:	
  3130  0EE0  0BF2               	decfsz	??_Read_ADC,f
  3131  0EE1  2EE0               	goto	u2757
  3132  0EE2  0000               	nop
  3133                           
  3134                           ;ADC.c: 39:     GO_nDONE = 1;
  3135  0EE3  1283               	bcf	3,5	;RP0=0, select bank0
  3136  0EE4  1303               	bcf	3,6	;RP1=0, select bank0
  3137  0EE5  151F               	bsf	31,2	;volatile
  3138  0EE6                     l43:	
  3139                           ;ADC.c: 40:     while(GO_nDONE);
  3140                           
  3141  0EE6  191F               	btfsc	31,2	;volatile
  3142  0EE7  2EE6               	goto	l43
  3143                           
  3144                           ;ADC.c: 41:     return ((ADRESH<<8)+ADRESL);
  3145  0EE8  081E               	movf	30,w	;volatile
  3146  0EE9  00F1               	movwf	?_Read_ADC+1
  3147  0EEA  1683               	bsf	3,5	;RP0=1, select bank1
  3148  0EEB  1303               	bcf	3,6	;RP1=0, select bank1
  3149  0EEC  081E               	movf	30,w	;volatile
  3150  0EED  00F0               	movwf	?_Read_ADC
  3151  0EEE  0008               	return
  3152  0EEF                     __end_of_Read_ADC:	
  3153                           
  3154                           	psect	text9
  3155  0E82                     __ptext9:	
  3156 ;; *************** function _Lcd_Write_String *****************
  3157 ;; Defined at:
  3158 ;;		line 98 in file "lcd4.c"
  3159 ;; Parameters:    Size  Location     Type
  3160 ;;  a               1    wreg     PTR unsigned char 
  3161 ;;		 -> STR_2(11), STR_1(10), 
  3162 ;; Auto vars:     Size  Location     Type
  3163 ;;  a               1    7[COMMON] PTR unsigned char 
  3164 ;;		 -> STR_2(11), STR_1(10), 
  3165 ;;  i               2    5[COMMON] int 
  3166 ;; Return value:  Size  Location     Type
  3167 ;;                  1    wreg      void 
  3168 ;; Registers used:
  3169 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3170 ;; Tracked objects:
  3171 ;;		On entry : 0/0
  3172 ;;		On exit  : 0/0
  3173 ;;		Unchanged: 0/0
  3174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3175 ;;      Params:         0       0       0       0       0
  3176 ;;      Locals:         3       0       0       0       0
  3177 ;;      Temps:          0       0       0       0       0
  3178 ;;      Totals:         3       0       0       0       0
  3179 ;;Total ram usage:        3 bytes
  3180 ;; Hardware stack levels used:    1
  3181 ;; Hardware stack levels required when called:    2
  3182 ;; This function calls:
  3183 ;;		_Lcd_Write_Char
  3184 ;; This function is called by:
  3185 ;;		_main
  3186 ;; This function uses a non-reentrant model
  3187 ;;
  3188                           
  3189                           
  3190                           ;psect for function _Lcd_Write_String
  3191  0E82                     _Lcd_Write_String:	
  3192                           
  3193                           ;incstack = 0
  3194                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3195                           ;Lcd_Write_String@a stored from wreg
  3196  0E82  00F7               	movwf	Lcd_Write_String@a
  3197                           
  3198                           ;lcd4.c: 98: void Lcd_Write_String(char *a);lcd4.c: 99: {;lcd4.c: 100:  int i;;lcd4.c: 1
      +                          01:  for(i=0;a[i]!='\0';i++)
  3199  0E83  01F5               	clrf	Lcd_Write_String@i
  3200  0E84  01F6               	clrf	Lcd_Write_String@i+1
  3201  0E85                     l1380:	
  3202  0E85  0875               	movf	Lcd_Write_String@i,w
  3203  0E86  0777               	addwf	Lcd_Write_String@a,w
  3204  0E87  0084               	movwf	4
  3205  0E88  120A  158A  2000  120A  158A  	fcall	stringdir
  3206  0E8D  3A00               	xorlw	0
  3207  0E8E  1903               	btfsc	3,2
  3208  0E8F  0008               	return
  3209                           
  3210                           ;lcd4.c: 102:     Lcd_Write_Char(a[i]);
  3211  0E90  0875               	movf	Lcd_Write_String@i,w
  3212  0E91  0777               	addwf	Lcd_Write_String@a,w
  3213  0E92  0084               	movwf	4
  3214  0E93  120A  158A  2000  120A  158A  	fcall	stringdir
  3215  0E98  120A  158A  2721  120A  158A  	fcall	_Lcd_Write_Char
  3216  0E9D  3001               	movlw	1
  3217  0E9E  07F5               	addwf	Lcd_Write_String@i,f
  3218  0E9F  1803               	skipnc
  3219  0EA0  0AF6               	incf	Lcd_Write_String@i+1,f
  3220  0EA1  3000               	movlw	0
  3221  0EA2  07F6               	addwf	Lcd_Write_String@i+1,f
  3222  0EA3  2E85               	goto	l1380
  3223  0EA4                     __end_of_Lcd_Write_String:	
  3224                           
  3225                           	psect	text10
  3226  0F21                     __ptext10:	
  3227 ;; *************** function _Lcd_Write_Char *****************
  3228 ;; Defined at:
  3229 ;;		line 82 in file "lcd4.c"
  3230 ;; Parameters:    Size  Location     Type
  3231 ;;  a               1    wreg     unsigned char 
  3232 ;; Auto vars:     Size  Location     Type
  3233 ;;  a               1    4[COMMON] unsigned char 
  3234 ;;  y               1    3[COMMON] unsigned char 
  3235 ;;  temp            1    2[COMMON] unsigned char 
  3236 ;; Return value:  Size  Location     Type
  3237 ;;                  1    wreg      void 
  3238 ;; Registers used:
  3239 ;;		wreg, status,2, status,0, pclath, cstack
  3240 ;; Tracked objects:
  3241 ;;		On entry : 0/0
  3242 ;;		On exit  : 0/0
  3243 ;;		Unchanged: 0/0
  3244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3245 ;;      Params:         0       0       0       0       0
  3246 ;;      Locals:         3       0       0       0       0
  3247 ;;      Temps:          1       0       0       0       0
  3248 ;;      Totals:         4       0       0       0       0
  3249 ;;Total ram usage:        4 bytes
  3250 ;; Hardware stack levels used:    1
  3251 ;; Hardware stack levels required when called:    1
  3252 ;; This function calls:
  3253 ;;		_Lcd_Port
  3254 ;; This function is called by:
  3255 ;;		_main
  3256 ;;		_Lcd_Write_String
  3257 ;; This function uses a non-reentrant model
  3258 ;;
  3259                           
  3260                           
  3261                           ;psect for function _Lcd_Write_Char
  3262  0F21                     _Lcd_Write_Char:	
  3263                           
  3264                           ;incstack = 0
  3265                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3266                           ;Lcd_Write_Char@a stored from wreg
  3267  0F21  00F4               	movwf	Lcd_Write_Char@a
  3268                           
  3269                           ;lcd4.c: 82: void Lcd_Write_Char(char a);lcd4.c: 83: {;lcd4.c: 84:    char temp,y;;lcd4.
      +                          c: 85:    temp = a&0x0F;
  3270  0F22  0874               	movf	Lcd_Write_Char@a,w
  3271  0F23  390F               	andlw	15
  3272  0F24  00F1               	movwf	??_Lcd_Write_Char
  3273  0F25  0871               	movf	??_Lcd_Write_Char,w
  3274  0F26  00F2               	movwf	Lcd_Write_Char@temp
  3275                           
  3276                           ;lcd4.c: 86:    y = a&0xF0;
  3277  0F27  0874               	movf	Lcd_Write_Char@a,w
  3278  0F28  39F0               	andlw	240
  3279  0F29  00F1               	movwf	??_Lcd_Write_Char
  3280  0F2A  0871               	movf	??_Lcd_Write_Char,w
  3281  0F2B  00F3               	movwf	Lcd_Write_Char@y
  3282                           
  3283                           ;lcd4.c: 87:    RD0 = 1;
  3284  0F2C  1283               	bcf	3,5	;RP0=0, select bank0
  3285  0F2D  1303               	bcf	3,6	;RP1=0, select bank0
  3286  0F2E  1408               	bsf	8,0	;volatile
  3287                           
  3288                           ;lcd4.c: 88:    Lcd_Port(y>>4);
  3289  0F2F  0873               	movf	Lcd_Write_Char@y,w
  3290  0F30  00F1               	movwf	??_Lcd_Write_Char
  3291  0F31  3004               	movlw	4
  3292  0F32                     u1425:	
  3293  0F32  1003               	clrc
  3294  0F33  0CF1               	rrf	??_Lcd_Write_Char,f
  3295  0F34  3EFF               	addlw	-1
  3296  0F35  1D03               	skipz
  3297  0F36  2F32               	goto	u1425
  3298  0F37  0871               	movf	??_Lcd_Write_Char,w
  3299  0F38  120A  158A  264E  120A  158A  	fcall	_Lcd_Port
  3300                           
  3301                           ;lcd4.c: 89:    RD1 = 1;
  3302  0F3D  1283               	bcf	3,5	;RP0=0, select bank0
  3303  0F3E  1303               	bcf	3,6	;RP1=0, select bank0
  3304  0F3F  1488               	bsf	8,1	;volatile
  3305                           
  3306                           ;lcd4.c: 90:    _delay((unsigned long)((40)*(20000000/4000000.0)));
  3307  0F40  3042               	movlw	66
  3308  0F41  00F1               	movwf	??_Lcd_Write_Char
  3309  0F42                     u2767:	
  3310  0F42  0BF1               	decfsz	??_Lcd_Write_Char,f
  3311  0F43  2F42               	goto	u2767
  3312  0F44  0000               	nop
  3313                           
  3314                           ;lcd4.c: 91:    RD1 = 0;
  3315  0F45  1283               	bcf	3,5	;RP0=0, select bank0
  3316  0F46  1303               	bcf	3,6	;RP1=0, select bank0
  3317  0F47  1088               	bcf	8,1	;volatile
  3318                           
  3319                           ;lcd4.c: 92:    Lcd_Port(temp);
  3320  0F48  0872               	movf	Lcd_Write_Char@temp,w
  3321  0F49  120A  158A  264E  120A  158A  	fcall	_Lcd_Port
  3322                           
  3323                           ;lcd4.c: 93:    RD1 = 1;
  3324  0F4E  1283               	bcf	3,5	;RP0=0, select bank0
  3325  0F4F  1303               	bcf	3,6	;RP1=0, select bank0
  3326  0F50  1488               	bsf	8,1	;volatile
  3327                           
  3328                           ;lcd4.c: 94:    _delay((unsigned long)((40)*(20000000/4000000.0)));
  3329  0F51  3042               	movlw	66
  3330  0F52  00F1               	movwf	??_Lcd_Write_Char
  3331  0F53                     u2777:	
  3332  0F53  0BF1               	decfsz	??_Lcd_Write_Char,f
  3333  0F54  2F53               	goto	u2777
  3334  0F55  0000               	nop
  3335                           
  3336                           ;lcd4.c: 95:    RD1 = 0;
  3337  0F56  1283               	bcf	3,5	;RP0=0, select bank0
  3338  0F57  1303               	bcf	3,6	;RP1=0, select bank0
  3339  0F58  1088               	bcf	8,1	;volatile
  3340  0F59  0008               	return
  3341  0F5A                     __end_of_Lcd_Write_Char:	
  3342                           
  3343                           	psect	text11
  3344  0F5A                     __ptext11:	
  3345 ;; *************** function _Lcd_Set_Cursor *****************
  3346 ;; Defined at:
  3347 ;;		line 42 in file "lcd4.c"
  3348 ;; Parameters:    Size  Location     Type
  3349 ;;  a               1    wreg     unsigned char 
  3350 ;;  b               1    4[COMMON] unsigned char 
  3351 ;; Auto vars:     Size  Location     Type
  3352 ;;  a               1    7[COMMON] unsigned char 
  3353 ;;  temp            1   10[COMMON] unsigned char 
  3354 ;;  y               1    9[COMMON] unsigned char 
  3355 ;;  z               1    8[COMMON] unsigned char 
  3356 ;; Return value:  Size  Location     Type
  3357 ;;                  1    wreg      void 
  3358 ;; Registers used:
  3359 ;;		wreg, status,2, status,0, pclath, cstack
  3360 ;; Tracked objects:
  3361 ;;		On entry : 0/0
  3362 ;;		On exit  : 0/0
  3363 ;;		Unchanged: 0/0
  3364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3365 ;;      Params:         1       0       0       0       0
  3366 ;;      Locals:         4       0       0       0       0
  3367 ;;      Temps:          2       0       0       0       0
  3368 ;;      Totals:         7       0       0       0       0
  3369 ;;Total ram usage:        7 bytes
  3370 ;; Hardware stack levels used:    1
  3371 ;; Hardware stack levels required when called:    2
  3372 ;; This function calls:
  3373 ;;		_Lcd_Cmd
  3374 ;; This function is called by:
  3375 ;;		_main
  3376 ;; This function uses a non-reentrant model
  3377 ;;
  3378                           
  3379                           
  3380                           ;psect for function _Lcd_Set_Cursor
  3381  0F5A                     _Lcd_Set_Cursor:	
  3382                           
  3383                           ;incstack = 0
  3384                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  3385                           ;Lcd_Set_Cursor@a stored from wreg
  3386  0F5A  00F7               	movwf	Lcd_Set_Cursor@a
  3387                           
  3388                           ;lcd4.c: 42: void Lcd_Set_Cursor(char a, char b);lcd4.c: 43: {;lcd4.c: 44:  char temp,z,
      +                          y;;lcd4.c: 45:  if(a == 1)
  3389  0F5B  0377               	decf	Lcd_Set_Cursor@a,w
  3390  0F5C  1D03               	btfss	3,2
  3391  0F5D  2F7F               	goto	l1392
  3392                           
  3393                           ;lcd4.c: 46:  {;lcd4.c: 47:    temp = 0x80 + b - 1;
  3394  0F5E  0874               	movf	Lcd_Set_Cursor@b,w
  3395  0F5F  3E7F               	addlw	127
  3396  0F60  00F5               	movwf	??_Lcd_Set_Cursor
  3397  0F61  0875               	movf	??_Lcd_Set_Cursor,w
  3398  0F62  00FA               	movwf	Lcd_Set_Cursor@temp
  3399                           
  3400                           ;lcd4.c: 48:   z = temp>>4;
  3401  0F63  087A               	movf	Lcd_Set_Cursor@temp,w
  3402  0F64  00F5               	movwf	??_Lcd_Set_Cursor
  3403  0F65  3004               	movlw	4
  3404  0F66                     u1485:	
  3405  0F66  1003               	clrc
  3406  0F67  0CF5               	rrf	??_Lcd_Set_Cursor,f
  3407  0F68  3EFF               	addlw	-1
  3408  0F69  1D03               	skipz
  3409  0F6A  2F66               	goto	u1485
  3410  0F6B  0875               	movf	??_Lcd_Set_Cursor,w
  3411  0F6C  00F6               	movwf	??_Lcd_Set_Cursor+1
  3412  0F6D  0876               	movf	??_Lcd_Set_Cursor+1,w
  3413  0F6E  00F8               	movwf	Lcd_Set_Cursor@z
  3414                           
  3415                           ;lcd4.c: 49:   y = temp & 0x0F;
  3416  0F6F  087A               	movf	Lcd_Set_Cursor@temp,w
  3417  0F70  390F               	andlw	15
  3418  0F71  00F5               	movwf	??_Lcd_Set_Cursor
  3419  0F72  0875               	movf	??_Lcd_Set_Cursor,w
  3420  0F73  00F9               	movwf	Lcd_Set_Cursor@y
  3421                           
  3422                           ;lcd4.c: 50:   Lcd_Cmd(z);
  3423  0F74  0878               	movf	Lcd_Set_Cursor@z,w
  3424  0F75  120A  158A  2668  120A  158A  	fcall	_Lcd_Cmd
  3425                           
  3426                           ;lcd4.c: 51:   Lcd_Cmd(y);
  3427  0F7A  0879               	movf	Lcd_Set_Cursor@y,w
  3428  0F7B  120A  158A  2668   	fcall	_Lcd_Cmd
  3429                           
  3430                           ;lcd4.c: 52:  }
  3431  0F7E  0008               	return
  3432  0F7F                     l1392:	
  3433  0F7F  3002               	movlw	2
  3434  0F80  0677               	xorwf	Lcd_Set_Cursor@a,w
  3435  0F81  1D03               	btfss	3,2
  3436  0F82  0008               	return
  3437                           
  3438                           ;lcd4.c: 54:  {;lcd4.c: 55:   temp = 0xC0 + b - 1;
  3439  0F83  0874               	movf	Lcd_Set_Cursor@b,w
  3440  0F84  3EBF               	addlw	191
  3441  0F85  00F5               	movwf	??_Lcd_Set_Cursor
  3442  0F86  0875               	movf	??_Lcd_Set_Cursor,w
  3443  0F87  00FA               	movwf	Lcd_Set_Cursor@temp
  3444                           
  3445                           ;lcd4.c: 56:   z = temp>>4;
  3446  0F88  087A               	movf	Lcd_Set_Cursor@temp,w
  3447  0F89  00F5               	movwf	??_Lcd_Set_Cursor
  3448  0F8A  3004               	movlw	4
  3449  0F8B                     u1505:	
  3450  0F8B  1003               	clrc
  3451  0F8C  0CF5               	rrf	??_Lcd_Set_Cursor,f
  3452  0F8D  3EFF               	addlw	-1
  3453  0F8E  1D03               	skipz
  3454  0F8F  2F8B               	goto	u1505
  3455  0F90  0875               	movf	??_Lcd_Set_Cursor,w
  3456  0F91  00F6               	movwf	??_Lcd_Set_Cursor+1
  3457  0F92  0876               	movf	??_Lcd_Set_Cursor+1,w
  3458  0F93  00F8               	movwf	Lcd_Set_Cursor@z
  3459                           
  3460                           ;lcd4.c: 57:   y = temp & 0x0F;
  3461  0F94  087A               	movf	Lcd_Set_Cursor@temp,w
  3462  0F95  390F               	andlw	15
  3463  0F96  00F5               	movwf	??_Lcd_Set_Cursor
  3464  0F97  0875               	movf	??_Lcd_Set_Cursor,w
  3465  0F98  00F9               	movwf	Lcd_Set_Cursor@y
  3466                           
  3467                           ;lcd4.c: 58:   Lcd_Cmd(z);
  3468  0F99  0878               	movf	Lcd_Set_Cursor@z,w
  3469  0F9A  120A  158A  2668  120A  158A  	fcall	_Lcd_Cmd
  3470                           
  3471                           ;lcd4.c: 59:   Lcd_Cmd(y);
  3472  0F9F  0879               	movf	Lcd_Set_Cursor@y,w
  3473  0FA0  120A  158A  2668   	fcall	_Lcd_Cmd
  3474  0FA3  0008               	return
  3475  0FA4                     __end_of_Lcd_Set_Cursor:	
  3476                           
  3477                           	psect	text12
  3478  0FA4                     __ptext12:	
  3479 ;; *************** function _Lcd_Init *****************
  3480 ;; Defined at:
  3481 ;;		line 63 in file "lcd4.c"
  3482 ;; Parameters:    Size  Location     Type
  3483 ;;		None
  3484 ;; Auto vars:     Size  Location     Type
  3485 ;;		None
  3486 ;; Return value:  Size  Location     Type
  3487 ;;                  1    wreg      void 
  3488 ;; Registers used:
  3489 ;;		wreg, status,2, status,0, pclath, cstack
  3490 ;; Tracked objects:
  3491 ;;		On entry : 0/0
  3492 ;;		On exit  : 0/0
  3493 ;;		Unchanged: 0/0
  3494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3495 ;;      Params:         0       0       0       0       0
  3496 ;;      Locals:         0       0       0       0       0
  3497 ;;      Temps:          2       0       0       0       0
  3498 ;;      Totals:         2       0       0       0       0
  3499 ;;Total ram usage:        2 bytes
  3500 ;; Hardware stack levels used:    1
  3501 ;; Hardware stack levels required when called:    2
  3502 ;; This function calls:
  3503 ;;		_Lcd_Cmd
  3504 ;;		_Lcd_Port
  3505 ;; This function is called by:
  3506 ;;		_main
  3507 ;; This function uses a non-reentrant model
  3508 ;;
  3509                           
  3510                           
  3511                           ;psect for function _Lcd_Init
  3512  0FA4                     _Lcd_Init:	
  3513                           
  3514                           ;lcd4.c: 65:   Lcd_Port(0x00);
  3515                           
  3516                           ;incstack = 0
  3517                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3518  0FA4  3000               	movlw	0
  3519  0FA5  120A  158A  264E  120A  158A  	fcall	_Lcd_Port
  3520                           
  3521                           ;lcd4.c: 66:    _delay((unsigned long)((20)*(20000000/4000.0)));
  3522  0FAA  3082               	movlw	130
  3523  0FAB  00F5               	movwf	??_Lcd_Init+1
  3524  0FAC  30DD               	movlw	221
  3525  0FAD  00F4               	movwf	??_Lcd_Init
  3526  0FAE                     u2787:	
  3527  0FAE  0BF4               	decfsz	??_Lcd_Init,f
  3528  0FAF  2FAE               	goto	u2787
  3529  0FB0  0BF5               	decfsz	??_Lcd_Init+1,f
  3530  0FB1  2FAE               	goto	u2787
  3531  0FB2  2FB3               	nop2
  3532                           
  3533                           ;lcd4.c: 67:   Lcd_Cmd(0x03);
  3534  0FB3  3003               	movlw	3
  3535  0FB4  120A  158A  2668  120A  158A  	fcall	_Lcd_Cmd
  3536                           
  3537                           ;lcd4.c: 68:  _delay((unsigned long)((5)*(20000000/4000.0)));
  3538  0FB9  3021               	movlw	33
  3539  0FBA  00F5               	movwf	??_Lcd_Init+1
  3540  0FBB  3076               	movlw	118
  3541  0FBC  00F4               	movwf	??_Lcd_Init
  3542  0FBD                     u2797:	
  3543  0FBD  0BF4               	decfsz	??_Lcd_Init,f
  3544  0FBE  2FBD               	goto	u2797
  3545  0FBF  0BF5               	decfsz	??_Lcd_Init+1,f
  3546  0FC0  2FBD               	goto	u2797
  3547  0FC1  0000               	nop
  3548                           
  3549                           ;lcd4.c: 69:   Lcd_Cmd(0x03);
  3550  0FC2  3003               	movlw	3
  3551  0FC3  120A  158A  2668  120A  158A  	fcall	_Lcd_Cmd
  3552                           
  3553                           ;lcd4.c: 70:  _delay((unsigned long)((11)*(20000000/4000.0)));
  3554  0FC8  3048               	movlw	72
  3555  0FC9  00F5               	movwf	??_Lcd_Init+1
  3556  0FCA  306C               	movlw	108
  3557  0FCB  00F4               	movwf	??_Lcd_Init
  3558  0FCC                     u2807:	
  3559  0FCC  0BF4               	decfsz	??_Lcd_Init,f
  3560  0FCD  2FCC               	goto	u2807
  3561  0FCE  0BF5               	decfsz	??_Lcd_Init+1,f
  3562  0FCF  2FCC               	goto	u2807
  3563  0FD0  0000               	nop
  3564                           
  3565                           ;lcd4.c: 71:   Lcd_Cmd(0x03);
  3566  0FD1  3003               	movlw	3
  3567  0FD2  120A  158A  2668  120A  158A  	fcall	_Lcd_Cmd
  3568                           
  3569                           ;lcd4.c: 73:   Lcd_Cmd(0x02);
  3570  0FD7  3002               	movlw	2
  3571  0FD8  120A  158A  2668  120A  158A  	fcall	_Lcd_Cmd
  3572                           
  3573                           ;lcd4.c: 74:   Lcd_Cmd(0x02);
  3574  0FDD  3002               	movlw	2
  3575  0FDE  120A  158A  2668  120A  158A  	fcall	_Lcd_Cmd
  3576                           
  3577                           ;lcd4.c: 75:   Lcd_Cmd(0x08);
  3578  0FE3  3008               	movlw	8
  3579  0FE4  120A  158A  2668  120A  158A  	fcall	_Lcd_Cmd
  3580                           
  3581                           ;lcd4.c: 76:   Lcd_Cmd(0x00);
  3582  0FE9  3000               	movlw	0
  3583  0FEA  120A  158A  2668  120A  158A  	fcall	_Lcd_Cmd
  3584                           
  3585                           ;lcd4.c: 77:   Lcd_Cmd(0x0C);
  3586  0FEF  300C               	movlw	12
  3587  0FF0  120A  158A  2668  120A  158A  	fcall	_Lcd_Cmd
  3588                           
  3589                           ;lcd4.c: 78:   Lcd_Cmd(0x00);
  3590  0FF5  3000               	movlw	0
  3591  0FF6  120A  158A  2668  120A  158A  	fcall	_Lcd_Cmd
  3592                           
  3593                           ;lcd4.c: 79:   Lcd_Cmd(0x06);
  3594  0FFB  3006               	movlw	6
  3595  0FFC  120A  158A  2668   	fcall	_Lcd_Cmd
  3596  0FFF  0008               	return
  3597  1000                     __end_of_Lcd_Init:	
  3598                           
  3599                           	psect	text13
  3600  0E68                     __ptext13:	
  3601 ;; *************** function _Lcd_Cmd *****************
  3602 ;; Defined at:
  3603 ;;		line 27 in file "lcd4.c"
  3604 ;; Parameters:    Size  Location     Type
  3605 ;;  a               1    wreg     unsigned char 
  3606 ;; Auto vars:     Size  Location     Type
  3607 ;;  a               1    3[COMMON] unsigned char 
  3608 ;; Return value:  Size  Location     Type
  3609 ;;                  1    wreg      void 
  3610 ;; Registers used:
  3611 ;;		wreg, status,2, status,0, pclath, cstack
  3612 ;; Tracked objects:
  3613 ;;		On entry : 0/0
  3614 ;;		On exit  : 0/0
  3615 ;;		Unchanged: 0/0
  3616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3617 ;;      Params:         0       0       0       0       0
  3618 ;;      Locals:         1       0       0       0       0
  3619 ;;      Temps:          2       0       0       0       0
  3620 ;;      Totals:         3       0       0       0       0
  3621 ;;Total ram usage:        3 bytes
  3622 ;; Hardware stack levels used:    1
  3623 ;; Hardware stack levels required when called:    1
  3624 ;; This function calls:
  3625 ;;		_Lcd_Port
  3626 ;; This function is called by:
  3627 ;;		_Lcd_Set_Cursor
  3628 ;;		_Lcd_Init
  3629 ;;		_Lcd_Clear
  3630 ;;		_Lcd_Shift_Right
  3631 ;;		_Lcd_Shift_Left
  3632 ;; This function uses a non-reentrant model
  3633 ;;
  3634                           
  3635                           
  3636                           ;psect for function _Lcd_Cmd
  3637  0E68                     _Lcd_Cmd:	
  3638                           
  3639                           ;incstack = 0
  3640                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3641                           ;Lcd_Cmd@a stored from wreg
  3642  0E68  00F3               	movwf	Lcd_Cmd@a
  3643                           
  3644                           ;lcd4.c: 27: void Lcd_Cmd(char a);lcd4.c: 28: {;lcd4.c: 29:  RD0 = 0;
  3645  0E69  1283               	bcf	3,5	;RP0=0, select bank0
  3646  0E6A  1303               	bcf	3,6	;RP1=0, select bank0
  3647  0E6B  1008               	bcf	8,0	;volatile
  3648                           
  3649                           ;lcd4.c: 30:  Lcd_Port(a);
  3650  0E6C  0873               	movf	Lcd_Cmd@a,w
  3651  0E6D  120A  158A  264E  120A  158A  	fcall	_Lcd_Port
  3652                           
  3653                           ;lcd4.c: 31:  RD1 = 1;
  3654  0E72  1283               	bcf	3,5	;RP0=0, select bank0
  3655  0E73  1303               	bcf	3,6	;RP1=0, select bank0
  3656  0E74  1488               	bsf	8,1	;volatile
  3657                           
  3658                           ;lcd4.c: 32:         _delay((unsigned long)((4)*(20000000/4000.0)));
  3659  0E75  301A               	movlw	26
  3660  0E76  00F2               	movwf	??_Lcd_Cmd+1
  3661  0E77  30F8               	movlw	248
  3662  0E78  00F1               	movwf	??_Lcd_Cmd
  3663  0E79                     u2817:	
  3664  0E79  0BF1               	decfsz	??_Lcd_Cmd,f
  3665  0E7A  2E79               	goto	u2817
  3666  0E7B  0BF2               	decfsz	??_Lcd_Cmd+1,f
  3667  0E7C  2E79               	goto	u2817
  3668  0E7D  0000               	nop
  3669                           
  3670                           ;lcd4.c: 33:         RD1 = 0;
  3671  0E7E  1283               	bcf	3,5	;RP0=0, select bank0
  3672  0E7F  1303               	bcf	3,6	;RP1=0, select bank0
  3673  0E80  1088               	bcf	8,1	;volatile
  3674  0E81  0008               	return
  3675  0E82                     __end_of_Lcd_Cmd:	
  3676                           
  3677                           	psect	text14
  3678  0E4E                     __ptext14:	
  3679 ;; *************** function _Lcd_Port *****************
  3680 ;; Defined at:
  3681 ;;		line 5 in file "lcd4.c"
  3682 ;; Parameters:    Size  Location     Type
  3683 ;;  a               1    wreg     unsigned char 
  3684 ;; Auto vars:     Size  Location     Type
  3685 ;;  a               1    0[COMMON] unsigned char 
  3686 ;; Return value:  Size  Location     Type
  3687 ;;                  1    wreg      void 
  3688 ;; Registers used:
  3689 ;;		wreg
  3690 ;; Tracked objects:
  3691 ;;		On entry : 0/0
  3692 ;;		On exit  : 0/0
  3693 ;;		Unchanged: 0/0
  3694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3695 ;;      Params:         0       0       0       0       0
  3696 ;;      Locals:         1       0       0       0       0
  3697 ;;      Temps:          0       0       0       0       0
  3698 ;;      Totals:         1       0       0       0       0
  3699 ;;Total ram usage:        1 bytes
  3700 ;; Hardware stack levels used:    1
  3701 ;; This function calls:
  3702 ;;		Nothing
  3703 ;; This function is called by:
  3704 ;;		_Lcd_Cmd
  3705 ;;		_Lcd_Init
  3706 ;;		_Lcd_Write_Char
  3707 ;; This function uses a non-reentrant model
  3708 ;;
  3709                           
  3710                           
  3711                           ;psect for function _Lcd_Port
  3712  0E4E                     _Lcd_Port:	
  3713                           
  3714                           ;incstack = 0
  3715                           ; Regs used in _Lcd_Port: [wreg]
  3716                           ;Lcd_Port@a stored from wreg
  3717  0E4E  00F0               	movwf	Lcd_Port@a
  3718                           
  3719                           ;lcd4.c: 5: void Lcd_Port(char a);lcd4.c: 6: {;lcd4.c: 7:  if(a & 1)
  3720  0E4F  1C70               	btfss	Lcd_Port@a,0
  3721  0E50  2E55               	goto	l62
  3722                           
  3723                           ;lcd4.c: 8:   RD2 = 1;
  3724  0E51  1283               	bcf	3,5	;RP0=0, select bank0
  3725  0E52  1303               	bcf	3,6	;RP1=0, select bank0
  3726  0E53  1508               	bsf	8,2	;volatile
  3727  0E54  2E58               	goto	l63
  3728  0E55                     l62:	
  3729                           ;lcd4.c: 9:  else
  3730                           
  3731                           
  3732                           ;lcd4.c: 10:   RD2 = 0;
  3733  0E55  1283               	bcf	3,5	;RP0=0, select bank0
  3734  0E56  1303               	bcf	3,6	;RP1=0, select bank0
  3735  0E57  1108               	bcf	8,2	;volatile
  3736  0E58                     l63:	
  3737                           
  3738                           ;lcd4.c: 12:  if(a & 2)
  3739  0E58  1CF0               	btfss	Lcd_Port@a,1
  3740  0E59  2E5C               	goto	l64
  3741                           
  3742                           ;lcd4.c: 13:   RD3 = 1;
  3743  0E5A  1588               	bsf	8,3	;volatile
  3744  0E5B  2E5D               	goto	l65
  3745  0E5C                     l64:	
  3746                           ;lcd4.c: 14:  else
  3747                           
  3748                           
  3749                           ;lcd4.c: 15:   RD3 = 0;
  3750  0E5C  1188               	bcf	8,3	;volatile
  3751  0E5D                     l65:	
  3752                           
  3753                           ;lcd4.c: 17:  if(a & 4)
  3754  0E5D  1D70               	btfss	Lcd_Port@a,2
  3755  0E5E  2E61               	goto	l66
  3756                           
  3757                           ;lcd4.c: 18:   RD4 = 1;
  3758  0E5F  1608               	bsf	8,4	;volatile
  3759  0E60  2E62               	goto	l67
  3760  0E61                     l66:	
  3761                           ;lcd4.c: 19:  else
  3762                           
  3763                           
  3764                           ;lcd4.c: 20:   RD4 = 0;
  3765  0E61  1208               	bcf	8,4	;volatile
  3766  0E62                     l67:	
  3767                           
  3768                           ;lcd4.c: 22:  if(a & 8)
  3769  0E62  1DF0               	btfss	Lcd_Port@a,3
  3770  0E63  2E66               	goto	l68
  3771                           
  3772                           ;lcd4.c: 23:   RD5 = 1;
  3773  0E64  1688               	bsf	8,5	;volatile
  3774  0E65  0008               	return
  3775  0E66                     l68:	
  3776                           ;lcd4.c: 24:  else
  3777                           
  3778                           
  3779                           ;lcd4.c: 25:   RD5 = 0;
  3780  0E66  1288               	bcf	8,5	;volatile
  3781  0E67  0008               	return
  3782  0E68                     __end_of_Lcd_Port:	
  3783  007E                     btemp	set	126	;btemp
  3784  007E                     wtemp0	set	126


Data Sizes:
    Strings     21
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     62      62
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 11
		 -> STR_2(CODE[11]), STR_1(CODE[10]), 


Critical Paths under _main in COMMON

    _main->___lwdiv
    _main->___xxtofl
    ___lwdiv->___lwmod
    ___fltol->___xxtofl
    ___flmul->___xxtofl
    ___fladd->___xxtofl
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->___fltol
    ___fltol->___fladd
    ___fladd->___flmul

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    8785
                                             57 BANK0      5     5      0
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                           _Read_ADC
                            ___fladd
                            ___flmul
                            ___fltol
                            ___lwdiv
                            ___lwmod
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              6     2      4     919
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              8     4      4     922
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             11     7      4     305
                                             46 BANK0     11     7      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             26    18      8    2417
                                              0 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (1) ___fladd                                             20    12      8    2262
                                             26 BANK0     20    12      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _Read_ADC                                             5     3      2      44
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     334
                                              5 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     608
                                              4 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _Read_ADC
   ___fladd
     ___flmul (ARG)
       __Umul8_16
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
     __Umul8_16
     ___xxtofl (ARG)
   ___fltol
     ___fladd (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul (ARG)
       __Umul8_16
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___lwdiv
     ___lwmod (ARG)
   ___lwmod
   ___xxtofl

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3E      3E       5       77.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Mar 09 23:11:28 2019

                        pc 0002                __CFG_CP$OFF 0000                         l43 0EE6  
                       l62 0E55                         l63 0E58                         l64 0E5C  
                       l65 0E5D                         l66 0E61                         l67 0E62  
                       l68 0E66                         fsr 0004        __Umul8_16@word_mpld 0076  
                      l500 045C                        l521 04DC                        l513 04C4  
                      l613 00CE                        l632 0EB6                        l626 0124  
                      l483 03A3                        l379 0093                        l627 012E  
                      l619 010E                        l485 0381                        l479 030A  
                      l587 07EF                        _RD0 0040                        _RD1 0041  
                      _RD2 0042                        _RD3 0043                        _RD4 0044  
                      _RD5 0045                        _RD6 0046               __CFG_CPD$OFF 0000  
                      fsr0 0004               __CFG_FOSC$HS 0000               ___flmul@aexp 0032  
             ___flmul@bexp 0033               ___flmul@sign 002D               ___flmul@temp 0038  
             ___flmul@prod 0034               __CFG_LVP$OFF 0000               ___fltol@exp1 0058  
                     l1420 004F                       l1408 0ECF                       l1520 02D8  
                     l1440 007F                       l1424 0058                       l1522 02E0  
                     l1354 0EAE                       l1450 00A2                       l1442 008F  
                     l1380 0E85                       l1540 02FF                       l1516 02D5  
                     l1614 03D2                       l1606 03B1                       l1550 0314  
                     l1710 0504                       l1392 0F7F                       l1616 03D4  
                     l1624 03E4                       l1544 0302                       l1800 0775  
                     l1712 0506                       l1472 0034                       l1464 0010  
                     l1650 047D                       l1642 046E                       l1634 044E  
                     l1730 052B                       l1714 050E                       l1466 001E  
                     l1490 0F03                       l1580 0350                       l1804 0777  
                     l1740 0541                       l1732 0533                       l1476 003F  
                     l1590 038E                       l1814 07A9                       l1494 0F11  
                     l1664 048F                       l1656 0484                       l1824 07D8  
                     l1728 0529                       l1488 0EF5                       l1920 017A  
                     l1690 04D8                       l1658 0486                       l1818 07BF  
                     l1498 0F1C                       l1842 00C6                       l1668 0491  
                     l1588 038C                       l1852 00E1                       l1686 04D4  
                     l1598 039D                       l1862 0122                       l1854 00F3  
                     l1792 0741                       l1864 0113                       l1848 00DD  
                     l1794 075E                       l1876 014B                       l1896 017B  
                     STR_1 0811                       STR_2 0806                       u2011 040F  
                     u2003 03F6                       u2020 0423                       u2012 0410  
                     u2021 0424                       u2013 0415                       u2022 0429  
                     u2014 0416                       u2023 042A                       u2015 041B  
                     u2016 041C                       u1505 0F8B                       u1425 0F32  
                     u2065 0470                       u1525 0ED2                       u2165 04AE  
                     u1445 0EB7                       u1615 0098                       u2425 06EA  
                     u2355 05F1                       u1555 0061                       u1485 0F66  
                     u2445 070F                       u1725 0EF8                       u1655 0013  
                     u2465 072D                       u2385 064E                       u1585 0080  
                     u1745 0F09                       u1915 0392                       u2475 0745  
                     u1675 001F                       u1755 0F12                       u2715 0136  
                     u2635 00EA                       u2565 0794                       u1685 002B  
                     u1870 0370                       u2807 0FCC                       u2575 07B2  
                     u2495 0750                       u1695 0035                       u2655 0106  
                     u1880 0371                       u2817 0E79                       u1865 0364  
                     u2585 07CA                       u2675 011B                       u2757 0EE0  
                     u2767 0F42                       u2777 0F53                       u2787 0FAE  
                     u1995 03D8                       u2797 0FBD               __CFG_WRT$OFF 0000  
        ?_Lcd_Write_String 0070                       _main 0154                       btemp 007E  
                     start 0000         ??_Lcd_Write_String 0075            __end_of_Lcd_Cmd 0E82  
            ___fltol@sign1 0057            __end_of___fladd 04E7                      ?_main 0070  
            __CFG_WDTE$OFF 0000            __end_of___flmul 07FC            __end_of___fltol 00B1  
          __end_of___lwdiv 0044            __end_of___lwmod 0F21    __size_of_Lcd_Set_Cursor 004A  
                    _TRISD 0088                      main@a 005C                      main@t 005A  
           __CFG_BOREN$OFF 0000                      pclath 000A                      status 0003  
                    wtemp0 007E           __end_of_Lcd_Init 1000           __end_of_Lcd_Port 0E68  
          __initialization 07FC               __end_of_main 02B8           __end_of_Read_ADC 0EEF  
                   ??_main 0059                     _ADCON0 001F                     _ADCON1 009F  
                   _ADRESH 001E                     _ADRESL 009E                  ??_Lcd_Cmd 0071  
  __size_of_Lcd_Write_Char 0039                     _TRISA0 0428           __end_of___xxtofl 0154  
           __CFG_PWRTE$OFF 0000            Read_ADC@channel 0074                  ??___fladd 0042  
                ??___flmul 0028                  ??___fltol 0052                  ??___lwdiv 007A  
                ??___lwmod 0074         __size_of__Umul8_16 0023            Lcd_Set_Cursor@a 0077  
          Lcd_Set_Cursor@b 0074            Lcd_Set_Cursor@y 0079            Lcd_Set_Cursor@z 0078  
             ___xxtofl@arg 007A               ___xxtofl@exp 0079               ___xxtofl@val 0070  
  __end_of__initialization 07FC                 ___fltol@f1 004E             __pcstackCOMMON 0070  
           _Lcd_Set_Cursor 0F5A                  ?_Lcd_Init 0070                  ?_Lcd_Port 0070  
                ?_Read_ADC 0070          __end_of__Umul8_16 0EC7                 __pmaintext 0154  
__size_of_Lcd_Write_String 0022     __end_of_Lcd_Set_Cursor 0FA4                  ?___xxtofl 0070  
               ??_Lcd_Init 0074                 ??_Lcd_Port 0070                 __stringtab 0800  
               ??_Read_ADC 0072             _Lcd_Write_Char 0F21                    _Lcd_Cmd 0E68  
                  ___fladd 02B8                    ___flmul 04E7                    ___fltol 0044  
                  ___lwdiv 0008                    ___lwmod 0EEF            ?_Lcd_Set_Cursor 0074  
                  __ptext1 00B1                    __ptext2 0EEF                    __ptext3 0008  
                  __ptext4 0044                    __ptext5 04E7                    __ptext6 0EA4  
                  __ptext7 02B8                    __ptext8 0EC7                    __ptext9 0E82  
               ??___xxtofl 0074     __end_of_Lcd_Write_Char 0F5A       end_of_initialization 07FC  
                Lcd_Port@a 0070                ___fladd@grs 004D              ___xxtofl@sign 0078  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0077          Lcd_Write_String@i 0075  
              ___flmul@grs 002E           _Lcd_Write_String 0E82        start_initialization 07FC  
        __size_of_Lcd_Init 005C          __size_of_Lcd_Port 001A          __size_of_Read_ADC 0028  
                __Umul8_16 0EA4            Lcd_Write_Char@a 0074            Lcd_Write_Char@y 0073  
                ___fladd@a 003E                  ___fladd@b 003A                  ___flmul@a 0024  
                ___flmul@b 0020                  ___latbits 0002              __pcstackBANK0 0020  
        __size_of___xxtofl 00A3                   ?_Lcd_Cmd 0070           ___lwdiv@dividend 0078  
         ??_Lcd_Set_Cursor 0075                   ?___fladd 003A                   ?___flmul 0020  
                 ?___fltol 004E                 ?__Umul8_16 0070                   ?___lwdiv 0076  
                 ?___lwmod 0070                  __pstrings 0800           ___lwdiv@quotient 007B  
                 Lcd_Cmd@a 0073                   _GO_nDONE 00FA                __stringbase 0805  
         ??_Lcd_Write_Char 0071                   _Lcd_Init 0FA4                   _Lcd_Port 0E4E  
                 _Read_ADC 0EC7   __end_of_Lcd_Write_String 0EA4           __size_of_Lcd_Cmd 001A  
              ??__Umul8_16 0072           __size_of___fladd 022F           __size_of___flmul 0315  
         __size_of___fltol 006D           __size_of___lwdiv 003C           __size_of___lwmod 0032  
       __end_of__stringtab 0806                   ___xxtofl 00B1            ___lwdiv@divisor 0076  
          ___lwdiv@counter 007D                   __ptext10 0F21                   __ptext11 0F5A  
                 __ptext12 0FA4                   __ptext13 0E68                   __ptext14 0E4E  
            __size_of_main 0164         Lcd_Write_Char@temp 0072           ___lwmod@dividend 0072  
                stringcode 0800         Lcd_Set_Cursor@temp 007A     __Umul8_16@multiplicand 0070  
          ___lwmod@divisor 0070            ___lwmod@counter 0075                   stringdir 0800  
                 stringtab 0800              ___fladd@signs 004A               ___fladd@aexp 004B  
             ___fladd@bexp 004C       __Umul8_16@multiplier 0078          __Umul8_16@product 0074  
