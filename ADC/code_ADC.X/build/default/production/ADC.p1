Version 4.0 HI-TECH Software Intermediate Code
[p mainexit ]
[v F842 `(v ~T0 @X0 1 tf1`ul ]
"92 D:\Mplab X\xc8\pic\include\pic.h
[v __delay `JF842 ~T0 @X0 0 e ]
[p i __delay ]
"1499 D:\Mplab X\xc8\pic\include\pic16f877a.h
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 1499: extern volatile unsigned char TRISD __attribute__((address(0x088)));
[v _TRISD `Vuc ~T0 @X0 0 e@136 ]
"2959
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2959: extern volatile __bit TRISC0 __attribute__((address(0x438)));
[v _TRISC0 `Vb ~T0 @X0 0 e@1080 ]
"2935
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2935: extern volatile __bit TRISB0 __attribute__((address(0x430)));
[v _TRISB0 `Vb ~T0 @X0 0 e@1072 ]
"2956
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2956: extern volatile __bit TRISB7 __attribute__((address(0x437)));
[v _TRISB7 `Vb ~T0 @X0 0 e@1079 ]
"12 ADC.c
[; ;ADC.c: 12: void ADC_Init(unsigned char channel);
[v _ADC_Init `(v ~T0 @X0 0 ef1`uc ]
"4 ./USART.h
[; ;./USART.h: 4: char UART_Init(const long int baudrate);
[v _UART_Init `(uc ~T0 @X0 0 ef1`Cl ]
"15 ./lcd4.h
[; ;./lcd4.h: 15: void Lcd_Init();
[v _Lcd_Init `(v ~T0 @X0 0 e? ]
"15 ADC.c
[; ;ADC.c: 15: void Timer1_Init();
[v _Timer1_Init `(v ~T0 @X0 0 e? ]
"14
[; ;ADC.c: 14: void Interrupt_Init();
[v _Interrupt_Init `(v ~T0 @X0 0 e? ]
"17 ./lcd4.h
[; ;./lcd4.h: 17: void Lcd_Write_String(char *a);
[v _Lcd_Write_String `(v ~T0 @X0 0 ef1`*uc ]
"14
[; ;./lcd4.h: 14: void Lcd_Set_Cursor(char a, char b);
[v _Lcd_Set_Cursor `(v ~T0 @X0 0 ef2`uc`uc ]
"7 ./USART.h
[; ;./USART.h: 7: char UART_Read();
[v _UART_Read `(uc ~T0 @X0 0 e? ]
"8
[; ;./USART.h: 8: void UART_Read_Text(char *Output, unsigned int length);
[v _UART_Read_Text `(v ~T0 @X0 0 ef2`*uc`ui ]
"16 ./lcd4.h
[; ;./lcd4.h: 16: void Lcd_Write_Char(char a);
[v _Lcd_Write_Char `(v ~T0 @X0 0 ef1`uc ]
"13 ADC.c
[; ;ADC.c: 13: unsigned int Read_ADC(unsigned char channel);
[v _Read_ADC `(ui ~T0 @X0 0 ef1`uc ]
"17
[; ;ADC.c: 17: void PID_Init(unsigned int nhietdo, unsigned int nhietdodat);
[v _PID_Init `(v ~T0 @X0 0 ef2`ui`ui ]
"9 ./USART.h
[; ;./USART.h: 9: void UART_Write(char data);
[v _UART_Write `(v ~T0 @X0 0 ef1`uc ]
"2695 D:\Mplab X\xc8\pic\include\pic16f877a.h
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2695: extern volatile __bit RB7 __attribute__((address(0x37)));
[v _RB7 `Vb ~T0 @X0 0 e@55 ]
"2617
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2617: extern volatile __bit PCFG0 __attribute__((address(0x4F8)));
[v _PCFG0 `Vb ~T0 @X0 0 e@1272 ]
"2620
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2620: extern volatile __bit PCFG1 __attribute__((address(0x4F9)));
[v _PCFG1 `Vb ~T0 @X0 0 e@1273 ]
"2623
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2623: extern volatile __bit PCFG2 __attribute__((address(0x4FA)));
[v _PCFG2 `Vb ~T0 @X0 0 e@1274 ]
"2626
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2626: extern volatile __bit PCFG3 __attribute__((address(0x4FB)));
[v _PCFG3 `Vb ~T0 @X0 0 e@1275 ]
"2383
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2383: extern volatile __bit ADCS0 __attribute__((address(0xFE)));
[v _ADCS0 `Vb ~T0 @X0 0 e@254 ]
"2386
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2386: extern volatile __bit ADCS1 __attribute__((address(0xFF)));
[v _ADCS1 `Vb ~T0 @X0 0 e@255 ]
"2389
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2389: extern volatile __bit ADCS2 __attribute__((address(0x4FE)));
[v _ADCS2 `Vb ~T0 @X0 0 e@1278 ]
"2395
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2395: extern volatile __bit ADFM __attribute__((address(0x4FF)));
[v _ADFM `Vb ~T0 @X0 0 e@1279 ]
"2404
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2404: extern volatile __bit ADON __attribute__((address(0xF8)));
[v _ADON `Vb ~T0 @X0 0 e@248 ]
"2398
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2398: extern volatile __bit ADIE __attribute__((address(0x466)));
[v _ADIE `Vb ~T0 @X0 0 e@1126 ]
"2401
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2401: extern volatile __bit ADIF __attribute__((address(0x66)));
[v _ADIF `Vb ~T0 @X0 0 e@102 ]
"2917
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2917: extern volatile __bit TRISA0 __attribute__((address(0x428)));
[v _TRISA0 `Vb ~T0 @X0 0 e@1064 ]
"2920
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2920: extern volatile __bit TRISA1 __attribute__((address(0x429)));
[v _TRISA1 `Vb ~T0 @X0 0 e@1065 ]
"2923
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2923: extern volatile __bit TRISA2 __attribute__((address(0x42A)));
[v _TRISA2 `Vb ~T0 @X0 0 e@1066 ]
"2926
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2926: extern volatile __bit TRISA3 __attribute__((address(0x42B)));
[v _TRISA3 `Vb ~T0 @X0 0 e@1067 ]
"1159
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 1159: extern volatile unsigned char ADCON0 __attribute__((address(0x01F)));
[v _ADCON0 `Vuc ~T0 @X0 0 e@31 ]
"2578
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2578: extern volatile __bit GO_nDONE __attribute__((address(0xFA)));
[v _GO_nDONE `Vb ~T0 @X0 0 e@250 ]
"1152
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 1152: extern volatile unsigned char ADRESH __attribute__((address(0x01E)));
[v _ADRESH `Vuc ~T0 @X0 0 e@30 ]
"2222
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2222: extern volatile unsigned char ADRESL __attribute__((address(0x09E)));
[v _ADRESL `Vuc ~T0 @X0 0 e@158 ]
"648
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 648: extern volatile unsigned char TMR1H __attribute__((address(0x00F)));
[v _TMR1H `Vuc ~T0 @X0 0 e@15 ]
"641
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 641: extern volatile unsigned char TMR1L __attribute__((address(0x00E)));
[v _TMR1L `Vuc ~T0 @X0 0 e@14 ]
"2860
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2860: extern volatile __bit T1CKPS1 __attribute__((address(0x85)));
[v _T1CKPS1 `Vb ~T0 @X0 0 e@133 ]
"2857
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2857: extern volatile __bit T1CKPS0 __attribute__((address(0x84)));
[v _T1CKPS0 `Vb ~T0 @X0 0 e@132 ]
"2866
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2866: extern volatile __bit T1OSCEN __attribute__((address(0x83)));
[v _T1OSCEN `Vb ~T0 @X0 0 e@131 ]
"2869
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2869: extern volatile __bit T1SYNC __attribute__((address(0x82)));
[v _T1SYNC `Vb ~T0 @X0 0 e@130 ]
"2884
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2884: extern volatile __bit TMR1CS __attribute__((address(0x81)));
[v _TMR1CS `Vb ~T0 @X0 0 e@129 ]
"2887
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2887: extern volatile __bit TMR1IE __attribute__((address(0x460)));
[v _TMR1IE `Vb ~T0 @X0 0 e@1120 ]
"2893
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2893: extern volatile __bit TMR1ON __attribute__((address(0x80)));
[v _TMR1ON `Vb ~T0 @X0 0 e@128 ]
"2602
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2602: extern volatile __bit INTEDG __attribute__((address(0x40E)));
[v _INTEDG `Vb ~T0 @X0 0 e@1038 ]
"2569
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2569: extern volatile __bit GIE __attribute__((address(0x5F)));
[v _GIE `Vb ~T0 @X0 0 e@95 ]
"2629
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2629: extern volatile __bit PEIE __attribute__((address(0x5E)));
[v _PEIE `Vb ~T0 @X0 0 e@94 ]
"2599
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2599: extern volatile __bit INTE __attribute__((address(0x5C)));
[v _INTE `Vb ~T0 @X0 0 e@92 ]
[t ~ __interrupt . k ]
[t T2 __interrupt ]
"2605
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2605: extern volatile __bit INTF __attribute__((address(0x59)));
[v _INTF `Vb ~T0 @X0 0 e@89 ]
"2704
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2704: extern volatile __bit RC0 __attribute__((address(0x38)));
[v _RC0 `Vb ~T0 @X0 0 e@56 ]
"2890
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2890: extern volatile __bit TMR1IF __attribute__((address(0x60)));
[v _TMR1IF `Vb ~T0 @X0 0 e@96 ]
"634
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 634: extern volatile unsigned short TMR1 __attribute__((address(0x00E)));
[v _TMR1 `Vus ~T0 @X0 0 e@14 ]
"54 D:\Mplab X\xc8\pic\include\pic16f877a.h
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 54: __asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
"61
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 61: __asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
"68
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 68: __asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
"75
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 75: __asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
"161
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 161: __asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
"168
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 168: __asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
"218
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 218: __asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
"280
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 280: __asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
"342
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 342: __asm("PORTD equ 08h");
[; <" PORTD equ 08h ;# ">
"404
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 404: __asm("PORTE equ 09h");
[; <" PORTE equ 09h ;# ">
"436
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 436: __asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
"456
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 456: __asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
"534
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 534: __asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
"596
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 596: __asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
"636
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 636: __asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
"643
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 643: __asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
"650
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 650: __asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
"657
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 657: __asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
"732
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 732: __asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
"739
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 739: __asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
"810
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 810: __asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
"817
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 817: __asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
"887
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 887: __asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
"894
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 894: __asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
"901
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 901: __asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
"908
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 908: __asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
"966
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 966: __asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
"1061
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 1061: __asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
"1068
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 1068: __asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
"1075
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 1075: __asm("CCPR2 equ 01Bh");
[; <" CCPR2 equ 01Bh ;# ">
"1082
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 1082: __asm("CCPR2L equ 01Bh");
[; <" CCPR2L equ 01Bh ;# ">
"1089
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 1089: __asm("CCPR2H equ 01Ch");
[; <" CCPR2H equ 01Ch ;# ">
"1096
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 1096: __asm("CCP2CON equ 01Dh");
[; <" CCP2CON equ 01Dh ;# ">
"1154
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 1154: __asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
"1161
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 1161: __asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
"1257
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 1257: __asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
"1327
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 1327: __asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
"1377
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 1377: __asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
"1439
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 1439: __asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
"1501
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 1501: __asm("TRISD equ 088h");
[; <" TRISD equ 088h ;# ">
"1563
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 1563: __asm("TRISE equ 089h");
[; <" TRISE equ 089h ;# ">
"1620
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 1620: __asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
"1682
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 1682: __asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
"1722
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 1722: __asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
"1756
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 1756: __asm("SSPCON2 equ 091h");
[; <" SSPCON2 equ 091h ;# ">
"1818
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 1818: __asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
"1825
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 1825: __asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
"1832
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 1832: __asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
"2001
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2001: __asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
"2082
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2082: __asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
"2089
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2089: __asm("CMCON equ 09Ch");
[; <" CMCON equ 09Ch ;# ">
"2159
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2159: __asm("CVRCON equ 09Dh");
[; <" CVRCON equ 09Dh ;# ">
"2224
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2224: __asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
"2231
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2231: __asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
"2290
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2290: __asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
"2297
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2297: __asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
"2304
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2304: __asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
"2311
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2311: __asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
"2318
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2318: __asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
"2363
[; ;D:\Mplab X\xc8\pic\include\pic16f877a.h: 2363: __asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
"3 ./main.h
[p x FOSC = HS ]
"4
[p x WDTE = OFF ]
"5
[p x PWRTE = OFF ]
"6
[p x BOREN = OFF ]
"7
[p x LVP = OFF ]
"8
[p x CPD = OFF ]
"9
[p x WRT = OFF ]
"10
[p x CP = OFF ]
"3
[p x FOSC = HS ]
"4
[p x WDTE = OFF ]
"5
[p x PWRTE = OFF ]
"6
[p x BOREN = OFF ]
"7
[p x LVP = OFF ]
"8
[p x CPD = OFF ]
"9
[p x WRT = OFF ]
"10
[p x CP = OFF ]
"6 ADC.c
[; ;ADC.c: 6: unsigned int time = 65536-(1000+18000)/(8*0.2f);
[v _time `ui ~T0 @X0 1 e ]
[i _time
-> - -> -> 65536 `l `f / -> + -> 1000 `i -> 18000 `i `f * -> -> 8 `i `f -> .0.2 `f `ui
]
"8
[; ;ADC.c: 8: double E, E1, E2, T;
[v _E `d ~T0 @X0 1 e ]
[v _E1 `d ~T0 @X0 1 e ]
[v _E2 `d ~T0 @X0 1 e ]
[v _T `d ~T0 @X0 1 e ]
"9
[; ;ADC.c: 9: double a1, a2, a3, beta, gamma, Kp, Ki, Kd;
[v _a1 `d ~T0 @X0 1 e ]
[v _a2 `d ~T0 @X0 1 e ]
[v _a3 `d ~T0 @X0 1 e ]
[v _beta `d ~T0 @X0 1 e ]
[v _gamma `d ~T0 @X0 1 e ]
[v _Kp `d ~T0 @X0 1 e ]
[v _Ki `d ~T0 @X0 1 e ]
[v _Kd `d ~T0 @X0 1 e ]
"10
[; ;ADC.c: 10: double out, pre_out, chot;
[v _out `d ~T0 @X0 1 e ]
[v _pre_out `d ~T0 @X0 1 e ]
[v _chot `d ~T0 @X0 1 e ]
[v $root$_main `(v ~T0 @X0 0 e ]
"20
[; ;ADC.c: 20: void main()
[v _main `(v ~T0 @X0 1 ef ]
"21
[; ;ADC.c: 21: {
{
[e :U _main ]
[f ]
"22
[; ;ADC.c: 22:     _delay((unsigned long)((250)*(20000000/4000.0)));
[e ( __delay (1 -> * -> -> 250 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
"25
[; ;ADC.c: 25:     T = 0.5;
[e = _T .0.5 ]
"26
[; ;ADC.c: 26:     Kp = 30;
[e = _Kp -> -> 30 `i `d ]
"27
[; ;ADC.c: 27:     Ki = 0.01;
[e = _Ki .0.01 ]
"28
[; ;ADC.c: 28:     Kd = 0;
[e = _Kd -> -> 0 `i `d ]
"29
[; ;ADC.c: 29:     E = E1 = E2 = 0;
[e = _E = _E1 = _E2 -> -> 0 `i `d ]
"30
[; ;ADC.c: 30:     a1 = a2 = a3 = 0;
[e = _a1 = _a2 = _a3 -> -> 0 `i `d ]
"31
[; ;ADC.c: 31:     out = pre_out = 0;
[e = _out = _pre_out -> -> 0 `i `d ]
"33
[; ;ADC.c: 33:     unsigned int a;
[v _a `ui ~T0 @X0 1 a ]
"34
[; ;ADC.c: 34:     unsigned int t;
[v _t `ui ~T0 @X0 1 a ]
"35
[; ;ADC.c: 35:     unsigned char start;
[v _start `uc ~T0 @X0 1 a ]
"36
[; ;ADC.c: 36:     unsigned char buffer[2];
[v _buffer `uc ~T0 @X0 -> 2 `i a ]
"37
[; ;ADC.c: 37:     unsigned int t_load = 0;
[v _t_load `ui ~T0 @X0 1 a ]
[e = _t_load -> -> 0 `i `ui ]
"38
[; ;ADC.c: 38:     unsigned int _t_load;
[v __t_load `ui ~T0 @X0 1 a ]
"40
[; ;ADC.c: 40:     TRISD = 0x00;
[e = _TRISD -> -> 0 `i `uc ]
"41
[; ;ADC.c: 41:     TRISC0 = 0;
[e = _TRISC0 -> -> 0 `i `b ]
"42
[; ;ADC.c: 42:     TRISB0 = 1;
[e = _TRISB0 -> -> 1 `i `b ]
"43
[; ;ADC.c: 43:     TRISB7 = 0;
[e = _TRISB7 -> -> 0 `i `b ]
"45
[; ;ADC.c: 45:     ADC_Init(1);
[e ( _ADC_Init (1 -> -> 1 `i `uc ]
"47
[; ;ADC.c: 47:     UART_Init(9600);
[e ( _UART_Init (1 -> -> 9600 `i `l ]
"48
[; ;ADC.c: 48:     Lcd_Init();
[e ( _Lcd_Init ..  ]
"49
[; ;ADC.c: 49:     Timer1_Init();
[e ( _Timer1_Init ..  ]
"50
[; ;ADC.c: 50:     Interrupt_Init();
[e ( _Interrupt_Init ..  ]
"52
[; ;ADC.c: 52:     Lcd_Write_String("Temp load: ");
[e ( _Lcd_Write_String (1 :s 1C ]
"53
[; ;ADC.c: 53:     Lcd_Set_Cursor(2,1);
[e ( _Lcd_Set_Cursor (2 , -> -> 2 `i `uc -> -> 1 `i `uc ]
"54
[; ;ADC.c: 54:     Lcd_Write_String("Temp: ");
[e ( _Lcd_Write_String (1 :s 2C ]
"55
[; ;ADC.c: 55:     while(1)
[e :U 97 ]
"56
[; ;ADC.c: 56:     {
{
"57
[; ;ADC.c: 57:     while(1)
[e :U 100 ]
"58
[; ;ADC.c: 58:     {
{
"59
[; ;ADC.c: 59:        start = UART_Read();
[e = _start -> ( _UART_Read ..  `uc ]
"60
[; ;ADC.c: 60:        if(start == 's') break;
[e $ ! == -> _start `ui -> 115 `ui 102  ]
[e $U 101  ]
[e $U 103  ]
"61
[; ;ADC.c: 61:        else
[e :U 102 ]
"62
[; ;ADC.c: 62:            if(t_load == 0)
[e $ ! == _t_load -> -> 0 `i `ui 104  ]
"63
[; ;ADC.c: 63:            {
{
"64
[; ;ADC.c: 64:            UART_Read_Text(buffer, 2);
[e ( _UART_Read_Text (2 , -> &U _buffer `*uc -> -> 2 `i `ui ]
"65
[; ;ADC.c: 65:            }
}
[e :U 104 ]
[e :U 103 ]
"66
[; ;ADC.c: 66:        t_load = (buffer[1]-0x30)*10 + (buffer[0]-0x30);
[e = _t_load -> + * - -> *U + &U _buffer * -> -> -> 1 `i `ui `ux -> -> # *U &U _buffer `ui `ux `i -> 48 `i -> 10 `i - -> *U + &U _buffer * -> -> -> 0 `i `ui `ux -> -> # *U &U _buffer `ui `ux `i -> 48 `i `ui ]
"67
[; ;ADC.c: 67:        _t_load = t_load;
[e = __t_load _t_load ]
"68
[; ;ADC.c: 68:        Lcd_Set_Cursor(1,12);
[e ( _Lcd_Set_Cursor (2 , -> -> 1 `i `uc -> -> 12 `i `uc ]
"69
[; ;ADC.c: 69:        Lcd_Write_Char(t_load/10 + 48);
[e ( _Lcd_Write_Char (1 -> + / _t_load -> -> 10 `i `ui -> -> 48 `i `ui `uc ]
"70
[; ;ADC.c: 70:        Lcd_Write_Char(t_load%10 + 48);
[e ( _Lcd_Write_Char (1 -> + % _t_load -> -> 10 `i `ui -> -> 48 `i `ui `uc ]
"71
[; ;ADC.c: 71:     }
}
[e :U 99 ]
[e $U 100  ]
[e :U 101 ]
"72
[; ;ADC.c: 72:     while(1)
[e :U 106 ]
"73
[; ;ADC.c: 73:     {
{
"74
[; ;ADC.c: 74:         a = Read_ADC(0);
[e = _a ( _Read_ADC (1 -> -> 0 `i `uc ]
"75
[; ;ADC.c: 75:         t = a*0.48828f;
[e = _t -> * -> _a `f -> .0.48828 `f `ui ]
"77
[; ;ADC.c: 77:         Lcd_Set_Cursor(1,12);
[e ( _Lcd_Set_Cursor (2 , -> -> 1 `i `uc -> -> 12 `i `uc ]
"78
[; ;ADC.c: 78:         Lcd_Write_Char(t_load/100+48);
[e ( _Lcd_Write_Char (1 -> + / _t_load -> -> 100 `i `ui -> -> 48 `i `ui `uc ]
"79
[; ;ADC.c: 79:         Lcd_Write_Char((t_load%100)/10+48);
[e ( _Lcd_Write_Char (1 -> + / % _t_load -> -> 100 `i `ui -> -> 10 `i `ui -> -> 48 `i `ui `uc ]
"80
[; ;ADC.c: 80:         Lcd_Write_Char(t_load%10+48);
[e ( _Lcd_Write_Char (1 -> + % _t_load -> -> 10 `i `ui -> -> 48 `i `ui `uc ]
"82
[; ;ADC.c: 82:         Lcd_Set_Cursor(2,7);
[e ( _Lcd_Set_Cursor (2 , -> -> 2 `i `uc -> -> 7 `i `uc ]
"83
[; ;ADC.c: 83:         Lcd_Write_Char(t/100+48);
[e ( _Lcd_Write_Char (1 -> + / _t -> -> 100 `i `ui -> -> 48 `i `ui `uc ]
"84
[; ;ADC.c: 84:         Lcd_Write_Char((t%100)/10+48);
[e ( _Lcd_Write_Char (1 -> + / % _t -> -> 100 `i `ui -> -> 10 `i `ui -> -> 48 `i `ui `uc ]
"85
[; ;ADC.c: 85:         Lcd_Write_Char(t%10+48);
[e ( _Lcd_Write_Char (1 -> + % _t -> -> 10 `i `ui -> -> 48 `i `ui `uc ]
"87
[; ;ADC.c: 87:         PID_Init(t, t_load);
[e ( _PID_Init (2 , _t _t_load ]
"88
[; ;ADC.c: 88:         UART_Write(t);
[e ( _UART_Write (1 -> _t `uc ]
"89
[; ;ADC.c: 89:         if(t > t_load) RB7 = 0;
[e $ ! > _t _t_load 108  ]
[e = _RB7 -> -> 0 `i `b ]
[e $U 109  ]
"90
[; ;ADC.c: 90:         else RB7 = 1;
[e :U 108 ]
[e = _RB7 -> -> 1 `i `b ]
[e :U 109 ]
"91
[; ;ADC.c: 91:         _delay((unsigned long)((500)*(20000000/4000.0)));
[e ( __delay (1 -> * -> -> 500 `i `d / -> -> 20000000 `l `d .4000.0 `ul ]
"92
[; ;ADC.c: 92:     }
}
[e :U 105 ]
[e $U 106  ]
[e :U 107 ]
"93
[; ;ADC.c: 93: }
}
[e :U 96 ]
[e $U 97  ]
[e :U 98 ]
"94
[; ;ADC.c: 94:     return;
[e $UE 95  ]
"95
[; ;ADC.c: 95: }
[e :UE 95 ]
}
"96
[; ;ADC.c: 96: void ADC_Init(unsigned char channel)
[v _ADC_Init `(v ~T0 @X0 1 ef1`uc ]
"97
[; ;ADC.c: 97: {
{
[e :U _ADC_Init ]
"96
[; ;ADC.c: 96: void ADC_Init(unsigned char channel)
[v _channel `uc ~T0 @X0 1 r1 ]
"97
[; ;ADC.c: 97: {
[f ]
"99
[; ;ADC.c: 99:     PCFG0 = 0;
[e = _PCFG0 -> -> 0 `i `b ]
"100
[; ;ADC.c: 100:     PCFG1 = 0;
[e = _PCFG1 -> -> 0 `i `b ]
"101
[; ;ADC.c: 101:     PCFG2 = 1;
[e = _PCFG2 -> -> 1 `i `b ]
"102
[; ;ADC.c: 102:     PCFG3 = 0;
[e = _PCFG3 -> -> 0 `i `b ]
"104
[; ;ADC.c: 104:     ADCS0 = 0;
[e = _ADCS0 -> -> 0 `i `b ]
"105
[; ;ADC.c: 105:     ADCS1 = 1;
[e = _ADCS1 -> -> 1 `i `b ]
"106
[; ;ADC.c: 106:     ADCS2 = 1;
[e = _ADCS2 -> -> 1 `i `b ]
"108
[; ;ADC.c: 108:     ADFM = 1;
[e = _ADFM -> -> 1 `i `b ]
"110
[; ;ADC.c: 110:     ADON = 1;
[e = _ADON -> -> 1 `i `b ]
"112
[; ;ADC.c: 112:     ADIE = 0;
[e = _ADIE -> -> 0 `i `b ]
"113
[; ;ADC.c: 113:     ADIF = 0;
[e = _ADIF -> -> 0 `i `b ]
"115
[; ;ADC.c: 115:     switch (channel)
[e $U 112  ]
"116
[; ;ADC.c: 116:     {
{
"117
[; ;ADC.c: 117:         case 1:
[e :U 113 ]
"118
[; ;ADC.c: 118:             TRISA0 = 1;
[e = _TRISA0 -> -> 1 `i `b ]
"119
[; ;ADC.c: 119:             break;
[e $U 111  ]
"120
[; ;ADC.c: 120:         case 2:
[e :U 114 ]
"121
[; ;ADC.c: 121:             TRISA1 = 1;
[e = _TRISA1 -> -> 1 `i `b ]
"122
[; ;ADC.c: 122:             break;
[e $U 111  ]
"123
[; ;ADC.c: 123:         case 3:
[e :U 115 ]
"124
[; ;ADC.c: 124:             TRISA2 = 1;
[e = _TRISA2 -> -> 1 `i `b ]
"125
[; ;ADC.c: 125:             break;
[e $U 111  ]
"126
[; ;ADC.c: 126:         case 4:
[e :U 116 ]
"127
[; ;ADC.c: 127:             TRISA3 = 1;
[e = _TRISA3 -> -> 1 `i `b ]
"128
[; ;ADC.c: 128:             break;
[e $U 111  ]
"129
[; ;ADC.c: 129:         default:
[e :U 117 ]
"130
[; ;ADC.c: 130:             break;
[e $U 111  ]
"131
[; ;ADC.c: 131:     }
}
[e $U 111  ]
[e :U 112 ]
[e [\ -> _channel `i , $ -> 1 `i 113
 , $ -> 2 `i 114
 , $ -> 3 `i 115
 , $ -> 4 `i 116
 117 ]
[e :U 111 ]
"133
[; ;ADC.c: 133: }
[e :UE 110 ]
}
"134
[; ;ADC.c: 134: unsigned int Read_ADC(unsigned char channel)
[v _Read_ADC `(ui ~T0 @X0 1 ef1`uc ]
"135
[; ;ADC.c: 135: {
{
[e :U _Read_ADC ]
"134
[; ;ADC.c: 134: unsigned int Read_ADC(unsigned char channel)
[v _channel `uc ~T0 @X0 1 r1 ]
"135
[; ;ADC.c: 135: {
[f ]
"136
[; ;ADC.c: 136:     unsigned int N;
[v _N `ui ~T0 @X0 1 a ]
"137
[; ;ADC.c: 137:     if(channel > 3) return 0;
[e $ ! > -> _channel `i -> 3 `i 119  ]
[e ) -> -> 0 `i `ui ]
[e $UE 118  ]
[e :U 119 ]
"138
[; ;ADC.c: 138:     ADCON0 |= channel << 3;
[e =| _ADCON0 -> << -> _channel `i -> 3 `i `Vuc ]
"139
[; ;ADC.c: 139:     _delay((unsigned long)((10)*(20000000/4000000.0)));
[e ( __delay (1 -> * -> -> 10 `i `d / -> -> 20000000 `l `d .4000000.0 `ul ]
"140
[; ;ADC.c: 140:     GO_nDONE = 1;
[e = _GO_nDONE -> -> 1 `i `b ]
"141
[; ;ADC.c: 141:     while(GO_nDONE);
[e $U 120  ]
[e :U 121 ]
[e :U 120 ]
[e $ _GO_nDONE 121  ]
[e :U 122 ]
"142
[; ;ADC.c: 142:     N = ADRESH;
[e = _N -> _ADRESH `ui ]
"143
[; ;ADC.c: 143:     return ((N<<8)+ADRESL);
[e ) + << _N -> 8 `i -> _ADRESL `ui ]
[e $UE 118  ]
"144
[; ;ADC.c: 144: }
[e :UE 118 ]
}
"145
[; ;ADC.c: 145: void Timer1_Init()
[v _Timer1_Init `(v ~T0 @X0 1 ef ]
"146
[; ;ADC.c: 146: {
{
[e :U _Timer1_Init ]
[f ]
"147
[; ;ADC.c: 147:     TMR1H=0x0;
[e = _TMR1H -> -> 0 `i `uc ]
"148
[; ;ADC.c: 148:     TMR1L=0x0;
[e = _TMR1L -> -> 0 `i `uc ]
"150
[; ;ADC.c: 150:     T1CKPS1 = 1;
[e = _T1CKPS1 -> -> 1 `i `b ]
"151
[; ;ADC.c: 151:     T1CKPS0 = 1;
[e = _T1CKPS0 -> -> 1 `i `b ]
"152
[; ;ADC.c: 152:     T1OSCEN = 0;
[e = _T1OSCEN -> -> 0 `i `b ]
"153
[; ;ADC.c: 153:     T1SYNC = 0;
[e = _T1SYNC -> -> 0 `i `b ]
"154
[; ;ADC.c: 154:     TMR1CS = 0;
[e = _TMR1CS -> -> 0 `i `b ]
"156
[; ;ADC.c: 156:     TMR1IE = 0;
[e = _TMR1IE -> -> 0 `i `b ]
"158
[; ;ADC.c: 158:     TMR1ON = 0;
[e = _TMR1ON -> -> 0 `i `b ]
"159
[; ;ADC.c: 159: }
[e :UE 123 ]
}
"160
[; ;ADC.c: 160: void Interrupt_Init()
[v _Interrupt_Init `(v ~T0 @X0 1 ef ]
"161
[; ;ADC.c: 161: {
{
[e :U _Interrupt_Init ]
[f ]
"162
[; ;ADC.c: 162:     TRISB0 = 1;
[e = _TRISB0 -> -> 1 `i `b ]
"164
[; ;ADC.c: 164:     INTEDG = 1;
[e = _INTEDG -> -> 1 `i `b ]
"166
[; ;ADC.c: 166:     GIE = 1;
[e = _GIE -> -> 1 `i `b ]
"167
[; ;ADC.c: 167:     PEIE = 1;
[e = _PEIE -> -> 1 `i `b ]
"168
[; ;ADC.c: 168:     INTE = 1;
[e = _INTE -> -> 1 `i `b ]
"169
[; ;ADC.c: 169: }
[e :UE 124 ]
}
[v $root$_My_interrupt `(v ~T0 @X0 0 e ]
"170
[; ;ADC.c: 170: void __attribute__((picinterrupt(("")))) My_interrupt()
[v _My_interrupt `(v ~T2 @X0 1 ef ]
"171
[; ;ADC.c: 171: {
{
[e :U _My_interrupt ]
[f ]
"172
[; ;ADC.c: 172:     if(INTE == 1 && INTF == 1)
[e $ ! && == -> _INTE `i -> 1 `i == -> _INTF `i -> 1 `i 126  ]
"173
[; ;ADC.c: 173:     {
{
"174
[; ;ADC.c: 174:         RC0 = 0;
[e = _RC0 -> -> 0 `i `b ]
"176
[; ;ADC.c: 176:         TMR1ON = 1;
[e = _TMR1ON -> -> 1 `i `b ]
"177
[; ;ADC.c: 177:         while(TMR1IF==0);
[e $U 127  ]
[e :U 128 ]
[e :U 127 ]
[e $ == -> _TMR1IF `i -> 0 `i 128  ]
[e :U 129 ]
"178
[; ;ADC.c: 178:         TMR1ON = 0;
[e = _TMR1ON -> -> 0 `i `b ]
"179
[; ;ADC.c: 179:         TMR1= time;
[e = _TMR1 -> _time `us ]
"180
[; ;ADC.c: 180:         TMR1IF = 0;
[e = _TMR1IF -> -> 0 `i `b ]
"182
[; ;ADC.c: 182:         RC0 = 1;
[e = _RC0 -> -> 1 `i `b ]
"183
[; ;ADC.c: 183:         INTF = 0;
[e = _INTF -> -> 0 `i `b ]
"184
[; ;ADC.c: 184:     }
}
[e :U 126 ]
"185
[; ;ADC.c: 185: }
[e :UE 125 ]
}
"186
[; ;ADC.c: 186: void PID_Init(unsigned int nhietdo, unsigned int nhietdodat)
[v _PID_Init `(v ~T0 @X0 1 ef2`ui`ui ]
"187
[; ;ADC.c: 187: {
{
[e :U _PID_Init ]
"186
[; ;ADC.c: 186: void PID_Init(unsigned int nhietdo, unsigned int nhietdodat)
[v _nhietdo `ui ~T0 @X0 1 r1 ]
[v _nhietdodat `ui ~T0 @X0 1 r2 ]
"187
[; ;ADC.c: 187: {
[f ]
"188
[; ;ADC.c: 188:     E = nhietdodat-nhietdo;
[e = _E -> - _nhietdodat _nhietdo `d ]
"189
[; ;ADC.c: 189:     a1 = Kp + (Ki*T)/2 + Kd/2;
[e = _a1 + + _Kp / * _Ki _T -> -> 2 `i `d / _Kd -> -> 2 `i `d ]
"190
[; ;ADC.c: 190:     a2 = -Kp + (Ki*T)/2 - 2*Kd/T;
[e = _a2 - + -U _Kp / * _Ki _T -> -> 2 `i `d / * -> -> 2 `i `d _Kd _T ]
"191
[; ;ADC.c: 191:     a3 = Kd/T;
[e = _a3 / _Kd _T ]
"192
[; ;ADC.c: 192:     out = pre_out + E*a1 + E1*a2 + E2*a3;
[e = _out + + + _pre_out * _E _a1 * _E1 _a2 * _E2 _a3 ]
"193
[; ;ADC.c: 193:     pre_out = out;
[e = _pre_out _out ]
"194
[; ;ADC.c: 194:     E2 = E1;
[e = _E2 _E1 ]
"195
[; ;ADC.c: 195:     E1 = E;
[e = _E1 _E ]
"196
[; ;ADC.c: 196:     chot = 6000 - out;
[e = _chot - -> -> 6000 `i `d _out ]
"197
[; ;ADC.c: 197:     if(chot < 0) chot = 0;
[e $ ! < _chot -> -> 0 `i `d 131  ]
[e = _chot -> -> 0 `i `d ]
[e :U 131 ]
"198
[; ;ADC.c: 198:     if(out<0) out = 0;
[e $ ! < _out -> -> 0 `i `d 132  ]
[e = _out -> -> 0 `i `d ]
[e :U 132 ]
"199
[; ;ADC.c: 199:     if(out>6000) out = 6000;
[e $ ! > _out -> -> 6000 `i `d 133  ]
[e = _out -> -> 6000 `i `d ]
[e :U 133 ]
"200
[; ;ADC.c: 200:     time = 65536-(1000+out)/(8*0.2f);
[e = _time -> - -> -> 65536 `l `d / + -> -> 1000 `i `d _out -> * -> -> 8 `i `f -> .0.2 `f `d `ui ]
"201
[; ;ADC.c: 201: }
[e :UE 130 ]
}
[a 2C 84 101 109 112 58 32 0 ]
[a 1C 84 101 109 112 32 108 111 97 100 58 32 0 ]
