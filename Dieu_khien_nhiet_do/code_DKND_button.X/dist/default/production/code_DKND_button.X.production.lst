

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Apr 02 22:06:05 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    10                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.05
    20                           ; Generated 20/12/2018 GMT
    21                           ; 
    22                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F877A Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0098                     	;# 
   102  0099                     	;# 
   103  009C                     	;# 
   104  009D                     	;# 
   105  009E                     	;# 
   106  009F                     	;# 
   107  010C                     	;# 
   108  010D                     	;# 
   109  010E                     	;# 
   110  010F                     	;# 
   111  018C                     	;# 
   112  018D                     	;# 
   113  0000                     	;# 
   114  0001                     	;# 
   115  0002                     	;# 
   116  0003                     	;# 
   117  0004                     	;# 
   118  0005                     	;# 
   119  0006                     	;# 
   120  0007                     	;# 
   121  0008                     	;# 
   122  0009                     	;# 
   123  000A                     	;# 
   124  000B                     	;# 
   125  000C                     	;# 
   126  000D                     	;# 
   127  000E                     	;# 
   128  000E                     	;# 
   129  000F                     	;# 
   130  0010                     	;# 
   131  0011                     	;# 
   132  0012                     	;# 
   133  0013                     	;# 
   134  0014                     	;# 
   135  0015                     	;# 
   136  0015                     	;# 
   137  0016                     	;# 
   138  0017                     	;# 
   139  0018                     	;# 
   140  0019                     	;# 
   141  001A                     	;# 
   142  001B                     	;# 
   143  001B                     	;# 
   144  001C                     	;# 
   145  001D                     	;# 
   146  001E                     	;# 
   147  001F                     	;# 
   148  0081                     	;# 
   149  0085                     	;# 
   150  0086                     	;# 
   151  0087                     	;# 
   152  0088                     	;# 
   153  0089                     	;# 
   154  008C                     	;# 
   155  008D                     	;# 
   156  008E                     	;# 
   157  0091                     	;# 
   158  0092                     	;# 
   159  0093                     	;# 
   160  0094                     	;# 
   161  0098                     	;# 
   162  0099                     	;# 
   163  009C                     	;# 
   164  009D                     	;# 
   165  009E                     	;# 
   166  009F                     	;# 
   167  010C                     	;# 
   168  010D                     	;# 
   169  010E                     	;# 
   170  010F                     	;# 
   171  018C                     	;# 
   172  018D                     	;# 
   173  0000                     	;# 
   174  0001                     	;# 
   175  0002                     	;# 
   176  0003                     	;# 
   177  0004                     	;# 
   178  0005                     	;# 
   179  0006                     	;# 
   180  0007                     	;# 
   181  0008                     	;# 
   182  0009                     	;# 
   183  000A                     	;# 
   184  000B                     	;# 
   185  000C                     	;# 
   186  000D                     	;# 
   187  000E                     	;# 
   188  000E                     	;# 
   189  000F                     	;# 
   190  0010                     	;# 
   191  0011                     	;# 
   192  0012                     	;# 
   193  0013                     	;# 
   194  0014                     	;# 
   195  0015                     	;# 
   196  0015                     	;# 
   197  0016                     	;# 
   198  0017                     	;# 
   199  0018                     	;# 
   200  0019                     	;# 
   201  001A                     	;# 
   202  001B                     	;# 
   203  001B                     	;# 
   204  001C                     	;# 
   205  001D                     	;# 
   206  001E                     	;# 
   207  001F                     	;# 
   208  0081                     	;# 
   209  0085                     	;# 
   210  0086                     	;# 
   211  0087                     	;# 
   212  0088                     	;# 
   213  0089                     	;# 
   214  008C                     	;# 
   215  008D                     	;# 
   216  008E                     	;# 
   217  0091                     	;# 
   218  0092                     	;# 
   219  0093                     	;# 
   220  0094                     	;# 
   221  0098                     	;# 
   222  0099                     	;# 
   223  009C                     	;# 
   224  009D                     	;# 
   225  009E                     	;# 
   226  009F                     	;# 
   227  010C                     	;# 
   228  010D                     	;# 
   229  010E                     	;# 
   230  010F                     	;# 
   231  018C                     	;# 
   232  018D                     	;# 
   233  0006                     _PORTB	set	6
   234  0041                     _RD1	set	65
   235  0040                     _RD0	set	64
   236  0045                     _RD5	set	69
   237  0044                     _RD4	set	68
   238  0043                     _RD3	set	67
   239  0042                     _RD2	set	66
   240  003A                     _RC2	set	58
   241  0039                     _RC1	set	57
   242  0038                     _RC0	set	56
   243  0086                     _TRISB	set	134
   244  0088                     _TRISD	set	136
   245  043B                     _TRISC3	set	1083
   246  043A                     _TRISC2	set	1082
   247  0439                     _TRISC1	set	1081
   248  0438                     _TRISC0	set	1080
   249                           
   250                           	psect	strings
   251  0003                     __pstrings:	
   252  0003                     stringtab:	
   253  0003                     __stringtab:	
   254  0003                     stringcode:	
   255                           ;	String table - string pointers are 1 byte each
   256                           
   257  0003                     stringdir:	
   258  0003  3000               	movlw	high stringdir
   259  0004  008A               	movwf	10
   260  0005  0804               	movf	4,w
   261  0006  0A84               	incf	4,f
   262  0007  0782               	addwf	2,f
   263  0008                     __stringbase:	
   264  0008  3400               	retlw	0
   265  0009                     __end_of__stringtab:	
   266  0009                     STR_1:	
   267  0009  344E               	retlw	78	;'N'
   268  000A  3468               	retlw	104	;'h'
   269  000B  3469               	retlw	105	;'i'
   270  000C  3465               	retlw	101	;'e'
   271  000D  3474               	retlw	116	;'t'
   272  000E  3420               	retlw	32	;' '
   273  000F  3464               	retlw	100	;'d'
   274  0010  346F               	retlw	111	;'o'
   275  0011  3420               	retlw	32	;' '
   276  0012  3464               	retlw	100	;'d'
   277  0013  3461               	retlw	97	;'a'
   278  0014  3474               	retlw	116	;'t'
   279  0015  343A               	retlw	58	;':'
   280  0016  3420               	retlw	32	;' '
   281  0017  3400               	retlw	0
   282                           
   283                           ; #config settings
   284  0000                     
   285                           	psect	cinit
   286  07FC                     start_initialization:	
   287  07FC                     __initialization:	
   288  07FC                     end_of_initialization:	
   289                           ;End of C runtime variable initialization code
   290                           
   291  07FC                     __end_of__initialization:	
   292  07FC  0183               	clrf	3
   293  07FD  120A  118A  2F64   	ljmp	_main	;jump to C main() function
   294                           
   295                           	psect	cstackCOMMON
   296  0070                     __pcstackCOMMON:	
   297  0070                     ?_Lcd_Init:	
   298  0070                     ?_Lcd_Write_String:	
   299                           ; 1 bytes @ 0x0
   300                           
   301  0070                     ?_Lcd_Write_Char:	
   302                           ; 1 bytes @ 0x0
   303                           
   304  0070                     ?_main:	
   305                           ; 1 bytes @ 0x0
   306                           
   307  0070                     ?_Lcd_Port:	
   308                           ; 1 bytes @ 0x0
   309                           
   310  0070                     ??_Lcd_Port:	
   311                           ; 1 bytes @ 0x0
   312                           
   313  0070                     ?_Lcd_Cmd:	
   314                           ; 1 bytes @ 0x0
   315                           
   316  0070                     ?___lwdiv:	
   317                           ; 1 bytes @ 0x0
   318                           
   319  0070                     ?___lwmod:	
   320                           ; 2 bytes @ 0x0
   321                           
   322  0070                     Lcd_Port@a:	
   323                           ; 2 bytes @ 0x0
   324                           
   325  0070                     ___lwdiv@divisor:	
   326                           ; 1 bytes @ 0x0
   327                           
   328  0070                     ___lwmod@divisor:	
   329                           ; 2 bytes @ 0x0
   330                           
   331                           
   332                           ; 2 bytes @ 0x0
   333  0070                     	ds	1
   334  0071                     ??_Lcd_Write_Char:	
   335  0071                     ??_Lcd_Cmd:	
   336                           ; 1 bytes @ 0x1
   337                           
   338                           
   339                           ; 1 bytes @ 0x1
   340  0071                     	ds	1
   341  0072                     Lcd_Write_Char@temp:	
   342  0072                     ___lwdiv@dividend:	
   343                           ; 1 bytes @ 0x2
   344                           
   345  0072                     ___lwmod@dividend:	
   346                           ; 2 bytes @ 0x2
   347                           
   348                           
   349                           ; 2 bytes @ 0x2
   350  0072                     	ds	1
   351  0073                     Lcd_Cmd@a:	
   352  0073                     Lcd_Write_Char@y:	
   353                           ; 1 bytes @ 0x3
   354                           
   355                           
   356                           ; 1 bytes @ 0x3
   357  0073                     	ds	1
   358  0074                     ??_Lcd_Init:	
   359  0074                     ?_Lcd_Set_Cursor:	
   360                           ; 1 bytes @ 0x4
   361                           
   362  0074                     ??___lwdiv:	
   363                           ; 1 bytes @ 0x4
   364                           
   365  0074                     ??___lwmod:	
   366                           ; 1 bytes @ 0x4
   367                           
   368  0074                     Lcd_Set_Cursor@b:	
   369                           ; 1 bytes @ 0x4
   370                           
   371  0074                     Lcd_Write_Char@a:	
   372                           ; 1 bytes @ 0x4
   373                           
   374                           
   375                           ; 1 bytes @ 0x4
   376  0074                     	ds	1
   377  0075                     ??_Lcd_Write_String:	
   378  0075                     ??_Lcd_Set_Cursor:	
   379                           ; 1 bytes @ 0x5
   380                           
   381  0075                     ___lwmod@counter:	
   382                           ; 1 bytes @ 0x5
   383                           
   384  0075                     Lcd_Write_String@i:	
   385                           ; 1 bytes @ 0x5
   386                           
   387  0075                     ___lwdiv@quotient:	
   388                           ; 2 bytes @ 0x5
   389                           
   390                           
   391                           ; 2 bytes @ 0x5
   392  0075                     	ds	2
   393  0077                     Lcd_Set_Cursor@a:	
   394  0077                     Lcd_Write_String@a:	
   395                           ; 1 bytes @ 0x7
   396                           
   397  0077                     ___lwdiv@counter:	
   398                           ; 1 bytes @ 0x7
   399                           
   400                           
   401                           ; 1 bytes @ 0x7
   402  0077                     	ds	1
   403  0078                     Lcd_Set_Cursor@z:	
   404                           
   405                           ; 1 bytes @ 0x8
   406  0078                     	ds	1
   407  0079                     Lcd_Set_Cursor@y:	
   408                           
   409                           ; 1 bytes @ 0x9
   410  0079                     	ds	1
   411  007A                     Lcd_Set_Cursor@temp:	
   412                           
   413                           ; 1 bytes @ 0xA
   414  007A                     	ds	1
   415  007B                     ??_main:	
   416                           
   417                           ; 1 bytes @ 0xB
   418  007B                     	ds	3
   419                           
   420                           	psect	cstackBANK0
   421  0020                     __pcstackBANK0:	
   422  0020                     main@nhietdo:	
   423                           
   424                           ; 2 bytes @ 0x0
   425  0020                     	ds	2
   426                           
   427                           	psect	maintext
   428  0764                     __pmaintext:	
   429 ;;
   430 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   431 ;;
   432 ;; *************** function _main *****************
   433 ;; Defined at:
   434 ;;		line 18 in file "DKND_button.c"
   435 ;; Parameters:    Size  Location     Type
   436 ;;		None
   437 ;; Auto vars:     Size  Location     Type
   438 ;;  nhietdo         2    0[BANK0 ] unsigned int 
   439 ;; Return value:  Size  Location     Type
   440 ;;                  1    wreg      void 
   441 ;; Registers used:
   442 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   443 ;; Tracked objects:
   444 ;;		On entry : B00/0
   445 ;;		On exit  : 0/0
   446 ;;		Unchanged: 0/0
   447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   448 ;;      Params:         0       0       0       0       0
   449 ;;      Locals:         0       2       0       0       0
   450 ;;      Temps:          3       0       0       0       0
   451 ;;      Totals:         3       2       0       0       0
   452 ;;Total ram usage:        5 bytes
   453 ;; Hardware stack levels required when called:    3
   454 ;; This function calls:
   455 ;;		_Lcd_Init
   456 ;;		_Lcd_Set_Cursor
   457 ;;		_Lcd_Write_Char
   458 ;;		_Lcd_Write_String
   459 ;;		___lwdiv
   460 ;;		___lwmod
   461 ;; This function is called by:
   462 ;;		Startup code after reset
   463 ;; This function uses a non-reentrant model
   464 ;;
   465                           
   466                           
   467                           ;psect for function _main
   468  0764                     _main:	
   469                           
   470                           ;DKND_button.c: 21:     unsigned int nhietdo = 34;
   471                           
   472                           ;incstack = 0
   473                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   474  0764  3022               	movlw	34
   475  0765  1283               	bcf	3,5	;RP0=0, select bank0
   476  0766  1303               	bcf	3,6	;RP1=0, select bank0
   477  0767  00A0               	movwf	main@nhietdo
   478  0768  3000               	movlw	0
   479  0769  00A1               	movwf	main@nhietdo+1
   480                           
   481                           ;DKND_button.c: 23:     TRISD = 0x00;
   482  076A  1683               	bsf	3,5	;RP0=1, select bank1
   483  076B  1303               	bcf	3,6	;RP1=0, select bank1
   484  076C  0188               	clrf	8	;volatile
   485                           
   486                           ;DKND_button.c: 24:     TRISB = 0x00;
   487  076D  0186               	clrf	6	;volatile
   488                           
   489                           ;DKND_button.c: 25:     TRISC0 = 1;
   490  076E  1407               	bsf	7,0	;volatile
   491                           
   492                           ;DKND_button.c: 26:     TRISC1 = 1;
   493  076F  1487               	bsf	7,1	;volatile
   494                           
   495                           ;DKND_button.c: 27:     TRISC2 = 1;
   496  0770  1507               	bsf	7,2	;volatile
   497                           
   498                           ;DKND_button.c: 28:     TRISC3 = 1;
   499  0771  1587               	bsf	7,3	;volatile
   500                           
   501                           ;DKND_button.c: 30:     Lcd_Init();
   502  0772  120A  118A  2708  120A  118A  	fcall	_Lcd_Init
   503                           
   504                           ;DKND_button.c: 32:     Lcd_Write_String("Nhiet do dat: ");
   505  0777  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   506  0778  120A  118A  25F5  120A  118A  	fcall	_Lcd_Write_String
   507  077D                     l1027:	
   508                           
   509                           ;DKND_button.c: 34:     {;DKND_button.c: 35:         if(RC0 == 0)
   510  077D  1283               	bcf	3,5	;RP0=0, select bank0
   511  077E  1303               	bcf	3,6	;RP1=0, select bank0
   512  077F  1807               	btfsc	7,0	;volatile
   513  0780  2F8E               	goto	l1037
   514  0781                     l37:	
   515  0781  1C07               	btfss	7,0	;volatile
   516  0782  2F81               	goto	l37
   517                           
   518                           ;DKND_button.c: 38:             if(nhietdo == 60);
   519  0783  303C               	movlw	60
   520  0784  0620               	xorwf	main@nhietdo,w
   521  0785  0421               	iorwf	main@nhietdo+1,w
   522  0786  1903               	btfsc	3,2
   523  0787  2F8E               	goto	l1037
   524  0788  3001               	movlw	1
   525  0789  07A0               	addwf	main@nhietdo,f
   526  078A  1803               	skipnc
   527  078B  0AA1               	incf	main@nhietdo+1,f
   528  078C  3000               	movlw	0
   529  078D  07A1               	addwf	main@nhietdo+1,f
   530  078E                     l1037:	
   531                           
   532                           ;DKND_button.c: 41:         if(RC1 == 0)
   533  078E  1887               	btfsc	7,1	;volatile
   534  078F  2F9D               	goto	l1047
   535  0790                     l43:	
   536  0790  1C87               	btfss	7,1	;volatile
   537  0791  2F90               	goto	l43
   538                           
   539                           ;DKND_button.c: 44:             if(nhietdo == 34);
   540  0792  3022               	movlw	34
   541  0793  0620               	xorwf	main@nhietdo,w
   542  0794  0421               	iorwf	main@nhietdo+1,w
   543  0795  1903               	btfsc	3,2
   544  0796  2F9D               	goto	l1047
   545  0797  3001               	movlw	1
   546  0798  02A0               	subwf	main@nhietdo,f
   547  0799  3000               	movlw	0
   548  079A  1C03               	skipc
   549  079B  03A1               	decf	main@nhietdo+1,f
   550  079C  02A1               	subwf	main@nhietdo+1,f
   551  079D                     l1047:	
   552                           
   553                           ;DKND_button.c: 47:         if(RC2 == 0)
   554  079D  1907               	btfsc	7,2	;volatile
   555  079E  2FA2               	goto	l1051
   556  079F                     l49:	
   557  079F  1907               	btfsc	7,2	;volatile
   558  07A0  2FD9               	goto	l1053
   559  07A1  2F9F               	goto	l49
   560  07A2                     l1051:	
   561                           
   562                           ;DKND_button.c: 52:         Lcd_Set_Cursor(1,15);
   563  07A2  300F               	movlw	15
   564  07A3  00FB               	movwf	??_main
   565  07A4  087B               	movf	??_main,w
   566  07A5  00F4               	movwf	Lcd_Set_Cursor@b
   567  07A6  3001               	movlw	1
   568  07A7  120A  118A  26BE  120A  118A  	fcall	_Lcd_Set_Cursor
   569                           
   570                           ;DKND_button.c: 53:         Lcd_Write_Char(nhietdo/10+48);
   571  07AC  300A               	movlw	10
   572  07AD  00F0               	movwf	___lwdiv@divisor
   573  07AE  3000               	movlw	0
   574  07AF  00F1               	movwf	___lwdiv@divisor+1
   575  07B0  1283               	bcf	3,5	;RP0=0, select bank0
   576  07B1  1303               	bcf	3,6	;RP1=0, select bank0
   577  07B2  0821               	movf	main@nhietdo+1,w
   578  07B3  00F3               	movwf	___lwdiv@dividend+1
   579  07B4  0820               	movf	main@nhietdo,w
   580  07B5  00F2               	movwf	___lwdiv@dividend
   581  07B6  120A  118A  2682  120A  118A  	fcall	___lwdiv
   582  07BB  0870               	movf	?___lwdiv,w
   583  07BC  3E30               	addlw	48
   584  07BD  120A  118A  2649  120A  118A  	fcall	_Lcd_Write_Char
   585                           
   586                           ;DKND_button.c: 54:         Lcd_Write_Char(nhietdo%10+48);
   587  07C2  300A               	movlw	10
   588  07C3  00F0               	movwf	___lwmod@divisor
   589  07C4  3000               	movlw	0
   590  07C5  00F1               	movwf	___lwmod@divisor+1
   591  07C6  1283               	bcf	3,5	;RP0=0, select bank0
   592  07C7  1303               	bcf	3,6	;RP1=0, select bank0
   593  07C8  0821               	movf	main@nhietdo+1,w
   594  07C9  00F3               	movwf	___lwmod@dividend+1
   595  07CA  0820               	movf	main@nhietdo,w
   596  07CB  00F2               	movwf	___lwmod@dividend
   597  07CC  120A  118A  2617  120A  118A  	fcall	___lwmod
   598  07D1  0870               	movf	?___lwmod,w
   599  07D2  3E30               	addlw	48
   600  07D3  120A  118A  2649  120A  118A  	fcall	_Lcd_Write_Char
   601  07D8  2F7D               	goto	l1027
   602  07D9                     l1053:	
   603                           
   604                           ;DKND_button.c: 58:     {;DKND_button.c: 59:         PORTB = 0xAA;
   605  07D9  30AA               	movlw	170
   606  07DA  1283               	bcf	3,5	;RP0=0, select bank0
   607  07DB  1303               	bcf	3,6	;RP1=0, select bank0
   608  07DC  0086               	movwf	6	;volatile
   609                           
   610                           ;DKND_button.c: 60:         _delay((unsigned long)((50)*(20000000/4000.0)));
   611  07DD  3002               	movlw	2
   612  07DE  00FD               	movwf	??_main+2
   613  07DF  3045               	movlw	69
   614  07E0  00FC               	movwf	??_main+1
   615  07E1  30A9               	movlw	169
   616  07E2  00FB               	movwf	??_main
   617  07E3                     u637:	
   618  07E3  0BFB               	decfsz	??_main,f
   619  07E4  2FE3               	goto	u637
   620  07E5  0BFC               	decfsz	??_main+1,f
   621  07E6  2FE3               	goto	u637
   622  07E7  0BFD               	decfsz	??_main+2,f
   623  07E8  2FE3               	goto	u637
   624  07E9  2FEA               	nop2
   625                           
   626                           ;DKND_button.c: 61:         PORTB = 0x55;
   627  07EA  3055               	movlw	85
   628  07EB  1283               	bcf	3,5	;RP0=0, select bank0
   629  07EC  1303               	bcf	3,6	;RP1=0, select bank0
   630  07ED  0086               	movwf	6	;volatile
   631                           
   632                           ;DKND_button.c: 62:         _delay((unsigned long)((50)*(20000000/4000.0)));
   633  07EE  3002               	movlw	2
   634  07EF  00FD               	movwf	??_main+2
   635  07F0  3045               	movlw	69
   636  07F1  00FC               	movwf	??_main+1
   637  07F2  30A9               	movlw	169
   638  07F3  00FB               	movwf	??_main
   639  07F4                     u647:	
   640  07F4  0BFB               	decfsz	??_main,f
   641  07F5  2FF4               	goto	u647
   642  07F6  0BFC               	decfsz	??_main+1,f
   643  07F7  2FF4               	goto	u647
   644  07F8  0BFD               	decfsz	??_main+2,f
   645  07F9  2FF4               	goto	u647
   646  07FA  2FFB               	nop2
   647  07FB  2FD9               	goto	l1053
   648  07FC                     __end_of_main:	
   649                           
   650                           	psect	text1
   651  0617                     __ptext1:	
   652 ;; *************** function ___lwmod *****************
   653 ;; Defined at:
   654 ;;		line 5 in file "D:\Mplab X\xc8\pic\sources\c90\common\lwmod.c"
   655 ;; Parameters:    Size  Location     Type
   656 ;;  divisor         2    0[COMMON] unsigned int 
   657 ;;  dividend        2    2[COMMON] unsigned int 
   658 ;; Auto vars:     Size  Location     Type
   659 ;;  counter         1    5[COMMON] unsigned char 
   660 ;; Return value:  Size  Location     Type
   661 ;;                  2    0[COMMON] unsigned int 
   662 ;; Registers used:
   663 ;;		wreg, status,2, status,0
   664 ;; Tracked objects:
   665 ;;		On entry : 0/0
   666 ;;		On exit  : 0/0
   667 ;;		Unchanged: 0/0
   668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   669 ;;      Params:         4       0       0       0       0
   670 ;;      Locals:         1       0       0       0       0
   671 ;;      Temps:          1       0       0       0       0
   672 ;;      Totals:         6       0       0       0       0
   673 ;;Total ram usage:        6 bytes
   674 ;; Hardware stack levels used:    1
   675 ;; This function calls:
   676 ;;		Nothing
   677 ;; This function is called by:
   678 ;;		_main
   679 ;; This function uses a non-reentrant model
   680 ;;
   681                           
   682                           
   683                           ;psect for function ___lwmod
   684  0617                     ___lwmod:	
   685                           
   686                           ;incstack = 0
   687                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
   688  0617  0870               	movf	___lwmod@divisor,w
   689  0618  0471               	iorwf	___lwmod@divisor+1,w
   690  0619  1903               	btfsc	3,2
   691  061A  2E44               	goto	l1005
   692  061B  01F5               	clrf	___lwmod@counter
   693  061C  0AF5               	incf	___lwmod@counter,f
   694  061D                     l995:	
   695  061D  1BF1               	btfsc	___lwmod@divisor+1,7
   696  061E  2E2B               	goto	l997
   697  061F  3001               	movlw	1
   698  0620                     u505:	
   699  0620  1003               	clrc
   700  0621  0DF0               	rlf	___lwmod@divisor,f
   701  0622  0DF1               	rlf	___lwmod@divisor+1,f
   702  0623  3EFF               	addlw	-1
   703  0624  1D03               	skipz
   704  0625  2E20               	goto	u505
   705  0626  3001               	movlw	1
   706  0627  00F4               	movwf	??___lwmod
   707  0628  0874               	movf	??___lwmod,w
   708  0629  07F5               	addwf	___lwmod@counter,f
   709  062A  2E1D               	goto	l995
   710  062B                     l997:	
   711  062B  0871               	movf	___lwmod@divisor+1,w
   712  062C  0273               	subwf	___lwmod@dividend+1,w
   713  062D  1D03               	skipz
   714  062E  2E31               	goto	u525
   715  062F  0870               	movf	___lwmod@divisor,w
   716  0630  0272               	subwf	___lwmod@dividend,w
   717  0631                     u525:	
   718  0631  1C03               	skipc
   719  0632  2E39               	goto	l1001
   720  0633  0870               	movf	___lwmod@divisor,w
   721  0634  02F2               	subwf	___lwmod@dividend,f
   722  0635  0871               	movf	___lwmod@divisor+1,w
   723  0636  1C03               	skipc
   724  0637  03F3               	decf	___lwmod@dividend+1,f
   725  0638  02F3               	subwf	___lwmod@dividend+1,f
   726  0639                     l1001:	
   727  0639  3001               	movlw	1
   728  063A                     u535:	
   729  063A  1003               	clrc
   730  063B  0CF1               	rrf	___lwmod@divisor+1,f
   731  063C  0CF0               	rrf	___lwmod@divisor,f
   732  063D  3EFF               	addlw	-1
   733  063E  1D03               	skipz
   734  063F  2E3A               	goto	u535
   735  0640  3001               	movlw	1
   736  0641  02F5               	subwf	___lwmod@counter,f
   737  0642  1D03               	btfss	3,2
   738  0643  2E2B               	goto	l997
   739  0644                     l1005:	
   740  0644  0873               	movf	___lwmod@dividend+1,w
   741  0645  00F1               	movwf	?___lwmod+1
   742  0646  0872               	movf	___lwmod@dividend,w
   743  0647  00F0               	movwf	?___lwmod
   744  0648  0008               	return
   745  0649                     __end_of___lwmod:	
   746                           
   747                           	psect	text2
   748  0682                     __ptext2:	
   749 ;; *************** function ___lwdiv *****************
   750 ;; Defined at:
   751 ;;		line 5 in file "D:\Mplab X\xc8\pic\sources\c90\common\lwdiv.c"
   752 ;; Parameters:    Size  Location     Type
   753 ;;  divisor         2    0[COMMON] unsigned int 
   754 ;;  dividend        2    2[COMMON] unsigned int 
   755 ;; Auto vars:     Size  Location     Type
   756 ;;  quotient        2    5[COMMON] unsigned int 
   757 ;;  counter         1    7[COMMON] unsigned char 
   758 ;; Return value:  Size  Location     Type
   759 ;;                  2    0[COMMON] unsigned int 
   760 ;; Registers used:
   761 ;;		wreg, status,2, status,0
   762 ;; Tracked objects:
   763 ;;		On entry : 0/0
   764 ;;		On exit  : 0/0
   765 ;;		Unchanged: 0/0
   766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   767 ;;      Params:         4       0       0       0       0
   768 ;;      Locals:         3       0       0       0       0
   769 ;;      Temps:          1       0       0       0       0
   770 ;;      Totals:         8       0       0       0       0
   771 ;;Total ram usage:        8 bytes
   772 ;; Hardware stack levels used:    1
   773 ;; This function calls:
   774 ;;		Nothing
   775 ;; This function is called by:
   776 ;;		_main
   777 ;; This function uses a non-reentrant model
   778 ;;
   779                           
   780                           
   781                           ;psect for function ___lwdiv
   782  0682                     ___lwdiv:	
   783                           
   784                           ;incstack = 0
   785                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
   786  0682  01F5               	clrf	___lwdiv@quotient
   787  0683  01F6               	clrf	___lwdiv@quotient+1
   788  0684  0870               	movf	___lwdiv@divisor,w
   789  0685  0471               	iorwf	___lwdiv@divisor+1,w
   790  0686  1903               	btfsc	3,2
   791  0687  2EB9               	goto	l983
   792  0688  01F7               	clrf	___lwdiv@counter
   793  0689  0AF7               	incf	___lwdiv@counter,f
   794  068A                     l971:	
   795  068A  1BF1               	btfsc	___lwdiv@divisor+1,7
   796  068B  2E98               	goto	l973
   797  068C  3001               	movlw	1
   798  068D                     u435:	
   799  068D  1003               	clrc
   800  068E  0DF0               	rlf	___lwdiv@divisor,f
   801  068F  0DF1               	rlf	___lwdiv@divisor+1,f
   802  0690  3EFF               	addlw	-1
   803  0691  1D03               	skipz
   804  0692  2E8D               	goto	u435
   805  0693  3001               	movlw	1
   806  0694  00F4               	movwf	??___lwdiv
   807  0695  0874               	movf	??___lwdiv,w
   808  0696  07F7               	addwf	___lwdiv@counter,f
   809  0697  2E8A               	goto	l971
   810  0698                     l973:	
   811  0698  3001               	movlw	1
   812  0699                     u455:	
   813  0699  1003               	clrc
   814  069A  0DF5               	rlf	___lwdiv@quotient,f
   815  069B  0DF6               	rlf	___lwdiv@quotient+1,f
   816  069C  3EFF               	addlw	-1
   817  069D  1D03               	skipz
   818  069E  2E99               	goto	u455
   819  069F  0871               	movf	___lwdiv@divisor+1,w
   820  06A0  0273               	subwf	___lwdiv@dividend+1,w
   821  06A1  1D03               	skipz
   822  06A2  2EA5               	goto	u465
   823  06A3  0870               	movf	___lwdiv@divisor,w
   824  06A4  0272               	subwf	___lwdiv@dividend,w
   825  06A5                     u465:	
   826  06A5  1C03               	skipc
   827  06A6  2EAE               	goto	l979
   828  06A7  0870               	movf	___lwdiv@divisor,w
   829  06A8  02F2               	subwf	___lwdiv@dividend,f
   830  06A9  0871               	movf	___lwdiv@divisor+1,w
   831  06AA  1C03               	skipc
   832  06AB  03F3               	decf	___lwdiv@dividend+1,f
   833  06AC  02F3               	subwf	___lwdiv@dividend+1,f
   834  06AD  1475               	bsf	___lwdiv@quotient,0
   835  06AE                     l979:	
   836  06AE  3001               	movlw	1
   837  06AF                     u475:	
   838  06AF  1003               	clrc
   839  06B0  0CF1               	rrf	___lwdiv@divisor+1,f
   840  06B1  0CF0               	rrf	___lwdiv@divisor,f
   841  06B2  3EFF               	addlw	-1
   842  06B3  1D03               	skipz
   843  06B4  2EAF               	goto	u475
   844  06B5  3001               	movlw	1
   845  06B6  02F7               	subwf	___lwdiv@counter,f
   846  06B7  1D03               	btfss	3,2
   847  06B8  2E98               	goto	l973
   848  06B9                     l983:	
   849  06B9  0876               	movf	___lwdiv@quotient+1,w
   850  06BA  00F1               	movwf	?___lwdiv+1
   851  06BB  0875               	movf	___lwdiv@quotient,w
   852  06BC  00F0               	movwf	?___lwdiv
   853  06BD  0008               	return
   854  06BE                     __end_of___lwdiv:	
   855                           
   856                           	psect	text3
   857  05F5                     __ptext3:	
   858 ;; *************** function _Lcd_Write_String *****************
   859 ;; Defined at:
   860 ;;		line 98 in file "lcd4.c"
   861 ;; Parameters:    Size  Location     Type
   862 ;;  a               1    wreg     PTR unsigned char 
   863 ;;		 -> STR_1(15), 
   864 ;; Auto vars:     Size  Location     Type
   865 ;;  a               1    7[COMMON] PTR unsigned char 
   866 ;;		 -> STR_1(15), 
   867 ;;  i               2    5[COMMON] int 
   868 ;; Return value:  Size  Location     Type
   869 ;;                  1    wreg      void 
   870 ;; Registers used:
   871 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   872 ;; Tracked objects:
   873 ;;		On entry : 0/0
   874 ;;		On exit  : 0/0
   875 ;;		Unchanged: 0/0
   876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   877 ;;      Params:         0       0       0       0       0
   878 ;;      Locals:         3       0       0       0       0
   879 ;;      Temps:          0       0       0       0       0
   880 ;;      Totals:         3       0       0       0       0
   881 ;;Total ram usage:        3 bytes
   882 ;; Hardware stack levels used:    1
   883 ;; Hardware stack levels required when called:    2
   884 ;; This function calls:
   885 ;;		_Lcd_Write_Char
   886 ;; This function is called by:
   887 ;;		_main
   888 ;; This function uses a non-reentrant model
   889 ;;
   890                           
   891                           
   892                           ;psect for function _Lcd_Write_String
   893  05F5                     _Lcd_Write_String:	
   894                           
   895                           ;incstack = 0
   896                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   897                           ;Lcd_Write_String@a stored from wreg
   898  05F5  00F7               	movwf	Lcd_Write_String@a
   899                           
   900                           ;lcd4.c: 98: void Lcd_Write_String(char *a);lcd4.c: 99: {;lcd4.c: 100:  int i;;lcd4.c: 1
      +                          01:  for(i=0;a[i]!='\0';i++)
   901  05F6  01F5               	clrf	Lcd_Write_String@i
   902  05F7  01F6               	clrf	Lcd_Write_String@i+1
   903  05F8                     l939:	
   904  05F8  0875               	movf	Lcd_Write_String@i,w
   905  05F9  0777               	addwf	Lcd_Write_String@a,w
   906  05FA  0084               	movwf	4
   907  05FB  120A  118A  2003  120A  118A  	fcall	stringdir
   908  0600  3A00               	xorlw	0
   909  0601  1903               	btfsc	3,2
   910  0602  0008               	return
   911                           
   912                           ;lcd4.c: 102:     Lcd_Write_Char(a[i]);
   913  0603  0875               	movf	Lcd_Write_String@i,w
   914  0604  0777               	addwf	Lcd_Write_String@a,w
   915  0605  0084               	movwf	4
   916  0606  120A  118A  2003  120A  118A  	fcall	stringdir
   917  060B  120A  118A  2649  120A  118A  	fcall	_Lcd_Write_Char
   918  0610  3001               	movlw	1
   919  0611  07F5               	addwf	Lcd_Write_String@i,f
   920  0612  1803               	skipnc
   921  0613  0AF6               	incf	Lcd_Write_String@i+1,f
   922  0614  3000               	movlw	0
   923  0615  07F6               	addwf	Lcd_Write_String@i+1,f
   924  0616  2DF8               	goto	l939
   925  0617                     __end_of_Lcd_Write_String:	
   926                           
   927                           	psect	text4
   928  0649                     __ptext4:	
   929 ;; *************** function _Lcd_Write_Char *****************
   930 ;; Defined at:
   931 ;;		line 82 in file "lcd4.c"
   932 ;; Parameters:    Size  Location     Type
   933 ;;  a               1    wreg     unsigned char 
   934 ;; Auto vars:     Size  Location     Type
   935 ;;  a               1    4[COMMON] unsigned char 
   936 ;;  y               1    3[COMMON] unsigned char 
   937 ;;  temp            1    2[COMMON] unsigned char 
   938 ;; Return value:  Size  Location     Type
   939 ;;                  1    wreg      void 
   940 ;; Registers used:
   941 ;;		wreg, status,2, status,0, pclath, cstack
   942 ;; Tracked objects:
   943 ;;		On entry : 0/0
   944 ;;		On exit  : 0/0
   945 ;;		Unchanged: 0/0
   946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   947 ;;      Params:         0       0       0       0       0
   948 ;;      Locals:         3       0       0       0       0
   949 ;;      Temps:          1       0       0       0       0
   950 ;;      Totals:         4       0       0       0       0
   951 ;;Total ram usage:        4 bytes
   952 ;; Hardware stack levels used:    1
   953 ;; Hardware stack levels required when called:    1
   954 ;; This function calls:
   955 ;;		_Lcd_Port
   956 ;; This function is called by:
   957 ;;		_main
   958 ;;		_Lcd_Write_String
   959 ;; This function uses a non-reentrant model
   960 ;;
   961                           
   962                           
   963                           ;psect for function _Lcd_Write_Char
   964  0649                     _Lcd_Write_Char:	
   965                           
   966                           ;incstack = 0
   967                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
   968                           ;Lcd_Write_Char@a stored from wreg
   969  0649  00F4               	movwf	Lcd_Write_Char@a
   970                           
   971                           ;lcd4.c: 82: void Lcd_Write_Char(char a);lcd4.c: 83: {;lcd4.c: 84:    char temp,y;;lcd4.
      +                          c: 85:    temp = a&0x0F;
   972  064A  0874               	movf	Lcd_Write_Char@a,w
   973  064B  390F               	andlw	15
   974  064C  00F1               	movwf	??_Lcd_Write_Char
   975  064D  0871               	movf	??_Lcd_Write_Char,w
   976  064E  00F2               	movwf	Lcd_Write_Char@temp
   977                           
   978                           ;lcd4.c: 86:    y = a&0xF0;
   979  064F  0874               	movf	Lcd_Write_Char@a,w
   980  0650  39F0               	andlw	240
   981  0651  00F1               	movwf	??_Lcd_Write_Char
   982  0652  0871               	movf	??_Lcd_Write_Char,w
   983  0653  00F3               	movwf	Lcd_Write_Char@y
   984                           
   985                           ;lcd4.c: 87:    RD0 = 1;
   986  0654  1283               	bcf	3,5	;RP0=0, select bank0
   987  0655  1303               	bcf	3,6	;RP1=0, select bank0
   988  0656  1408               	bsf	8,0	;volatile
   989                           
   990                           ;lcd4.c: 88:    Lcd_Port(y>>4);
   991  0657  0873               	movf	Lcd_Write_Char@y,w
   992  0658  00F1               	movwf	??_Lcd_Write_Char
   993  0659  3004               	movlw	4
   994  065A                     u365:	
   995  065A  1003               	clrc
   996  065B  0CF1               	rrf	??_Lcd_Write_Char,f
   997  065C  3EFF               	addlw	-1
   998  065D  1D03               	skipz
   999  065E  2E5A               	goto	u365
  1000  065F  0871               	movf	??_Lcd_Write_Char,w
  1001  0660  120A  118A  25C1  120A  118A  	fcall	_Lcd_Port
  1002                           
  1003                           ;lcd4.c: 89:    RD1 = 1;
  1004  0665  1283               	bcf	3,5	;RP0=0, select bank0
  1005  0666  1303               	bcf	3,6	;RP1=0, select bank0
  1006  0667  1488               	bsf	8,1	;volatile
  1007                           
  1008                           ;lcd4.c: 90:    _delay((unsigned long)((40)*(20000000/4000000.0)));
  1009  0668  3042               	movlw	66
  1010  0669  00F1               	movwf	??_Lcd_Write_Char
  1011  066A                     u657:	
  1012  066A  0BF1               	decfsz	??_Lcd_Write_Char,f
  1013  066B  2E6A               	goto	u657
  1014  066C  0000               	nop
  1015                           
  1016                           ;lcd4.c: 91:    RD1 = 0;
  1017  066D  1283               	bcf	3,5	;RP0=0, select bank0
  1018  066E  1303               	bcf	3,6	;RP1=0, select bank0
  1019  066F  1088               	bcf	8,1	;volatile
  1020                           
  1021                           ;lcd4.c: 92:    Lcd_Port(temp);
  1022  0670  0872               	movf	Lcd_Write_Char@temp,w
  1023  0671  120A  118A  25C1  120A  118A  	fcall	_Lcd_Port
  1024                           
  1025                           ;lcd4.c: 93:    RD1 = 1;
  1026  0676  1283               	bcf	3,5	;RP0=0, select bank0
  1027  0677  1303               	bcf	3,6	;RP1=0, select bank0
  1028  0678  1488               	bsf	8,1	;volatile
  1029                           
  1030                           ;lcd4.c: 94:    _delay((unsigned long)((40)*(20000000/4000000.0)));
  1031  0679  3042               	movlw	66
  1032  067A  00F1               	movwf	??_Lcd_Write_Char
  1033  067B                     u667:	
  1034  067B  0BF1               	decfsz	??_Lcd_Write_Char,f
  1035  067C  2E7B               	goto	u667
  1036  067D  0000               	nop
  1037                           
  1038                           ;lcd4.c: 95:    RD1 = 0;
  1039  067E  1283               	bcf	3,5	;RP0=0, select bank0
  1040  067F  1303               	bcf	3,6	;RP1=0, select bank0
  1041  0680  1088               	bcf	8,1	;volatile
  1042  0681  0008               	return
  1043  0682                     __end_of_Lcd_Write_Char:	
  1044                           
  1045                           	psect	text5
  1046  06BE                     __ptext5:	
  1047 ;; *************** function _Lcd_Set_Cursor *****************
  1048 ;; Defined at:
  1049 ;;		line 42 in file "lcd4.c"
  1050 ;; Parameters:    Size  Location     Type
  1051 ;;  a               1    wreg     unsigned char 
  1052 ;;  b               1    4[COMMON] unsigned char 
  1053 ;; Auto vars:     Size  Location     Type
  1054 ;;  a               1    7[COMMON] unsigned char 
  1055 ;;  temp            1   10[COMMON] unsigned char 
  1056 ;;  y               1    9[COMMON] unsigned char 
  1057 ;;  z               1    8[COMMON] unsigned char 
  1058 ;; Return value:  Size  Location     Type
  1059 ;;                  1    wreg      void 
  1060 ;; Registers used:
  1061 ;;		wreg, status,2, status,0, pclath, cstack
  1062 ;; Tracked objects:
  1063 ;;		On entry : 0/0
  1064 ;;		On exit  : 0/0
  1065 ;;		Unchanged: 0/0
  1066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1067 ;;      Params:         1       0       0       0       0
  1068 ;;      Locals:         4       0       0       0       0
  1069 ;;      Temps:          2       0       0       0       0
  1070 ;;      Totals:         7       0       0       0       0
  1071 ;;Total ram usage:        7 bytes
  1072 ;; Hardware stack levels used:    1
  1073 ;; Hardware stack levels required when called:    2
  1074 ;; This function calls:
  1075 ;;		_Lcd_Cmd
  1076 ;; This function is called by:
  1077 ;;		_main
  1078 ;; This function uses a non-reentrant model
  1079 ;;
  1080                           
  1081                           
  1082                           ;psect for function _Lcd_Set_Cursor
  1083  06BE                     _Lcd_Set_Cursor:	
  1084                           
  1085                           ;incstack = 0
  1086                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1087                           ;Lcd_Set_Cursor@a stored from wreg
  1088  06BE  00F7               	movwf	Lcd_Set_Cursor@a
  1089                           
  1090                           ;lcd4.c: 42: void Lcd_Set_Cursor(char a, char b);lcd4.c: 43: {;lcd4.c: 44:  char temp,z,
      +                          y;;lcd4.c: 45:  if(a == 1)
  1091  06BF  0377               	decf	Lcd_Set_Cursor@a,w
  1092  06C0  1D03               	btfss	3,2
  1093  06C1  2EE3               	goto	l951
  1094                           
  1095                           ;lcd4.c: 46:  {;lcd4.c: 47:    temp = 0x80 + b - 1;
  1096  06C2  0874               	movf	Lcd_Set_Cursor@b,w
  1097  06C3  3E7F               	addlw	127
  1098  06C4  00F5               	movwf	??_Lcd_Set_Cursor
  1099  06C5  0875               	movf	??_Lcd_Set_Cursor,w
  1100  06C6  00FA               	movwf	Lcd_Set_Cursor@temp
  1101                           
  1102                           ;lcd4.c: 48:   z = temp>>4;
  1103  06C7  087A               	movf	Lcd_Set_Cursor@temp,w
  1104  06C8  00F5               	movwf	??_Lcd_Set_Cursor
  1105  06C9  3004               	movlw	4
  1106  06CA                     u395:	
  1107  06CA  1003               	clrc
  1108  06CB  0CF5               	rrf	??_Lcd_Set_Cursor,f
  1109  06CC  3EFF               	addlw	-1
  1110  06CD  1D03               	skipz
  1111  06CE  2ECA               	goto	u395
  1112  06CF  0875               	movf	??_Lcd_Set_Cursor,w
  1113  06D0  00F6               	movwf	??_Lcd_Set_Cursor+1
  1114  06D1  0876               	movf	??_Lcd_Set_Cursor+1,w
  1115  06D2  00F8               	movwf	Lcd_Set_Cursor@z
  1116                           
  1117                           ;lcd4.c: 49:   y = temp & 0x0F;
  1118  06D3  087A               	movf	Lcd_Set_Cursor@temp,w
  1119  06D4  390F               	andlw	15
  1120  06D5  00F5               	movwf	??_Lcd_Set_Cursor
  1121  06D6  0875               	movf	??_Lcd_Set_Cursor,w
  1122  06D7  00F9               	movwf	Lcd_Set_Cursor@y
  1123                           
  1124                           ;lcd4.c: 50:   Lcd_Cmd(z);
  1125  06D8  0878               	movf	Lcd_Set_Cursor@z,w
  1126  06D9  120A  118A  25DB  120A  118A  	fcall	_Lcd_Cmd
  1127                           
  1128                           ;lcd4.c: 51:   Lcd_Cmd(y);
  1129  06DE  0879               	movf	Lcd_Set_Cursor@y,w
  1130  06DF  120A  118A  25DB   	fcall	_Lcd_Cmd
  1131                           
  1132                           ;lcd4.c: 52:  }
  1133  06E2  0008               	return
  1134  06E3                     l951:	
  1135  06E3  3002               	movlw	2
  1136  06E4  0677               	xorwf	Lcd_Set_Cursor@a,w
  1137  06E5  1D03               	btfss	3,2
  1138  06E6  0008               	return
  1139                           
  1140                           ;lcd4.c: 54:  {;lcd4.c: 55:   temp = 0xC0 + b - 1;
  1141  06E7  0874               	movf	Lcd_Set_Cursor@b,w
  1142  06E8  3EBF               	addlw	191
  1143  06E9  00F5               	movwf	??_Lcd_Set_Cursor
  1144  06EA  0875               	movf	??_Lcd_Set_Cursor,w
  1145  06EB  00FA               	movwf	Lcd_Set_Cursor@temp
  1146                           
  1147                           ;lcd4.c: 56:   z = temp>>4;
  1148  06EC  087A               	movf	Lcd_Set_Cursor@temp,w
  1149  06ED  00F5               	movwf	??_Lcd_Set_Cursor
  1150  06EE  3004               	movlw	4
  1151  06EF                     u415:	
  1152  06EF  1003               	clrc
  1153  06F0  0CF5               	rrf	??_Lcd_Set_Cursor,f
  1154  06F1  3EFF               	addlw	-1
  1155  06F2  1D03               	skipz
  1156  06F3  2EEF               	goto	u415
  1157  06F4  0875               	movf	??_Lcd_Set_Cursor,w
  1158  06F5  00F6               	movwf	??_Lcd_Set_Cursor+1
  1159  06F6  0876               	movf	??_Lcd_Set_Cursor+1,w
  1160  06F7  00F8               	movwf	Lcd_Set_Cursor@z
  1161                           
  1162                           ;lcd4.c: 57:   y = temp & 0x0F;
  1163  06F8  087A               	movf	Lcd_Set_Cursor@temp,w
  1164  06F9  390F               	andlw	15
  1165  06FA  00F5               	movwf	??_Lcd_Set_Cursor
  1166  06FB  0875               	movf	??_Lcd_Set_Cursor,w
  1167  06FC  00F9               	movwf	Lcd_Set_Cursor@y
  1168                           
  1169                           ;lcd4.c: 58:   Lcd_Cmd(z);
  1170  06FD  0878               	movf	Lcd_Set_Cursor@z,w
  1171  06FE  120A  118A  25DB  120A  118A  	fcall	_Lcd_Cmd
  1172                           
  1173                           ;lcd4.c: 59:   Lcd_Cmd(y);
  1174  0703  0879               	movf	Lcd_Set_Cursor@y,w
  1175  0704  120A  118A  25DB   	fcall	_Lcd_Cmd
  1176  0707  0008               	return
  1177  0708                     __end_of_Lcd_Set_Cursor:	
  1178                           
  1179                           	psect	text6
  1180  0708                     __ptext6:	
  1181 ;; *************** function _Lcd_Init *****************
  1182 ;; Defined at:
  1183 ;;		line 63 in file "lcd4.c"
  1184 ;; Parameters:    Size  Location     Type
  1185 ;;		None
  1186 ;; Auto vars:     Size  Location     Type
  1187 ;;		None
  1188 ;; Return value:  Size  Location     Type
  1189 ;;                  1    wreg      void 
  1190 ;; Registers used:
  1191 ;;		wreg, status,2, status,0, pclath, cstack
  1192 ;; Tracked objects:
  1193 ;;		On entry : 0/0
  1194 ;;		On exit  : 0/0
  1195 ;;		Unchanged: 0/0
  1196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1197 ;;      Params:         0       0       0       0       0
  1198 ;;      Locals:         0       0       0       0       0
  1199 ;;      Temps:          2       0       0       0       0
  1200 ;;      Totals:         2       0       0       0       0
  1201 ;;Total ram usage:        2 bytes
  1202 ;; Hardware stack levels used:    1
  1203 ;; Hardware stack levels required when called:    2
  1204 ;; This function calls:
  1205 ;;		_Lcd_Cmd
  1206 ;;		_Lcd_Port
  1207 ;; This function is called by:
  1208 ;;		_main
  1209 ;; This function uses a non-reentrant model
  1210 ;;
  1211                           
  1212                           
  1213                           ;psect for function _Lcd_Init
  1214  0708                     _Lcd_Init:	
  1215                           
  1216                           ;lcd4.c: 65:   Lcd_Port(0x00);
  1217                           
  1218                           ;incstack = 0
  1219                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1220  0708  3000               	movlw	0
  1221  0709  120A  118A  25C1  120A  118A  	fcall	_Lcd_Port
  1222                           
  1223                           ;lcd4.c: 66:    _delay((unsigned long)((20)*(20000000/4000.0)));
  1224  070E  3082               	movlw	130
  1225  070F  00F5               	movwf	??_Lcd_Init+1
  1226  0710  30DD               	movlw	221
  1227  0711  00F4               	movwf	??_Lcd_Init
  1228  0712                     u677:	
  1229  0712  0BF4               	decfsz	??_Lcd_Init,f
  1230  0713  2F12               	goto	u677
  1231  0714  0BF5               	decfsz	??_Lcd_Init+1,f
  1232  0715  2F12               	goto	u677
  1233  0716  2F17               	nop2
  1234                           
  1235                           ;lcd4.c: 67:   Lcd_Cmd(0x03);
  1236  0717  3003               	movlw	3
  1237  0718  120A  118A  25DB  120A  118A  	fcall	_Lcd_Cmd
  1238                           
  1239                           ;lcd4.c: 68:  _delay((unsigned long)((5)*(20000000/4000.0)));
  1240  071D  3021               	movlw	33
  1241  071E  00F5               	movwf	??_Lcd_Init+1
  1242  071F  3076               	movlw	118
  1243  0720  00F4               	movwf	??_Lcd_Init
  1244  0721                     u687:	
  1245  0721  0BF4               	decfsz	??_Lcd_Init,f
  1246  0722  2F21               	goto	u687
  1247  0723  0BF5               	decfsz	??_Lcd_Init+1,f
  1248  0724  2F21               	goto	u687
  1249  0725  0000               	nop
  1250                           
  1251                           ;lcd4.c: 69:   Lcd_Cmd(0x03);
  1252  0726  3003               	movlw	3
  1253  0727  120A  118A  25DB  120A  118A  	fcall	_Lcd_Cmd
  1254                           
  1255                           ;lcd4.c: 70:  _delay((unsigned long)((11)*(20000000/4000.0)));
  1256  072C  3048               	movlw	72
  1257  072D  00F5               	movwf	??_Lcd_Init+1
  1258  072E  306C               	movlw	108
  1259  072F  00F4               	movwf	??_Lcd_Init
  1260  0730                     u697:	
  1261  0730  0BF4               	decfsz	??_Lcd_Init,f
  1262  0731  2F30               	goto	u697
  1263  0732  0BF5               	decfsz	??_Lcd_Init+1,f
  1264  0733  2F30               	goto	u697
  1265  0734  0000               	nop
  1266                           
  1267                           ;lcd4.c: 71:   Lcd_Cmd(0x03);
  1268  0735  3003               	movlw	3
  1269  0736  120A  118A  25DB  120A  118A  	fcall	_Lcd_Cmd
  1270                           
  1271                           ;lcd4.c: 73:   Lcd_Cmd(0x02);
  1272  073B  3002               	movlw	2
  1273  073C  120A  118A  25DB  120A  118A  	fcall	_Lcd_Cmd
  1274                           
  1275                           ;lcd4.c: 74:   Lcd_Cmd(0x02);
  1276  0741  3002               	movlw	2
  1277  0742  120A  118A  25DB  120A  118A  	fcall	_Lcd_Cmd
  1278                           
  1279                           ;lcd4.c: 75:   Lcd_Cmd(0x08);
  1280  0747  3008               	movlw	8
  1281  0748  120A  118A  25DB  120A  118A  	fcall	_Lcd_Cmd
  1282                           
  1283                           ;lcd4.c: 76:   Lcd_Cmd(0x00);
  1284  074D  3000               	movlw	0
  1285  074E  120A  118A  25DB  120A  118A  	fcall	_Lcd_Cmd
  1286                           
  1287                           ;lcd4.c: 77:   Lcd_Cmd(0x0C);
  1288  0753  300C               	movlw	12
  1289  0754  120A  118A  25DB  120A  118A  	fcall	_Lcd_Cmd
  1290                           
  1291                           ;lcd4.c: 78:   Lcd_Cmd(0x00);
  1292  0759  3000               	movlw	0
  1293  075A  120A  118A  25DB  120A  118A  	fcall	_Lcd_Cmd
  1294                           
  1295                           ;lcd4.c: 79:   Lcd_Cmd(0x06);
  1296  075F  3006               	movlw	6
  1297  0760  120A  118A  25DB   	fcall	_Lcd_Cmd
  1298  0763  0008               	return
  1299  0764                     __end_of_Lcd_Init:	
  1300                           
  1301                           	psect	text7
  1302  05DB                     __ptext7:	
  1303 ;; *************** function _Lcd_Cmd *****************
  1304 ;; Defined at:
  1305 ;;		line 27 in file "lcd4.c"
  1306 ;; Parameters:    Size  Location     Type
  1307 ;;  a               1    wreg     unsigned char 
  1308 ;; Auto vars:     Size  Location     Type
  1309 ;;  a               1    3[COMMON] unsigned char 
  1310 ;; Return value:  Size  Location     Type
  1311 ;;                  1    wreg      void 
  1312 ;; Registers used:
  1313 ;;		wreg, status,2, status,0, pclath, cstack
  1314 ;; Tracked objects:
  1315 ;;		On entry : 0/0
  1316 ;;		On exit  : 0/0
  1317 ;;		Unchanged: 0/0
  1318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1319 ;;      Params:         0       0       0       0       0
  1320 ;;      Locals:         1       0       0       0       0
  1321 ;;      Temps:          2       0       0       0       0
  1322 ;;      Totals:         3       0       0       0       0
  1323 ;;Total ram usage:        3 bytes
  1324 ;; Hardware stack levels used:    1
  1325 ;; Hardware stack levels required when called:    1
  1326 ;; This function calls:
  1327 ;;		_Lcd_Port
  1328 ;; This function is called by:
  1329 ;;		_Lcd_Set_Cursor
  1330 ;;		_Lcd_Init
  1331 ;;		_Lcd_Clear
  1332 ;;		_Lcd_Shift_Right
  1333 ;;		_Lcd_Shift_Left
  1334 ;; This function uses a non-reentrant model
  1335 ;;
  1336                           
  1337                           
  1338                           ;psect for function _Lcd_Cmd
  1339  05DB                     _Lcd_Cmd:	
  1340                           
  1341                           ;incstack = 0
  1342                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1343                           ;Lcd_Cmd@a stored from wreg
  1344  05DB  00F3               	movwf	Lcd_Cmd@a
  1345                           
  1346                           ;lcd4.c: 27: void Lcd_Cmd(char a);lcd4.c: 28: {;lcd4.c: 29:  RD0 = 0;
  1347  05DC  1283               	bcf	3,5	;RP0=0, select bank0
  1348  05DD  1303               	bcf	3,6	;RP1=0, select bank0
  1349  05DE  1008               	bcf	8,0	;volatile
  1350                           
  1351                           ;lcd4.c: 30:  Lcd_Port(a);
  1352  05DF  0873               	movf	Lcd_Cmd@a,w
  1353  05E0  120A  118A  25C1  120A  118A  	fcall	_Lcd_Port
  1354                           
  1355                           ;lcd4.c: 31:  RD1 = 1;
  1356  05E5  1283               	bcf	3,5	;RP0=0, select bank0
  1357  05E6  1303               	bcf	3,6	;RP1=0, select bank0
  1358  05E7  1488               	bsf	8,1	;volatile
  1359                           
  1360                           ;lcd4.c: 32:         _delay((unsigned long)((4)*(20000000/4000.0)));
  1361  05E8  301A               	movlw	26
  1362  05E9  00F2               	movwf	??_Lcd_Cmd+1
  1363  05EA  30F8               	movlw	248
  1364  05EB  00F1               	movwf	??_Lcd_Cmd
  1365  05EC                     u707:	
  1366  05EC  0BF1               	decfsz	??_Lcd_Cmd,f
  1367  05ED  2DEC               	goto	u707
  1368  05EE  0BF2               	decfsz	??_Lcd_Cmd+1,f
  1369  05EF  2DEC               	goto	u707
  1370  05F0  0000               	nop
  1371                           
  1372                           ;lcd4.c: 33:         RD1 = 0;
  1373  05F1  1283               	bcf	3,5	;RP0=0, select bank0
  1374  05F2  1303               	bcf	3,6	;RP1=0, select bank0
  1375  05F3  1088               	bcf	8,1	;volatile
  1376  05F4  0008               	return
  1377  05F5                     __end_of_Lcd_Cmd:	
  1378                           
  1379                           	psect	text8
  1380  05C1                     __ptext8:	
  1381 ;; *************** function _Lcd_Port *****************
  1382 ;; Defined at:
  1383 ;;		line 5 in file "lcd4.c"
  1384 ;; Parameters:    Size  Location     Type
  1385 ;;  a               1    wreg     unsigned char 
  1386 ;; Auto vars:     Size  Location     Type
  1387 ;;  a               1    0[COMMON] unsigned char 
  1388 ;; Return value:  Size  Location     Type
  1389 ;;                  1    wreg      void 
  1390 ;; Registers used:
  1391 ;;		wreg
  1392 ;; Tracked objects:
  1393 ;;		On entry : 0/0
  1394 ;;		On exit  : 0/0
  1395 ;;		Unchanged: 0/0
  1396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1397 ;;      Params:         0       0       0       0       0
  1398 ;;      Locals:         1       0       0       0       0
  1399 ;;      Temps:          0       0       0       0       0
  1400 ;;      Totals:         1       0       0       0       0
  1401 ;;Total ram usage:        1 bytes
  1402 ;; Hardware stack levels used:    1
  1403 ;; This function calls:
  1404 ;;		Nothing
  1405 ;; This function is called by:
  1406 ;;		_Lcd_Cmd
  1407 ;;		_Lcd_Init
  1408 ;;		_Lcd_Write_Char
  1409 ;; This function uses a non-reentrant model
  1410 ;;
  1411                           
  1412                           
  1413                           ;psect for function _Lcd_Port
  1414  05C1                     _Lcd_Port:	
  1415                           
  1416                           ;incstack = 0
  1417                           ; Regs used in _Lcd_Port: [wreg]
  1418                           ;Lcd_Port@a stored from wreg
  1419  05C1  00F0               	movwf	Lcd_Port@a
  1420                           
  1421                           ;lcd4.c: 5: void Lcd_Port(char a);lcd4.c: 6: {;lcd4.c: 7:  if(a & 1)
  1422  05C2  1C70               	btfss	Lcd_Port@a,0
  1423  05C3  2DC8               	goto	l75
  1424                           
  1425                           ;lcd4.c: 8:   RD2 = 1;
  1426  05C4  1283               	bcf	3,5	;RP0=0, select bank0
  1427  05C5  1303               	bcf	3,6	;RP1=0, select bank0
  1428  05C6  1508               	bsf	8,2	;volatile
  1429  05C7  2DCB               	goto	l76
  1430  05C8                     l75:	
  1431                           ;lcd4.c: 9:  else
  1432                           
  1433                           
  1434                           ;lcd4.c: 10:   RD2 = 0;
  1435  05C8  1283               	bcf	3,5	;RP0=0, select bank0
  1436  05C9  1303               	bcf	3,6	;RP1=0, select bank0
  1437  05CA  1108               	bcf	8,2	;volatile
  1438  05CB                     l76:	
  1439                           
  1440                           ;lcd4.c: 12:  if(a & 2)
  1441  05CB  1CF0               	btfss	Lcd_Port@a,1
  1442  05CC  2DCF               	goto	l77
  1443                           
  1444                           ;lcd4.c: 13:   RD3 = 1;
  1445  05CD  1588               	bsf	8,3	;volatile
  1446  05CE  2DD0               	goto	l78
  1447  05CF                     l77:	
  1448                           ;lcd4.c: 14:  else
  1449                           
  1450                           
  1451                           ;lcd4.c: 15:   RD3 = 0;
  1452  05CF  1188               	bcf	8,3	;volatile
  1453  05D0                     l78:	
  1454                           
  1455                           ;lcd4.c: 17:  if(a & 4)
  1456  05D0  1D70               	btfss	Lcd_Port@a,2
  1457  05D1  2DD4               	goto	l79
  1458                           
  1459                           ;lcd4.c: 18:   RD4 = 1;
  1460  05D2  1608               	bsf	8,4	;volatile
  1461  05D3  2DD5               	goto	l80
  1462  05D4                     l79:	
  1463                           ;lcd4.c: 19:  else
  1464                           
  1465                           
  1466                           ;lcd4.c: 20:   RD4 = 0;
  1467  05D4  1208               	bcf	8,4	;volatile
  1468  05D5                     l80:	
  1469                           
  1470                           ;lcd4.c: 22:  if(a & 8)
  1471  05D5  1DF0               	btfss	Lcd_Port@a,3
  1472  05D6  2DD9               	goto	l81
  1473                           
  1474                           ;lcd4.c: 23:   RD5 = 1;
  1475  05D7  1688               	bsf	8,5	;volatile
  1476  05D8  0008               	return
  1477  05D9                     l81:	
  1478                           ;lcd4.c: 24:  else
  1479                           
  1480                           
  1481                           ;lcd4.c: 25:   RD5 = 0;
  1482  05D9  1288               	bcf	8,5	;volatile
  1483  05DA  0008               	return
  1484  05DB                     __end_of_Lcd_Port:	
  1485  007E                     btemp	set	126	;btemp
  1486  007E                     wtemp0	set	126


Data Sizes:
    Strings     15
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      2       2
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 15
		 -> STR_1(CODE[15]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    1849
                                             11 COMMON     3     3      0
                                              0 BANK0      2     2      0
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              6     2      4     311
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     301
                                              5 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     456
                                              4 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   ___lwdiv
   ___lwmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      2       2       5        2.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Apr 02 22:06:05 2019

                        pc 0002                __CFG_CP$OFF 0000                         l43 0790  
                       l37 0781                         l80 05D5                         l81 05D9  
                       l49 079F                         l75 05C8                         l76 05CB  
                       l77 05CF                         l78 05D0                         l79 05D4  
                       fsr 0004                        l951 06E3                        l939 05F8  
                      l971 068A                        l973 0698                        l983 06B9  
                      l979 06AE                        l995 061D                        l997 062B  
                      _RC0 0038                        _RC1 0039                        _RC2 003A  
                      _RD0 0040                        _RD1 0041                        _RD2 0042  
                      _RD3 0043                        _RD4 0044                        _RD5 0045  
                      u415 06EF                        u505 0620               __CFG_CPD$OFF 0000  
                      u435 068D                        u365 065A                        u525 0631  
                      u455 0699                        u535 063A                        u465 06A5  
                      u707 05EC                        u395 06CA                        u475 06AF  
                      u637 07E3                        u647 07F4                        u657 066A  
                      u667 067B                        u677 0712                        u687 0721  
                      u697 0730                        fsr0 0004               __CFG_FOSC$HS 0000  
             __CFG_LVP$OFF 0000                       l1001 0639                       l1005 0644  
                     l1051 07A2                       l1027 077D                       l1053 07D9  
                     l1037 078E                       l1047 079D                       STR_1 0009  
              main@nhietdo 0020               __CFG_WRT$OFF 0000          ?_Lcd_Write_String 0070  
                     _main 0764                       btemp 007E                       start 0000  
       ??_Lcd_Write_String 0075            __end_of_Lcd_Cmd 05F5                      ?_main 0070  
            __CFG_WDTE$OFF 0000            __end_of___lwdiv 06BE            __end_of___lwmod 0649  
                    _PORTB 0006    __size_of_Lcd_Set_Cursor 004A                      _TRISB 0086  
                    _TRISD 0088             __CFG_BOREN$OFF 0000                      pclath 000A  
                    status 0003                      wtemp0 007E           __end_of_Lcd_Init 0764  
         __end_of_Lcd_Port 05DB            __initialization 07FC               __end_of_main 07FC  
                   ??_main 007B                  ??_Lcd_Cmd 0071    __size_of_Lcd_Write_Char 0039  
                   _TRISC0 0438                     _TRISC1 0439                     _TRISC2 043A  
                   _TRISC3 043B             __CFG_PWRTE$OFF 0000                  ??___lwdiv 0074  
                ??___lwmod 0074            Lcd_Set_Cursor@a 0077            Lcd_Set_Cursor@b 0074  
          Lcd_Set_Cursor@y 0079            Lcd_Set_Cursor@z 0078    __end_of__initialization 07FC  
           __pcstackCOMMON 0070             _Lcd_Set_Cursor 06BE                  ?_Lcd_Init 0070  
                ?_Lcd_Port 0070                 __pmaintext 0764  __size_of_Lcd_Write_String 0022  
   __end_of_Lcd_Set_Cursor 0708                 ??_Lcd_Init 0074                 ??_Lcd_Port 0070  
               __stringtab 0003             _Lcd_Write_Char 0649                    _Lcd_Cmd 05DB  
                  ___lwdiv 0682                    ___lwmod 0617            ?_Lcd_Set_Cursor 0074  
                  __ptext1 0617                    __ptext2 0682                    __ptext3 05F5  
                  __ptext4 0649                    __ptext5 06BE                    __ptext6 0708  
                  __ptext7 05DB                    __ptext8 05C1     __end_of_Lcd_Write_Char 0682  
     end_of_initialization 07FC                  Lcd_Port@a 0070            ?_Lcd_Write_Char 0070  
        Lcd_Write_String@a 0077          Lcd_Write_String@i 0075           _Lcd_Write_String 05F5  
      start_initialization 07FC          __size_of_Lcd_Init 005C          __size_of_Lcd_Port 001A  
          Lcd_Write_Char@a 0074            Lcd_Write_Char@y 0073                  ___latbits 0002  
            __pcstackBANK0 0020                   ?_Lcd_Cmd 0070           ___lwdiv@dividend 0072  
         ??_Lcd_Set_Cursor 0075                   ?___lwdiv 0070                   ?___lwmod 0070  
                __pstrings 0003           ___lwdiv@quotient 0075                   Lcd_Cmd@a 0073  
              __stringbase 0008           ??_Lcd_Write_Char 0071                   _Lcd_Init 0708  
                 _Lcd_Port 05C1   __end_of_Lcd_Write_String 0617           __size_of_Lcd_Cmd 001A  
         __size_of___lwdiv 003C           __size_of___lwmod 0032         __end_of__stringtab 0009  
          ___lwdiv@divisor 0070            ___lwdiv@counter 0077              __size_of_main 0098  
       Lcd_Write_Char@temp 0072           ___lwmod@dividend 0072                  stringcode 0003  
       Lcd_Set_Cursor@temp 007A            ___lwmod@divisor 0070            ___lwmod@counter 0075  
                 stringdir 0003                   stringtab 0003  
