

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Mar 20 20:38:17 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	intentry,global,class=CODE,delta=2
    10                           	dabs	1,0x7E,2
    11  0000                     
    12                           ; Version 2.05
    13                           ; Generated 20/12/2018 GMT
    14                           ; 
    15                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F877A Definitions
    44                           ; 
    45                           ; SFR Addresses
    46  0000                     	;# 
    47  0001                     	;# 
    48  0002                     	;# 
    49  0003                     	;# 
    50  0004                     	;# 
    51  0005                     	;# 
    52  0006                     	;# 
    53  0007                     	;# 
    54  0008                     	;# 
    55  0009                     	;# 
    56  000A                     	;# 
    57  000B                     	;# 
    58  000C                     	;# 
    59  000D                     	;# 
    60  000E                     	;# 
    61  000E                     	;# 
    62  000F                     	;# 
    63  0010                     	;# 
    64  0011                     	;# 
    65  0012                     	;# 
    66  0013                     	;# 
    67  0014                     	;# 
    68  0015                     	;# 
    69  0015                     	;# 
    70  0016                     	;# 
    71  0017                     	;# 
    72  0018                     	;# 
    73  0019                     	;# 
    74  001A                     	;# 
    75  001B                     	;# 
    76  001B                     	;# 
    77  001C                     	;# 
    78  001D                     	;# 
    79  001E                     	;# 
    80  001F                     	;# 
    81  0081                     	;# 
    82  0085                     	;# 
    83  0086                     	;# 
    84  0087                     	;# 
    85  0088                     	;# 
    86  0089                     	;# 
    87  008C                     	;# 
    88  008D                     	;# 
    89  008E                     	;# 
    90  0091                     	;# 
    91  0092                     	;# 
    92  0093                     	;# 
    93  0094                     	;# 
    94  0098                     	;# 
    95  0099                     	;# 
    96  009C                     	;# 
    97  009D                     	;# 
    98  009E                     	;# 
    99  009F                     	;# 
   100  010C                     	;# 
   101  010D                     	;# 
   102  010E                     	;# 
   103  010F                     	;# 
   104  018C                     	;# 
   105  018D                     	;# 
   106  0000                     	;# 
   107  0001                     	;# 
   108  0002                     	;# 
   109  0003                     	;# 
   110  0004                     	;# 
   111  0005                     	;# 
   112  0006                     	;# 
   113  0007                     	;# 
   114  0008                     	;# 
   115  0009                     	;# 
   116  000A                     	;# 
   117  000B                     	;# 
   118  000C                     	;# 
   119  000D                     	;# 
   120  000E                     	;# 
   121  000E                     	;# 
   122  000F                     	;# 
   123  0010                     	;# 
   124  0011                     	;# 
   125  0012                     	;# 
   126  0013                     	;# 
   127  0014                     	;# 
   128  0015                     	;# 
   129  0015                     	;# 
   130  0016                     	;# 
   131  0017                     	;# 
   132  0018                     	;# 
   133  0019                     	;# 
   134  001A                     	;# 
   135  001B                     	;# 
   136  001B                     	;# 
   137  001C                     	;# 
   138  001D                     	;# 
   139  001E                     	;# 
   140  001F                     	;# 
   141  0081                     	;# 
   142  0085                     	;# 
   143  0086                     	;# 
   144  0087                     	;# 
   145  0088                     	;# 
   146  0089                     	;# 
   147  008C                     	;# 
   148  008D                     	;# 
   149  008E                     	;# 
   150  0091                     	;# 
   151  0092                     	;# 
   152  0093                     	;# 
   153  0094                     	;# 
   154  0098                     	;# 
   155  0099                     	;# 
   156  009C                     	;# 
   157  009D                     	;# 
   158  009E                     	;# 
   159  009F                     	;# 
   160  010C                     	;# 
   161  010D                     	;# 
   162  010E                     	;# 
   163  010F                     	;# 
   164  018C                     	;# 
   165  018D                     	;# 
   166  0001                     _TMR0	set	1
   167  005A                     _TMR0IF	set	90
   168  005E                     _PEIE	set	94
   169  005F                     _GIE	set	95
   170  005D                     _TMR0IE	set	93
   171  0046                     _RD6	set	70
   172  0081                     _OPTION_REG	set	129
   173  0446                     _TRISD6	set	1094
   174                           
   175                           ; #config settings
   176  0000                     
   177                           	psect	cinit
   178  000F                     start_initialization:	
   179  000F                     __initialization:	
   180                           
   181                           ; Clear objects allocated to COMMON
   182  000F  01F0               	clrf	__pbssCOMMON& (0+127)
   183  0010  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   184  0011                     end_of_initialization:	
   185                           ;End of C runtime variable initialization code
   186                           
   187  0011                     __end_of__initialization:	
   188  0011  0183               	clrf	3
   189  0012  120A  118A  2837   	ljmp	_main	;jump to C main() function
   190                           
   191                           	psect	bssCOMMON
   192  0070                     __pbssCOMMON:	
   193  0070                     _t:	
   194  0070                     	ds	2
   195                           
   196                           	psect	cstackCOMMON
   197  0072                     __pcstackCOMMON:	
   198  0072                     ?_main:	
   199  0072                     ?_My_interrupt:	
   200                           ; 1 bytes @ 0x0
   201                           
   202  0072                     ??_My_interrupt:	
   203                           ; 1 bytes @ 0x0
   204                           
   205                           
   206                           ; 1 bytes @ 0x0
   207  0072                     	ds	2
   208  0074                     ??_main:	
   209                           
   210                           	psect	maintext
   211  0037                     __pmaintext:	
   212                           ; 1 bytes @ 0x2
   213 ;;
   214 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   215 ;;
   216 ;; *************** function _main *****************
   217 ;; Defined at:
   218 ;;		line 5 in file "Timer0.c"
   219 ;; Parameters:    Size  Location     Type
   220 ;;		None
   221 ;; Auto vars:     Size  Location     Type
   222 ;;		None
   223 ;; Return value:  Size  Location     Type
   224 ;;                  1    wreg      void 
   225 ;; Registers used:
   226 ;;		wreg
   227 ;; Tracked objects:
   228 ;;		On entry : B00/0
   229 ;;		On exit  : 0/0
   230 ;;		Unchanged: 0/0
   231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   232 ;;      Params:         0       0       0       0       0
   233 ;;      Locals:         0       0       0       0       0
   234 ;;      Temps:          0       0       0       0       0
   235 ;;      Totals:         0       0       0       0       0
   236 ;;Total ram usage:        0 bytes
   237 ;; Hardware stack levels required when called:    1
   238 ;; This function calls:
   239 ;;		Nothing
   240 ;; This function is called by:
   241 ;;		Startup code after reset
   242 ;; This function uses a non-reentrant model
   243 ;;
   244                           
   245                           
   246                           ;psect for function _main
   247  0037                     _main:	
   248                           
   249                           ;Timer0.c: 8:     TRISD6 = 0;
   250                           
   251                           ;incstack = 0
   252                           ; Regs used in _main: [wreg]
   253  0037  1683               	bsf	3,5	;RP0=1, select bank1
   254  0038  1303               	bcf	3,6	;RP1=0, select bank1
   255  0039  1308               	bcf	8,6	;volatile
   256                           
   257                           ;Timer0.c: 9:     RD6 = 0;
   258  003A  1283               	bcf	3,5	;RP0=0, select bank0
   259  003B  1303               	bcf	3,6	;RP1=0, select bank0
   260  003C  1308               	bcf	8,6	;volatile
   261                           
   262                           ;Timer0.c: 11:     OPTION_REG = 0x06;
   263  003D  3006               	movlw	6
   264  003E  1683               	bsf	3,5	;RP0=1, select bank1
   265  003F  1303               	bcf	3,6	;RP1=0, select bank1
   266  0040  0081               	movwf	1	;volatile
   267                           
   268                           ;Timer0.c: 12:     TMR0 = 217;
   269  0041  30D9               	movlw	217
   270  0042  1283               	bcf	3,5	;RP0=0, select bank0
   271  0043  1303               	bcf	3,6	;RP1=0, select bank0
   272  0044  0081               	movwf	1	;volatile
   273                           
   274                           ;Timer0.c: 13:     TMR0IE=1;
   275  0045  168B               	bsf	11,5	;volatile
   276                           
   277                           ;Timer0.c: 14:     GIE=1;
   278  0046  178B               	bsf	11,7	;volatile
   279                           
   280                           ;Timer0.c: 15:     PEIE=1;
   281  0047  170B               	bsf	11,6	;volatile
   282  0048                     l23:	
   283                           ;Timer0.c: 17:     while(1)
   284                           
   285                           
   286                           ;Timer0.c: 18:     {;Timer0.c: 20:     }
   287  0048  2848               	goto	l23
   288  0049                     __end_of_main:	
   289                           
   290                           	psect	text1
   291  0015                     __ptext1:	
   292 ;; *************** function _My_interrupt *****************
   293 ;; Defined at:
   294 ;;		line 23 in file "Timer0.c"
   295 ;; Parameters:    Size  Location     Type
   296 ;;		None
   297 ;; Auto vars:     Size  Location     Type
   298 ;;		None
   299 ;; Return value:  Size  Location     Type
   300 ;;                  1    wreg      void 
   301 ;; Registers used:
   302 ;;		wreg, status,2, status,0
   303 ;; Tracked objects:
   304 ;;		On entry : 0/0
   305 ;;		On exit  : 0/0
   306 ;;		Unchanged: 0/0
   307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   308 ;;      Params:         0       0       0       0       0
   309 ;;      Locals:         0       0       0       0       0
   310 ;;      Temps:          2       0       0       0       0
   311 ;;      Totals:         2       0       0       0       0
   312 ;;Total ram usage:        2 bytes
   313 ;; Hardware stack levels used:    1
   314 ;; This function calls:
   315 ;;		Nothing
   316 ;; This function is called by:
   317 ;;		Interrupt level 1
   318 ;; This function uses a non-reentrant model
   319 ;;
   320                           
   321                           
   322                           ;psect for function _My_interrupt
   323  0015                     _My_interrupt:	
   324                           
   325                           ;Timer0.c: 25:     if(TMR0IF == 1 && TMR0IE == 1 )
   326  0015  190B               	btfsc	11,2	;volatile
   327  0016  1E8B               	btfss	11,5	;volatile
   328  0017  2830               	goto	i1l33
   329                           
   330                           ;Timer0.c: 26:     {;Timer0.c: 27:       t++;
   331  0018  3001               	movlw	1
   332  0019  07F0               	addwf	_t,f
   333  001A  1803               	skipnc
   334  001B  0AF1               	incf	_t+1,f
   335  001C  3000               	movlw	0
   336  001D  07F1               	addwf	_t+1,f
   337                           
   338                           ;Timer0.c: 28:       if(t==500)
   339  001E  30F4               	movlw	244
   340  001F  0670               	xorwf	_t,w
   341  0020  1D03               	skipz
   342  0021  282B               	goto	i1l647
   343  0022  0371               	decf	_t+1,w
   344  0023  1D03               	btfss	3,2
   345  0024  282B               	goto	i1l647
   346                           
   347                           ;Timer0.c: 29:       {;Timer0.c: 30:         RD6 = !RD6;
   348  0025  3040               	movlw	64
   349  0026  1283               	bcf	3,5	;RP0=0, select bank0
   350  0027  1303               	bcf	3,6	;RP1=0, select bank0
   351  0028  0688               	xorwf	8,f
   352                           
   353                           ;Timer0.c: 31:         t=0;
   354  0029  01F0               	clrf	_t
   355  002A  01F1               	clrf	_t+1
   356  002B                     i1l647:	
   357                           
   358                           ;Timer0.c: 33:       TMR0 = 217;
   359  002B  30D9               	movlw	217
   360  002C  1283               	bcf	3,5	;RP0=0, select bank0
   361  002D  1303               	bcf	3,6	;RP1=0, select bank0
   362  002E  0081               	movwf	1	;volatile
   363                           
   364                           ;Timer0.c: 34:       TMR0IF = 0;
   365  002F  110B               	bcf	11,2	;volatile
   366  0030                     i1l33:	
   367  0030  0873               	movf	??_My_interrupt+1,w
   368  0031  008A               	movwf	10
   369  0032  0E72               	swapf	??_My_interrupt^(0+4294967168),w
   370  0033  0083               	movwf	3
   371  0034  0EFE               	swapf	126,f
   372  0035  0E7E               	swapf	126,w
   373  0036  0009               	retfie
   374  0037                     __end_of_My_interrupt:	
   375  007E                     btemp	set	126	;btemp
   376  007E                     wtemp0	set	126
   377                           
   378                           	psect	intentry
   379  0004                     __pintentry:	
   380                           ;incstack = 0
   381                           ; Regs used in _My_interrupt: [wreg+status,2+status,0]
   382                           
   383  0004                     interrupt_function:	
   384  007E                     saved_w	set	btemp
   385  0004  00FE               	movwf	btemp
   386  0005  0E03               	swapf	3,w
   387  0006  00F2               	movwf	??_My_interrupt
   388  0007  080A               	movf	10,w
   389  0008  00F3               	movwf	??_My_interrupt+1
   390  0009  120A  118A  2815   	ljmp	_My_interrupt


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _My_interrupt in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _My_interrupt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _My_interrupt in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _My_interrupt in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _My_interrupt in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _My_interrupt                                         2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _My_interrupt (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       4       1       28.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       4       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       4      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Mar 20 20:38:17 2019

                      _t 0070              __CFG_CP$OFF 0000                       l23 0048  
                    _GIE 005F                      _RD6 0046             __CFG_CPD$OFF 0000  
           __CFG_FOSC$HS 0000             __CFG_LVP$OFF 0000                     _PEIE 005E  
                   i1l33 0030                     _TMR0 0001             __CFG_WRT$OFF 0000  
                   _main 0037                     btemp 007E                     start 000C  
                  ?_main 0072            __CFG_WDTE$OFF 0000                    i1l647 002B  
         __CFG_BOREN$OFF 0000                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 0049  
                 ??_main 0074                   _TMR0IE 005D                   _TMR0IF 005A  
                 _TRISD6 0446           __CFG_PWRTE$OFF 0000                   saved_w 007E  
__end_of__initialization 0011           __pcstackCOMMON 0072               __pmaintext 0037  
          ?_My_interrupt 0072               __pintentry 0004           ??_My_interrupt 0072  
                __ptext1 0015     end_of_initialization 0011      start_initialization 000F  
   __end_of_My_interrupt 0037              __pbssCOMMON 0070                ___latbits 0002  
      interrupt_function 0004    __size_of_My_interrupt 0022             _My_interrupt 0015  
          __size_of_main 0012                 intlevel1 0000               _OPTION_REG 0081  
