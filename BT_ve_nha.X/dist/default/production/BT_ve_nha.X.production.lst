

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Apr 09 19:14:00 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.05
    22                           ; Generated 20/12/2018 GMT
    23                           ; 
    24                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F877A Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009C                     	;# 
   106  009D                     	;# 
   107  009E                     	;# 
   108  009F                     	;# 
   109  010C                     	;# 
   110  010D                     	;# 
   111  010E                     	;# 
   112  010F                     	;# 
   113  018C                     	;# 
   114  018D                     	;# 
   115  0000                     	;# 
   116  0001                     	;# 
   117  0002                     	;# 
   118  0003                     	;# 
   119  0004                     	;# 
   120  0005                     	;# 
   121  0006                     	;# 
   122  0007                     	;# 
   123  0008                     	;# 
   124  0009                     	;# 
   125  000A                     	;# 
   126  000B                     	;# 
   127  000C                     	;# 
   128  000D                     	;# 
   129  000E                     	;# 
   130  000E                     	;# 
   131  000F                     	;# 
   132  0010                     	;# 
   133  0011                     	;# 
   134  0012                     	;# 
   135  0013                     	;# 
   136  0014                     	;# 
   137  0015                     	;# 
   138  0015                     	;# 
   139  0016                     	;# 
   140  0017                     	;# 
   141  0018                     	;# 
   142  0019                     	;# 
   143  001A                     	;# 
   144  001B                     	;# 
   145  001B                     	;# 
   146  001C                     	;# 
   147  001D                     	;# 
   148  001E                     	;# 
   149  001F                     	;# 
   150  0081                     	;# 
   151  0085                     	;# 
   152  0086                     	;# 
   153  0087                     	;# 
   154  0088                     	;# 
   155  0089                     	;# 
   156  008C                     	;# 
   157  008D                     	;# 
   158  008E                     	;# 
   159  0091                     	;# 
   160  0092                     	;# 
   161  0093                     	;# 
   162  0094                     	;# 
   163  0098                     	;# 
   164  0099                     	;# 
   165  009C                     	;# 
   166  009D                     	;# 
   167  009E                     	;# 
   168  009F                     	;# 
   169  010C                     	;# 
   170  010D                     	;# 
   171  010E                     	;# 
   172  010F                     	;# 
   173  018C                     	;# 
   174  018D                     	;# 
   175  0000                     	;# 
   176  0001                     	;# 
   177  0002                     	;# 
   178  0003                     	;# 
   179  0004                     	;# 
   180  0005                     	;# 
   181  0006                     	;# 
   182  0007                     	;# 
   183  0008                     	;# 
   184  0009                     	;# 
   185  000A                     	;# 
   186  000B                     	;# 
   187  000C                     	;# 
   188  000D                     	;# 
   189  000E                     	;# 
   190  000E                     	;# 
   191  000F                     	;# 
   192  0010                     	;# 
   193  0011                     	;# 
   194  0012                     	;# 
   195  0013                     	;# 
   196  0014                     	;# 
   197  0015                     	;# 
   198  0015                     	;# 
   199  0016                     	;# 
   200  0017                     	;# 
   201  0018                     	;# 
   202  0019                     	;# 
   203  001A                     	;# 
   204  001B                     	;# 
   205  001B                     	;# 
   206  001C                     	;# 
   207  001D                     	;# 
   208  001E                     	;# 
   209  001F                     	;# 
   210  0081                     	;# 
   211  0085                     	;# 
   212  0086                     	;# 
   213  0087                     	;# 
   214  0088                     	;# 
   215  0089                     	;# 
   216  008C                     	;# 
   217  008D                     	;# 
   218  008E                     	;# 
   219  0091                     	;# 
   220  0092                     	;# 
   221  0093                     	;# 
   222  0094                     	;# 
   223  0098                     	;# 
   224  0099                     	;# 
   225  009C                     	;# 
   226  009D                     	;# 
   227  009E                     	;# 
   228  009F                     	;# 
   229  010C                     	;# 
   230  010D                     	;# 
   231  010E                     	;# 
   232  010F                     	;# 
   233  018C                     	;# 
   234  018D                     	;# 
   235                           
   236                           	psect	idataBANK0
   237  0563                     __pidataBANK0:	
   238                           
   239                           ;initializer for _mang_3
   240  0563  3454               	retlw	84
   241  0564  3468               	retlw	104
   242  0565  3475               	retlw	117
   243  0566  3420               	retlw	32
   244  0567  3433               	retlw	51
   245  0568  3420               	retlw	32
   246  0569  3420               	retlw	32
   247  056A  3439               	retlw	57
   248  056B  342F               	retlw	47
   249  056C  3434               	retlw	52
   250  056D  342F               	retlw	47
   251  056E  3432               	retlw	50
   252  056F  3430               	retlw	48
   253  0570  3431               	retlw	49
   254  0571  3439               	retlw	57
   255                           
   256                           ;initializer for _mang_5
   257  0572  3448               	retlw	72
   258  0573  346F               	retlw	111
   259  0574  346D               	retlw	109
   260  0575  3420               	retlw	32
   261  0576  346E               	retlw	110
   262  0577  3461               	retlw	97
   263  0578  3479               	retlw	121
   264  0579  3420               	retlw	32
   265  057A  346C               	retlw	108
   266  057B  3461               	retlw	97
   267                           
   268                           ;initializer for _mang_1
   269  057C  344E               	retlw	78
   270  057D  3445               	retlw	69
   271  057E  344B               	retlw	75
   272  057F  344F               	retlw	79
   273  0580  345F               	retlw	95
   274  0581  3443               	retlw	67
   275  0582  3448               	retlw	72
   276  0583  3441               	retlw	65
   277  0584  344E               	retlw	78
   278                           
   279                           ;initializer for _mang_4
   280  0585  3448               	retlw	72
   281  0586  3461               	retlw	97
   282  0587  3470               	retlw	112
   283  0588  3470               	retlw	112
   284  0589  3479               	retlw	121
   285  058A  3420               	retlw	32
   286  058B  3462               	retlw	98
   287  058C  3469               	retlw	105
   288  058D  3472               	retlw	114
   289  058E  3474               	retlw	116
   290  058F  3468               	retlw	104
   291  0590  3464               	retlw	100
   292  0591  3461               	retlw	97
   293  0592  3479               	retlw	121
   294                           
   295                           ;initializer for _mang_2
   296  0593  3420               	retlw	32
   297  0594  346B               	retlw	107
   298  0595  346F               	retlw	111
   299  0596  346E               	retlw	110
   300  0597  346E               	retlw	110
   301  0598  3469               	retlw	105
   302  0599  3463               	retlw	99
   303  059A  3468               	retlw	104
   304  059B  3469               	retlw	105
   305  059C  3477               	retlw	119
   306  059D  3461               	retlw	97
   307  059E  3420               	retlw	32
   308  0041                     _RD1	set	65
   309  0040                     _RD0	set	64
   310  0045                     _RD5	set	69
   311  0044                     _RD4	set	68
   312  0043                     _RD3	set	67
   313  0042                     _RD2	set	66
   314  0088                     _TRISD	set	136
   315                           
   316                           	psect	strings
   317  0003                     __pstrings:	
   318  0003                     stringtab:	
   319  0003                     __stringtab:	
   320                           
   321                           ;	String table - string pointers are 1 byte each
   322  0003  1BFF               	btfsc	btemp+1,7
   323  0004  280D               	ljmp	stringcode
   324  0005  1383               	bcf	3,7
   325  0006  187F               	btfsc	btemp+1,0
   326  0007  1783               	bsf	3,7
   327  0008  0800               	movf	0,w
   328  0009  0A84               	incf	4,f
   329  000A  1903               	skipnz
   330  000B  0AFF               	incf	btemp+1,f
   331  000C  0008               	return
   332  000D                     stringcode:	
   333  000D                     stringdir:	
   334  000D  3000               	movlw	high stringdir
   335  000E  008A               	movwf	10
   336  000F  0804               	movf	4,w
   337  0010  0A84               	incf	4,f
   338  0011  0782               	addwf	2,f
   339  0012                     __stringbase:	
   340  0012  3400               	retlw	0
   341  0013                     __end_of__stringtab:	
   342  0013                     STR_3:	
   343  0013  344C               	retlw	76	;'L'
   344  0014  344F               	retlw	79	;'O'
   345  0015  3456               	retlw	86	;'V'
   346  0016  3445               	retlw	69	;'E'
   347  0017  3420               	retlw	32	;' '
   348  0018  3459               	retlw	89	;'Y'
   349  0019  344F               	retlw	79	;'O'
   350  001A  3455               	retlw	85	;'U'
   351  001B  3420               	retlw	32	;' '
   352  001C  3428               	retlw	40	;'('
   353  001D  345E               	retlw	94	;'^'
   354  001E  345F               	retlw	95	;'_'
   355  001F  345E               	retlw	94	;'^'
   356  0020  3429               	retlw	41	;')'
   357  0021  3400               	retlw	0
   358  0022                     STR_1:	
   359  0022  3448               	retlw	72	;'H'
   360  0023  346F               	retlw	111	;'o'
   361  0024  346D               	retlw	109	;'m'
   362  0025  3420               	retlw	32	;' '
   363  0026  346E               	retlw	110	;'n'
   364  0027  3461               	retlw	97	;'a'
   365  0028  3479               	retlw	121	;'y'
   366  0029  3420               	retlw	32	;' '
   367  002A  346C               	retlw	108	;'l'
   368  002B  3461               	retlw	97	;'a'
   369  002C  343A               	retlw	58	;':'
   370  002D  3420               	retlw	32	;' '
   371  002E  3400               	retlw	0
   372  002F                     STR_2:	
   373  002F  3442               	retlw	66	;'B'
   374  0030  3441               	retlw	65	;'A'
   375  0031  344E               	retlw	78	;'N'
   376  0032  3420               	retlw	32	;' '
   377  0033  3453               	retlw	83	;'S'
   378  0034  344F               	retlw	79	;'O'
   379  0035  344E               	retlw	78	;'N'
   380  0036  3420               	retlw	32	;' '
   381  0037  3444               	retlw	68	;'D'
   382  0038  3455               	retlw	85	;'U'
   383  0039  3459               	retlw	89	;'Y'
   384  003A  3400               	retlw	0
   385  0013                     
   386                           ; #config settings
   387  0000                     
   388                           	psect	cinit
   389  07F0                     start_initialization:	
   390  07F0                     __initialization:	
   391                           
   392                           ; Initialize objects allocated to BANK0
   393  07F0  1383               	bcf	3,7	;select IRP bank0
   394  07F1  305C               	movlw	low (__pdataBANK0+60)
   395  07F2  00FD               	movwf	btemp+-1
   396  07F3  3005               	movlw	high __pidataBANK0
   397  07F4  00FE               	movwf	btemp
   398  07F5  3063               	movlw	low __pidataBANK0
   399  07F6  00FF               	movwf	btemp+1
   400  07F7  3020               	movlw	low __pdataBANK0
   401  07F8  0084               	movwf	4
   402  07F9  120A  118A  24E9   	fcall	init_ram0
   403  07FC                     end_of_initialization:	
   404                           ;End of C runtime variable initialization code
   405                           
   406  07FC                     __end_of__initialization:	
   407  07FC  0183               	clrf	3
   408  07FD  120A  118A  2E82   	ljmp	_main	;jump to C main() function
   409                           
   410                           	psect	dataBANK0
   411  0020                     __pdataBANK0:	
   412  0020                     _mang_3:	
   413  0020                     	ds	15
   414  002F                     _mang_5:	
   415  002F                     	ds	10
   416  0039                     _mang_1:	
   417  0039                     	ds	9
   418  0042                     _mang_4:	
   419  0042                     	ds	14
   420  0050                     _mang_2:	
   421  0050                     	ds	12
   422                           
   423                           	psect	inittext
   424  04E5                     init_fetch0:	
   425                           ;	Called with low address in FSR and high address in W
   426                           
   427  04E5  087E               	movf	126,w
   428  04E6  008A               	movwf	10
   429  04E7  087F               	movf	127,w
   430  04E8  0082               	movwf	2
   431  04E9                     init_ram0:	
   432                           ;Called with:
   433                           ;	high address of idata address in btemp 
   434                           ;	low address of idata address in btemp+1 
   435                           ;	low address of data in FSR
   436                           ;	high address + 1 of data in btemp-1
   437                           
   438  04E9  24E5  120A  118A   	fcall	init_fetch0
   439  04EC  0080               	movwf	0
   440  04ED  0A84               	incf	4,f
   441  04EE  0804               	movf	4,w
   442  04EF  067D               	xorwf	125,w
   443  04F0  1903               	btfsc	3,2
   444  04F1  3400               	retlw	0
   445  04F2  0AFF               	incf	127,f
   446  04F3  1903               	btfsc	3,2
   447  04F4  0AFE               	incf	126,f
   448  04F5  2CE9               	goto	init_ram0
   449                           
   450                           	psect	cstackCOMMON
   451  0070                     __pcstackCOMMON:	
   452  0070                     ?_Lcd_Init:	
   453  0070                     ?_Lcd_Write_Char:	
   454                           ; 1 bytes @ 0x0
   455                           
   456  0070                     ?_Lcd_Clear:	
   457                           ; 1 bytes @ 0x0
   458                           
   459  0070                     ?_main:	
   460                           ; 1 bytes @ 0x0
   461                           
   462  0070                     ?_Lcd_Port:	
   463                           ; 1 bytes @ 0x0
   464                           
   465  0070                     ??_Lcd_Port:	
   466                           ; 1 bytes @ 0x0
   467                           
   468  0070                     ?_Lcd_Cmd:	
   469                           ; 1 bytes @ 0x0
   470                           
   471  0070                     Lcd_Port@a:	
   472                           ; 1 bytes @ 0x0
   473                           
   474                           
   475                           ; 1 bytes @ 0x0
   476  0070                     	ds	1
   477  0071                     ??_Lcd_Write_Char:	
   478  0071                     ??_Lcd_Cmd:	
   479                           ; 1 bytes @ 0x1
   480                           
   481                           
   482                           ; 1 bytes @ 0x1
   483  0071                     	ds	1
   484  0072                     Lcd_Write_Char@temp:	
   485                           
   486                           ; 1 bytes @ 0x2
   487  0072                     	ds	1
   488  0073                     Lcd_Cmd@a:	
   489  0073                     Lcd_Write_Char@y:	
   490                           ; 1 bytes @ 0x3
   491                           
   492                           
   493                           ; 1 bytes @ 0x3
   494  0073                     	ds	1
   495  0074                     ??_Lcd_Init:	
   496  0074                     ?_Lcd_Set_Cursor:	
   497                           ; 1 bytes @ 0x4
   498                           
   499  0074                     ??_Lcd_Clear:	
   500                           ; 1 bytes @ 0x4
   501                           
   502  0074                     Lcd_Set_Cursor@b:	
   503                           ; 1 bytes @ 0x4
   504                           
   505  0074                     Lcd_Write_Char@a:	
   506                           ; 1 bytes @ 0x4
   507                           
   508                           
   509                           ; 1 bytes @ 0x4
   510  0074                     	ds	1
   511  0075                     ??_Lcd_Set_Cursor:	
   512  0075                     ?_Lcd_Write_String:	
   513                           ; 1 bytes @ 0x5
   514                           
   515  0075                     Lcd_Write_String@a:	
   516                           ; 1 bytes @ 0x5
   517                           
   518                           
   519                           ; 2 bytes @ 0x5
   520  0075                     	ds	2
   521  0077                     ??_Lcd_Write_String:	
   522  0077                     Lcd_Set_Cursor@a:	
   523                           ; 1 bytes @ 0x7
   524                           
   525                           
   526                           ; 1 bytes @ 0x7
   527  0077                     	ds	1
   528  0078                     Lcd_Set_Cursor@z:	
   529                           
   530                           ; 1 bytes @ 0x8
   531  0078                     	ds	1
   532  0079                     Lcd_Set_Cursor@y:	
   533                           
   534                           ; 1 bytes @ 0x9
   535  0079                     	ds	1
   536  007A                     Lcd_Set_Cursor@temp:	
   537  007A                     Lcd_Write_String@i:	
   538                           ; 1 bytes @ 0xA
   539                           
   540                           
   541                           ; 2 bytes @ 0xA
   542  007A                     	ds	2
   543  007C                     main@i:	
   544                           
   545                           ; 1 bytes @ 0xC
   546  007C                     	ds	1
   547                           
   548                           	psect	cstackBANK0
   549  005C                     __pcstackBANK0:	
   550  005C                     ??_main:	
   551                           
   552                           ; 1 bytes @ 0x0
   553  005C                     	ds	3
   554                           
   555                           	psect	maintext
   556  0682                     __pmaintext:	
   557 ;;
   558 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   559 ;;
   560 ;; *************** function _main *****************
   561 ;; Defined at:
   562 ;;		line 9 in file "BT.c"
   563 ;; Parameters:    Size  Location     Type
   564 ;;		None
   565 ;; Auto vars:     Size  Location     Type
   566 ;;  i               1   12[COMMON] unsigned char 
   567 ;; Return value:  Size  Location     Type
   568 ;;                  1    wreg      void 
   569 ;; Registers used:
   570 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   571 ;; Tracked objects:
   572 ;;		On entry : B00/0
   573 ;;		On exit  : 0/0
   574 ;;		Unchanged: 0/0
   575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   576 ;;      Params:         0       0       0       0       0
   577 ;;      Locals:         1       0       0       0       0
   578 ;;      Temps:          0       3       0       0       0
   579 ;;      Totals:         1       3       0       0       0
   580 ;;Total ram usage:        4 bytes
   581 ;; Hardware stack levels required when called:    3
   582 ;; This function calls:
   583 ;;		_Lcd_Clear
   584 ;;		_Lcd_Init
   585 ;;		_Lcd_Set_Cursor
   586 ;;		_Lcd_Write_Char
   587 ;;		_Lcd_Write_String
   588 ;; This function is called by:
   589 ;;		Startup code after reset
   590 ;; This function uses a non-reentrant model
   591 ;;
   592                           
   593                           
   594                           ;psect for function _main
   595  0682                     _main:	
   596                           
   597                           ;BT.c: 11:     unsigned char i;;BT.c: 12:     TRISD = 0x00;
   598                           
   599                           ;incstack = 0
   600                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   601  0682  1683               	bsf	3,5	;RP0=1, select bank1
   602  0683  1303               	bcf	3,6	;RP1=0, select bank1
   603  0684  0188               	clrf	8	;volatile
   604                           
   605                           ;BT.c: 13:     Lcd_Init();
   606  0685  120A  118A  2626  120A  118A  	fcall	_Lcd_Init
   607  068A                     l941:	
   608                           
   609                           ;BT.c: 17:     {;BT.c: 18:       Lcd_Set_Cursor(1,4);
   610  068A  3004               	movlw	4
   611  068B  1283               	bcf	3,5	;RP0=0, select bank0
   612  068C  1303               	bcf	3,6	;RP1=0, select bank0
   613  068D  00DC               	movwf	??_main
   614  068E  085C               	movf	??_main,w
   615  068F  00F4               	movwf	Lcd_Set_Cursor@b
   616  0690  3001               	movlw	1
   617  0691  120A  118A  25DC  120A  118A  	fcall	_Lcd_Set_Cursor
   618                           
   619                           ;BT.c: 19:       for(i=0;i<9;i++)
   620  0696  01FC               	clrf	main@i
   621  0697                     l947:	
   622                           
   623                           ;BT.c: 20:       {;BT.c: 21:           Lcd_Write_Char(mang_1[i]);
   624  0697  087C               	movf	main@i,w
   625  0698  3E39               	addlw	(low (_mang_1| 0))& (0+255)
   626  0699  0084               	movwf	4
   627  069A  1383               	bcf	3,7	;select IRP bank0
   628  069B  0800               	movf	0,w
   629  069C  120A  118A  252A  120A  118A  	fcall	_Lcd_Write_Char
   630                           
   631                           ;BT.c: 22:           _delay((unsigned long)((100)*(20000000/4000.0)));
   632  06A1  3003               	movlw	3
   633  06A2  1283               	bcf	3,5	;RP0=0, select bank0
   634  06A3  1303               	bcf	3,6	;RP1=0, select bank0
   635  06A4  00DE               	movwf	??_main+2
   636  06A5  308A               	movlw	138
   637  06A6  00DD               	movwf	??_main+1
   638  06A7  3055               	movlw	85
   639  06A8  00DC               	movwf	??_main
   640  06A9                     u317:	
   641  06A9  0BDC               	decfsz	??_main,f
   642  06AA  2EA9               	goto	u317
   643  06AB  0BDD               	decfsz	??_main+1,f
   644  06AC  2EA9               	goto	u317
   645  06AD  0BDE               	decfsz	??_main+2,f
   646  06AE  2EA9               	goto	u317
   647                           
   648                           ;BT.c: 23:       }
   649  06AF  3001               	movlw	1
   650  06B0  1283               	bcf	3,5	;RP0=0, select bank0
   651  06B1  1303               	bcf	3,6	;RP1=0, select bank0
   652  06B2  00DC               	movwf	??_main
   653  06B3  085C               	movf	??_main,w
   654  06B4  07FC               	addwf	main@i,f
   655  06B5  3009               	movlw	9
   656  06B6  027C               	subwf	main@i,w
   657  06B7  1C03               	skipc
   658  06B8  2E97               	goto	l947
   659                           
   660                           ;BT.c: 24:       for(i=17;i>2;i--)
   661  06B9  3011               	movlw	17
   662  06BA  00DC               	movwf	??_main
   663  06BB  085C               	movf	??_main,w
   664  06BC  00FC               	movwf	main@i
   665  06BD                     l959:	
   666                           
   667                           ;BT.c: 25:       {;BT.c: 26:           Lcd_Set_Cursor(2,i);
   668  06BD  087C               	movf	main@i,w
   669  06BE  1283               	bcf	3,5	;RP0=0, select bank0
   670  06BF  1303               	bcf	3,6	;RP1=0, select bank0
   671  06C0  00DC               	movwf	??_main
   672  06C1  085C               	movf	??_main,w
   673  06C2  00F4               	movwf	Lcd_Set_Cursor@b
   674  06C3  3002               	movlw	2
   675  06C4  120A  118A  25DC  120A  118A  	fcall	_Lcd_Set_Cursor
   676                           
   677                           ;BT.c: 27:           Lcd_Write_String(mang_2);
   678  06C9  3050               	movlw	(low (_mang_2| 0))& (0+255)
   679  06CA  00F5               	movwf	Lcd_Write_String@a
   680  06CB  3000               	movlw	0
   681  06CC  00F6               	movwf	Lcd_Write_String@a+1
   682  06CD  120A  118A  259F  120A  118A  	fcall	_Lcd_Write_String
   683                           
   684                           ;BT.c: 28:           _delay((unsigned long)((100)*(20000000/4000.0)));
   685  06D2  3003               	movlw	3
   686  06D3  1283               	bcf	3,5	;RP0=0, select bank0
   687  06D4  1303               	bcf	3,6	;RP1=0, select bank0
   688  06D5  00DE               	movwf	??_main+2
   689  06D6  308A               	movlw	138
   690  06D7  00DD               	movwf	??_main+1
   691  06D8  3055               	movlw	85
   692  06D9  00DC               	movwf	??_main
   693  06DA                     u327:	
   694  06DA  0BDC               	decfsz	??_main,f
   695  06DB  2EDA               	goto	u327
   696  06DC  0BDD               	decfsz	??_main+1,f
   697  06DD  2EDA               	goto	u327
   698  06DE  0BDE               	decfsz	??_main+2,f
   699  06DF  2EDA               	goto	u327
   700                           
   701                           ;BT.c: 29:       }
   702  06E0  3001               	movlw	1
   703  06E1  02FC               	subwf	main@i,f
   704  06E2  3003               	movlw	3
   705  06E3  027C               	subwf	main@i,w
   706  06E4  1803               	skipnc
   707  06E5  2EBD               	goto	l959
   708                           
   709                           ;BT.c: 30:       _delay((unsigned long)((1500)*(20000000/4000.0)));
   710  06E6  3027               	movlw	39
   711  06E7  1283               	bcf	3,5	;RP0=0, select bank0
   712  06E8  1303               	bcf	3,6	;RP1=0, select bank0
   713  06E9  00DE               	movwf	??_main+2
   714  06EA  300D               	movlw	13
   715  06EB  00DD               	movwf	??_main+1
   716  06EC  3025               	movlw	37
   717  06ED  00DC               	movwf	??_main
   718  06EE                     u337:	
   719  06EE  0BDC               	decfsz	??_main,f
   720  06EF  2EEE               	goto	u337
   721  06F0  0BDD               	decfsz	??_main+1,f
   722  06F1  2EEE               	goto	u337
   723  06F2  0BDE               	decfsz	??_main+2,f
   724  06F3  2EEE               	goto	u337
   725  06F4  2EF5               	nop2
   726                           
   727                           ;BT.c: 31:       Lcd_Clear();
   728  06F5  120A  118A  24DA  120A  118A  	fcall	_Lcd_Clear
   729                           
   730                           ;BT.c: 32:       Lcd_Set_Cursor(1,1);
   731  06FA  01F4               	clrf	Lcd_Set_Cursor@b
   732  06FB  0AF4               	incf	Lcd_Set_Cursor@b,f
   733  06FC  3001               	movlw	1
   734  06FD  120A  118A  25DC  120A  118A  	fcall	_Lcd_Set_Cursor
   735                           
   736                           ;BT.c: 33:       Lcd_Write_String("Hom nay la: ");
   737  0702  3010               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   738  0703  00F5               	movwf	Lcd_Write_String@a
   739  0704  3080               	movlw	128
   740  0705  00F6               	movwf	Lcd_Write_String@a+1
   741  0706  120A  118A  259F  120A  118A  	fcall	_Lcd_Write_String
   742                           
   743                           ;BT.c: 34:     _delay((unsigned long)((500)*(20000000/4000.0)));
   744  070B  300D               	movlw	13
   745  070C  1283               	bcf	3,5	;RP0=0, select bank0
   746  070D  1303               	bcf	3,6	;RP1=0, select bank0
   747  070E  00DE               	movwf	??_main+2
   748  070F  30AF               	movlw	175
   749  0710  00DD               	movwf	??_main+1
   750  0711  30B5               	movlw	181
   751  0712  00DC               	movwf	??_main
   752  0713                     u347:	
   753  0713  0BDC               	decfsz	??_main,f
   754  0714  2F13               	goto	u347
   755  0715  0BDD               	decfsz	??_main+1,f
   756  0716  2F13               	goto	u347
   757  0717  0BDE               	decfsz	??_main+2,f
   758  0718  2F13               	goto	u347
   759  0719  2F1A               	nop2
   760                           
   761                           ;BT.c: 35:     Lcd_Set_Cursor(2,1);
   762  071A  01F4               	clrf	Lcd_Set_Cursor@b
   763  071B  0AF4               	incf	Lcd_Set_Cursor@b,f
   764  071C  3002               	movlw	2
   765  071D  120A  118A  25DC  120A  118A  	fcall	_Lcd_Set_Cursor
   766                           
   767                           ;BT.c: 36:     for(i=0;i<15;i++)
   768  0722  01FC               	clrf	main@i
   769  0723                     l987:	
   770                           
   771                           ;BT.c: 37:     {;BT.c: 38:         Lcd_Write_Char(mang_3[i]);
   772  0723  087C               	movf	main@i,w
   773  0724  3E20               	addlw	(low (_mang_3| 0))& (0+255)
   774  0725  0084               	movwf	4
   775  0726  1383               	bcf	3,7	;select IRP bank0
   776  0727  0800               	movf	0,w
   777  0728  120A  118A  252A  120A  118A  	fcall	_Lcd_Write_Char
   778                           
   779                           ;BT.c: 39:         _delay((unsigned long)((100)*(20000000/4000.0)));
   780  072D  3003               	movlw	3
   781  072E  1283               	bcf	3,5	;RP0=0, select bank0
   782  072F  1303               	bcf	3,6	;RP1=0, select bank0
   783  0730  00DE               	movwf	??_main+2
   784  0731  308A               	movlw	138
   785  0732  00DD               	movwf	??_main+1
   786  0733  3055               	movlw	85
   787  0734  00DC               	movwf	??_main
   788  0735                     u357:	
   789  0735  0BDC               	decfsz	??_main,f
   790  0736  2F35               	goto	u357
   791  0737  0BDD               	decfsz	??_main+1,f
   792  0738  2F35               	goto	u357
   793  0739  0BDE               	decfsz	??_main+2,f
   794  073A  2F35               	goto	u357
   795                           
   796                           ;BT.c: 40:     }
   797  073B  3001               	movlw	1
   798  073C  1283               	bcf	3,5	;RP0=0, select bank0
   799  073D  1303               	bcf	3,6	;RP1=0, select bank0
   800  073E  00DC               	movwf	??_main
   801  073F  085C               	movf	??_main,w
   802  0740  07FC               	addwf	main@i,f
   803  0741  300F               	movlw	15
   804  0742  027C               	subwf	main@i,w
   805  0743  1C03               	skipc
   806  0744  2F23               	goto	l987
   807                           
   808                           ;BT.c: 41:     _delay((unsigned long)((1500)*(20000000/4000.0)));
   809  0745  3027               	movlw	39
   810  0746  1283               	bcf	3,5	;RP0=0, select bank0
   811  0747  1303               	bcf	3,6	;RP1=0, select bank0
   812  0748  00DE               	movwf	??_main+2
   813  0749  300D               	movlw	13
   814  074A  00DD               	movwf	??_main+1
   815  074B  3025               	movlw	37
   816  074C  00DC               	movwf	??_main
   817  074D                     u367:	
   818  074D  0BDC               	decfsz	??_main,f
   819  074E  2F4D               	goto	u367
   820  074F  0BDD               	decfsz	??_main+1,f
   821  0750  2F4D               	goto	u367
   822  0751  0BDE               	decfsz	??_main+2,f
   823  0752  2F4D               	goto	u367
   824  0753  2F54               	nop2
   825                           
   826                           ;BT.c: 42:     Lcd_Clear();
   827  0754  120A  118A  24DA  120A  118A  	fcall	_Lcd_Clear
   828                           
   829                           ;BT.c: 43:     Lcd_Set_Cursor(1,3);
   830  0759  3003               	movlw	3
   831  075A  1283               	bcf	3,5	;RP0=0, select bank0
   832  075B  1303               	bcf	3,6	;RP1=0, select bank0
   833  075C  00DC               	movwf	??_main
   834  075D  085C               	movf	??_main,w
   835  075E  00F4               	movwf	Lcd_Set_Cursor@b
   836  075F  3001               	movlw	1
   837  0760  120A  118A  25DC  120A  118A  	fcall	_Lcd_Set_Cursor
   838                           
   839                           ;BT.c: 44:     Lcd_Write_String(mang_4);
   840  0765  3042               	movlw	(low (_mang_4| 0))& (0+255)
   841  0766  00F5               	movwf	Lcd_Write_String@a
   842  0767  3000               	movlw	0
   843  0768  00F6               	movwf	Lcd_Write_String@a+1
   844  0769  120A  118A  259F  120A  118A  	fcall	_Lcd_Write_String
   845                           
   846                           ;BT.c: 45:     _delay((unsigned long)((500)*(20000000/4000.0)));
   847  076E  300D               	movlw	13
   848  076F  1283               	bcf	3,5	;RP0=0, select bank0
   849  0770  1303               	bcf	3,6	;RP1=0, select bank0
   850  0771  00DE               	movwf	??_main+2
   851  0772  30AF               	movlw	175
   852  0773  00DD               	movwf	??_main+1
   853  0774  30B5               	movlw	181
   854  0775  00DC               	movwf	??_main
   855  0776                     u377:	
   856  0776  0BDC               	decfsz	??_main,f
   857  0777  2F76               	goto	u377
   858  0778  0BDD               	decfsz	??_main+1,f
   859  0779  2F76               	goto	u377
   860  077A  0BDE               	decfsz	??_main+2,f
   861  077B  2F76               	goto	u377
   862  077C  2F7D               	nop2
   863                           
   864                           ;BT.c: 46:     Lcd_Set_Cursor(2,3);
   865  077D  3003               	movlw	3
   866  077E  1283               	bcf	3,5	;RP0=0, select bank0
   867  077F  1303               	bcf	3,6	;RP1=0, select bank0
   868  0780  00DC               	movwf	??_main
   869  0781  085C               	movf	??_main,w
   870  0782  00F4               	movwf	Lcd_Set_Cursor@b
   871  0783  3002               	movlw	2
   872  0784  120A  118A  25DC  120A  118A  	fcall	_Lcd_Set_Cursor
   873                           
   874                           ;BT.c: 47:     Lcd_Write_String("BAN SON DUY");
   875  0789  301D               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   876  078A  00F5               	movwf	Lcd_Write_String@a
   877  078B  3080               	movlw	128
   878  078C  00F6               	movwf	Lcd_Write_String@a+1
   879  078D  120A  118A  259F  120A  118A  	fcall	_Lcd_Write_String
   880                           
   881                           ;BT.c: 48:     _delay((unsigned long)((1000)*(20000000/4000.0)));
   882  0792  301A               	movlw	26
   883  0793  1283               	bcf	3,5	;RP0=0, select bank0
   884  0794  1303               	bcf	3,6	;RP1=0, select bank0
   885  0795  00DE               	movwf	??_main+2
   886  0796  305E               	movlw	94
   887  0797  00DD               	movwf	??_main+1
   888  0798  306D               	movlw	109
   889  0799  00DC               	movwf	??_main
   890  079A                     u387:	
   891  079A  0BDC               	decfsz	??_main,f
   892  079B  2F9A               	goto	u387
   893  079C  0BDD               	decfsz	??_main+1,f
   894  079D  2F9A               	goto	u387
   895  079E  0BDE               	decfsz	??_main+2,f
   896  079F  2F9A               	goto	u387
   897  07A0  2FA1               	nop2
   898                           
   899                           ;BT.c: 49:     Lcd_Clear();
   900  07A1  120A  118A  24DA  120A  118A  	fcall	_Lcd_Clear
   901                           
   902                           ;BT.c: 50:     Lcd_Set_Cursor(1,1);
   903  07A6  01F4               	clrf	Lcd_Set_Cursor@b
   904  07A7  0AF4               	incf	Lcd_Set_Cursor@b,f
   905  07A8  3001               	movlw	1
   906  07A9  120A  118A  25DC  120A  118A  	fcall	_Lcd_Set_Cursor
   907                           
   908                           ;BT.c: 51:     Lcd_Write_String("LOVE YOU (^_^)");
   909  07AE  3001               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   910  07AF  00F5               	movwf	Lcd_Write_String@a
   911  07B0  3080               	movlw	128
   912  07B1  00F6               	movwf	Lcd_Write_String@a+1
   913  07B2  120A  118A  259F  120A  118A  	fcall	_Lcd_Write_String
   914                           
   915                           ;BT.c: 52:     _delay((unsigned long)((500)*(20000000/4000.0)));
   916  07B7  300D               	movlw	13
   917  07B8  1283               	bcf	3,5	;RP0=0, select bank0
   918  07B9  1303               	bcf	3,6	;RP1=0, select bank0
   919  07BA  00DE               	movwf	??_main+2
   920  07BB  30AF               	movlw	175
   921  07BC  00DD               	movwf	??_main+1
   922  07BD  30B5               	movlw	181
   923  07BE  00DC               	movwf	??_main
   924  07BF                     u397:	
   925  07BF  0BDC               	decfsz	??_main,f
   926  07C0  2FBF               	goto	u397
   927  07C1  0BDD               	decfsz	??_main+1,f
   928  07C2  2FBF               	goto	u397
   929  07C3  0BDE               	decfsz	??_main+2,f
   930  07C4  2FBF               	goto	u397
   931  07C5  2FC6               	nop2
   932                           
   933                           ;BT.c: 53:     Lcd_Set_Cursor(2,3);
   934  07C6  3003               	movlw	3
   935  07C7  1283               	bcf	3,5	;RP0=0, select bank0
   936  07C8  1303               	bcf	3,6	;RP1=0, select bank0
   937  07C9  00DC               	movwf	??_main
   938  07CA  085C               	movf	??_main,w
   939  07CB  00F4               	movwf	Lcd_Set_Cursor@b
   940  07CC  3002               	movlw	2
   941  07CD  120A  118A  25DC  120A  118A  	fcall	_Lcd_Set_Cursor
   942                           
   943                           ;BT.c: 54:     Lcd_Write_String("LOVE YOU (^_^)");
   944  07D2  3001               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   945  07D3  00F5               	movwf	Lcd_Write_String@a
   946  07D4  3080               	movlw	128
   947  07D5  00F6               	movwf	Lcd_Write_String@a+1
   948  07D6  120A  118A  259F  120A  118A  	fcall	_Lcd_Write_String
   949                           
   950                           ;BT.c: 55:     _delay((unsigned long)((1500)*(20000000/4000.0)));
   951  07DB  3027               	movlw	39
   952  07DC  1283               	bcf	3,5	;RP0=0, select bank0
   953  07DD  1303               	bcf	3,6	;RP1=0, select bank0
   954  07DE  00DE               	movwf	??_main+2
   955  07DF  300D               	movlw	13
   956  07E0  00DD               	movwf	??_main+1
   957  07E1  3025               	movlw	37
   958  07E2  00DC               	movwf	??_main
   959  07E3                     u407:	
   960  07E3  0BDC               	decfsz	??_main,f
   961  07E4  2FE3               	goto	u407
   962  07E5  0BDD               	decfsz	??_main+1,f
   963  07E6  2FE3               	goto	u407
   964  07E7  0BDE               	decfsz	??_main+2,f
   965  07E8  2FE3               	goto	u407
   966  07E9  2FEA               	nop2
   967                           
   968                           ;BT.c: 56:     Lcd_Clear();
   969  07EA  120A  118A  24DA  120A  118A  	fcall	_Lcd_Clear
   970  07EF  2E8A               	goto	l941
   971  07F0                     __end_of_main:	
   972                           
   973                           	psect	text1
   974  059F                     __ptext1:	
   975 ;; *************** function _Lcd_Write_String *****************
   976 ;; Defined at:
   977 ;;		line 98 in file "lcd4.c"
   978 ;; Parameters:    Size  Location     Type
   979 ;;  a               2    5[COMMON] PTR unsigned char 
   980 ;;		 -> STR_4(15), STR_3(15), STR_2(12), mang_4(14), 
   981 ;;		 -> STR_1(13), mang_2(12), 
   982 ;; Auto vars:     Size  Location     Type
   983 ;;  i               2   10[COMMON] int 
   984 ;; Return value:  Size  Location     Type
   985 ;;                  1    wreg      void 
   986 ;; Registers used:
   987 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   988 ;; Tracked objects:
   989 ;;		On entry : 0/0
   990 ;;		On exit  : 0/0
   991 ;;		Unchanged: 0/0
   992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   993 ;;      Params:         2       0       0       0       0
   994 ;;      Locals:         2       0       0       0       0
   995 ;;      Temps:          3       0       0       0       0
   996 ;;      Totals:         7       0       0       0       0
   997 ;;Total ram usage:        7 bytes
   998 ;; Hardware stack levels used:    1
   999 ;; Hardware stack levels required when called:    2
  1000 ;; This function calls:
  1001 ;;		_Lcd_Write_Char
  1002 ;; This function is called by:
  1003 ;;		_main
  1004 ;; This function uses a non-reentrant model
  1005 ;;
  1006                           
  1007                           
  1008                           ;psect for function _Lcd_Write_String
  1009  059F                     _Lcd_Write_String:	
  1010                           
  1011                           ;lcd4.c: 98: void Lcd_Write_String(char *a);lcd4.c: 99: {;lcd4.c: 100:  int i;;lcd4.c: 1
      +                          01:  for(i=0;a[i]!='\0';i++)
  1012                           
  1013                           ;incstack = 0
  1014                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1015  059F  01FA               	clrf	Lcd_Write_String@i
  1016  05A0  01FB               	clrf	Lcd_Write_String@i+1
  1017  05A1                     l933:	
  1018  05A1  087A               	movf	Lcd_Write_String@i,w
  1019  05A2  0775               	addwf	Lcd_Write_String@a,w
  1020  05A3  00F8               	movwf	??_Lcd_Write_String+1
  1021  05A4  0876               	movf	Lcd_Write_String@a+1,w
  1022  05A5  00F7               	movwf	??_Lcd_Write_String
  1023  05A6  1803               	skipnc
  1024  05A7  0AF7               	incf	??_Lcd_Write_String,f
  1025  05A8  1BFA               	btfsc	Lcd_Write_String@i,7
  1026  05A9  03F7               	decf	??_Lcd_Write_String,f
  1027  05AA  0877               	movf	??_Lcd_Write_String,w
  1028  05AB  00F9               	movwf	??_Lcd_Write_String+2
  1029  05AC  0879               	movf	??_Lcd_Write_String+2,w
  1030  05AD  1283               	bcf	3,5	;RP0=0, select bank0
  1031  05AE  1303               	bcf	3,6	;RP1=0, select bank0
  1032  05AF  00FF               	movwf	127
  1033  05B0  0878               	movf	??_Lcd_Write_String+1,w
  1034  05B1  0084               	movwf	4
  1035  05B2  120A  118A  2003  120A  118A  	fcall	stringtab
  1036  05B7  3A00               	xorlw	0
  1037  05B8  1903               	btfsc	3,2
  1038  05B9  0008               	return
  1039                           
  1040                           ;lcd4.c: 102:     Lcd_Write_Char(a[i]);
  1041  05BA  087A               	movf	Lcd_Write_String@i,w
  1042  05BB  0775               	addwf	Lcd_Write_String@a,w
  1043  05BC  00F8               	movwf	??_Lcd_Write_String+1
  1044  05BD  0876               	movf	Lcd_Write_String@a+1,w
  1045  05BE  00F7               	movwf	??_Lcd_Write_String
  1046  05BF  1803               	skipnc
  1047  05C0  0AF7               	incf	??_Lcd_Write_String,f
  1048  05C1  1BFA               	btfsc	Lcd_Write_String@i,7
  1049  05C2  03F7               	decf	??_Lcd_Write_String,f
  1050  05C3  0877               	movf	??_Lcd_Write_String,w
  1051  05C4  00F9               	movwf	??_Lcd_Write_String+2
  1052  05C5  0879               	movf	??_Lcd_Write_String+2,w
  1053  05C6  1283               	bcf	3,5	;RP0=0, select bank0
  1054  05C7  1303               	bcf	3,6	;RP1=0, select bank0
  1055  05C8  00FF               	movwf	127
  1056  05C9  0878               	movf	??_Lcd_Write_String+1,w
  1057  05CA  0084               	movwf	4
  1058  05CB  120A  118A  2003  120A  118A  	fcall	stringtab
  1059  05D0  120A  118A  252A  120A  118A  	fcall	_Lcd_Write_Char
  1060  05D5  3001               	movlw	1
  1061  05D6  07FA               	addwf	Lcd_Write_String@i,f
  1062  05D7  1803               	skipnc
  1063  05D8  0AFB               	incf	Lcd_Write_String@i+1,f
  1064  05D9  3000               	movlw	0
  1065  05DA  07FB               	addwf	Lcd_Write_String@i+1,f
  1066  05DB  2DA1               	goto	l933
  1067  05DC                     __end_of_Lcd_Write_String:	
  1068                           
  1069                           	psect	text2
  1070  052A                     __ptext2:	
  1071 ;; *************** function _Lcd_Write_Char *****************
  1072 ;; Defined at:
  1073 ;;		line 82 in file "lcd4.c"
  1074 ;; Parameters:    Size  Location     Type
  1075 ;;  a               1    wreg     unsigned char 
  1076 ;; Auto vars:     Size  Location     Type
  1077 ;;  a               1    4[COMMON] unsigned char 
  1078 ;;  y               1    3[COMMON] unsigned char 
  1079 ;;  temp            1    2[COMMON] unsigned char 
  1080 ;; Return value:  Size  Location     Type
  1081 ;;                  1    wreg      void 
  1082 ;; Registers used:
  1083 ;;		wreg, status,2, status,0, pclath, cstack
  1084 ;; Tracked objects:
  1085 ;;		On entry : 0/0
  1086 ;;		On exit  : 0/0
  1087 ;;		Unchanged: 0/0
  1088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1089 ;;      Params:         0       0       0       0       0
  1090 ;;      Locals:         3       0       0       0       0
  1091 ;;      Temps:          1       0       0       0       0
  1092 ;;      Totals:         4       0       0       0       0
  1093 ;;Total ram usage:        4 bytes
  1094 ;; Hardware stack levels used:    1
  1095 ;; Hardware stack levels required when called:    1
  1096 ;; This function calls:
  1097 ;;		_Lcd_Port
  1098 ;; This function is called by:
  1099 ;;		_main
  1100 ;;		_Lcd_Write_String
  1101 ;; This function uses a non-reentrant model
  1102 ;;
  1103                           
  1104                           
  1105                           ;psect for function _Lcd_Write_Char
  1106  052A                     _Lcd_Write_Char:	
  1107                           
  1108                           ;incstack = 0
  1109                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1110                           ;Lcd_Write_Char@a stored from wreg
  1111  052A  00F4               	movwf	Lcd_Write_Char@a
  1112                           
  1113                           ;lcd4.c: 82: void Lcd_Write_Char(char a);lcd4.c: 83: {;lcd4.c: 84:    char temp,y;;lcd4.
      +                          c: 85:    temp = a&0x0F;
  1114  052B  0874               	movf	Lcd_Write_Char@a,w
  1115  052C  390F               	andlw	15
  1116  052D  00F1               	movwf	??_Lcd_Write_Char
  1117  052E  0871               	movf	??_Lcd_Write_Char,w
  1118  052F  00F2               	movwf	Lcd_Write_Char@temp
  1119                           
  1120                           ;lcd4.c: 86:    y = a&0xF0;
  1121  0530  0874               	movf	Lcd_Write_Char@a,w
  1122  0531  39F0               	andlw	240
  1123  0532  00F1               	movwf	??_Lcd_Write_Char
  1124  0533  0871               	movf	??_Lcd_Write_Char,w
  1125  0534  00F3               	movwf	Lcd_Write_Char@y
  1126                           
  1127                           ;lcd4.c: 87:    RD0 = 1;
  1128  0535  1283               	bcf	3,5	;RP0=0, select bank0
  1129  0536  1303               	bcf	3,6	;RP1=0, select bank0
  1130  0537  1408               	bsf	8,0	;volatile
  1131                           
  1132                           ;lcd4.c: 88:    Lcd_Port(y>>4);
  1133  0538  0873               	movf	Lcd_Write_Char@y,w
  1134  0539  00F1               	movwf	??_Lcd_Write_Char
  1135  053A  3004               	movlw	4
  1136  053B                     u205:	
  1137  053B  1003               	clrc
  1138  053C  0CF1               	rrf	??_Lcd_Write_Char,f
  1139  053D  3EFF               	addlw	-1
  1140  053E  1D03               	skipz
  1141  053F  2D3B               	goto	u205
  1142  0540  0871               	movf	??_Lcd_Write_Char,w
  1143  0541  120A  118A  24F6  120A  118A  	fcall	_Lcd_Port
  1144                           
  1145                           ;lcd4.c: 89:    RD1 = 1;
  1146  0546  1283               	bcf	3,5	;RP0=0, select bank0
  1147  0547  1303               	bcf	3,6	;RP1=0, select bank0
  1148  0548  1488               	bsf	8,1	;volatile
  1149                           
  1150                           ;lcd4.c: 90:    _delay((unsigned long)((40)*(20000000/4000000.0)));
  1151  0549  3042               	movlw	66
  1152  054A  00F1               	movwf	??_Lcd_Write_Char
  1153  054B                     u417:	
  1154  054B  0BF1               	decfsz	??_Lcd_Write_Char,f
  1155  054C  2D4B               	goto	u417
  1156  054D  0000               	nop
  1157                           
  1158                           ;lcd4.c: 91:    RD1 = 0;
  1159  054E  1283               	bcf	3,5	;RP0=0, select bank0
  1160  054F  1303               	bcf	3,6	;RP1=0, select bank0
  1161  0550  1088               	bcf	8,1	;volatile
  1162                           
  1163                           ;lcd4.c: 92:    Lcd_Port(temp);
  1164  0551  0872               	movf	Lcd_Write_Char@temp,w
  1165  0552  120A  118A  24F6  120A  118A  	fcall	_Lcd_Port
  1166                           
  1167                           ;lcd4.c: 93:    RD1 = 1;
  1168  0557  1283               	bcf	3,5	;RP0=0, select bank0
  1169  0558  1303               	bcf	3,6	;RP1=0, select bank0
  1170  0559  1488               	bsf	8,1	;volatile
  1171                           
  1172                           ;lcd4.c: 94:    _delay((unsigned long)((40)*(20000000/4000000.0)));
  1173  055A  3042               	movlw	66
  1174  055B  00F1               	movwf	??_Lcd_Write_Char
  1175  055C                     u427:	
  1176  055C  0BF1               	decfsz	??_Lcd_Write_Char,f
  1177  055D  2D5C               	goto	u427
  1178  055E  0000               	nop
  1179                           
  1180                           ;lcd4.c: 95:    RD1 = 0;
  1181  055F  1283               	bcf	3,5	;RP0=0, select bank0
  1182  0560  1303               	bcf	3,6	;RP1=0, select bank0
  1183  0561  1088               	bcf	8,1	;volatile
  1184  0562  0008               	return
  1185  0563                     __end_of_Lcd_Write_Char:	
  1186                           
  1187                           	psect	text3
  1188  05DC                     __ptext3:	
  1189 ;; *************** function _Lcd_Set_Cursor *****************
  1190 ;; Defined at:
  1191 ;;		line 42 in file "lcd4.c"
  1192 ;; Parameters:    Size  Location     Type
  1193 ;;  a               1    wreg     unsigned char 
  1194 ;;  b               1    4[COMMON] unsigned char 
  1195 ;; Auto vars:     Size  Location     Type
  1196 ;;  a               1    7[COMMON] unsigned char 
  1197 ;;  temp            1   10[COMMON] unsigned char 
  1198 ;;  y               1    9[COMMON] unsigned char 
  1199 ;;  z               1    8[COMMON] unsigned char 
  1200 ;; Return value:  Size  Location     Type
  1201 ;;                  1    wreg      void 
  1202 ;; Registers used:
  1203 ;;		wreg, status,2, status,0, pclath, cstack
  1204 ;; Tracked objects:
  1205 ;;		On entry : 0/0
  1206 ;;		On exit  : 0/0
  1207 ;;		Unchanged: 0/0
  1208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1209 ;;      Params:         1       0       0       0       0
  1210 ;;      Locals:         4       0       0       0       0
  1211 ;;      Temps:          2       0       0       0       0
  1212 ;;      Totals:         7       0       0       0       0
  1213 ;;Total ram usage:        7 bytes
  1214 ;; Hardware stack levels used:    1
  1215 ;; Hardware stack levels required when called:    2
  1216 ;; This function calls:
  1217 ;;		_Lcd_Cmd
  1218 ;; This function is called by:
  1219 ;;		_main
  1220 ;; This function uses a non-reentrant model
  1221 ;;
  1222                           
  1223                           
  1224                           ;psect for function _Lcd_Set_Cursor
  1225  05DC                     _Lcd_Set_Cursor:	
  1226                           
  1227                           ;incstack = 0
  1228                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1229                           ;Lcd_Set_Cursor@a stored from wreg
  1230  05DC  00F7               	movwf	Lcd_Set_Cursor@a
  1231                           
  1232                           ;lcd4.c: 42: void Lcd_Set_Cursor(char a, char b);lcd4.c: 43: {;lcd4.c: 44:  char temp,z,
      +                          y;;lcd4.c: 45:  if(a == 1)
  1233  05DD  0377               	decf	Lcd_Set_Cursor@a,w
  1234  05DE  1D03               	btfss	3,2
  1235  05DF  2E01               	goto	l917
  1236                           
  1237                           ;lcd4.c: 46:  {;lcd4.c: 47:    temp = 0x80 + b - 1;
  1238  05E0  0874               	movf	Lcd_Set_Cursor@b,w
  1239  05E1  3E7F               	addlw	127
  1240  05E2  00F5               	movwf	??_Lcd_Set_Cursor
  1241  05E3  0875               	movf	??_Lcd_Set_Cursor,w
  1242  05E4  00FA               	movwf	Lcd_Set_Cursor@temp
  1243                           
  1244                           ;lcd4.c: 48:   z = temp>>4;
  1245  05E5  087A               	movf	Lcd_Set_Cursor@temp,w
  1246  05E6  00F5               	movwf	??_Lcd_Set_Cursor
  1247  05E7  3004               	movlw	4
  1248  05E8                     u225:	
  1249  05E8  1003               	clrc
  1250  05E9  0CF5               	rrf	??_Lcd_Set_Cursor,f
  1251  05EA  3EFF               	addlw	-1
  1252  05EB  1D03               	skipz
  1253  05EC  2DE8               	goto	u225
  1254  05ED  0875               	movf	??_Lcd_Set_Cursor,w
  1255  05EE  00F6               	movwf	??_Lcd_Set_Cursor+1
  1256  05EF  0876               	movf	??_Lcd_Set_Cursor+1,w
  1257  05F0  00F8               	movwf	Lcd_Set_Cursor@z
  1258                           
  1259                           ;lcd4.c: 49:   y = temp & 0x0F;
  1260  05F1  087A               	movf	Lcd_Set_Cursor@temp,w
  1261  05F2  390F               	andlw	15
  1262  05F3  00F5               	movwf	??_Lcd_Set_Cursor
  1263  05F4  0875               	movf	??_Lcd_Set_Cursor,w
  1264  05F5  00F9               	movwf	Lcd_Set_Cursor@y
  1265                           
  1266                           ;lcd4.c: 50:   Lcd_Cmd(z);
  1267  05F6  0878               	movf	Lcd_Set_Cursor@z,w
  1268  05F7  120A  118A  2510  120A  118A  	fcall	_Lcd_Cmd
  1269                           
  1270                           ;lcd4.c: 51:   Lcd_Cmd(y);
  1271  05FC  0879               	movf	Lcd_Set_Cursor@y,w
  1272  05FD  120A  118A  2510   	fcall	_Lcd_Cmd
  1273                           
  1274                           ;lcd4.c: 52:  }
  1275  0600  0008               	return
  1276  0601                     l917:	
  1277  0601  3002               	movlw	2
  1278  0602  0677               	xorwf	Lcd_Set_Cursor@a,w
  1279  0603  1D03               	btfss	3,2
  1280  0604  0008               	return
  1281                           
  1282                           ;lcd4.c: 54:  {;lcd4.c: 55:   temp = 0xC0 + b - 1;
  1283  0605  0874               	movf	Lcd_Set_Cursor@b,w
  1284  0606  3EBF               	addlw	191
  1285  0607  00F5               	movwf	??_Lcd_Set_Cursor
  1286  0608  0875               	movf	??_Lcd_Set_Cursor,w
  1287  0609  00FA               	movwf	Lcd_Set_Cursor@temp
  1288                           
  1289                           ;lcd4.c: 56:   z = temp>>4;
  1290  060A  087A               	movf	Lcd_Set_Cursor@temp,w
  1291  060B  00F5               	movwf	??_Lcd_Set_Cursor
  1292  060C  3004               	movlw	4
  1293  060D                     u245:	
  1294  060D  1003               	clrc
  1295  060E  0CF5               	rrf	??_Lcd_Set_Cursor,f
  1296  060F  3EFF               	addlw	-1
  1297  0610  1D03               	skipz
  1298  0611  2E0D               	goto	u245
  1299  0612  0875               	movf	??_Lcd_Set_Cursor,w
  1300  0613  00F6               	movwf	??_Lcd_Set_Cursor+1
  1301  0614  0876               	movf	??_Lcd_Set_Cursor+1,w
  1302  0615  00F8               	movwf	Lcd_Set_Cursor@z
  1303                           
  1304                           ;lcd4.c: 57:   y = temp & 0x0F;
  1305  0616  087A               	movf	Lcd_Set_Cursor@temp,w
  1306  0617  390F               	andlw	15
  1307  0618  00F5               	movwf	??_Lcd_Set_Cursor
  1308  0619  0875               	movf	??_Lcd_Set_Cursor,w
  1309  061A  00F9               	movwf	Lcd_Set_Cursor@y
  1310                           
  1311                           ;lcd4.c: 58:   Lcd_Cmd(z);
  1312  061B  0878               	movf	Lcd_Set_Cursor@z,w
  1313  061C  120A  118A  2510  120A  118A  	fcall	_Lcd_Cmd
  1314                           
  1315                           ;lcd4.c: 59:   Lcd_Cmd(y);
  1316  0621  0879               	movf	Lcd_Set_Cursor@y,w
  1317  0622  120A  118A  2510   	fcall	_Lcd_Cmd
  1318  0625  0008               	return
  1319  0626                     __end_of_Lcd_Set_Cursor:	
  1320                           
  1321                           	psect	text4
  1322  0626                     __ptext4:	
  1323 ;; *************** function _Lcd_Init *****************
  1324 ;; Defined at:
  1325 ;;		line 63 in file "lcd4.c"
  1326 ;; Parameters:    Size  Location     Type
  1327 ;;		None
  1328 ;; Auto vars:     Size  Location     Type
  1329 ;;		None
  1330 ;; Return value:  Size  Location     Type
  1331 ;;                  1    wreg      void 
  1332 ;; Registers used:
  1333 ;;		wreg, status,2, status,0, pclath, cstack
  1334 ;; Tracked objects:
  1335 ;;		On entry : 0/0
  1336 ;;		On exit  : 0/0
  1337 ;;		Unchanged: 0/0
  1338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1339 ;;      Params:         0       0       0       0       0
  1340 ;;      Locals:         0       0       0       0       0
  1341 ;;      Temps:          2       0       0       0       0
  1342 ;;      Totals:         2       0       0       0       0
  1343 ;;Total ram usage:        2 bytes
  1344 ;; Hardware stack levels used:    1
  1345 ;; Hardware stack levels required when called:    2
  1346 ;; This function calls:
  1347 ;;		_Lcd_Cmd
  1348 ;;		_Lcd_Port
  1349 ;; This function is called by:
  1350 ;;		_main
  1351 ;; This function uses a non-reentrant model
  1352 ;;
  1353                           
  1354                           
  1355                           ;psect for function _Lcd_Init
  1356  0626                     _Lcd_Init:	
  1357                           
  1358                           ;lcd4.c: 65:   Lcd_Port(0x00);
  1359                           
  1360                           ;incstack = 0
  1361                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1362  0626  3000               	movlw	0
  1363  0627  120A  118A  24F6  120A  118A  	fcall	_Lcd_Port
  1364                           
  1365                           ;lcd4.c: 66:    _delay((unsigned long)((20)*(20000000/4000.0)));
  1366  062C  3082               	movlw	130
  1367  062D  00F5               	movwf	??_Lcd_Init+1
  1368  062E  30DD               	movlw	221
  1369  062F  00F4               	movwf	??_Lcd_Init
  1370  0630                     u437:	
  1371  0630  0BF4               	decfsz	??_Lcd_Init,f
  1372  0631  2E30               	goto	u437
  1373  0632  0BF5               	decfsz	??_Lcd_Init+1,f
  1374  0633  2E30               	goto	u437
  1375  0634  2E35               	nop2
  1376                           
  1377                           ;lcd4.c: 67:   Lcd_Cmd(0x03);
  1378  0635  3003               	movlw	3
  1379  0636  120A  118A  2510  120A  118A  	fcall	_Lcd_Cmd
  1380                           
  1381                           ;lcd4.c: 68:  _delay((unsigned long)((5)*(20000000/4000.0)));
  1382  063B  3021               	movlw	33
  1383  063C  00F5               	movwf	??_Lcd_Init+1
  1384  063D  3076               	movlw	118
  1385  063E  00F4               	movwf	??_Lcd_Init
  1386  063F                     u447:	
  1387  063F  0BF4               	decfsz	??_Lcd_Init,f
  1388  0640  2E3F               	goto	u447
  1389  0641  0BF5               	decfsz	??_Lcd_Init+1,f
  1390  0642  2E3F               	goto	u447
  1391  0643  0000               	nop
  1392                           
  1393                           ;lcd4.c: 69:   Lcd_Cmd(0x03);
  1394  0644  3003               	movlw	3
  1395  0645  120A  118A  2510  120A  118A  	fcall	_Lcd_Cmd
  1396                           
  1397                           ;lcd4.c: 70:  _delay((unsigned long)((11)*(20000000/4000.0)));
  1398  064A  3048               	movlw	72
  1399  064B  00F5               	movwf	??_Lcd_Init+1
  1400  064C  306C               	movlw	108
  1401  064D  00F4               	movwf	??_Lcd_Init
  1402  064E                     u457:	
  1403  064E  0BF4               	decfsz	??_Lcd_Init,f
  1404  064F  2E4E               	goto	u457
  1405  0650  0BF5               	decfsz	??_Lcd_Init+1,f
  1406  0651  2E4E               	goto	u457
  1407  0652  0000               	nop
  1408                           
  1409                           ;lcd4.c: 71:   Lcd_Cmd(0x03);
  1410  0653  3003               	movlw	3
  1411  0654  120A  118A  2510  120A  118A  	fcall	_Lcd_Cmd
  1412                           
  1413                           ;lcd4.c: 73:   Lcd_Cmd(0x02);
  1414  0659  3002               	movlw	2
  1415  065A  120A  118A  2510  120A  118A  	fcall	_Lcd_Cmd
  1416                           
  1417                           ;lcd4.c: 74:   Lcd_Cmd(0x02);
  1418  065F  3002               	movlw	2
  1419  0660  120A  118A  2510  120A  118A  	fcall	_Lcd_Cmd
  1420                           
  1421                           ;lcd4.c: 75:   Lcd_Cmd(0x08);
  1422  0665  3008               	movlw	8
  1423  0666  120A  118A  2510  120A  118A  	fcall	_Lcd_Cmd
  1424                           
  1425                           ;lcd4.c: 76:   Lcd_Cmd(0x00);
  1426  066B  3000               	movlw	0
  1427  066C  120A  118A  2510  120A  118A  	fcall	_Lcd_Cmd
  1428                           
  1429                           ;lcd4.c: 77:   Lcd_Cmd(0x0C);
  1430  0671  300C               	movlw	12
  1431  0672  120A  118A  2510  120A  118A  	fcall	_Lcd_Cmd
  1432                           
  1433                           ;lcd4.c: 78:   Lcd_Cmd(0x00);
  1434  0677  3000               	movlw	0
  1435  0678  120A  118A  2510  120A  118A  	fcall	_Lcd_Cmd
  1436                           
  1437                           ;lcd4.c: 79:   Lcd_Cmd(0x06);
  1438  067D  3006               	movlw	6
  1439  067E  120A  118A  2510   	fcall	_Lcd_Cmd
  1440  0681  0008               	return
  1441  0682                     __end_of_Lcd_Init:	
  1442                           
  1443                           	psect	text5
  1444  04DA                     __ptext5:	
  1445 ;; *************** function _Lcd_Clear *****************
  1446 ;; Defined at:
  1447 ;;		line 36 in file "lcd4.c"
  1448 ;; Parameters:    Size  Location     Type
  1449 ;;		None
  1450 ;; Auto vars:     Size  Location     Type
  1451 ;;		None
  1452 ;; Return value:  Size  Location     Type
  1453 ;;                  1    wreg      void 
  1454 ;; Registers used:
  1455 ;;		wreg, status,2, status,0, pclath, cstack
  1456 ;; Tracked objects:
  1457 ;;		On entry : 0/0
  1458 ;;		On exit  : 0/0
  1459 ;;		Unchanged: 0/0
  1460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1461 ;;      Params:         0       0       0       0       0
  1462 ;;      Locals:         0       0       0       0       0
  1463 ;;      Temps:          0       0       0       0       0
  1464 ;;      Totals:         0       0       0       0       0
  1465 ;;Total ram usage:        0 bytes
  1466 ;; Hardware stack levels used:    1
  1467 ;; Hardware stack levels required when called:    2
  1468 ;; This function calls:
  1469 ;;		_Lcd_Cmd
  1470 ;; This function is called by:
  1471 ;;		_main
  1472 ;; This function uses a non-reentrant model
  1473 ;;
  1474                           
  1475                           
  1476                           ;psect for function _Lcd_Clear
  1477  04DA                     _Lcd_Clear:	
  1478                           
  1479                           ;lcd4.c: 38:  Lcd_Cmd(0);
  1480                           
  1481                           ;incstack = 0
  1482                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  1483  04DA  3000               	movlw	0
  1484  04DB  120A  118A  2510  120A  118A  	fcall	_Lcd_Cmd
  1485                           
  1486                           ;lcd4.c: 39:  Lcd_Cmd(1);
  1487  04E0  3001               	movlw	1
  1488  04E1  120A  118A  2510   	fcall	_Lcd_Cmd
  1489  04E4  0008               	return
  1490  04E5                     __end_of_Lcd_Clear:	
  1491                           
  1492                           	psect	text6
  1493  0510                     __ptext6:	
  1494 ;; *************** function _Lcd_Cmd *****************
  1495 ;; Defined at:
  1496 ;;		line 27 in file "lcd4.c"
  1497 ;; Parameters:    Size  Location     Type
  1498 ;;  a               1    wreg     unsigned char 
  1499 ;; Auto vars:     Size  Location     Type
  1500 ;;  a               1    3[COMMON] unsigned char 
  1501 ;; Return value:  Size  Location     Type
  1502 ;;                  1    wreg      void 
  1503 ;; Registers used:
  1504 ;;		wreg, status,2, status,0, pclath, cstack
  1505 ;; Tracked objects:
  1506 ;;		On entry : 0/0
  1507 ;;		On exit  : 0/0
  1508 ;;		Unchanged: 0/0
  1509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1510 ;;      Params:         0       0       0       0       0
  1511 ;;      Locals:         1       0       0       0       0
  1512 ;;      Temps:          2       0       0       0       0
  1513 ;;      Totals:         3       0       0       0       0
  1514 ;;Total ram usage:        3 bytes
  1515 ;; Hardware stack levels used:    1
  1516 ;; Hardware stack levels required when called:    1
  1517 ;; This function calls:
  1518 ;;		_Lcd_Port
  1519 ;; This function is called by:
  1520 ;;		_Lcd_Clear
  1521 ;;		_Lcd_Set_Cursor
  1522 ;;		_Lcd_Init
  1523 ;;		_Lcd_Shift_Right
  1524 ;;		_Lcd_Shift_Left
  1525 ;; This function uses a non-reentrant model
  1526 ;;
  1527                           
  1528                           
  1529                           ;psect for function _Lcd_Cmd
  1530  0510                     _Lcd_Cmd:	
  1531                           
  1532                           ;incstack = 0
  1533                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1534                           ;Lcd_Cmd@a stored from wreg
  1535  0510  00F3               	movwf	Lcd_Cmd@a
  1536                           
  1537                           ;lcd4.c: 27: void Lcd_Cmd(char a);lcd4.c: 28: {;lcd4.c: 29:  RD0 = 0;
  1538  0511  1283               	bcf	3,5	;RP0=0, select bank0
  1539  0512  1303               	bcf	3,6	;RP1=0, select bank0
  1540  0513  1008               	bcf	8,0	;volatile
  1541                           
  1542                           ;lcd4.c: 30:  Lcd_Port(a);
  1543  0514  0873               	movf	Lcd_Cmd@a,w
  1544  0515  120A  118A  24F6  120A  118A  	fcall	_Lcd_Port
  1545                           
  1546                           ;lcd4.c: 31:  RD1 = 1;
  1547  051A  1283               	bcf	3,5	;RP0=0, select bank0
  1548  051B  1303               	bcf	3,6	;RP1=0, select bank0
  1549  051C  1488               	bsf	8,1	;volatile
  1550                           
  1551                           ;lcd4.c: 32:         _delay((unsigned long)((4)*(20000000/4000.0)));
  1552  051D  301A               	movlw	26
  1553  051E  00F2               	movwf	??_Lcd_Cmd+1
  1554  051F  30F8               	movlw	248
  1555  0520  00F1               	movwf	??_Lcd_Cmd
  1556  0521                     u467:	
  1557  0521  0BF1               	decfsz	??_Lcd_Cmd,f
  1558  0522  2D21               	goto	u467
  1559  0523  0BF2               	decfsz	??_Lcd_Cmd+1,f
  1560  0524  2D21               	goto	u467
  1561  0525  0000               	nop
  1562                           
  1563                           ;lcd4.c: 33:         RD1 = 0;
  1564  0526  1283               	bcf	3,5	;RP0=0, select bank0
  1565  0527  1303               	bcf	3,6	;RP1=0, select bank0
  1566  0528  1088               	bcf	8,1	;volatile
  1567  0529  0008               	return
  1568  052A                     __end_of_Lcd_Cmd:	
  1569                           
  1570                           	psect	text7
  1571  04F6                     __ptext7:	
  1572 ;; *************** function _Lcd_Port *****************
  1573 ;; Defined at:
  1574 ;;		line 5 in file "lcd4.c"
  1575 ;; Parameters:    Size  Location     Type
  1576 ;;  a               1    wreg     unsigned char 
  1577 ;; Auto vars:     Size  Location     Type
  1578 ;;  a               1    0[COMMON] unsigned char 
  1579 ;; Return value:  Size  Location     Type
  1580 ;;                  1    wreg      void 
  1581 ;; Registers used:
  1582 ;;		wreg
  1583 ;; Tracked objects:
  1584 ;;		On entry : 0/0
  1585 ;;		On exit  : 0/0
  1586 ;;		Unchanged: 0/0
  1587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1588 ;;      Params:         0       0       0       0       0
  1589 ;;      Locals:         1       0       0       0       0
  1590 ;;      Temps:          0       0       0       0       0
  1591 ;;      Totals:         1       0       0       0       0
  1592 ;;Total ram usage:        1 bytes
  1593 ;; Hardware stack levels used:    1
  1594 ;; This function calls:
  1595 ;;		Nothing
  1596 ;; This function is called by:
  1597 ;;		_Lcd_Cmd
  1598 ;;		_Lcd_Init
  1599 ;;		_Lcd_Write_Char
  1600 ;; This function uses a non-reentrant model
  1601 ;;
  1602                           
  1603                           
  1604                           ;psect for function _Lcd_Port
  1605  04F6                     _Lcd_Port:	
  1606                           
  1607                           ;incstack = 0
  1608                           ; Regs used in _Lcd_Port: [wreg]
  1609                           ;Lcd_Port@a stored from wreg
  1610  04F6  00F0               	movwf	Lcd_Port@a
  1611                           
  1612                           ;lcd4.c: 5: void Lcd_Port(char a);lcd4.c: 6: {;lcd4.c: 7:  if(a & 1)
  1613  04F7  1C70               	btfss	Lcd_Port@a,0
  1614  04F8  2CFD               	goto	l55
  1615                           
  1616                           ;lcd4.c: 8:   RD2 = 1;
  1617  04F9  1283               	bcf	3,5	;RP0=0, select bank0
  1618  04FA  1303               	bcf	3,6	;RP1=0, select bank0
  1619  04FB  1508               	bsf	8,2	;volatile
  1620  04FC  2D00               	goto	l56
  1621  04FD                     l55:	
  1622                           ;lcd4.c: 9:  else
  1623                           
  1624                           
  1625                           ;lcd4.c: 10:   RD2 = 0;
  1626  04FD  1283               	bcf	3,5	;RP0=0, select bank0
  1627  04FE  1303               	bcf	3,6	;RP1=0, select bank0
  1628  04FF  1108               	bcf	8,2	;volatile
  1629  0500                     l56:	
  1630                           
  1631                           ;lcd4.c: 12:  if(a & 2)
  1632  0500  1CF0               	btfss	Lcd_Port@a,1
  1633  0501  2D04               	goto	l57
  1634                           
  1635                           ;lcd4.c: 13:   RD3 = 1;
  1636  0502  1588               	bsf	8,3	;volatile
  1637  0503  2D05               	goto	l58
  1638  0504                     l57:	
  1639                           ;lcd4.c: 14:  else
  1640                           
  1641                           
  1642                           ;lcd4.c: 15:   RD3 = 0;
  1643  0504  1188               	bcf	8,3	;volatile
  1644  0505                     l58:	
  1645                           
  1646                           ;lcd4.c: 17:  if(a & 4)
  1647  0505  1D70               	btfss	Lcd_Port@a,2
  1648  0506  2D09               	goto	l59
  1649                           
  1650                           ;lcd4.c: 18:   RD4 = 1;
  1651  0507  1608               	bsf	8,4	;volatile
  1652  0508  2D0A               	goto	l60
  1653  0509                     l59:	
  1654                           ;lcd4.c: 19:  else
  1655                           
  1656                           
  1657                           ;lcd4.c: 20:   RD4 = 0;
  1658  0509  1208               	bcf	8,4	;volatile
  1659  050A                     l60:	
  1660                           
  1661                           ;lcd4.c: 22:  if(a & 8)
  1662  050A  1DF0               	btfss	Lcd_Port@a,3
  1663  050B  2D0E               	goto	l61
  1664                           
  1665                           ;lcd4.c: 23:   RD5 = 1;
  1666  050C  1688               	bsf	8,5	;volatile
  1667  050D  0008               	return
  1668  050E                     l61:	
  1669                           ;lcd4.c: 24:  else
  1670                           
  1671                           
  1672                           ;lcd4.c: 25:   RD5 = 0;
  1673  050E  1288               	bcf	8,5	;volatile
  1674  050F  0008               	return
  1675  0510                     __end_of_Lcd_Port:	
  1676  007E                     btemp	set	126	;btemp
  1677  007E                     wtemp0	set	126


Data Sizes:
    Strings     40
    Constant    0
    Data        60
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80      3      63
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 15
		 -> STR_4(CODE[15]), STR_3(CODE[15]), STR_2(CODE[12]), mang_4(BANK0[14]), 
		 -> STR_1(CODE[13]), mang_2(BANK0[12]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Write_String
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    2402
                                             12 COMMON     1     1      0
                                              0 BANK0      3     3      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     724
                                              5 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     988
                                              4 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      3      3F       5       78.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      4C      12        0.0%
ABS                  0      0      4C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Apr 09 19:14:00 2019

                        pc 0002                __CFG_CP$OFF 0000                         l60 050A  
                       l61 050E                         l55 04FD                         l56 0500  
                       l57 0504                         l58 0505                         l59 0509  
                       fsr 0004                        l917 0601                        l933 05A1  
                      l941 068A                        l947 0697                        l959 06BD  
                      l987 0723                        _RD0 0040                        _RD1 0041  
                      _RD2 0042                        _RD3 0043                        _RD4 0044  
                      _RD5 0045                        u205 053B                        u225 05E8  
                      u245 060D                        u317 06A9                        u407 07E3  
                      u327 06DA                        u417 054B                        u337 06EE  
             __CFG_CPD$OFF 0000                        u427 055C                        u347 0713  
                      u437 0630                        u357 0735                        u447 063F  
                      u367 074D                        u457 064E                        u377 0776  
                      u467 0521                        u387 079A                        u397 07BF  
                      fsr0 0004                        indf 0000               __CFG_FOSC$HS 0000  
             __CFG_LVP$OFF 0000                       STR_1 0022                       STR_2 002F  
                     STR_3 0013                       STR_4 0013               __CFG_WRT$OFF 0000  
        ?_Lcd_Write_String 0075                       _main 0682                       btemp 007E  
                     start 0000         ??_Lcd_Write_String 0077            __end_of_Lcd_Cmd 052A  
                    ?_main 0070              __CFG_WDTE$OFF 0000    __size_of_Lcd_Set_Cursor 004A  
                    _TRISD 0088                      main@i 007C             __CFG_BOREN$OFF 0000  
                    pclath 000A                      status 0003                      wtemp0 007E  
         __end_of_Lcd_Init 0682           __end_of_Lcd_Port 0510            __initialization 07F0  
             __end_of_main 07F0                     ??_main 005C         __size_of_Lcd_Clear 000B  
                ??_Lcd_Cmd 0071    __size_of_Lcd_Write_Char 0039             __CFG_PWRTE$OFF 0000  
                   _mang_1 0039                     _mang_2 0050                     _mang_3 0020  
                   _mang_4 0042                     _mang_5 002F            Lcd_Set_Cursor@a 0077  
          Lcd_Set_Cursor@b 0074            Lcd_Set_Cursor@y 0079            Lcd_Set_Cursor@z 0078  
  __end_of__initialization 07FC          __end_of_Lcd_Clear 04E5             __pcstackCOMMON 0070  
             __pidataBANK0 0563             _Lcd_Set_Cursor 05DC                  ?_Lcd_Init 0070  
                ?_Lcd_Port 0070                 __pmaintext 0682  __size_of_Lcd_Write_String 003D  
   __end_of_Lcd_Set_Cursor 0626                 ??_Lcd_Init 0074                 ??_Lcd_Port 0070  
               __stringtab 0003             _Lcd_Write_Char 052A                    _Lcd_Cmd 0510  
          ?_Lcd_Set_Cursor 0074                    __ptext1 059F                    __ptext2 052A  
                  __ptext3 05DC                    __ptext4 0626                    __ptext5 04DA  
                  __ptext6 0510                    __ptext7 04F6     __end_of_Lcd_Write_Char 0563  
     end_of_initialization 07FC                  Lcd_Port@a 0070            ?_Lcd_Write_Char 0070  
        Lcd_Write_String@a 0075          Lcd_Write_String@i 007A                  _Lcd_Clear 04DA  
         _Lcd_Write_String 059F        start_initialization 07F0          __size_of_Lcd_Init 005C  
        __size_of_Lcd_Port 001A                 ?_Lcd_Clear 0070                 init_fetch0 04E5  
              __pdataBANK0 0020            Lcd_Write_Char@a 0074            Lcd_Write_Char@y 0073  
                ___latbits 0002              __pcstackBANK0 005C                   ?_Lcd_Cmd 0070  
         ??_Lcd_Set_Cursor 0075                  __pstrings 0003                   Lcd_Cmd@a 0073  
              ??_Lcd_Clear 0074                __stringbase 0012           ??_Lcd_Write_Char 0071  
                 _Lcd_Init 0626                   _Lcd_Port 04F6   __end_of_Lcd_Write_String 05DC  
         __size_of_Lcd_Cmd 001A         __end_of__stringtab 0013              __size_of_main 016E  
                 init_ram0 04E9         Lcd_Write_Char@temp 0072                  stringcode 000D  
       Lcd_Set_Cursor@temp 007A                   stringdir 000D                   stringtab 0003  
