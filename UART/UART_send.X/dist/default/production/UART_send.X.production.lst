

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Apr 30 00:11:51 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    10                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text7,local,class=CODE,merge=1,delta=2
    15                           	psect	text8,local,class=CODE,merge=1,delta=2
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.05
    19                           ; Generated 20/12/2018 GMT
    20                           ; 
    21                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F877A Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0098                     	;# 
   101  0099                     	;# 
   102  009C                     	;# 
   103  009D                     	;# 
   104  009E                     	;# 
   105  009F                     	;# 
   106  010C                     	;# 
   107  010D                     	;# 
   108  010E                     	;# 
   109  010F                     	;# 
   110  018C                     	;# 
   111  018D                     	;# 
   112  0000                     	;# 
   113  0001                     	;# 
   114  0002                     	;# 
   115  0003                     	;# 
   116  0004                     	;# 
   117  0005                     	;# 
   118  0006                     	;# 
   119  0007                     	;# 
   120  0008                     	;# 
   121  0009                     	;# 
   122  000A                     	;# 
   123  000B                     	;# 
   124  000C                     	;# 
   125  000D                     	;# 
   126  000E                     	;# 
   127  000E                     	;# 
   128  000F                     	;# 
   129  0010                     	;# 
   130  0011                     	;# 
   131  0012                     	;# 
   132  0013                     	;# 
   133  0014                     	;# 
   134  0015                     	;# 
   135  0015                     	;# 
   136  0016                     	;# 
   137  0017                     	;# 
   138  0018                     	;# 
   139  0019                     	;# 
   140  001A                     	;# 
   141  001B                     	;# 
   142  001B                     	;# 
   143  001C                     	;# 
   144  001D                     	;# 
   145  001E                     	;# 
   146  001F                     	;# 
   147  0081                     	;# 
   148  0085                     	;# 
   149  0086                     	;# 
   150  0087                     	;# 
   151  0088                     	;# 
   152  0089                     	;# 
   153  008C                     	;# 
   154  008D                     	;# 
   155  008E                     	;# 
   156  0091                     	;# 
   157  0092                     	;# 
   158  0093                     	;# 
   159  0094                     	;# 
   160  0098                     	;# 
   161  0099                     	;# 
   162  009C                     	;# 
   163  009D                     	;# 
   164  009E                     	;# 
   165  009F                     	;# 
   166  010C                     	;# 
   167  010D                     	;# 
   168  010E                     	;# 
   169  010F                     	;# 
   170  018C                     	;# 
   171  018D                     	;# 
   172  0000                     	;# 
   173  0001                     	;# 
   174  0002                     	;# 
   175  0003                     	;# 
   176  0004                     	;# 
   177  0005                     	;# 
   178  0006                     	;# 
   179  0007                     	;# 
   180  0008                     	;# 
   181  0009                     	;# 
   182  000A                     	;# 
   183  000B                     	;# 
   184  000C                     	;# 
   185  000D                     	;# 
   186  000E                     	;# 
   187  000E                     	;# 
   188  000F                     	;# 
   189  0010                     	;# 
   190  0011                     	;# 
   191  0012                     	;# 
   192  0013                     	;# 
   193  0014                     	;# 
   194  0015                     	;# 
   195  0015                     	;# 
   196  0016                     	;# 
   197  0017                     	;# 
   198  0018                     	;# 
   199  0019                     	;# 
   200  001A                     	;# 
   201  001B                     	;# 
   202  001B                     	;# 
   203  001C                     	;# 
   204  001D                     	;# 
   205  001E                     	;# 
   206  001F                     	;# 
   207  0081                     	;# 
   208  0085                     	;# 
   209  0086                     	;# 
   210  0087                     	;# 
   211  0088                     	;# 
   212  0089                     	;# 
   213  008C                     	;# 
   214  008D                     	;# 
   215  008E                     	;# 
   216  0091                     	;# 
   217  0092                     	;# 
   218  0093                     	;# 
   219  0094                     	;# 
   220  0098                     	;# 
   221  0099                     	;# 
   222  009C                     	;# 
   223  009D                     	;# 
   224  009E                     	;# 
   225  009F                     	;# 
   226  010C                     	;# 
   227  010D                     	;# 
   228  010E                     	;# 
   229  010F                     	;# 
   230  018C                     	;# 
   231  018D                     	;# 
   232  0000                     	;# 
   233  0001                     	;# 
   234  0002                     	;# 
   235  0003                     	;# 
   236  0004                     	;# 
   237  0005                     	;# 
   238  0006                     	;# 
   239  0007                     	;# 
   240  0008                     	;# 
   241  0009                     	;# 
   242  000A                     	;# 
   243  000B                     	;# 
   244  000C                     	;# 
   245  000D                     	;# 
   246  000E                     	;# 
   247  000E                     	;# 
   248  000F                     	;# 
   249  0010                     	;# 
   250  0011                     	;# 
   251  0012                     	;# 
   252  0013                     	;# 
   253  0014                     	;# 
   254  0015                     	;# 
   255  0015                     	;# 
   256  0016                     	;# 
   257  0017                     	;# 
   258  0018                     	;# 
   259  0019                     	;# 
   260  001A                     	;# 
   261  001B                     	;# 
   262  001B                     	;# 
   263  001C                     	;# 
   264  001D                     	;# 
   265  001E                     	;# 
   266  001F                     	;# 
   267  0081                     	;# 
   268  0085                     	;# 
   269  0086                     	;# 
   270  0087                     	;# 
   271  0088                     	;# 
   272  0089                     	;# 
   273  008C                     	;# 
   274  008D                     	;# 
   275  008E                     	;# 
   276  0091                     	;# 
   277  0092                     	;# 
   278  0093                     	;# 
   279  0094                     	;# 
   280  0098                     	;# 
   281  0099                     	;# 
   282  009C                     	;# 
   283  009D                     	;# 
   284  009E                     	;# 
   285  009F                     	;# 
   286  010C                     	;# 
   287  010D                     	;# 
   288  010E                     	;# 
   289  010F                     	;# 
   290  018C                     	;# 
   291  018D                     	;# 
   292  0019                     _TXREG	set	25
   293  001A                     _RCREG	set	26
   294  001E                     _ADRESH	set	30
   295  001F                     _ADCON0	set	31
   296  0006                     _PORTB	set	6
   297  0041                     _RD1	set	65
   298  0040                     _RD0	set	64
   299  0045                     _RD5	set	69
   300  0044                     _RD4	set	68
   301  0043                     _RD3	set	67
   302  0042                     _RD2	set	66
   303  0065                     _RCIF	set	101
   304  00C4                     _CREN	set	196
   305  00C7                     _SPEN	set	199
   306  00FA                     _GO_nDONE	set	250
   307  0066                     _ADIF	set	102
   308  00F8                     _ADON	set	248
   309  00FF                     _ADCS1	set	255
   310  00FE                     _ADCS0	set	254
   311  0099                     _SPBRG	set	153
   312  009E                     _ADRESL	set	158
   313  0086                     _TRISB	set	134
   314  04C1                     _TRMT	set	1217
   315  04C5                     _TXEN	set	1221
   316  043E                     _TRISC6	set	1086
   317  043F                     _TRISC7	set	1087
   318  04C4                     _SYNC	set	1220
   319  04C2                     _BRGH	set	1218
   320  0466                     _ADIE	set	1126
   321  04FF                     _ADFM	set	1279
   322  04FE                     _ADCS2	set	1278
   323  04FB                     _PCFG3	set	1275
   324  04FA                     _PCFG2	set	1274
   325  04F9                     _PCFG1	set	1273
   326  04F8                     _PCFG0	set	1272
   327                           
   328                           ; #config settings
   329  0000                     
   330                           	psect	cinit
   331  07FC                     start_initialization:	
   332  07FC                     __initialization:	
   333  07FC                     end_of_initialization:	
   334                           ;End of C runtime variable initialization code
   335                           
   336  07FC                     __end_of__initialization:	
   337  07FC  0183               	clrf	3
   338  07FD  120A  118A  2D49   	ljmp	_main	;jump to C main() function
   339                           
   340                           	psect	cstackCOMMON
   341  0070                     __pcstackCOMMON:	
   342  0070                     ?_ADC_Init:	
   343  0070                     ??_ADC_Init:	
   344                           ; 1 bytes @ 0x0
   345                           
   346  0070                     ?_UART_Write:	
   347                           ; 1 bytes @ 0x0
   348                           
   349  0070                     ??_UART_Write:	
   350                           ; 1 bytes @ 0x0
   351                           
   352  0070                     ?_main:	
   353                           ; 1 bytes @ 0x0
   354                           
   355  0070                     ?_Read_ADC:	
   356                           ; 1 bytes @ 0x0
   357                           
   358  0070                     ?___lwmod:	
   359                           ; 2 bytes @ 0x0
   360                           
   361  0070                     ?___aldiv:	
   362                           ; 2 bytes @ 0x0
   363                           
   364  0070                     UART_Write@data:	
   365                           ; 4 bytes @ 0x0
   366                           
   367  0070                     ___lwmod@divisor:	
   368                           ; 1 bytes @ 0x0
   369                           
   370  0070                     ___aldiv@divisor:	
   371                           ; 2 bytes @ 0x0
   372                           
   373                           
   374                           ; 4 bytes @ 0x0
   375  0070                     	ds	2
   376  0072                     ??_Read_ADC:	
   377  0072                     ___lwmod@dividend:	
   378                           ; 1 bytes @ 0x2
   379                           
   380                           
   381                           ; 2 bytes @ 0x2
   382  0072                     	ds	2
   383  0074                     ??___lwmod:	
   384  0074                     ___aldiv@dividend:	
   385                           ; 1 bytes @ 0x4
   386                           
   387                           
   388                           ; 4 bytes @ 0x4
   389  0074                     	ds	1
   390  0075                     ___lwmod@counter:	
   391                           
   392                           ; 1 bytes @ 0x5
   393  0075                     	ds	1
   394  0076                     ?___lwdiv:	
   395  0076                     Read_ADC@N:	
   396                           ; 2 bytes @ 0x6
   397                           
   398  0076                     ___lwdiv@divisor:	
   399                           ; 2 bytes @ 0x6
   400                           
   401                           
   402                           ; 2 bytes @ 0x6
   403  0076                     	ds	2
   404  0078                     ??___aldiv:	
   405  0078                     Read_ADC@channel:	
   406                           ; 1 bytes @ 0x8
   407                           
   408  0078                     ___lwdiv@dividend:	
   409                           ; 1 bytes @ 0x8
   410                           
   411                           
   412                           ; 2 bytes @ 0x8
   413  0078                     	ds	1
   414  0079                     UART_Init@x:	
   415                           
   416                           ; 2 bytes @ 0x9
   417  0079                     	ds	1
   418  007A                     ??___lwdiv:	
   419                           
   420                           ; 1 bytes @ 0xA
   421  007A                     	ds	1
   422  007B                     ___lwdiv@quotient:	
   423                           
   424                           ; 2 bytes @ 0xB
   425  007B                     	ds	2
   426  007D                     ___lwdiv@counter:	
   427                           
   428                           ; 1 bytes @ 0xD
   429  007D                     	ds	1
   430                           
   431                           	psect	cstackBANK0
   432  0020                     __pcstackBANK0:	
   433  0020                     ?_UART_Send:	
   434  0020                     ___aldiv@counter:	
   435                           ; 1 bytes @ 0x0
   436                           
   437  0020                     UART_Send@x_value:	
   438                           ; 1 bytes @ 0x0
   439                           
   440                           
   441                           ; 2 bytes @ 0x0
   442  0020                     	ds	1
   443  0021                     ___aldiv@sign:	
   444                           
   445                           ; 1 bytes @ 0x1
   446  0021                     	ds	1
   447  0022                     UART_Send@y_value:	
   448  0022                     ___aldiv@quotient:	
   449                           ; 2 bytes @ 0x2
   450                           
   451                           
   452                           ; 4 bytes @ 0x2
   453  0022                     	ds	2
   454  0024                     ??_UART_Send:	
   455                           
   456                           ; 1 bytes @ 0x4
   457  0024                     	ds	2
   458  0026                     ?_UART_Init:	
   459  0026                     UART_Init@baudrate:	
   460                           ; 1 bytes @ 0x6
   461                           
   462                           
   463                           ; 4 bytes @ 0x6
   464  0026                     	ds	4
   465  002A                     ??_UART_Init:	
   466                           
   467                           ; 1 bytes @ 0xA
   468  002A                     	ds	12
   469  0036                     ??_main:	
   470                           
   471                           ; 1 bytes @ 0x16
   472  0036                     	ds	1
   473  0037                     main@a:	
   474                           
   475                           ; 2 bytes @ 0x17
   476  0037                     	ds	2
   477  0039                     main@b:	
   478                           
   479                           ; 2 bytes @ 0x19
   480  0039                     	ds	2
   481                           
   482                           	psect	maintext
   483  0549                     __pmaintext:	
   484 ;;
   485 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   486 ;;
   487 ;; *************** function _main *****************
   488 ;; Defined at:
   489 ;;		line 21 in file "UART_send.c"
   490 ;; Parameters:    Size  Location     Type
   491 ;;		None
   492 ;; Auto vars:     Size  Location     Type
   493 ;;  b               2   25[BANK0 ] unsigned int 
   494 ;;  a               2   23[BANK0 ] unsigned int 
   495 ;; Return value:  Size  Location     Type
   496 ;;                  1    wreg      void 
   497 ;; Registers used:
   498 ;;		wreg, status,2, status,0, pclath, cstack
   499 ;; Tracked objects:
   500 ;;		On entry : B00/0
   501 ;;		On exit  : 0/0
   502 ;;		Unchanged: 0/0
   503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   504 ;;      Params:         0       0       0       0       0
   505 ;;      Locals:         0       4       0       0       0
   506 ;;      Temps:          0       1       0       0       0
   507 ;;      Totals:         0       5       0       0       0
   508 ;;Total ram usage:        5 bytes
   509 ;; Hardware stack levels required when called:    2
   510 ;; This function calls:
   511 ;;		_ADC_Init
   512 ;;		_Read_ADC
   513 ;;		_UART_Init
   514 ;;		_UART_Send
   515 ;; This function is called by:
   516 ;;		Startup code after reset
   517 ;; This function uses a non-reentrant model
   518 ;;
   519                           
   520                           
   521                           ;psect for function _main
   522  0549                     _main:	
   523                           
   524                           ;UART_send.c: 24:     unsigned int a, b;;UART_send.c: 26:     TRISB |= 0x00000111;
   525                           
   526                           ;incstack = 0
   527                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   528  0549  3011               	movlw	17
   529  054A  1283               	bcf	3,5	;RP0=0, select bank0
   530  054B  1303               	bcf	3,6	;RP1=0, select bank0
   531  054C  00B6               	movwf	??_main
   532  054D  0836               	movf	??_main,w
   533  054E  1683               	bsf	3,5	;RP0=1, select bank1
   534  054F  1303               	bcf	3,6	;RP1=0, select bank1
   535  0550  0486               	iorwf	6,f	;volatile
   536                           
   537                           ;UART_send.c: 27:     PORTB |= 0x00000111;
   538  0551  3011               	movlw	17
   539  0552  1283               	bcf	3,5	;RP0=0, select bank0
   540  0553  1303               	bcf	3,6	;RP1=0, select bank0
   541  0554  00B6               	movwf	??_main
   542  0555  0836               	movf	??_main,w
   543  0556  0486               	iorwf	6,f	;volatile
   544                           
   545                           ;UART_send.c: 29:     ADC_Init();
   546  0557  120A  118A  2488  120A  118A  	fcall	_ADC_Init
   547                           
   548                           ;UART_send.c: 30:     UART_Init(9600);
   549  055C  3000               	movlw	0
   550  055D  1283               	bcf	3,5	;RP0=0, select bank0
   551  055E  1303               	bcf	3,6	;RP1=0, select bank0
   552  055F  00A9               	movwf	UART_Init@baudrate+3
   553  0560  3000               	movlw	0
   554  0561  00A8               	movwf	UART_Init@baudrate+2
   555  0562  3025               	movlw	37
   556  0563  00A7               	movwf	UART_Init@baudrate+1
   557  0564  3080               	movlw	128
   558  0565  00A6               	movwf	UART_Init@baudrate
   559  0566  120A  118A  2620  120A  118A  	fcall	_UART_Init
   560  056B                     l1200:	
   561                           
   562                           ;UART_send.c: 32:     {;UART_send.c: 33:       a = Read_ADC(0);
   563  056B  3000               	movlw	0
   564  056C  120A  118A  24D2  120A  118A  	fcall	_Read_ADC
   565  0571  0871               	movf	?_Read_ADC+1,w
   566  0572  1283               	bcf	3,5	;RP0=0, select bank0
   567  0573  1303               	bcf	3,6	;RP1=0, select bank0
   568  0574  00B8               	movwf	main@a+1
   569  0575  0870               	movf	?_Read_ADC,w
   570  0576  00B7               	movwf	main@a
   571                           
   572                           ;UART_send.c: 34:       b = Read_ADC(1);
   573  0577  3001               	movlw	1
   574  0578  120A  118A  24D2  120A  118A  	fcall	_Read_ADC
   575  057D  0871               	movf	?_Read_ADC+1,w
   576  057E  1283               	bcf	3,5	;RP0=0, select bank0
   577  057F  1303               	bcf	3,6	;RP1=0, select bank0
   578  0580  00BA               	movwf	main@b+1
   579  0581  0870               	movf	?_Read_ADC,w
   580  0582  00B9               	movwf	main@b
   581                           
   582                           ;UART_send.c: 35:       UART_Send(a,b);
   583  0583  0838               	movf	main@a+1,w
   584  0584  00A1               	movwf	UART_Send@x_value+1
   585  0585  0837               	movf	main@a,w
   586  0586  00A0               	movwf	UART_Send@x_value
   587  0587  083A               	movf	main@b+1,w
   588  0588  00A3               	movwf	UART_Send@y_value+1
   589  0589  0839               	movf	main@b,w
   590  058A  00A2               	movwf	UART_Send@y_value
   591  058B  120A  118A  26F6  120A  118A  	fcall	_UART_Send
   592  0590  2D6B               	goto	l1200
   593  0591                     __end_of_main:	
   594                           
   595                           	psect	text1
   596  06F6                     __ptext1:	
   597 ;; *************** function _UART_Send *****************
   598 ;; Defined at:
   599 ;;		line 70 in file "UART_send.c"
   600 ;; Parameters:    Size  Location     Type
   601 ;;  x_value         2    0[BANK0 ] unsigned int 
   602 ;;  y_value         2    2[BANK0 ] unsigned int 
   603 ;; Auto vars:     Size  Location     Type
   604 ;;		None
   605 ;; Return value:  Size  Location     Type
   606 ;;                  1    wreg      void 
   607 ;; Registers used:
   608 ;;		wreg, status,2, status,0, pclath, cstack
   609 ;; Tracked objects:
   610 ;;		On entry : 0/0
   611 ;;		On exit  : 0/0
   612 ;;		Unchanged: 0/0
   613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   614 ;;      Params:         0       4       0       0       0
   615 ;;      Locals:         0       0       0       0       0
   616 ;;      Temps:          0       3       0       0       0
   617 ;;      Totals:         0       7       0       0       0
   618 ;;Total ram usage:        7 bytes
   619 ;; Hardware stack levels used:    1
   620 ;; Hardware stack levels required when called:    1
   621 ;; This function calls:
   622 ;;		_UART_Write
   623 ;;		___lwdiv
   624 ;;		___lwmod
   625 ;; This function is called by:
   626 ;;		_main
   627 ;; This function uses a non-reentrant model
   628 ;;
   629                           
   630                           
   631                           ;psect for function _UART_Send
   632  06F6                     _UART_Send:	
   633                           
   634                           ;UART_send.c: 70: void UART_Send(unsigned int x_value, unsigned int y_value);UART_send.c
      +                          : 71: {;UART_send.c: 72:    UART_Write(':');
   635                           
   636                           ;incstack = 0
   637                           ; Regs used in _UART_Send: [wreg+status,2+status,0+pclath+cstack]
   638  06F6  303A               	movlw	58
   639  06F7  120A  118A  247E  120A  118A  	fcall	_UART_Write
   640                           
   641                           ;UART_send.c: 73:    _delay((unsigned long)((10)*(20000000/4000000.0)));
   642  06FC  300F               	movlw	15
   643  06FD  1283               	bcf	3,5	;RP0=0, select bank0
   644  06FE  1303               	bcf	3,6	;RP1=0, select bank0
   645  06FF  00A4               	movwf	??_UART_Send
   646  0700                     u837:	
   647  0700  0BA4               	decfsz	??_UART_Send,f
   648  0701  2F00               	goto	u837
   649  0702  2F03               	nop2
   650                           
   651                           ;UART_send.c: 74:    UART_Write(x_value/1000);
   652  0703  30E8               	movlw	232
   653  0704  00F6               	movwf	___lwdiv@divisor
   654  0705  3003               	movlw	3
   655  0706  00F7               	movwf	___lwdiv@divisor+1
   656  0707  1283               	bcf	3,5	;RP0=0, select bank0
   657  0708  1303               	bcf	3,6	;RP1=0, select bank0
   658  0709  0821               	movf	UART_Send@x_value+1,w
   659  070A  00F9               	movwf	___lwdiv@dividend+1
   660  070B  0820               	movf	UART_Send@x_value,w
   661  070C  00F8               	movwf	___lwdiv@dividend
   662  070D  120A  118A  250D  120A  118A  	fcall	___lwdiv
   663  0712  0876               	movf	?___lwdiv,w
   664  0713  120A  118A  247E  120A  118A  	fcall	_UART_Write
   665                           
   666                           ;UART_send.c: 75:    UART_Write(x_value%1000/100);
   667  0718  3064               	movlw	100
   668  0719  00F6               	movwf	___lwdiv@divisor
   669  071A  3000               	movlw	0
   670  071B  00F7               	movwf	___lwdiv@divisor+1
   671  071C  1283               	bcf	3,5	;RP0=0, select bank0
   672  071D  1303               	bcf	3,6	;RP1=0, select bank0
   673  071E  0821               	movf	UART_Send@x_value+1,w
   674  071F  00F3               	movwf	___lwmod@dividend+1
   675  0720  0820               	movf	UART_Send@x_value,w
   676  0721  00F2               	movwf	___lwmod@dividend
   677  0722  30E8               	movlw	232
   678  0723  00F0               	movwf	___lwmod@divisor
   679  0724  3003               	movlw	3
   680  0725  00F1               	movwf	___lwmod@divisor+1
   681  0726  120A  118A  24A0  120A  118A  	fcall	___lwmod
   682  072B  0871               	movf	?___lwmod+1,w
   683  072C  00F9               	movwf	___lwdiv@dividend+1
   684  072D  0870               	movf	?___lwmod,w
   685  072E  00F8               	movwf	___lwdiv@dividend
   686  072F  120A  118A  250D  120A  118A  	fcall	___lwdiv
   687  0734  0876               	movf	?___lwdiv,w
   688  0735  120A  118A  247E  120A  118A  	fcall	_UART_Write
   689                           
   690                           ;UART_send.c: 76:    UART_Write(x_value%100/10);
   691  073A  300A               	movlw	10
   692  073B  00F6               	movwf	___lwdiv@divisor
   693  073C  3000               	movlw	0
   694  073D  00F7               	movwf	___lwdiv@divisor+1
   695  073E  1283               	bcf	3,5	;RP0=0, select bank0
   696  073F  1303               	bcf	3,6	;RP1=0, select bank0
   697  0740  0821               	movf	UART_Send@x_value+1,w
   698  0741  00F3               	movwf	___lwmod@dividend+1
   699  0742  0820               	movf	UART_Send@x_value,w
   700  0743  00F2               	movwf	___lwmod@dividend
   701  0744  3064               	movlw	100
   702  0745  00F0               	movwf	___lwmod@divisor
   703  0746  3000               	movlw	0
   704  0747  00F1               	movwf	___lwmod@divisor+1
   705  0748  120A  118A  24A0  120A  118A  	fcall	___lwmod
   706  074D  0871               	movf	?___lwmod+1,w
   707  074E  00F9               	movwf	___lwdiv@dividend+1
   708  074F  0870               	movf	?___lwmod,w
   709  0750  00F8               	movwf	___lwdiv@dividend
   710  0751  120A  118A  250D  120A  118A  	fcall	___lwdiv
   711  0756  0876               	movf	?___lwdiv,w
   712  0757  120A  118A  247E  120A  118A  	fcall	_UART_Write
   713                           
   714                           ;UART_send.c: 77:    UART_Write(x_value%10);
   715  075C  300A               	movlw	10
   716  075D  00F0               	movwf	___lwmod@divisor
   717  075E  3000               	movlw	0
   718  075F  00F1               	movwf	___lwmod@divisor+1
   719  0760  1283               	bcf	3,5	;RP0=0, select bank0
   720  0761  1303               	bcf	3,6	;RP1=0, select bank0
   721  0762  0821               	movf	UART_Send@x_value+1,w
   722  0763  00F3               	movwf	___lwmod@dividend+1
   723  0764  0820               	movf	UART_Send@x_value,w
   724  0765  00F2               	movwf	___lwmod@dividend
   725  0766  120A  118A  24A0  120A  118A  	fcall	___lwmod
   726  076B  0870               	movf	?___lwmod,w
   727  076C  120A  118A  247E  120A  118A  	fcall	_UART_Write
   728                           
   729                           ;UART_send.c: 78:    _delay((unsigned long)((50)*(20000000/4000.0)));
   730  0771  3002               	movlw	2
   731  0772  1283               	bcf	3,5	;RP0=0, select bank0
   732  0773  1303               	bcf	3,6	;RP1=0, select bank0
   733  0774  00A6               	movwf	??_UART_Send+2
   734  0775  3045               	movlw	69
   735  0776  00A5               	movwf	??_UART_Send+1
   736  0777  30A9               	movlw	169
   737  0778  00A4               	movwf	??_UART_Send
   738  0779                     u847:	
   739  0779  0BA4               	decfsz	??_UART_Send,f
   740  077A  2F79               	goto	u847
   741  077B  0BA5               	decfsz	??_UART_Send+1,f
   742  077C  2F79               	goto	u847
   743  077D  0BA6               	decfsz	??_UART_Send+2,f
   744  077E  2F79               	goto	u847
   745                           
   746                           ;UART_send.c: 79:    UART_Write(y_value/1000);
   747  077F  30E8               	movlw	232
   748  0780  00F6               	movwf	___lwdiv@divisor
   749  0781  3003               	movlw	3
   750  0782  00F7               	movwf	___lwdiv@divisor+1
   751  0783  1283               	bcf	3,5	;RP0=0, select bank0
   752  0784  1303               	bcf	3,6	;RP1=0, select bank0
   753  0785  0823               	movf	UART_Send@y_value+1,w
   754  0786  00F9               	movwf	___lwdiv@dividend+1
   755  0787  0822               	movf	UART_Send@y_value,w
   756  0788  00F8               	movwf	___lwdiv@dividend
   757  0789  120A  118A  250D  120A  118A  	fcall	___lwdiv
   758  078E  0876               	movf	?___lwdiv,w
   759  078F  120A  118A  247E  120A  118A  	fcall	_UART_Write
   760                           
   761                           ;UART_send.c: 80:    UART_Write(y_value%1000/100);
   762  0794  3064               	movlw	100
   763  0795  00F6               	movwf	___lwdiv@divisor
   764  0796  3000               	movlw	0
   765  0797  00F7               	movwf	___lwdiv@divisor+1
   766  0798  1283               	bcf	3,5	;RP0=0, select bank0
   767  0799  1303               	bcf	3,6	;RP1=0, select bank0
   768  079A  0823               	movf	UART_Send@y_value+1,w
   769  079B  00F3               	movwf	___lwmod@dividend+1
   770  079C  0822               	movf	UART_Send@y_value,w
   771  079D  00F2               	movwf	___lwmod@dividend
   772  079E  30E8               	movlw	232
   773  079F  00F0               	movwf	___lwmod@divisor
   774  07A0  3003               	movlw	3
   775  07A1  00F1               	movwf	___lwmod@divisor+1
   776  07A2  120A  118A  24A0  120A  118A  	fcall	___lwmod
   777  07A7  0871               	movf	?___lwmod+1,w
   778  07A8  00F9               	movwf	___lwdiv@dividend+1
   779  07A9  0870               	movf	?___lwmod,w
   780  07AA  00F8               	movwf	___lwdiv@dividend
   781  07AB  120A  118A  250D  120A  118A  	fcall	___lwdiv
   782  07B0  0876               	movf	?___lwdiv,w
   783  07B1  120A  118A  247E  120A  118A  	fcall	_UART_Write
   784                           
   785                           ;UART_send.c: 81:    UART_Write(y_value%100/10);
   786  07B6  300A               	movlw	10
   787  07B7  00F6               	movwf	___lwdiv@divisor
   788  07B8  3000               	movlw	0
   789  07B9  00F7               	movwf	___lwdiv@divisor+1
   790  07BA  1283               	bcf	3,5	;RP0=0, select bank0
   791  07BB  1303               	bcf	3,6	;RP1=0, select bank0
   792  07BC  0823               	movf	UART_Send@y_value+1,w
   793  07BD  00F3               	movwf	___lwmod@dividend+1
   794  07BE  0822               	movf	UART_Send@y_value,w
   795  07BF  00F2               	movwf	___lwmod@dividend
   796  07C0  3064               	movlw	100
   797  07C1  00F0               	movwf	___lwmod@divisor
   798  07C2  3000               	movlw	0
   799  07C3  00F1               	movwf	___lwmod@divisor+1
   800  07C4  120A  118A  24A0  120A  118A  	fcall	___lwmod
   801  07C9  0871               	movf	?___lwmod+1,w
   802  07CA  00F9               	movwf	___lwdiv@dividend+1
   803  07CB  0870               	movf	?___lwmod,w
   804  07CC  00F8               	movwf	___lwdiv@dividend
   805  07CD  120A  118A  250D  120A  118A  	fcall	___lwdiv
   806  07D2  0876               	movf	?___lwdiv,w
   807  07D3  120A  118A  247E  120A  118A  	fcall	_UART_Write
   808                           
   809                           ;UART_send.c: 82:    UART_Write(y_value%10);
   810  07D8  300A               	movlw	10
   811  07D9  00F0               	movwf	___lwmod@divisor
   812  07DA  3000               	movlw	0
   813  07DB  00F1               	movwf	___lwmod@divisor+1
   814  07DC  1283               	bcf	3,5	;RP0=0, select bank0
   815  07DD  1303               	bcf	3,6	;RP1=0, select bank0
   816  07DE  0823               	movf	UART_Send@y_value+1,w
   817  07DF  00F3               	movwf	___lwmod@dividend+1
   818  07E0  0822               	movf	UART_Send@y_value,w
   819  07E1  00F2               	movwf	___lwmod@dividend
   820  07E2  120A  118A  24A0  120A  118A  	fcall	___lwmod
   821  07E7  0870               	movf	?___lwmod,w
   822  07E8  120A  118A  247E  120A  118A  	fcall	_UART_Write
   823                           
   824                           ;UART_send.c: 83:    _delay((unsigned long)((50)*(20000000/4000.0)));
   825  07ED  3002               	movlw	2
   826  07EE  1283               	bcf	3,5	;RP0=0, select bank0
   827  07EF  1303               	bcf	3,6	;RP1=0, select bank0
   828  07F0  00A6               	movwf	??_UART_Send+2
   829  07F1  3045               	movlw	69
   830  07F2  00A5               	movwf	??_UART_Send+1
   831  07F3  30A9               	movlw	169
   832  07F4  00A4               	movwf	??_UART_Send
   833  07F5                     u857:	
   834  07F5  0BA4               	decfsz	??_UART_Send,f
   835  07F6  2FF5               	goto	u857
   836  07F7  0BA5               	decfsz	??_UART_Send+1,f
   837  07F8  2FF5               	goto	u857
   838  07F9  0BA6               	decfsz	??_UART_Send+2,f
   839  07FA  2FF5               	goto	u857
   840  07FB  0008               	return
   841  07FC                     __end_of_UART_Send:	
   842                           
   843                           	psect	text2
   844  04A0                     __ptext2:	
   845 ;; *************** function ___lwmod *****************
   846 ;; Defined at:
   847 ;;		line 5 in file "D:\Mplab X\xc8\pic\sources\c90\common\lwmod.c"
   848 ;; Parameters:    Size  Location     Type
   849 ;;  divisor         2    0[COMMON] unsigned int 
   850 ;;  dividend        2    2[COMMON] unsigned int 
   851 ;; Auto vars:     Size  Location     Type
   852 ;;  counter         1    5[COMMON] unsigned char 
   853 ;; Return value:  Size  Location     Type
   854 ;;                  2    0[COMMON] unsigned int 
   855 ;; Registers used:
   856 ;;		wreg, status,2, status,0
   857 ;; Tracked objects:
   858 ;;		On entry : 0/0
   859 ;;		On exit  : 0/0
   860 ;;		Unchanged: 0/0
   861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   862 ;;      Params:         4       0       0       0       0
   863 ;;      Locals:         1       0       0       0       0
   864 ;;      Temps:          1       0       0       0       0
   865 ;;      Totals:         6       0       0       0       0
   866 ;;Total ram usage:        6 bytes
   867 ;; Hardware stack levels used:    1
   868 ;; This function calls:
   869 ;;		Nothing
   870 ;; This function is called by:
   871 ;;		_UART_Send
   872 ;; This function uses a non-reentrant model
   873 ;;
   874                           
   875                           
   876                           ;psect for function ___lwmod
   877  04A0                     ___lwmod:	
   878                           
   879                           ;incstack = 0
   880                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
   881  04A0  0870               	movf	___lwmod@divisor,w
   882  04A1  0471               	iorwf	___lwmod@divisor+1,w
   883  04A2  1903               	btfsc	3,2
   884  04A3  2CCD               	goto	l1132
   885  04A4  01F5               	clrf	___lwmod@counter
   886  04A5  0AF5               	incf	___lwmod@counter,f
   887  04A6                     l1122:	
   888  04A6  1BF1               	btfsc	___lwmod@divisor+1,7
   889  04A7  2CB4               	goto	l1124
   890  04A8  3001               	movlw	1
   891  04A9                     u675:	
   892  04A9  1003               	clrc
   893  04AA  0DF0               	rlf	___lwmod@divisor,f
   894  04AB  0DF1               	rlf	___lwmod@divisor+1,f
   895  04AC  3EFF               	addlw	-1
   896  04AD  1D03               	skipz
   897  04AE  2CA9               	goto	u675
   898  04AF  3001               	movlw	1
   899  04B0  00F4               	movwf	??___lwmod
   900  04B1  0874               	movf	??___lwmod,w
   901  04B2  07F5               	addwf	___lwmod@counter,f
   902  04B3  2CA6               	goto	l1122
   903  04B4                     l1124:	
   904  04B4  0871               	movf	___lwmod@divisor+1,w
   905  04B5  0273               	subwf	___lwmod@dividend+1,w
   906  04B6  1D03               	skipz
   907  04B7  2CBA               	goto	u695
   908  04B8  0870               	movf	___lwmod@divisor,w
   909  04B9  0272               	subwf	___lwmod@dividend,w
   910  04BA                     u695:	
   911  04BA  1C03               	skipc
   912  04BB  2CC2               	goto	l1128
   913  04BC  0870               	movf	___lwmod@divisor,w
   914  04BD  02F2               	subwf	___lwmod@dividend,f
   915  04BE  0871               	movf	___lwmod@divisor+1,w
   916  04BF  1C03               	skipc
   917  04C0  03F3               	decf	___lwmod@dividend+1,f
   918  04C1  02F3               	subwf	___lwmod@dividend+1,f
   919  04C2                     l1128:	
   920  04C2  3001               	movlw	1
   921  04C3                     u705:	
   922  04C3  1003               	clrc
   923  04C4  0CF1               	rrf	___lwmod@divisor+1,f
   924  04C5  0CF0               	rrf	___lwmod@divisor,f
   925  04C6  3EFF               	addlw	-1
   926  04C7  1D03               	skipz
   927  04C8  2CC3               	goto	u705
   928  04C9  3001               	movlw	1
   929  04CA  02F5               	subwf	___lwmod@counter,f
   930  04CB  1D03               	btfss	3,2
   931  04CC  2CB4               	goto	l1124
   932  04CD                     l1132:	
   933  04CD  0873               	movf	___lwmod@dividend+1,w
   934  04CE  00F1               	movwf	?___lwmod+1
   935  04CF  0872               	movf	___lwmod@dividend,w
   936  04D0  00F0               	movwf	?___lwmod
   937  04D1  0008               	return
   938  04D2                     __end_of___lwmod:	
   939                           
   940                           	psect	text3
   941  050D                     __ptext3:	
   942 ;; *************** function ___lwdiv *****************
   943 ;; Defined at:
   944 ;;		line 5 in file "D:\Mplab X\xc8\pic\sources\c90\common\lwdiv.c"
   945 ;; Parameters:    Size  Location     Type
   946 ;;  divisor         2    6[COMMON] unsigned int 
   947 ;;  dividend        2    8[COMMON] unsigned int 
   948 ;; Auto vars:     Size  Location     Type
   949 ;;  quotient        2   11[COMMON] unsigned int 
   950 ;;  counter         1   13[COMMON] unsigned char 
   951 ;; Return value:  Size  Location     Type
   952 ;;                  2    6[COMMON] unsigned int 
   953 ;; Registers used:
   954 ;;		wreg, status,2, status,0
   955 ;; Tracked objects:
   956 ;;		On entry : 0/0
   957 ;;		On exit  : 0/0
   958 ;;		Unchanged: 0/0
   959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   960 ;;      Params:         4       0       0       0       0
   961 ;;      Locals:         3       0       0       0       0
   962 ;;      Temps:          1       0       0       0       0
   963 ;;      Totals:         8       0       0       0       0
   964 ;;Total ram usage:        8 bytes
   965 ;; Hardware stack levels used:    1
   966 ;; This function calls:
   967 ;;		Nothing
   968 ;; This function is called by:
   969 ;;		_UART_Send
   970 ;; This function uses a non-reentrant model
   971 ;;
   972                           
   973                           
   974                           ;psect for function ___lwdiv
   975  050D                     ___lwdiv:	
   976                           
   977                           ;incstack = 0
   978                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
   979  050D  01FB               	clrf	___lwdiv@quotient
   980  050E  01FC               	clrf	___lwdiv@quotient+1
   981  050F  0876               	movf	___lwdiv@divisor,w
   982  0510  0477               	iorwf	___lwdiv@divisor+1,w
   983  0511  1903               	btfsc	3,2
   984  0512  2D44               	goto	l1110
   985  0513  01FD               	clrf	___lwdiv@counter
   986  0514  0AFD               	incf	___lwdiv@counter,f
   987  0515                     l1098:	
   988  0515  1BF7               	btfsc	___lwdiv@divisor+1,7
   989  0516  2D23               	goto	l1100
   990  0517  3001               	movlw	1
   991  0518                     u605:	
   992  0518  1003               	clrc
   993  0519  0DF6               	rlf	___lwdiv@divisor,f
   994  051A  0DF7               	rlf	___lwdiv@divisor+1,f
   995  051B  3EFF               	addlw	-1
   996  051C  1D03               	skipz
   997  051D  2D18               	goto	u605
   998  051E  3001               	movlw	1
   999  051F  00FA               	movwf	??___lwdiv
  1000  0520  087A               	movf	??___lwdiv,w
  1001  0521  07FD               	addwf	___lwdiv@counter,f
  1002  0522  2D15               	goto	l1098
  1003  0523                     l1100:	
  1004  0523  3001               	movlw	1
  1005  0524                     u625:	
  1006  0524  1003               	clrc
  1007  0525  0DFB               	rlf	___lwdiv@quotient,f
  1008  0526  0DFC               	rlf	___lwdiv@quotient+1,f
  1009  0527  3EFF               	addlw	-1
  1010  0528  1D03               	skipz
  1011  0529  2D24               	goto	u625
  1012  052A  0877               	movf	___lwdiv@divisor+1,w
  1013  052B  0279               	subwf	___lwdiv@dividend+1,w
  1014  052C  1D03               	skipz
  1015  052D  2D30               	goto	u635
  1016  052E  0876               	movf	___lwdiv@divisor,w
  1017  052F  0278               	subwf	___lwdiv@dividend,w
  1018  0530                     u635:	
  1019  0530  1C03               	skipc
  1020  0531  2D39               	goto	l1106
  1021  0532  0876               	movf	___lwdiv@divisor,w
  1022  0533  02F8               	subwf	___lwdiv@dividend,f
  1023  0534  0877               	movf	___lwdiv@divisor+1,w
  1024  0535  1C03               	skipc
  1025  0536  03F9               	decf	___lwdiv@dividend+1,f
  1026  0537  02F9               	subwf	___lwdiv@dividend+1,f
  1027  0538  147B               	bsf	___lwdiv@quotient,0
  1028  0539                     l1106:	
  1029  0539  3001               	movlw	1
  1030  053A                     u645:	
  1031  053A  1003               	clrc
  1032  053B  0CF7               	rrf	___lwdiv@divisor+1,f
  1033  053C  0CF6               	rrf	___lwdiv@divisor,f
  1034  053D  3EFF               	addlw	-1
  1035  053E  1D03               	skipz
  1036  053F  2D3A               	goto	u645
  1037  0540  3001               	movlw	1
  1038  0541  02FD               	subwf	___lwdiv@counter,f
  1039  0542  1D03               	btfss	3,2
  1040  0543  2D23               	goto	l1100
  1041  0544                     l1110:	
  1042  0544  087C               	movf	___lwdiv@quotient+1,w
  1043  0545  00F7               	movwf	?___lwdiv+1
  1044  0546  087B               	movf	___lwdiv@quotient,w
  1045  0547  00F6               	movwf	?___lwdiv
  1046  0548  0008               	return
  1047  0549                     __end_of___lwdiv:	
  1048                           
  1049                           	psect	text4
  1050  047E                     __ptext4:	
  1051 ;; *************** function _UART_Write *****************
  1052 ;; Defined at:
  1053 ;;		line 51 in file "USART.c"
  1054 ;; Parameters:    Size  Location     Type
  1055 ;;  data            1    wreg     unsigned char 
  1056 ;; Auto vars:     Size  Location     Type
  1057 ;;  data            1    0[COMMON] unsigned char 
  1058 ;; Return value:  Size  Location     Type
  1059 ;;                  1    wreg      void 
  1060 ;; Registers used:
  1061 ;;		wreg
  1062 ;; Tracked objects:
  1063 ;;		On entry : 0/0
  1064 ;;		On exit  : 0/0
  1065 ;;		Unchanged: 0/0
  1066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1067 ;;      Params:         0       0       0       0       0
  1068 ;;      Locals:         1       0       0       0       0
  1069 ;;      Temps:          0       0       0       0       0
  1070 ;;      Totals:         1       0       0       0       0
  1071 ;;Total ram usage:        1 bytes
  1072 ;; Hardware stack levels used:    1
  1073 ;; This function calls:
  1074 ;;		Nothing
  1075 ;; This function is called by:
  1076 ;;		_UART_Send
  1077 ;;		_UART_Write_Text
  1078 ;; This function uses a non-reentrant model
  1079 ;;
  1080                           
  1081                           
  1082                           ;psect for function _UART_Write
  1083  047E                     _UART_Write:	
  1084                           
  1085                           ;incstack = 0
  1086                           ; Regs used in _UART_Write: [wreg]
  1087                           ;UART_Write@data stored from wreg
  1088  047E  00F0               	movwf	UART_Write@data
  1089  047F                     l116:	
  1090                           ;USART.c: 51: void UART_Write(char data);USART.c: 52: {;USART.c: 53:   while(!TRMT);
  1091                           
  1092  047F  1683               	bsf	3,5	;RP0=1, select bank1
  1093  0480  1303               	bcf	3,6	;RP1=0, select bank1
  1094  0481  1C98               	btfss	24,1	;volatile
  1095  0482  2C7F               	goto	l116
  1096                           
  1097                           ;USART.c: 54:   TXREG = data;
  1098  0483  0870               	movf	UART_Write@data,w
  1099  0484  1283               	bcf	3,5	;RP0=0, select bank0
  1100  0485  1303               	bcf	3,6	;RP1=0, select bank0
  1101  0486  0099               	movwf	25	;volatile
  1102  0487  0008               	return
  1103  0488                     __end_of_UART_Write:	
  1104                           
  1105                           	psect	text5
  1106  0620                     __ptext5:	
  1107 ;; *************** function _UART_Init *****************
  1108 ;; Defined at:
  1109 ;;		line 5 in file "USART.c"
  1110 ;; Parameters:    Size  Location     Type
  1111 ;;  baudrate        4    6[BANK0 ] const long 
  1112 ;; Auto vars:     Size  Location     Type
  1113 ;;  x               2    9[COMMON] unsigned int 
  1114 ;; Return value:  Size  Location     Type
  1115 ;;                  1    wreg      unsigned char 
  1116 ;; Registers used:
  1117 ;;		wreg, status,2, status,0, pclath, cstack
  1118 ;; Tracked objects:
  1119 ;;		On entry : 0/0
  1120 ;;		On exit  : 0/0
  1121 ;;		Unchanged: 0/0
  1122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1123 ;;      Params:         0       4       0       0       0
  1124 ;;      Locals:         2       0       0       0       0
  1125 ;;      Temps:          0      12       0       0       0
  1126 ;;      Totals:         2      16       0       0       0
  1127 ;;Total ram usage:       18 bytes
  1128 ;; Hardware stack levels used:    1
  1129 ;; Hardware stack levels required when called:    1
  1130 ;; This function calls:
  1131 ;;		___aldiv
  1132 ;; This function is called by:
  1133 ;;		_main
  1134 ;; This function uses a non-reentrant model
  1135 ;;
  1136                           
  1137                           
  1138                           ;psect for function _UART_Init
  1139  0620                     _UART_Init:	
  1140                           
  1141                           ;USART.c: 5: char UART_Init(const long int baudrate);USART.c: 6: {;USART.c: 7:  unsigned
      +                           int x;;USART.c: 8:  x = (20000000 - baudrate*64)/(baudrate*64);
  1142                           
  1143                           ;incstack = 0
  1144                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  1145  0620  1283               	bcf	3,5	;RP0=0, select bank0
  1146  0621  1303               	bcf	3,6	;RP1=0, select bank0
  1147  0622  0826               	movf	UART_Init@baudrate,w
  1148  0623  00AA               	movwf	??_UART_Init
  1149  0624  0827               	movf	UART_Init@baudrate+1,w
  1150  0625  00AB               	movwf	??_UART_Init+1
  1151  0626  0828               	movf	UART_Init@baudrate+2,w
  1152  0627  00AC               	movwf	??_UART_Init+2
  1153  0628  0829               	movf	UART_Init@baudrate+3,w
  1154  0629  00AD               	movwf	??_UART_Init+3
  1155  062A  3006               	movlw	6
  1156  062B                     u725:	
  1157  062B  1003               	clrc
  1158  062C  0DAA               	rlf	??_UART_Init,f
  1159  062D  0DAB               	rlf	??_UART_Init+1,f
  1160  062E  0DAC               	rlf	??_UART_Init+2,f
  1161  062F  0DAD               	rlf	??_UART_Init+3,f
  1162  0630  3EFF               	addlw	-1
  1163  0631  1D03               	skipz
  1164  0632  2E2B               	goto	u725
  1165  0633  082D               	movf	??_UART_Init+3,w
  1166  0634  00F3               	movwf	___aldiv@divisor+3
  1167  0635  082C               	movf	??_UART_Init+2,w
  1168  0636  00F2               	movwf	___aldiv@divisor+2
  1169  0637  082B               	movf	??_UART_Init+1,w
  1170  0638  00F1               	movwf	___aldiv@divisor+1
  1171  0639  082A               	movf	??_UART_Init,w
  1172  063A  00F0               	movwf	___aldiv@divisor
  1173  063B  0826               	movf	UART_Init@baudrate,w
  1174  063C  00AE               	movwf	??_UART_Init+4
  1175  063D  0827               	movf	UART_Init@baudrate+1,w
  1176  063E  00AF               	movwf	??_UART_Init+5
  1177  063F  0828               	movf	UART_Init@baudrate+2,w
  1178  0640  00B0               	movwf	??_UART_Init+6
  1179  0641  0829               	movf	UART_Init@baudrate+3,w
  1180  0642  00B1               	movwf	??_UART_Init+7
  1181  0643  3006               	movlw	6
  1182  0644                     u735:	
  1183  0644  1003               	clrc
  1184  0645  0DAE               	rlf	??_UART_Init+4,f
  1185  0646  0DAF               	rlf	??_UART_Init+5,f
  1186  0647  0DB0               	rlf	??_UART_Init+6,f
  1187  0648  0DB1               	rlf	??_UART_Init+7,f
  1188  0649  3EFF               	addlw	-1
  1189  064A  1D03               	skipz
  1190  064B  2E44               	goto	u735
  1191  064C  3000               	movlw	0
  1192  064D  00B2               	movwf	??_UART_Init+8
  1193  064E  302D               	movlw	45
  1194  064F  00B3               	movwf	??_UART_Init+9
  1195  0650  3031               	movlw	49
  1196  0651  00B4               	movwf	??_UART_Init+10
  1197  0652  3001               	movlw	1
  1198  0653  00B5               	movwf	??_UART_Init+11
  1199  0654  082E               	movf	??_UART_Init+4,w
  1200  0655  02B2               	subwf	??_UART_Init+8,f
  1201  0656  082F               	movf	??_UART_Init+5,w
  1202  0657  1C03               	skipc
  1203  0658  0F2F               	incfsz	??_UART_Init+5,w
  1204  0659  2E5B               	goto	u741
  1205  065A  2E5C               	goto	u742
  1206  065B                     u741:	
  1207  065B  02B3               	subwf	??_UART_Init+9,f
  1208  065C                     u742:	
  1209  065C  0830               	movf	??_UART_Init+6,w
  1210  065D  1C03               	skipc
  1211  065E  0F30               	incfsz	??_UART_Init+6,w
  1212  065F  2E61               	goto	u743
  1213  0660  2E62               	goto	u744
  1214  0661                     u743:	
  1215  0661  02B4               	subwf	??_UART_Init+10,f
  1216  0662                     u744:	
  1217  0662  0831               	movf	??_UART_Init+7,w
  1218  0663  1C03               	skipc
  1219  0664  0F31               	incfsz	??_UART_Init+7,w
  1220  0665  2E67               	goto	u745
  1221  0666  2E68               	goto	u746
  1222  0667                     u745:	
  1223  0667  02B5               	subwf	??_UART_Init+11,f
  1224  0668                     u746:	
  1225  0668  0835               	movf	??_UART_Init+11,w
  1226  0669  00F7               	movwf	___aldiv@dividend+3
  1227  066A  0834               	movf	??_UART_Init+10,w
  1228  066B  00F6               	movwf	___aldiv@dividend+2
  1229  066C  0833               	movf	??_UART_Init+9,w
  1230  066D  00F5               	movwf	___aldiv@dividend+1
  1231  066E  0832               	movf	??_UART_Init+8,w
  1232  066F  00F4               	movwf	___aldiv@dividend
  1233  0670  120A  118A  2591  120A  118A  	fcall	___aldiv
  1234  0675  0871               	movf	?___aldiv+1,w
  1235  0676  00FA               	movwf	UART_Init@x+1
  1236  0677  0870               	movf	?___aldiv,w
  1237  0678  00F9               	movwf	UART_Init@x
  1238                           
  1239                           ;USART.c: 9:  if(x>255)
  1240  0679  3001               	movlw	1
  1241  067A  027A               	subwf	UART_Init@x+1,w
  1242  067B  3000               	movlw	0
  1243  067C  1903               	skipnz
  1244  067D  0279               	subwf	UART_Init@x,w
  1245  067E  1C03               	skipc
  1246  067F  2EDC               	goto	l1146
  1247                           
  1248                           ;USART.c: 10:  {;USART.c: 11:   x = (20000000 - baudrate*16)/(baudrate*16);
  1249  0680  1283               	bcf	3,5	;RP0=0, select bank0
  1250  0681  1303               	bcf	3,6	;RP1=0, select bank0
  1251  0682  0826               	movf	UART_Init@baudrate,w
  1252  0683  00AA               	movwf	??_UART_Init
  1253  0684  0827               	movf	UART_Init@baudrate+1,w
  1254  0685  00AB               	movwf	??_UART_Init+1
  1255  0686  0828               	movf	UART_Init@baudrate+2,w
  1256  0687  00AC               	movwf	??_UART_Init+2
  1257  0688  0829               	movf	UART_Init@baudrate+3,w
  1258  0689  00AD               	movwf	??_UART_Init+3
  1259  068A  3004               	movlw	4
  1260  068B                     u765:	
  1261  068B  1003               	clrc
  1262  068C  0DAA               	rlf	??_UART_Init,f
  1263  068D  0DAB               	rlf	??_UART_Init+1,f
  1264  068E  0DAC               	rlf	??_UART_Init+2,f
  1265  068F  0DAD               	rlf	??_UART_Init+3,f
  1266  0690  3EFF               	addlw	-1
  1267  0691  1D03               	skipz
  1268  0692  2E8B               	goto	u765
  1269  0693  082D               	movf	??_UART_Init+3,w
  1270  0694  00F3               	movwf	___aldiv@divisor+3
  1271  0695  082C               	movf	??_UART_Init+2,w
  1272  0696  00F2               	movwf	___aldiv@divisor+2
  1273  0697  082B               	movf	??_UART_Init+1,w
  1274  0698  00F1               	movwf	___aldiv@divisor+1
  1275  0699  082A               	movf	??_UART_Init,w
  1276  069A  00F0               	movwf	___aldiv@divisor
  1277  069B  0826               	movf	UART_Init@baudrate,w
  1278  069C  00AE               	movwf	??_UART_Init+4
  1279  069D  0827               	movf	UART_Init@baudrate+1,w
  1280  069E  00AF               	movwf	??_UART_Init+5
  1281  069F  0828               	movf	UART_Init@baudrate+2,w
  1282  06A0  00B0               	movwf	??_UART_Init+6
  1283  06A1  0829               	movf	UART_Init@baudrate+3,w
  1284  06A2  00B1               	movwf	??_UART_Init+7
  1285  06A3  3004               	movlw	4
  1286  06A4                     u775:	
  1287  06A4  1003               	clrc
  1288  06A5  0DAE               	rlf	??_UART_Init+4,f
  1289  06A6  0DAF               	rlf	??_UART_Init+5,f
  1290  06A7  0DB0               	rlf	??_UART_Init+6,f
  1291  06A8  0DB1               	rlf	??_UART_Init+7,f
  1292  06A9  3EFF               	addlw	-1
  1293  06AA  1D03               	skipz
  1294  06AB  2EA4               	goto	u775
  1295  06AC  3000               	movlw	0
  1296  06AD  00B2               	movwf	??_UART_Init+8
  1297  06AE  302D               	movlw	45
  1298  06AF  00B3               	movwf	??_UART_Init+9
  1299  06B0  3031               	movlw	49
  1300  06B1  00B4               	movwf	??_UART_Init+10
  1301  06B2  3001               	movlw	1
  1302  06B3  00B5               	movwf	??_UART_Init+11
  1303  06B4  082E               	movf	??_UART_Init+4,w
  1304  06B5  02B2               	subwf	??_UART_Init+8,f
  1305  06B6  082F               	movf	??_UART_Init+5,w
  1306  06B7  1C03               	skipc
  1307  06B8  0F2F               	incfsz	??_UART_Init+5,w
  1308  06B9  2EBB               	goto	u781
  1309  06BA  2EBC               	goto	u782
  1310  06BB                     u781:	
  1311  06BB  02B3               	subwf	??_UART_Init+9,f
  1312  06BC                     u782:	
  1313  06BC  0830               	movf	??_UART_Init+6,w
  1314  06BD  1C03               	skipc
  1315  06BE  0F30               	incfsz	??_UART_Init+6,w
  1316  06BF  2EC1               	goto	u783
  1317  06C0  2EC2               	goto	u784
  1318  06C1                     u783:	
  1319  06C1  02B4               	subwf	??_UART_Init+10,f
  1320  06C2                     u784:	
  1321  06C2  0831               	movf	??_UART_Init+7,w
  1322  06C3  1C03               	skipc
  1323  06C4  0F31               	incfsz	??_UART_Init+7,w
  1324  06C5  2EC7               	goto	u785
  1325  06C6  2EC8               	goto	u786
  1326  06C7                     u785:	
  1327  06C7  02B5               	subwf	??_UART_Init+11,f
  1328  06C8                     u786:	
  1329  06C8  0835               	movf	??_UART_Init+11,w
  1330  06C9  00F7               	movwf	___aldiv@dividend+3
  1331  06CA  0834               	movf	??_UART_Init+10,w
  1332  06CB  00F6               	movwf	___aldiv@dividend+2
  1333  06CC  0833               	movf	??_UART_Init+9,w
  1334  06CD  00F5               	movwf	___aldiv@dividend+1
  1335  06CE  0832               	movf	??_UART_Init+8,w
  1336  06CF  00F4               	movwf	___aldiv@dividend
  1337  06D0  120A  118A  2591  120A  118A  	fcall	___aldiv
  1338  06D5  0871               	movf	?___aldiv+1,w
  1339  06D6  00FA               	movwf	UART_Init@x+1
  1340  06D7  0870               	movf	?___aldiv,w
  1341  06D8  00F9               	movwf	UART_Init@x
  1342                           
  1343                           ;USART.c: 12:   BRGH = 1;
  1344  06D9  1683               	bsf	3,5	;RP0=1, select bank1
  1345  06DA  1303               	bcf	3,6	;RP1=0, select bank1
  1346  06DB  1518               	bsf	24,2	;volatile
  1347  06DC                     l1146:	
  1348                           
  1349                           ;USART.c: 14:  if(x<256)
  1350  06DC  3001               	movlw	1
  1351  06DD  027A               	subwf	UART_Init@x+1,w
  1352  06DE  3000               	movlw	0
  1353  06DF  1903               	skipnz
  1354  06E0  0279               	subwf	UART_Init@x,w
  1355  06E1  1803               	skipnc
  1356  06E2  0008               	return
  1357                           
  1358                           ;USART.c: 15:  {;USART.c: 16:    SPBRG = x;
  1359  06E3  0879               	movf	UART_Init@x,w
  1360  06E4  1683               	bsf	3,5	;RP0=1, select bank1
  1361  06E5  1303               	bcf	3,6	;RP1=0, select bank1
  1362  06E6  0099               	movwf	25	;volatile
  1363                           
  1364                           ;USART.c: 17:    SYNC = 0;
  1365  06E7  1218               	bcf	24,4	;volatile
  1366                           
  1367                           ;USART.c: 18:    SPEN = 1;
  1368  06E8  1283               	bcf	3,5	;RP0=0, select bank0
  1369  06E9  1303               	bcf	3,6	;RP1=0, select bank0
  1370  06EA  1798               	bsf	24,7	;volatile
  1371                           
  1372                           ;USART.c: 19:       TRISC7 = 1;
  1373  06EB  1683               	bsf	3,5	;RP0=1, select bank1
  1374  06EC  1303               	bcf	3,6	;RP1=0, select bank1
  1375  06ED  1787               	bsf	7,7	;volatile
  1376                           
  1377                           ;USART.c: 20:       TRISC6 = 0;
  1378  06EE  1307               	bcf	7,6	;volatile
  1379                           
  1380                           ;USART.c: 21:       CREN = 1;
  1381  06EF  1283               	bcf	3,5	;RP0=0, select bank0
  1382  06F0  1303               	bcf	3,6	;RP1=0, select bank0
  1383  06F1  1618               	bsf	24,4	;volatile
  1384                           
  1385                           ;USART.c: 22:       TXEN = 1;
  1386  06F2  1683               	bsf	3,5	;RP0=1, select bank1
  1387  06F3  1303               	bcf	3,6	;RP1=0, select bank1
  1388  06F4  1698               	bsf	24,5	;volatile
  1389  06F5  0008               	return
  1390  06F6                     __end_of_UART_Init:	
  1391                           
  1392                           	psect	text6
  1393  0591                     __ptext6:	
  1394 ;; *************** function ___aldiv *****************
  1395 ;; Defined at:
  1396 ;;		line 5 in file "D:\Mplab X\xc8\pic\sources\c90\common\aldiv.c"
  1397 ;; Parameters:    Size  Location     Type
  1398 ;;  divisor         4    0[COMMON] long 
  1399 ;;  dividend        4    4[COMMON] long 
  1400 ;; Auto vars:     Size  Location     Type
  1401 ;;  quotient        4    2[BANK0 ] long 
  1402 ;;  sign            1    1[BANK0 ] unsigned char 
  1403 ;;  counter         1    0[BANK0 ] unsigned char 
  1404 ;; Return value:  Size  Location     Type
  1405 ;;                  4    0[COMMON] long 
  1406 ;; Registers used:
  1407 ;;		wreg, status,2, status,0
  1408 ;; Tracked objects:
  1409 ;;		On entry : 0/0
  1410 ;;		On exit  : 0/0
  1411 ;;		Unchanged: 0/0
  1412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1413 ;;      Params:         8       0       0       0       0
  1414 ;;      Locals:         0       6       0       0       0
  1415 ;;      Temps:          1       0       0       0       0
  1416 ;;      Totals:         9       6       0       0       0
  1417 ;;Total ram usage:       15 bytes
  1418 ;; Hardware stack levels used:    1
  1419 ;; This function calls:
  1420 ;;		Nothing
  1421 ;; This function is called by:
  1422 ;;		_UART_Init
  1423 ;; This function uses a non-reentrant model
  1424 ;;
  1425                           
  1426                           
  1427                           ;psect for function ___aldiv
  1428  0591                     ___aldiv:	
  1429                           
  1430                           ;incstack = 0
  1431                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1432  0591  1283               	bcf	3,5	;RP0=0, select bank0
  1433  0592  1303               	bcf	3,6	;RP1=0, select bank0
  1434  0593  01A1               	clrf	___aldiv@sign
  1435  0594  1FF3               	btfss	___aldiv@divisor+3,7
  1436  0595  2DA3               	goto	l331
  1437  0596  09F0               	comf	___aldiv@divisor,f
  1438  0597  09F1               	comf	___aldiv@divisor+1,f
  1439  0598  09F2               	comf	___aldiv@divisor+2,f
  1440  0599  09F3               	comf	___aldiv@divisor+3,f
  1441  059A  0AF0               	incf	___aldiv@divisor,f
  1442  059B  1903               	skipnz
  1443  059C  0AF1               	incf	___aldiv@divisor+1,f
  1444  059D  1903               	skipnz
  1445  059E  0AF2               	incf	___aldiv@divisor+2,f
  1446  059F  1903               	skipnz
  1447  05A0  0AF3               	incf	___aldiv@divisor+3,f
  1448  05A1  01A1               	clrf	___aldiv@sign
  1449  05A2  0AA1               	incf	___aldiv@sign,f
  1450  05A3                     l331:	
  1451  05A3  1FF7               	btfss	___aldiv@dividend+3,7
  1452  05A4  2DB4               	goto	l1058
  1453  05A5  09F4               	comf	___aldiv@dividend,f
  1454  05A6  09F5               	comf	___aldiv@dividend+1,f
  1455  05A7  09F6               	comf	___aldiv@dividend+2,f
  1456  05A8  09F7               	comf	___aldiv@dividend+3,f
  1457  05A9  0AF4               	incf	___aldiv@dividend,f
  1458  05AA  1903               	skipnz
  1459  05AB  0AF5               	incf	___aldiv@dividend+1,f
  1460  05AC  1903               	skipnz
  1461  05AD  0AF6               	incf	___aldiv@dividend+2,f
  1462  05AE  1903               	skipnz
  1463  05AF  0AF7               	incf	___aldiv@dividend+3,f
  1464  05B0  3001               	movlw	1
  1465  05B1  00F8               	movwf	??___aldiv
  1466  05B2  0878               	movf	??___aldiv,w
  1467  05B3  06A1               	xorwf	___aldiv@sign,f
  1468  05B4                     l1058:	
  1469  05B4  3000               	movlw	0
  1470  05B5  00A5               	movwf	___aldiv@quotient+3
  1471  05B6  3000               	movlw	0
  1472  05B7  00A4               	movwf	___aldiv@quotient+2
  1473  05B8  3000               	movlw	0
  1474  05B9  00A3               	movwf	___aldiv@quotient+1
  1475  05BA  3000               	movlw	0
  1476  05BB  00A2               	movwf	___aldiv@quotient
  1477  05BC  0873               	movf	___aldiv@divisor+3,w
  1478  05BD  0472               	iorwf	___aldiv@divisor+2,w
  1479  05BE  0471               	iorwf	___aldiv@divisor+1,w
  1480  05BF  0470               	iorwf	___aldiv@divisor,w
  1481  05C0  1903               	skipnz
  1482  05C1  2E09               	goto	l1080
  1483  05C2  01A0               	clrf	___aldiv@counter
  1484  05C3  0AA0               	incf	___aldiv@counter,f
  1485  05C4                     l1066:	
  1486  05C4  1BF3               	btfsc	___aldiv@divisor+3,7
  1487  05C5  2DD4               	goto	l1068
  1488  05C6  3001               	movlw	1
  1489  05C7  00F8               	movwf	??___aldiv
  1490  05C8                     u525:	
  1491  05C8  1003               	clrc
  1492  05C9  0DF0               	rlf	___aldiv@divisor,f
  1493  05CA  0DF1               	rlf	___aldiv@divisor+1,f
  1494  05CB  0DF2               	rlf	___aldiv@divisor+2,f
  1495  05CC  0DF3               	rlf	___aldiv@divisor+3,f
  1496  05CD  0BF8               	decfsz	??___aldiv,f
  1497  05CE  2DC8               	goto	u525
  1498  05CF  3001               	movlw	1
  1499  05D0  00F8               	movwf	??___aldiv
  1500  05D1  0878               	movf	??___aldiv,w
  1501  05D2  07A0               	addwf	___aldiv@counter,f
  1502  05D3  2DC4               	goto	l1066
  1503  05D4                     l1068:	
  1504  05D4  3001               	movlw	1
  1505  05D5  00F8               	movwf	??___aldiv
  1506  05D6                     u545:	
  1507  05D6  1003               	clrc
  1508  05D7  0DA2               	rlf	___aldiv@quotient,f
  1509  05D8  0DA3               	rlf	___aldiv@quotient+1,f
  1510  05D9  0DA4               	rlf	___aldiv@quotient+2,f
  1511  05DA  0DA5               	rlf	___aldiv@quotient+3,f
  1512  05DB  0BF8               	decfsz	??___aldiv,f
  1513  05DC  2DD6               	goto	u545
  1514  05DD  0873               	movf	___aldiv@divisor+3,w
  1515  05DE  0277               	subwf	___aldiv@dividend+3,w
  1516  05DF  1D03               	skipz
  1517  05E0  2DEB               	goto	u555
  1518  05E1  0872               	movf	___aldiv@divisor+2,w
  1519  05E2  0276               	subwf	___aldiv@dividend+2,w
  1520  05E3  1D03               	skipz
  1521  05E4  2DEB               	goto	u555
  1522  05E5  0871               	movf	___aldiv@divisor+1,w
  1523  05E6  0275               	subwf	___aldiv@dividend+1,w
  1524  05E7  1D03               	skipz
  1525  05E8  2DEB               	goto	u555
  1526  05E9  0870               	movf	___aldiv@divisor,w
  1527  05EA  0274               	subwf	___aldiv@dividend,w
  1528  05EB                     u555:	
  1529  05EB  1C03               	skipc
  1530  05EC  2DFC               	goto	l1076
  1531  05ED  0870               	movf	___aldiv@divisor,w
  1532  05EE  02F4               	subwf	___aldiv@dividend,f
  1533  05EF  0871               	movf	___aldiv@divisor+1,w
  1534  05F0  1C03               	skipc
  1535  05F1  0F71               	incfsz	___aldiv@divisor+1,w
  1536  05F2  02F5               	subwf	___aldiv@dividend+1,f
  1537  05F3  0872               	movf	___aldiv@divisor+2,w
  1538  05F4  1C03               	skipc
  1539  05F5  0F72               	incfsz	___aldiv@divisor+2,w
  1540  05F6  02F6               	subwf	___aldiv@dividend+2,f
  1541  05F7  0873               	movf	___aldiv@divisor+3,w
  1542  05F8  1C03               	skipc
  1543  05F9  0F73               	incfsz	___aldiv@divisor+3,w
  1544  05FA  02F7               	subwf	___aldiv@dividend+3,f
  1545  05FB  1422               	bsf	___aldiv@quotient,0
  1546  05FC                     l1076:	
  1547  05FC  3001               	movlw	1
  1548  05FD                     u565:	
  1549  05FD  1003               	clrc
  1550  05FE  0CF3               	rrf	___aldiv@divisor+3,f
  1551  05FF  0CF2               	rrf	___aldiv@divisor+2,f
  1552  0600  0CF1               	rrf	___aldiv@divisor+1,f
  1553  0601  0CF0               	rrf	___aldiv@divisor,f
  1554  0602  3EFF               	addlw	-1
  1555  0603  1D03               	skipz
  1556  0604  2DFD               	goto	u565
  1557  0605  3001               	movlw	1
  1558  0606  02A0               	subwf	___aldiv@counter,f
  1559  0607  1D03               	btfss	3,2
  1560  0608  2DD4               	goto	l1068
  1561  0609                     l1080:	
  1562  0609  0821               	movf	___aldiv@sign,w
  1563  060A  1903               	btfsc	3,2
  1564  060B  2E17               	goto	l1084
  1565  060C  09A2               	comf	___aldiv@quotient,f
  1566  060D  09A3               	comf	___aldiv@quotient+1,f
  1567  060E  09A4               	comf	___aldiv@quotient+2,f
  1568  060F  09A5               	comf	___aldiv@quotient+3,f
  1569  0610  0AA2               	incf	___aldiv@quotient,f
  1570  0611  1903               	skipnz
  1571  0612  0AA3               	incf	___aldiv@quotient+1,f
  1572  0613  1903               	skipnz
  1573  0614  0AA4               	incf	___aldiv@quotient+2,f
  1574  0615  1903               	skipnz
  1575  0616  0AA5               	incf	___aldiv@quotient+3,f
  1576  0617                     l1084:	
  1577  0617  0825               	movf	___aldiv@quotient+3,w
  1578  0618  00F3               	movwf	?___aldiv+3
  1579  0619  0824               	movf	___aldiv@quotient+2,w
  1580  061A  00F2               	movwf	?___aldiv+2
  1581  061B  0823               	movf	___aldiv@quotient+1,w
  1582  061C  00F1               	movwf	?___aldiv+1
  1583  061D  0822               	movf	___aldiv@quotient,w
  1584  061E  00F0               	movwf	?___aldiv
  1585  061F  0008               	return
  1586  0620                     __end_of___aldiv:	
  1587                           
  1588                           	psect	text7
  1589  04D2                     __ptext7:	
  1590 ;; *************** function _Read_ADC *****************
  1591 ;; Defined at:
  1592 ;;		line 58 in file "UART_send.c"
  1593 ;; Parameters:    Size  Location     Type
  1594 ;;  channel         1    wreg     unsigned char 
  1595 ;; Auto vars:     Size  Location     Type
  1596 ;;  channel         1    8[COMMON] unsigned char 
  1597 ;;  N               2    6[COMMON] unsigned int 
  1598 ;; Return value:  Size  Location     Type
  1599 ;;                  2    0[COMMON] unsigned int 
  1600 ;; Registers used:
  1601 ;;		wreg, status,2, status,0
  1602 ;; Tracked objects:
  1603 ;;		On entry : 0/0
  1604 ;;		On exit  : 0/0
  1605 ;;		Unchanged: 0/0
  1606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1607 ;;      Params:         2       0       0       0       0
  1608 ;;      Locals:         3       0       0       0       0
  1609 ;;      Temps:          4       0       0       0       0
  1610 ;;      Totals:         9       0       0       0       0
  1611 ;;Total ram usage:        9 bytes
  1612 ;; Hardware stack levels used:    1
  1613 ;; This function calls:
  1614 ;;		Nothing
  1615 ;; This function is called by:
  1616 ;;		_main
  1617 ;; This function uses a non-reentrant model
  1618 ;;
  1619                           
  1620                           
  1621                           ;psect for function _Read_ADC
  1622  04D2                     _Read_ADC:	
  1623                           
  1624                           ;incstack = 0
  1625                           ; Regs used in _Read_ADC: [wreg+status,2+status,0]
  1626                           ;Read_ADC@channel stored from wreg
  1627  04D2  00F8               	movwf	Read_ADC@channel
  1628                           
  1629                           ;UART_send.c: 58: unsigned int Read_ADC(unsigned char channel);UART_send.c: 59: {;UART_s
      +                          end.c: 60:     unsigned int N;;UART_send.c: 61:     ADCON0 &= 0x11000101;
  1630  04D3  3001               	movlw	1
  1631  04D4  00F2               	movwf	??_Read_ADC
  1632  04D5  0872               	movf	??_Read_ADC,w
  1633  04D6  1283               	bcf	3,5	;RP0=0, select bank0
  1634  04D7  1303               	bcf	3,6	;RP1=0, select bank0
  1635  04D8  059F               	andwf	31,f	;volatile
  1636                           
  1637                           ;UART_send.c: 62:     ADCON0 |= channel << 3;
  1638  04D9  0878               	movf	Read_ADC@channel,w	;volatile
  1639  04DA  00F2               	movwf	??_Read_ADC
  1640  04DB  3002               	movlw	2
  1641  04DC                     u805:	
  1642  04DC  1003               	clrc
  1643  04DD  0DF2               	rlf	??_Read_ADC,f
  1644  04DE  3EFF               	addlw	-1
  1645  04DF  1D03               	skipz
  1646  04E0  2CDC               	goto	u805
  1647  04E1  1003               	clrc
  1648  04E2  0D72               	rlf	??_Read_ADC,w
  1649  04E3  00F3               	movwf	??_Read_ADC+1
  1650  04E4  0873               	movf	??_Read_ADC+1,w
  1651  04E5  049F               	iorwf	31,f	;volatile
  1652                           
  1653                           ;UART_send.c: 63:     _delay((unsigned long)((2)*(20000000/4000.0)));
  1654  04E6  300D               	movlw	13
  1655  04E7  00F3               	movwf	??_Read_ADC+1
  1656  04E8  30FB               	movlw	251
  1657  04E9  00F2               	movwf	??_Read_ADC
  1658  04EA                     u867:	
  1659  04EA  0BF2               	decfsz	??_Read_ADC,f
  1660  04EB  2CEA               	goto	u867
  1661  04EC  0BF3               	decfsz	??_Read_ADC+1,f
  1662  04ED  2CEA               	goto	u867
  1663  04EE  2CEF               	nop2
  1664                           
  1665                           ;UART_send.c: 64:     GO_nDONE = 1;
  1666  04EF  1283               	bcf	3,5	;RP0=0, select bank0
  1667  04F0  1303               	bcf	3,6	;RP1=0, select bank0
  1668  04F1  151F               	bsf	31,2	;volatile
  1669  04F2                     l60:	
  1670                           ;UART_send.c: 65:     while(GO_nDONE);
  1671                           
  1672  04F2  191F               	btfsc	31,2	;volatile
  1673  04F3  2CF2               	goto	l60
  1674                           
  1675                           ;UART_send.c: 66:     N = ADRESH;
  1676  04F4  081E               	movf	30,w	;volatile
  1677  04F5  00F2               	movwf	??_Read_ADC
  1678  04F6  01F3               	clrf	??_Read_ADC+1
  1679  04F7  0872               	movf	??_Read_ADC,w
  1680  04F8  00F6               	movwf	Read_ADC@N
  1681  04F9  0873               	movf	??_Read_ADC+1,w
  1682  04FA  00F7               	movwf	Read_ADC@N+1
  1683                           
  1684                           ;UART_send.c: 67:     return ((N<<8)+ADRESL);
  1685  04FB  0876               	movf	Read_ADC@N,w
  1686  04FC  00F3               	movwf	??_Read_ADC+1
  1687  04FD  01F2               	clrf	??_Read_ADC
  1688  04FE  1683               	bsf	3,5	;RP0=1, select bank1
  1689  04FF  1303               	bcf	3,6	;RP1=0, select bank1
  1690  0500  081E               	movf	30,w	;volatile
  1691  0501  0772               	addwf	??_Read_ADC,w
  1692  0502  00F4               	movwf	??_Read_ADC+2
  1693  0503  3000               	movlw	0
  1694  0504  1803               	skipnc
  1695  0505  3001               	movlw	1
  1696  0506  0773               	addwf	??_Read_ADC+1,w
  1697  0507  00F5               	movwf	??_Read_ADC+3
  1698  0508  0874               	movf	??_Read_ADC+2,w
  1699  0509  00F0               	movwf	?_Read_ADC
  1700  050A  0875               	movf	??_Read_ADC+3,w
  1701  050B  00F1               	movwf	?_Read_ADC+1
  1702  050C  0008               	return
  1703  050D                     __end_of_Read_ADC:	
  1704                           
  1705                           	psect	text8
  1706  0488                     __ptext8:	
  1707 ;; *************** function _ADC_Init *****************
  1708 ;; Defined at:
  1709 ;;		line 39 in file "UART_send.c"
  1710 ;; Parameters:    Size  Location     Type
  1711 ;;		None
  1712 ;; Auto vars:     Size  Location     Type
  1713 ;;		None
  1714 ;; Return value:  Size  Location     Type
  1715 ;;                  1    wreg      void 
  1716 ;; Registers used:
  1717 ;;		None
  1718 ;; Tracked objects:
  1719 ;;		On entry : 0/0
  1720 ;;		On exit  : 0/0
  1721 ;;		Unchanged: 0/0
  1722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1723 ;;      Params:         0       0       0       0       0
  1724 ;;      Locals:         0       0       0       0       0
  1725 ;;      Temps:          0       0       0       0       0
  1726 ;;      Totals:         0       0       0       0       0
  1727 ;;Total ram usage:        0 bytes
  1728 ;; Hardware stack levels used:    1
  1729 ;; This function calls:
  1730 ;;		Nothing
  1731 ;; This function is called by:
  1732 ;;		_main
  1733 ;; This function uses a non-reentrant model
  1734 ;;
  1735                           
  1736                           
  1737                           ;psect for function _ADC_Init
  1738  0488                     _ADC_Init:	
  1739                           
  1740                           ;UART_send.c: 42:     PCFG0 = 0;
  1741                           
  1742                           ;incstack = 0
  1743                           ; Regs used in _ADC_Init: []
  1744  0488  1683               	bsf	3,5	;RP0=1, select bank1
  1745  0489  1303               	bcf	3,6	;RP1=0, select bank1
  1746  048A  101F               	bcf	31,0	;volatile
  1747                           
  1748                           ;UART_send.c: 43:     PCFG1 = 0;
  1749  048B  109F               	bcf	31,1	;volatile
  1750                           
  1751                           ;UART_send.c: 44:     PCFG2 = 0;
  1752  048C  111F               	bcf	31,2	;volatile
  1753                           
  1754                           ;UART_send.c: 45:     PCFG3 = 0;
  1755  048D  119F               	bcf	31,3	;volatile
  1756                           
  1757                           ;UART_send.c: 47:     ADCS0 = 1;
  1758  048E  1283               	bcf	3,5	;RP0=0, select bank0
  1759  048F  1303               	bcf	3,6	;RP1=0, select bank0
  1760  0490  171F               	bsf	31,6	;volatile
  1761                           
  1762                           ;UART_send.c: 48:     ADCS1 = 0;
  1763  0491  139F               	bcf	31,7	;volatile
  1764                           
  1765                           ;UART_send.c: 49:     ADCS2 = 1;
  1766  0492  1683               	bsf	3,5	;RP0=1, select bank1
  1767  0493  1303               	bcf	3,6	;RP1=0, select bank1
  1768  0494  171F               	bsf	31,6	;volatile
  1769                           
  1770                           ;UART_send.c: 51:     ADFM = 1;
  1771  0495  179F               	bsf	31,7	;volatile
  1772                           
  1773                           ;UART_send.c: 53:     ADON = 1;
  1774  0496  1283               	bcf	3,5	;RP0=0, select bank0
  1775  0497  1303               	bcf	3,6	;RP1=0, select bank0
  1776  0498  141F               	bsf	31,0	;volatile
  1777                           
  1778                           ;UART_send.c: 55:     ADIE = 0;
  1779  0499  1683               	bsf	3,5	;RP0=1, select bank1
  1780  049A  1303               	bcf	3,6	;RP1=0, select bank1
  1781  049B  130C               	bcf	12,6	;volatile
  1782                           
  1783                           ;UART_send.c: 56:     ADIF = 0;
  1784  049C  1283               	bcf	3,5	;RP0=0, select bank0
  1785  049D  1303               	bcf	3,6	;RP1=0, select bank0
  1786  049E  130C               	bcf	12,6	;volatile
  1787  049F  0008               	return
  1788  04A0                     __end_of_ADC_Init:	
  1789  007E                     btemp	set	126	;btemp
  1790  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     27      27
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _UART_Send->___lwdiv
    ___lwdiv->___lwmod
    _UART_Init->___aldiv

Critical Paths under _main in BANK0

    _main->_UART_Init
    _UART_Init->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    3422
                                             22 BANK0      5     5      0
                           _ADC_Init
                           _Read_ADC
                          _UART_Init
                          _UART_Send
 ---------------------------------------------------------------------------------
 (1) _UART_Send                                            7     3      4    2495
                                              0 BANK0      7     3      4
                         _UART_Write
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4    1071
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4    1074
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _UART_Write                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           18    14      4     836
                                              9 COMMON     2     2      0
                                              6 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     604
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _Read_ADC                                             9     7      2      45
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _Read_ADC
   _UART_Init
     ___aldiv
   _UART_Send
     _UART_Write
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1B      1B       5       33.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Apr 30 00:11:51 2019

            __CFG_CP$OFF 0000                       l60 04F2                      l116 047F  
                    l331 05A3                      _RD0 0040                      _RD1 0041  
                    _RD2 0042                      _RD3 0043                      _RD4 0044  
                    _RD5 0045             __CFG_CPD$OFF 0000                      u525 05C8  
                    u605 0518                      u545 05D6                      u625 0524  
                    u705 04C3                      u555 05EB                      u635 0530  
                    u805 04DC                      u565 05FD                      u741 065B  
                    u725 062B                      u645 053A                      u742 065C  
                    u743 0661                      u735 0644                      u744 0662  
                    u745 0667                      u746 0668                      u675 04A9  
                    u781 06BB                      u765 068B                      u837 0700  
                    u782 06BC                      u783 06C1                      u775 06A4  
                    u695 04BA                      u847 0779                      u784 06C2  
                    u785 06C7                      u857 07F5                      u786 06C8  
                    u867 04EA             __CFG_FOSC$HS 0000             __CFG_LVP$OFF 0000  
                   l1100 0523                     l1110 0544                     l1200 056B  
                   l1106 0539                     l1122 04A6                     l1124 04B4  
                   l1132 04CD                     l1080 0609                     l1128 04C2  
                   l1066 05C4                     l1058 05B4                     l1146 06DC  
                   l1084 0617                     l1076 05FC                     l1068 05D4  
                   l1098 0515                     _ADIE 0466                     _ADIF 0066  
                   _ADFM 04FF                     _ADON 00F8                     _BRGH 04C2  
                   _CREN 00C4                     _RCIF 0065                     _SPEN 00C7  
                   _TRMT 04C1                     _TXEN 04C5                     _SYNC 04C4  
           __CFG_WRT$OFF 0000                     _main 0549                     btemp 007E  
       __end_of_ADC_Init 04A0                     start 0000          __end_of___aldiv 0620  
                  _ADCS0 00FE                    _ADCS1 00FF                    _ADCS2 04FE  
                  ?_main 0070            __CFG_WDTE$OFF 0000                    _PCFG0 04F8  
                  _PCFG1 04F9                    _PCFG2 04FA                    _PCFG3 04FB  
        __end_of___lwdiv 0549          __end_of___lwmod 04D2                    _RCREG 001A  
                  _SPBRG 0099                    _PORTB 0006                    _TRISB 0086  
                  _TXREG 0019              ?_UART_Write 0070       __size_of_UART_Init 00D6  
     __size_of_UART_Send 0106                    main@a 0037                    main@b 0039  
         __CFG_BOREN$OFF 0000                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 0591         __end_of_Read_ADC 050D  
                 ??_main 0036                   _ADCON0 001F                   _ADRESH 001E  
                 _ADRESL 009E                   _TRISC6 043E                   _TRISC7 043F  
         __CFG_PWRTE$OFF 0000        __end_of_UART_Init 06F6        __end_of_UART_Send 07FC  
        Read_ADC@channel 0078      __size_of_UART_Write 000A                ??___aldiv 0078  
              ??___lwdiv 007A                ??___lwmod 0074                ?_ADC_Init 0070  
__end_of__initialization 07FC           __pcstackCOMMON 0070               ??_ADC_Init 0070  
              ?_Read_ADC 0070               __pmaintext 0549             ??_UART_Write 0070  
             ??_Read_ADC 0072                  ___aldiv 0591       __end_of_UART_Write 0488  
                ___lwdiv 050D                  ___lwmod 04A0                  __ptext1 06F6  
                __ptext2 04A0                  __ptext3 050D                  __ptext4 047E  
                __ptext5 0620                  __ptext6 0591                  __ptext7 04D2  
                __ptext8 0488         ___aldiv@dividend 0074     end_of_initialization 07FC  
       ___aldiv@quotient 0022                _UART_Init 0620                _UART_Send 06F6  
         UART_Write@data 0070        __size_of_ADC_Init 0018                Read_ADC@N 0076  
             ?_UART_Init 0026               ?_UART_Send 0020         UART_Send@x_value 0020  
       UART_Send@y_value 0022      start_initialization 07FC        __size_of_Read_ADC 003B  
              ___latbits 0002            __pcstackBANK0 0020         ___lwdiv@dividend 0078  
               ?___aldiv 0070                 ?___lwdiv 0076                 ?___lwmod 0070  
            ??_UART_Init 002A              ??_UART_Send 0024                 _ADC_Init 0488  
       ___lwdiv@quotient 007B               UART_Init@x 0079          ___aldiv@divisor 0070  
        ___aldiv@counter 0020                 _GO_nDONE 00FA        UART_Init@baudrate 0026  
               _Read_ADC 04D2         __size_of___aldiv 008F         __size_of___lwdiv 003C  
       __size_of___lwmod 0032          ___lwdiv@divisor 0076          ___lwdiv@counter 007D  
          __size_of_main 0048         ___lwmod@dividend 0072          ___lwmod@divisor 0070  
        ___lwmod@counter 0075             ___aldiv@sign 0021               _UART_Write 047E  
